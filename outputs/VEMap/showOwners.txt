EqSQLDriverTest.java: main(): Got the bench-dir option value: target/classes
EqSQLDriverTest.java: main(): Got the controllersig option value: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwners(int)
github/Utils.java: getAbsBenchDir(): pwd: /home/akash/Study/3rd sem/Project/current use/NRAandLoops
starttime, test: 1680250524183
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: java.lang.Object is a phantom class!
Warning: org.springframework.web.bind.annotation.PostMapping is a phantom class!
Warning: java.util.Iterator is a phantom class!
Warning: java.util.Collection is a phantom class!
Warning: org.springframework.validation.BindingResult is a phantom class!
Warning: org.springframework.stereotype.Controller is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: org.springframework.web.servlet.ModelAndView is a phantom class!
Warning: org.springframework.ui.Model is a phantom class!
Warning: java.util.List is a phantom class!
Warning: org.springframework.web.bind.WebDataBinder is a phantom class!
Warning: java.util.Map is a phantom class!
Warning: org.springframework.web.bind.annotation.GetMapping is a phantom class!
Warning: java.lang.StringBuilder is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: org.springframework.web.bind.annotation.InitBinder is a phantom class!
Warning: org.springframework.format.annotation.DateTimeFormat is a phantom class!
Warning: java.util.ArrayList is a phantom class!
Warning: java.util.HashSet is a phantom class!
Warning: javax.persistence.Table is a phantom class!
Warning: org.springframework.beans.support.PropertyComparator is a phantom class!
Warning: java.util.LinkedHashSet is a phantom class!
Warning: javax.persistence.Entity is a phantom class!
Warning: org.springframework.beans.support.MutableSortDefinition is a phantom class!
Warning: javax.persistence.ManyToOne is a phantom class!
Warning: javax.persistence.JoinColumn is a phantom class!
Warning: javax.persistence.OneToMany is a phantom class!
Warning: java.util.Set is a phantom class!
Warning: org.springframework.beans.support.SortDefinition is a phantom class!
Warning: javax.persistence.OneToOne is a phantom class!
Warning: javax.persistence.Column is a phantom class!
Warning: javax.persistence.Transient is a phantom class!
Warning: java.time.LocalDate is a phantom class!
Warning: java.util.Collections is a phantom class!
Warning: org.springframework.data.repository.Repository is a phantom class!
Warning: org.springframework.data.jpa.repository.Query is a phantom class!
Warning: org.springframework.transaction.annotation.Transactional is a phantom class!
Warning: javax.validation.constraints.NotEmpty is a phantom class!
Warning: javax.validation.constraints.Digits is a phantom class!
Warning: org.springframework.core.style.ToStringCreator is a phantom class!
Warning: org.springframework.dao.DataAccessException is a phantom class!
Warning: javax.persistence.MappedSuperclass is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: javax.persistence.GeneratedValue is a phantom class!
Warning: javax.persistence.Id is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
java.lang.RuntimeException: No method org.springframework.web.servlet.ModelAndView showOwners(int) in class org.springframework.samples.petclinic.owner.OwnerController
	at soot.SootClass.getMethod(SootClass.java:348)
	at soot.SootClass.getMethod(SootClass.java:378)
	at dbridge.analysis.eqsql.EqSQLDriver.doSetEntryPoints(EqSQLDriver.java:226)
	at dbridge.analysis.eqsql.EqSQLDriver.getExpr(EqSQLDriver.java:81)
	at dbridge.analysis.eqsql.EqSQLDriver.doEqSQLRewrite(EqSQLDriver.java:233)
	at dbridge.analysis.eqsql.EqSQLDriverTest.inferSummary(EqSQLDriverTest.java:85)
	at dbridge.analysis.eqsql.EqSQLDriverTest.main(EqSQLDriverTest.java:69)
FAILURE
starttime, test: 1680250524801
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: org.springframework.web.bind.annotation.RequestMapping is a phantom class!
Warning: org.springframework.beans.factory.annotation.Autowired is a phantom class!
Warning: java.security.Principal is a phantom class!
Warning: java.math.BigDecimal is a phantom class!
Warning: org.springframework.security.core.userdetails.UserDetails is a phantom class!
Warning: java.util.function.Consumer is a phantom class!
Warning: com.fasterxml.jackson.annotation.JsonIgnore is a phantom class!
Warning: org.springframework.stereotype.Service is a phantom class!
Warning: org.springframework.web.multipart.MultipartFile is a phantom class!
Warning: org.springframework.security.core.GrantedAuthority is a phantom class!
Warning: java.util.Date is a phantom class!
Warning: java.util.Calendar is a phantom class!
patternMatch.java: getUserInputRules: i=0
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? (Neq (= <col1> <col2>) (0Node)) (union (repo) (list)) (repo))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (select <coll> (= <col1> <col2>))
Fold
| FuncExpr
| | Ternary
| | | NotEq
| | | | Eq
| | | | | Any
| | | | | Any
| | | | Any
| | | Union
| | | | Any
| | | | List
| | | Any
| Any
| Any
| Any


Select
| Id:13
| Eq
| | Id:5
| | Id:6

{<col1>=5, <col2>=6, <init_val>=12, <itr>=14, <coll>=13}
patternMatch.java: getUserInputRules: i=2
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (save <repo> <list1>) (save <repo> <list2>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <init_val> <coll>) (union (pi (select <coll> <cond>) <list1>) (pi (select <coll> (= <cond> 0)) <list2>)))
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Any
| | | | Any
| | | Save
| | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:25
| | Id:26
| Union
| | Project
| | | Select
| | | | Id:26
| | | | Id:18
| | | Id:21
| | Project
| | | Select
| | | | Id:26
| | | | Eq
| | | | | Id:18
| | | | | Zero
| | | Id:24

{<col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=18, <list1>=21, <init_val>=25, <itr>=27, <coll>=26}
patternMatch.java: getUserInputRules: i=4
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (add_all_fields <list>) <elseval>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <coll> <cond>) <list>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | AddWithFieldExprs
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:36
| | | Id:31
| | Id:33
| Id:35

{<list>=33, <elseval>=34, <col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=31, <list1>=21, <init_val>=35, <itr>=37, <coll>=36}
patternMatch.java: getUserInputRules: i=6
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (save <repo> (tuple (join next <join_right> <nop>) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <repo> (select <repo> (in id (pi (join <coll> <join_right>) id)))) (pi <list> (join <coll> <join_right>)))
Fold
| FuncExpr
| | Save
| | | Any
| | | Tuple
| | | | Join
| | | | | Iterator
| | | | | Any
| | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:41
| | Select
| | | Id:41
| | | In
| | | | Id
| | | | Project
| | | | | Join
| | | | | | Id:49
| | | | | | Id:45
| | | | | Id
| Project
| | Id:47
| | Join
| | | Id:49
| | | Id:45

{<list>=47, <repo>=41, <cond>=31, <nop>=46, <init_val>=48, <join_right>=45, <itr>=50, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=49}
patternMatch.java: getUserInputRules: i=8
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (add_all_fields <receiver> (tuple (select <rel> (= <clm> <itr>)) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi <list> (select <rel> (in <clm> <coll>))) <init_val>)
Fold
| FuncExpr
| | AddWithFieldExprs
| | | Any
| | | Tuple
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| Project
| | Id:61
| | Select
| | | Id:57
| | | In
| | | | Id:59
| | | | Id:63
| Id:62

{<list>=61, <rel>=57, <repo>=41, <cond>=31, <nop>=46, <clm>=59, <init_val>=62, <join_right>=45, <itr>=64, <receiver>=54, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=63}
patternMatch.java: getUserInputRules: i=10
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (+ <aggvar> (pi (select <rel> (= <clm> <itr>)) <clmagg>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (+ (agg_sum (select <rel> (in <clm> <coll>)) <clmagg>) <init_val>)
Fold
| FuncExpr
| | ArithAdd
| | | Any
| | | Project
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


ArithAdd
| AggSum
| | Select
| | | Id:71
| | | In
| | | | Id:73
| | | | Id:77
| | Id:75
| Id:76

{<list>=61, <rel>=71, <repo>=41, <cond>=31, <nop>=46, <clm>=73, <init_val>=76, <join_right>=45, <itr>=78, <clmagg>=75, <receiver>=54, <aggvar>=68, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=77}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Project/current%20use/NRAandLoops/lib/eqsql.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Project/current%20use/NRAandLoops/lib/soot-trunk-1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: shoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItemList;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>;

        cartItemList = interfaceinvoke $r2.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        $r3 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartService shoppingCartService>;

        interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);

        return "shoppingCart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
Warning: java.util.Arrays is a phantom class!
Warning: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder is a phantom class!
Warning: java.util.Locale is a phantom class!
Warning: org.springframework.security.core.context.SecurityContextHolder is a phantom class!
Warning: java.lang.CharSequence is a phantom class!
Warning: org.springframework.mail.javamail.JavaMailSender is a phantom class!
Warning: java.util.UUID is a phantom class!
Warning: java.lang.Exception is a phantom class!
Warning: org.springframework.security.core.context.SecurityContext is a phantom class!
Warning: org.springframework.security.authentication.UsernamePasswordAuthenticationToken is a phantom class!
Warning: org.springframework.security.core.Authentication is a phantom class!
Warning: org.springframework.mail.SimpleMailMessage is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: org.springframework.stereotype.Component is a phantom class!
Warning: org.springframework.core.env.Environment is a phantom class!
Warning: java.security.SecureRandom is a phantom class!
Warning: java.util.Random is a phantom class!
Warning: org.springframework.context.annotation.Bean is a phantom class!
Warning: org.springframework.security.core.userdetails.UserDetailsService is a phantom class!
Warning: org.springframework.security.core.userdetails.UsernameNotFoundException is a phantom class!
Warning: com.bookstore.utility.USConstants$1 is a phantom class!
Warning: org.springframework.data.repository.CrudRepository is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
Warning: org.springframework.boot.CommandLineRunner is a phantom class!
Warning: org.springframework.boot.autoconfigure.SpringBootApplication is a phantom class!
Warning: org.springframework.boot.SpringApplication is a phantom class!
Warning: org.springframework.context.ConfigurableApplicationContext is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
Warning: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.builders.HttpSecurity is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.CsrfConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity is a phantom class!
Warning: org.springframework.security.web.util.matcher.RequestMatcher is a phantom class!
Warning: org.springframework.context.annotation.Configuration is a phantom class!
Warning: org.springframework.security.config.annotation.SecurityBuilder is a phantom class!
Warning: org.springframework.security.crypto.password.PasswordEncoder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configuration.EnableWebSecurity is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.CorsConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.HttpSecurityBuilder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl is a phantom class!
Warning: org.springframework.security.web.util.matcher.AntPathRequestMatcher is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
Warning: org.springframework.data.jpa.repository.JpaRepository is a phantom class!
Warning: org.springframework.data.jpa.repository.Modifying is a phantom class!
Warning: java.util.stream.Stream is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
Warning: java.util.Optional is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
Warning: java.lang.Iterable is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.CartItemServiceImpl, $r3=com.bookstore.service.impl.ShoppingCartServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserService userService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartService shoppingCartService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookService bookService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItemList = interfaceinvoke $r2.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "shoppingCart"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItemList;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItemList = interfaceinvoke $r2.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;

        interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);

        return "shoppingCart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItemList = interfaceinvoke $r2.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartService shoppingCartService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookService bookService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "shoppingCart"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItemList;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2;

        $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;

        interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);

        return "shoppingCart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartService shoppingCartService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookService bookService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "shoppingCart"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItemList;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2;

        $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;

        virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);

        return "shoppingCart";
    }

FuncStackInfoBuilder internalTransform called!
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: body: 
    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItemList;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2;

        $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;

        virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);

        return "shoppingCart";
    }

FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: model
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: model
FuncStackInfoBuilder.java: regionTreeForBody(): local: principal
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: principal
FuncStackInfoBuilder.java: regionTreeForBody(): local: user
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: user
FuncStackInfoBuilder.java: regionTreeForBody(): local: shoppingCart
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: shoppingCart
FuncStackInfoBuilder.java: regionTreeForBody(): local: cartItemList
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: cartItemList
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: shoppingCart is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.controller.ShoppingCartController;
model := @parameter0: org.springframework.ui.Model;
principal := @parameter1: java.security.Principal;
$r0 = new com.bookstore.service.impl.UserServiceImpl;
$r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();
user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);
this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;
shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();
$r2 = new com.bookstore.service.impl.CartItemServiceImpl;
cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2;
$r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;
virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3;
interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);
interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);
return "shoppingCart";


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.controller.ShoppingCartController;
model := @parameter0: org.springframework.ui.Model;
principal := @parameter1: java.security.Principal;
$r0 = new com.bookstore.service.impl.UserServiceImpl;
$r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();
user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);
this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;
shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();
$r2 = new com.bookstore.service.impl.CartItemServiceImpl;
cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2;
$r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;
virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3;
interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);
interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);
return "shoppingCart";


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.controller.ShoppingCartController, model := @parameter0: org.springframework.ui.Model, principal := @parameter1: java.security.Principal, $r0 = new com.bookstore.service.impl.UserServiceImpl, $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>(), user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0, shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>(), $r2 = new com.bookstore.service.impl.CartItemServiceImpl, cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2, $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl, virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3, interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList), interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart), return "shoppingCart"]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): topr is not null
FuncStackInfoBuilder.java: internalTransformHelper(): topr = 
| BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): CGSTART: 
CLINIT edge: $r0 = new com.bookstore.service.impl.UserServiceImpl in <com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)> ==> <com.bookstore.service.impl.UserServiceImpl: void <clinit>()>
CLINIT edge: <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG> = $r0 in <com.bookstore.service.impl.UserServiceImpl: void <clinit>()> ==> <com.bookstore.service.impl.UserServiceImpl: void <clinit>()>
STATIC edge: $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/bookstore/service/impl/UserService") in <com.bookstore.service.impl.UserServiceImpl: void <clinit>()> ==> <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
VIRTUAL edge: user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1) in <com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)> ==> <com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>
VIRTUAL edge: shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>() in <com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)> ==> <com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>
VIRTUAL edge: cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart) in <com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)> ==> <com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>
VIRTUAL edge: virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart) in <com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)> ==> <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>
SPECIAL edge: specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0) in <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)> ==> <java.math.BigDecimal: void <init>(int)>
INTERFACE edge: cartItems = interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart) in <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)> ==> <com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>
VIRTUAL edge: $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>() in <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)> ==> <com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>
VIRTUAL edge: $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>() in <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)> ==> <com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>
VIRTUAL edge: $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>() in <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)> ==> <com.bookstore.domain.Book: int getInStockNumber()>
INTERFACE edge: interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem) in <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)> ==> <com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>
VIRTUAL edge: $r1 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>() in <com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)> ==> <com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>
VIRTUAL edge: $i0 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: int getQty()>() in <com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)> ==> <com.bookstore.domain.CartItem: int getQty()>
VIRTUAL edge: virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)>(bigDecimal) in <com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)> ==> <com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)>
VIRTUAL edge: $d0 = virtualinvoke $r1.<com.bookstore.domain.Book: double getOurPrice()>() in <com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)> ==> <com.bookstore.domain.Book: double getOurPrice()>
SPECIAL edge: specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>($d0) in <com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)> ==> <java.math.BigDecimal: void <init>(double)>
SPECIAL edge: specialinvoke $r2.<java.math.BigDecimal: void <init>(int)>($i0) in <com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)> ==> <java.math.BigDecimal: void <init>(int)>
CGEND

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.UserServiceImpl: void <clinit>()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <clinit>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/bookstore/service/impl/UserService");

        <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG> = $r0;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: <clinit> is Block 0:
[preds: ] [succs: ]
$r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/bookstore/service/impl/UserService");
<com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG> = $r0;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
$r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/bookstore/service/impl/UserService");
<com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG> = $r0;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [$r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/bookstore/service/impl/UserService"), <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG> = $r0, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: updateShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)
    {
        com.bookstore.service.impl.ShoppingCartServiceImpl this;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItems;
        java.util.Iterator l4;
        com.bookstore.domain.CartItem cartItem;
        java.math.BigDecimal $r0, $r6, cartTotal;
        com.bookstore.service.impl.CartItemService $r1, $r4;
        boolean $z0;
        java.lang.Object $r2;
        com.bookstore.domain.Book $r3;
        int $i0;

        this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl;

        shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0);

        cartTotal = $r0;

        $r1 = this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemService cartItemService>;

        cartItems = interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        cartItem = (com.bookstore.domain.CartItem) $r2;

        $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();

        $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>();

        if $i0 <= 0 goto label2;

        $r4 = this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemService cartItemService>;

        interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);

        $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>();

        cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6);

     label2:
        goto label1;

     label3:
        return shoppingCart;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r4 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r1=com.bookstore.service.impl.CartItemServiceImpl, $r4=com.bookstore.service.impl.CartItemServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new java.math.BigDecimal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartTotal = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItems = interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.repository.ShoppingCartRepository shoppingCartRepository>, <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemService cartItemService>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = cartItems
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = l4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto return shoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = l4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItem = (com.bookstore.domain.CartItem) $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $i0 <= 0 goto (branch)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()]
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JGotoStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return shoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)
    {
        com.bookstore.service.impl.ShoppingCartServiceImpl this;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItems;
        java.util.Iterator l4;
        com.bookstore.domain.CartItem cartItem;
        java.math.BigDecimal $r0, $r6, cartTotal;
        com.bookstore.service.impl.CartItemService $r1, $r4;
        boolean $z0;
        java.lang.Object $r2;
        com.bookstore.domain.Book $r3;
        int $i0;

        this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl;

        shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0);

        cartTotal = $r0;

        $r1 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;

        l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        cartItem = (com.bookstore.domain.CartItem) $r2;

        $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();

        $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>();

        if $i0 <= 0 goto label2;

        $r4 = new com.bookstore.service.impl.CartItemServiceImpl;

        interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);

        $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>();

        cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6);

     label2:
        goto label1;

     label3:
        return shoppingCart;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new java.math.BigDecimal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartTotal = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = cartItems
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = l4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto return shoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = l4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItem = (com.bookstore.domain.CartItem) $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $i0 <= 0 goto (branch)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.repository.ShoppingCartRepository shoppingCartRepository>, <com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()]
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JGotoStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return shoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)
    {
        com.bookstore.service.impl.ShoppingCartServiceImpl this;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItems;
        java.util.Iterator l4;
        com.bookstore.domain.CartItem cartItem;
        java.math.BigDecimal $r0, $r6, cartTotal;
        com.bookstore.service.impl.CartItemService $r1, $r4;
        boolean $z0;
        java.lang.Object $r2;
        com.bookstore.domain.Book $r3;
        int $i0;

        this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl;

        shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0);

        cartTotal = $r0;

        $r1 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;

        l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        cartItem = (com.bookstore.domain.CartItem) $r2;

        $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();

        $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>();

        if $i0 <= 0 goto label2;

        $r4 = new com.bookstore.service.impl.CartItemServiceImpl;

        virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);

        this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4;

        $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>();

        cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6);

     label2:
        goto label1;

     label3:
        return shoppingCart;
    }

FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: shoppingCart
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: shoppingCart
FuncStackInfoBuilder.java: regionTreeForBody(): local: cartItems
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: cartItems
FuncStackInfoBuilder.java: regionTreeForBody(): local: l4
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: l4
FuncStackInfoBuilder.java: regionTreeForBody(): local: cartItem
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: cartItem
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local: cartTotal
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: cartTotal
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: updateShoppingCart is Block 0:
[preds: ] [succs: 1 ]
this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl;
shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;
$r0 = new java.math.BigDecimal;
specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0);
cartTotal = $r0;
$r1 = new com.bookstore.service.impl.CartItemServiceImpl;
cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;
l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>();

Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return shoppingCart;

Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();
cartItem = (com.bookstore.domain.CartItem) $r2;
$r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();
$i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>();
if $i0 <= 0 goto (branch);

Block 3:
[preds: 2 ] [succs: 4 ]
$r4 = new com.bookstore.service.impl.CartItemServiceImpl;
virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);
this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4;
$r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>();
cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6);

Block 4:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()];

Block 5:
[preds: 1 ] [succs: ]
return shoppingCart;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
0 -> 1
1 -> 2
2 -> 3
3 -> 4
2 -> 4
1 -> 5
4 -> 1
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
dfsVisit: start = 1
dfsVisit: start = 2
dfsVisit: start = 3
dfsVisit: start = 4
dfsVisit: start = 5
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [4, 3, 2, 5, 1, 0]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 4
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = 4
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [4]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 4
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 4
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 4
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [4]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 4
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [4]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 3
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = 3
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [3]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 3
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 3
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 3
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [3]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 3
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [3]
StructuralAnalysis.java: structuralAnalysis(): break point!
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [2]

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_IfThen0
StructuralAnalysis.java: replace(): v: 2
StructuralAnalysis.java: replace(): v: 3
StructuralAnalyis.java: compact(): compact: vset = [2, 3]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 3, 4, 5, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [4, 3, 2, 5, 1, 0]
removeVertices: vset = [2, 3]
removeVertices: v = 2
removeVertex: adj = {1=[2, 5], 2=[3, 4], 3=[4], 4=[1], 5=[], 0=[1]}
removeVertex: incoming = {1=[0, 4], 2=[1], 3=[2], 4=[2, 3], 5=[1], 0=[]}
removeVertex: v = 2
removeVertex: v2 = 1
removeVertices: v = 3
removeVertex: adj = {1=[5], 3=[4], 4=[1], 5=[], 0=[1]}
removeVertex: incoming = {1=[0, 4], 3=[], 4=[3], 5=[1], 0=[]}
removeVertex: v = 3
StructuralAnalyis.java: compact(): compact: g.vertices after: [1, 4, 5, R_IfThen0, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [4, R_IfThen0, 5, 1, 0]
StructuralAnalysis.java: reduce(): structType before: {}
StructuralAnalysis.java: reduce(): structType after: {R_IfThen0=IfThen}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_IfThen0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_IfThen0
StructuralAnalysis.java: acyclicRegionType(): currVer = 4
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [R_IfThen0, 4]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = Sequential

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_Sequential1
StructuralAnalysis.java: replace(): v: R_IfThen0
StructuralAnalysis.java: replace(): v: 4
StructuralAnalyis.java: compact(): compact: vset = [R_IfThen0, 4]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 4, 5, R_IfThen0, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [4, R_IfThen0, 5, 1, 0]
removeVertices: vset = [R_IfThen0, 4]
removeVertices: v = R_IfThen0
removeVertex: adj = {1=[5, R_IfThen0], 4=[1], 5=[], R_IfThen0=[4], 0=[1]}
removeVertex: incoming = {1=[0, 4], 4=[R_IfThen0], 5=[1], R_IfThen0=[1], 0=[]}
removeVertex: v = R_IfThen0
removeVertex: v2 = 1
removeVertices: v = 4
removeVertex: adj = {1=[5], 4=[1], 5=[], 0=[1]}
removeVertex: incoming = {1=[0, 4], 4=[], 5=[1], 0=[]}
removeVertex: v = 4
StructuralAnalyis.java: compact(): compact: g.vertices after: [1, 5, R_Sequential1, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_Sequential1, 5, 1, 0]
StructuralAnalysis.java: reduce(): structType before: {R_IfThen0=IfThen}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_IfThen0=IfThen}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_Sequential1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_Sequential1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [R_Sequential1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = R_Sequential1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = R_Sequential1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: R_Sequential1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [R_Sequential1]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = R_Sequential1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [R_Sequential1]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 5
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [5]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 5
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 5
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 5
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [5]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 5
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [5]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: [R_Sequential1]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [1, R_Sequential1]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [1, R_Sequential1]
dfsVisit: start = 1
dfsVisit: start = 5
dfsVisit: start = R_Sequential1
StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_WhileLoop2
StructuralAnalysis.java: replace(): v: 1
StructuralAnalysis.java: replace(): v: R_Sequential1
StructuralAnalyis.java: compact(): compact: vset = [1, R_Sequential1]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 5, R_Sequential1, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [R_Sequential1, 5, 1, 0]
removeVertices: vset = [1, R_Sequential1]
removeVertices: v = 1
removeVertex: adj = {1=[5, R_Sequential1], 5=[], R_Sequential1=[1], 0=[1]}
removeVertex: incoming = {1=[0, R_Sequential1], 5=[1], R_Sequential1=[1], 0=[]}
removeVertex: v = 1
removeVertex: v2 = 0
removeVertex: v2 = R_Sequential1
removeVertices: v = R_Sequential1
removeVertex: adj = {5=[], R_Sequential1=[], 0=[]}
removeVertex: incoming = {5=[], R_Sequential1=[], 0=[]}
removeVertex: v = R_Sequential1
StructuralAnalyis.java: compact(): compact: g.vertices after: [5, R_WhileLoop2, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [5, R_WhileLoop2, 0]
StructuralAnalysis.java: reduce(): structType before: {R_Sequential1=Sequential, R_IfThen0=IfThen}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_WhileLoop2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_WhileLoop2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [0, R_WhileLoop2, 5]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = Sequential

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_Sequential3
StructuralAnalysis.java: replace(): v: 0
StructuralAnalysis.java: replace(): v: R_WhileLoop2
StructuralAnalysis.java: replace(): v: 5
StructuralAnalyis.java: compact(): compact: vset = [0, R_WhileLoop2, 5]
StructuralAnalyis.java: compact(): compact: g.vertices before: [5, R_WhileLoop2, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [5, R_WhileLoop2, 0]
removeVertices: vset = [0, R_WhileLoop2, 5]
removeVertices: v = 0
removeVertex: adj = {5=[], R_WhileLoop2=[5], 0=[R_WhileLoop2]}
removeVertex: incoming = {5=[R_WhileLoop2], R_WhileLoop2=[0], 0=[]}
removeVertex: v = 0
removeVertices: v = R_WhileLoop2
removeVertex: adj = {5=[], R_WhileLoop2=[5]}
removeVertex: incoming = {5=[R_WhileLoop2], R_WhileLoop2=[]}
removeVertex: v = R_WhileLoop2
removeVertices: v = 5
removeVertex: adj = {5=[]}
removeVertex: incoming = {5=[]}
removeVertex: v = 5
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_Sequential3]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_Sequential3]
StructuralAnalysis.java: reduce(): structType before: {R_Sequential1=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structType: {R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop}
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[R_IfThen0, 4], R_Sequential3=[0, R_WhileLoop2, 5], R_IfThen0=[2, 3], R_WhileLoop2=[1, R_Sequential1]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_WhileLoop2, 2=R_IfThen0, 3=R_IfThen0, 4=R_Sequential1, 5=R_Sequential3, R_Sequential1=R_WhileLoop2, R_IfThen0=R_Sequential1, R_WhileLoop2=R_Sequential3, 0=R_Sequential3}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential3
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- R_Sequential3
|  +- 0
|  +- R_WhileLoop2
|  |  +- 1
|  |  +- R_Sequential1
|  |  |  +- R_IfThen0
|  |  |  |  +- 2
|  |  |  |  +- 3
|  |  |  +- 4
|  +- 5

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: 1 ]
this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl;
shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;
$r0 = new java.math.BigDecimal;
specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0);
cartTotal = $r0;
$r1 = new com.bookstore.service.impl.CartItemServiceImpl;
cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;
l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>();

Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return shoppingCart;

Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();
cartItem = (com.bookstore.domain.CartItem) $r2;
$r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();
$i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>();
if $i0 <= 0 goto (branch);

Block 3:
[preds: 2 ] [succs: 4 ]
$r4 = new com.bookstore.service.impl.CartItemServiceImpl;
virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);
this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4;
$r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>();
cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6);

Block 4:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()];

Block 5:
[preds: 1 ] [succs: ]
return shoppingCart;


StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[R_IfThen0, 4], R_Sequential3=[0, R_WhileLoop2, 5], R_IfThen0=[2, 3], R_WhileLoop2=[1, R_Sequential1]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_WhileLoop2, 2=R_IfThen0, 3=R_IfThen0, 4=R_Sequential1, 5=R_Sequential3, R_Sequential1=R_WhileLoop2, R_IfThen0=R_Sequential1, R_WhileLoop2=R_Sequential3, 0=R_Sequential3}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential3
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl, shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart, $r0 = new java.math.BigDecimal, specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0), cartTotal = $r0, $r1 = new com.bookstore.service.impl.CartItemServiceImpl, cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1, l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto return shoppingCart, $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), cartItem = (com.bookstore.domain.CartItem) $r2, $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>(), $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>(), if $i0 <= 0 goto (branch), $r4 = new com.bookstore.service.impl.CartItemServiceImpl, virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4, $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>(), cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], return shoppingCart]
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 1
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 1
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl, shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart, $r0 = new java.math.BigDecimal, specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0), cartTotal = $r0, $r1 = new com.bookstore.service.impl.CartItemServiceImpl, cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1, l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto return shoppingCart, $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), cartItem = (com.bookstore.domain.CartItem) $r2, $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>(), $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>(), if $i0 <= 0 goto (branch), $r4 = new com.bookstore.service.impl.CartItemServiceImpl, virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4, $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>(), cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], return shoppingCart]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 2
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 2
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl, shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart, $r0 = new java.math.BigDecimal, specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0), cartTotal = $r0, $r1 = new com.bookstore.service.impl.CartItemServiceImpl, cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1, l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto return shoppingCart, $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), cartItem = (com.bookstore.domain.CartItem) $r2, $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>(), $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>(), if $i0 <= 0 goto (branch), $r4 = new com.bookstore.service.impl.CartItemServiceImpl, virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4, $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>(), cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], return shoppingCart]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 3
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 3
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 3
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl, shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart, $r0 = new java.math.BigDecimal, specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0), cartTotal = $r0, $r1 = new com.bookstore.service.impl.CartItemServiceImpl, cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1, l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto return shoppingCart, $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), cartItem = (com.bookstore.domain.CartItem) $r2, $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>(), $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>(), if $i0 <= 0 goto (branch), $r4 = new com.bookstore.service.impl.CartItemServiceImpl, virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4, $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>(), cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], return shoppingCart]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_IfThen0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
FuncStackInfoBuilder: createARegionTree(): child0 is head
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 4
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 4
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 4
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl, shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart, $r0 = new java.math.BigDecimal, specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0), cartTotal = $r0, $r1 = new com.bookstore.service.impl.CartItemServiceImpl, cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1, l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto return shoppingCart, $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), cartItem = (com.bookstore.domain.CartItem) $r2, $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>(), $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>(), if $i0 <= 0 goto (branch), $r4 = new com.bookstore.service.impl.CartItemServiceImpl, virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4, $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>(), cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], return shoppingCart]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_Sequential1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_WhileLoop2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
LoopRegion created
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 5
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 5
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 5
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl, shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart, $r0 = new java.math.BigDecimal, specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0), cartTotal = $r0, $r1 = new com.bookstore.service.impl.CartItemServiceImpl, cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1, l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto return shoppingCart, $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), cartItem = (com.bookstore.domain.CartItem) $r2, $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>(), $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>(), if $i0 <= 0 goto (branch), $r4 = new com.bookstore.service.impl.CartItemServiceImpl, virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem), this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4, $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>(), cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], return shoppingCart]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, 5=BasicBlock, R_Sequential3=Sequential, R_IfThen0=IfThen, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_Sequential3
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 3
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = R_Sequential3
FuncStackInfoBuilder.java: regionTreeForBody(): | Sequential
| | BasicBlock0
| | WhileLoop
| | | BasicBlock1
| | | Sequential
| | | | IfThen
| | | | | BasicBlock2
| | | | | BasicBlock3
| | | | BasicBlock4
| | BasicBlock5

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: findByShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)
    {
        com.bookstore.service.impl.CartItemServiceImpl this;
        com.bookstore.domain.ShoppingCart shoppingCart;
        com.bookstore.repository.CartItemRepository $r0;
        java.util.List $r1;

        this := @this: com.bookstore.service.impl.CartItemServiceImpl;

        shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;

        $r0 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.CartItemRepository: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        return $r1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: shoppingCart
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: shoppingCart
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: findByShoppingCart is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.CartItemServiceImpl;
shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;
$r0 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;
$r1 = interfaceinvoke $r0.<com.bookstore.repository.CartItemRepository: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
return $r1;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.CartItemServiceImpl;
shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;
$r0 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;
$r1 = interfaceinvoke $r0.<com.bookstore.repository.CartItemRepository: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);
return $r1;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.CartItemServiceImpl, shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart, $r0 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>, $r1 = interfaceinvoke $r0.<com.bookstore.repository.CartItemRepository: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), return $r1]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.ShoppingCart getShoppingCart()
    {
        com.bookstore.domain.User this;
        com.bookstore.domain.ShoppingCart $r0;

        this := @this: com.bookstore.domain.User;

        $r0 = this.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart shoppingCart>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getShoppingCart is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.User;
$r0 = this.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart shoppingCart>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.User;
$r0 = this.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart shoppingCart>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.domain.User, $r0 = this.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart shoppingCart>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: findByUsername
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.User findByUsername(java.lang.String)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        java.lang.String username;
        com.bookstore.repository.UserRepository $r0;
        com.bookstore.domain.User $r1;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        username := @parameter0: java.lang.String;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        return $r1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: username
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: username
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: findByUsername is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.UserServiceImpl;
username := @parameter0: java.lang.String;
$r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;
$r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>(username);
return $r1;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.UserServiceImpl;
username := @parameter0: java.lang.String;
$r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;
$r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>(username);
return $r1;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.UserServiceImpl, username := @parameter0: java.lang.String, $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>, $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>(username), return $r1]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.UserServiceImpl: void <clinit>()
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.math.BigDecimal: void <init>(int)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: updateCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)
    {
        com.bookstore.service.impl.CartItemServiceImpl this;
        com.bookstore.domain.CartItem cartItem;
        java.math.BigDecimal $r0, $r2, bigDecimal;
        com.bookstore.domain.Book $r1;
        double $d0;
        int $i0;
        com.bookstore.repository.CartItemRepository $r3;

        this := @this: com.bookstore.service.impl.CartItemServiceImpl;

        cartItem := @parameter0: com.bookstore.domain.CartItem;

        $r0 = new java.math.BigDecimal;

        $r1 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();

        $d0 = virtualinvoke $r1.<com.bookstore.domain.Book: double getOurPrice()>();

        specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>($d0);

        $r2 = new java.math.BigDecimal;

        $i0 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: int getQty()>();

        specialinvoke $r2.<java.math.BigDecimal: void <init>(int)>($i0);

        bigDecimal = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2);

        bigDecimal = virtualinvoke bigDecimal.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4);

        virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)>(bigDecimal);

        $r3 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;

        interfaceinvoke $r3.<com.bookstore.repository.CartItemRepository: java.lang.Object save(java.lang.Object)>(cartItem);

        return cartItem;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: cartItem
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: cartItem
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $d0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $d0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local: bigDecimal
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: bigDecimal
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: updateCartItem is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.CartItemServiceImpl;
cartItem := @parameter0: com.bookstore.domain.CartItem;
$r0 = new java.math.BigDecimal;
$r1 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();
$d0 = virtualinvoke $r1.<com.bookstore.domain.Book: double getOurPrice()>();
specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>($d0);
$r2 = new java.math.BigDecimal;
$i0 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: int getQty()>();
specialinvoke $r2.<java.math.BigDecimal: void <init>(int)>($i0);
bigDecimal = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2);
bigDecimal = virtualinvoke bigDecimal.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4);
virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)>(bigDecimal);
$r3 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;
interfaceinvoke $r3.<com.bookstore.repository.CartItemRepository: java.lang.Object save(java.lang.Object)>(cartItem);
return cartItem;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.CartItemServiceImpl;
cartItem := @parameter0: com.bookstore.domain.CartItem;
$r0 = new java.math.BigDecimal;
$r1 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();
$d0 = virtualinvoke $r1.<com.bookstore.domain.Book: double getOurPrice()>();
specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>($d0);
$r2 = new java.math.BigDecimal;
$i0 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: int getQty()>();
specialinvoke $r2.<java.math.BigDecimal: void <init>(int)>($i0);
bigDecimal = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2);
bigDecimal = virtualinvoke bigDecimal.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4);
virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)>(bigDecimal);
$r3 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;
interfaceinvoke $r3.<com.bookstore.repository.CartItemRepository: java.lang.Object save(java.lang.Object)>(cartItem);
return cartItem;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.CartItemServiceImpl, cartItem := @parameter0: com.bookstore.domain.CartItem, $r0 = new java.math.BigDecimal, $r1 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>(), $d0 = virtualinvoke $r1.<com.bookstore.domain.Book: double getOurPrice()>(), specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>($d0), $r2 = new java.math.BigDecimal, $i0 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: int getQty()>(), specialinvoke $r2.<java.math.BigDecimal: void <init>(int)>($i0), bigDecimal = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2), bigDecimal = virtualinvoke bigDecimal.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4), virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)>(bigDecimal), $r3 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>, interfaceinvoke $r3.<com.bookstore.repository.CartItemRepository: java.lang.Object save(java.lang.Object)>(cartItem), return cartItem]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.Book: int getInStockNumber()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getInStockNumber
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public int getInStockNumber()
    {
        com.bookstore.domain.Book this;
        int $i0;

        this := @this: com.bookstore.domain.Book;

        $i0 = this.<com.bookstore.domain.Book: int inStockNumber>;

        return $i0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getInStockNumber is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.Book;
$i0 = this.<com.bookstore.domain.Book: int inStockNumber>;
return $i0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.Book;
$i0 = this.<com.bookstore.domain.Book: int inStockNumber>;
return $i0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.domain.Book, $i0 = this.<com.bookstore.domain.Book: int inStockNumber>, return $i0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getSubtotal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.math.BigDecimal getSubtotal()
    {
        com.bookstore.domain.CartItem this;
        java.math.BigDecimal $r0;

        this := @this: com.bookstore.domain.CartItem;

        $r0 = this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getSubtotal is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
$r0 = this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
$r0 = this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.domain.CartItem, $r0 = this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getBook
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.Book getBook()
    {
        com.bookstore.domain.CartItem this;
        com.bookstore.domain.Book $r0;

        this := @this: com.bookstore.domain.CartItem;

        $r0 = this.<com.bookstore.domain.CartItem: com.bookstore.domain.Book book>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getBook is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
$r0 = this.<com.bookstore.domain.CartItem: com.bookstore.domain.Book book>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
$r0 = this.<com.bookstore.domain.CartItem: com.bookstore.domain.Book book>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.domain.CartItem, $r0 = this.<com.bookstore.domain.CartItem: com.bookstore.domain.Book book>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.math.BigDecimal: void <init>(int)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.math.BigDecimal: void <init>(double)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.Book: double getOurPrice()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getOurPrice
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public double getOurPrice()
    {
        com.bookstore.domain.Book this;
        double $d0;

        this := @this: com.bookstore.domain.Book;

        $d0 = this.<com.bookstore.domain.Book: double ourPrice>;

        return $d0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $d0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $d0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getOurPrice is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.Book;
$d0 = this.<com.bookstore.domain.Book: double ourPrice>;
return $d0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.Book;
$d0 = this.<com.bookstore.domain.Book: double ourPrice>;
return $d0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.domain.Book, $d0 = this.<com.bookstore.domain.Book: double ourPrice>, return $d0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setSubtotal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setSubtotal(java.math.BigDecimal)
    {
        com.bookstore.domain.CartItem this;
        java.math.BigDecimal subtotal;

        this := @this: com.bookstore.domain.CartItem;

        subtotal := @parameter0: java.math.BigDecimal;

        this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal> = subtotal;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: subtotal
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: subtotal
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setSubtotal is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
subtotal := @parameter0: java.math.BigDecimal;
this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal> = subtotal;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
subtotal := @parameter0: java.math.BigDecimal;
this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal> = subtotal;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.domain.CartItem, subtotal := @parameter0: java.math.BigDecimal, this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal> = subtotal, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.domain.CartItem: int getQty()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getQty
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public int getQty()
    {
        com.bookstore.domain.CartItem this;
        int $i0;

        this := @this: com.bookstore.domain.CartItem;

        $i0 = this.<com.bookstore.domain.CartItem: int qty>;

        return $i0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getQty is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
$i0 = this.<com.bookstore.domain.CartItem: int qty>;
return $i0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.domain.CartItem;
$i0 = this.<com.bookstore.domain.CartItem: int qty>;
return $i0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.domain.CartItem, $i0 = this.<com.bookstore.domain.CartItem: int qty>, return $i0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: functionstack: 
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.service.impl.UserServiceImpl: void <clinit>()
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.domain.Book: int getInStockNumber()
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.domain.Book: double getOurPrice()
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.domain.CartItem: int getQty()
FuncStackInfoBuilder.java: internalTransformHelper(): {com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)=    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItemList;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2;

        $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;

        virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);

        return "shoppingCart";
    }
, com.bookstore.service.impl.UserServiceImpl: void <clinit>()=    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/bookstore/service/impl/UserService");

        <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG> = $r0;

        return;
    }
, com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)=    public java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)
    {
        com.bookstore.service.impl.CartItemServiceImpl this;
        com.bookstore.domain.ShoppingCart shoppingCart;
        com.bookstore.repository.CartItemRepository $r0;
        java.util.List $r1;

        this := @this: com.bookstore.service.impl.CartItemServiceImpl;

        shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;

        $r0 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.CartItemRepository: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        return $r1;
    }
, com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()=    public com.bookstore.domain.ShoppingCart getShoppingCart()
    {
        com.bookstore.domain.User this;
        com.bookstore.domain.ShoppingCart $r0;

        this := @this: com.bookstore.domain.User;

        $r0 = this.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart shoppingCart>;

        return $r0;
    }
, com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)=    public com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)
    {
        com.bookstore.service.impl.ShoppingCartServiceImpl this;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItems;
        java.util.Iterator l4;
        com.bookstore.domain.CartItem cartItem;
        java.math.BigDecimal $r0, $r6, cartTotal;
        com.bookstore.service.impl.CartItemService $r1, $r4;
        boolean $z0;
        java.lang.Object $r2;
        com.bookstore.domain.Book $r3;
        int $i0;

        this := @this: com.bookstore.service.impl.ShoppingCartServiceImpl;

        shoppingCart := @parameter0: com.bookstore.domain.ShoppingCart;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(0);

        cartTotal = $r0;

        $r1 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItems = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;

        l4 = interfaceinvoke cartItems.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        cartItem = (com.bookstore.domain.CartItem) $r2;

        $r3 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();

        $i0 = virtualinvoke $r3.<com.bookstore.domain.Book: int getInStockNumber()>();

        if $i0 <= 0 goto label2;

        $r4 = new com.bookstore.service.impl.CartItemServiceImpl;

        virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);

        this.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4;

        $r6 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()>();

        cartTotal = virtualinvoke cartTotal.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6);

     label2:
        goto label1;

     label3:
        return shoppingCart;
    }
, com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)=    public com.bookstore.domain.User findByUsername(java.lang.String)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        java.lang.String username;
        com.bookstore.repository.UserRepository $r0;
        com.bookstore.domain.User $r1;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        username := @parameter0: java.lang.String;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        return $r1;
    }
, com.bookstore.domain.Book: int getInStockNumber()=    public int getInStockNumber()
    {
        com.bookstore.domain.Book this;
        int $i0;

        this := @this: com.bookstore.domain.Book;

        $i0 = this.<com.bookstore.domain.Book: int inStockNumber>;

        return $i0;
    }
, com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)=    public void setSubtotal(java.math.BigDecimal)
    {
        com.bookstore.domain.CartItem this;
        java.math.BigDecimal subtotal;

        this := @this: com.bookstore.domain.CartItem;

        subtotal := @parameter0: java.math.BigDecimal;

        this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal> = subtotal;

        return;
    }
, com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)=    public com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)
    {
        com.bookstore.service.impl.CartItemServiceImpl this;
        com.bookstore.domain.CartItem cartItem;
        java.math.BigDecimal $r0, $r2, bigDecimal;
        com.bookstore.domain.Book $r1;
        double $d0;
        int $i0;
        com.bookstore.repository.CartItemRepository $r3;

        this := @this: com.bookstore.service.impl.CartItemServiceImpl;

        cartItem := @parameter0: com.bookstore.domain.CartItem;

        $r0 = new java.math.BigDecimal;

        $r1 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()>();

        $d0 = virtualinvoke $r1.<com.bookstore.domain.Book: double getOurPrice()>();

        specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>($d0);

        $r2 = new java.math.BigDecimal;

        $i0 = virtualinvoke cartItem.<com.bookstore.domain.CartItem: int getQty()>();

        specialinvoke $r2.<java.math.BigDecimal: void <init>(int)>($i0);

        bigDecimal = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2);

        bigDecimal = virtualinvoke bigDecimal.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4);

        virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal)>(bigDecimal);

        $r3 = this.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.repository.CartItemRepository cartItemRepository>;

        interfaceinvoke $r3.<com.bookstore.repository.CartItemRepository: java.lang.Object save(java.lang.Object)>(cartItem);

        return cartItem;
    }
, com.bookstore.domain.Book: double getOurPrice()=    public double getOurPrice()
    {
        com.bookstore.domain.Book this;
        double $d0;

        this := @this: com.bookstore.domain.Book;

        $d0 = this.<com.bookstore.domain.Book: double ourPrice>;

        return $d0;
    }
, com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal()=    public java.math.BigDecimal getSubtotal()
    {
        com.bookstore.domain.CartItem this;
        java.math.BigDecimal $r0;

        this := @this: com.bookstore.domain.CartItem;

        $r0 = this.<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>;

        return $r0;
    }
, com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook()=    public com.bookstore.domain.Book getBook()
    {
        com.bookstore.domain.CartItem this;
        com.bookstore.domain.Book $r0;

        this := @this: com.bookstore.domain.CartItem;

        $r0 = this.<com.bookstore.domain.CartItem: com.bookstore.domain.Book book>;

        return $r0;
    }
, com.bookstore.domain.CartItem: int getQty()=    public int getQty()
    {
        com.bookstore.domain.CartItem this;
        int $i0;

        this := @this: com.bookstore.domain.CartItem;

        $i0 = this.<com.bookstore.domain.CartItem: int qty>;

        return $i0;
    }
}

Decompiling org.springframework.samples.petclinic.owner.OwnerController... 
Decompiling com.bookstore.controller.ShoppingCartController... 
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.ShoppingCartController: void <init>()>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: void <init>(org.springframework.samples.petclinic.owner.OwnerRepository,org.springframework.samples.petclinic.visit.VisitRepository)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void <init>()
    {
        com.bookstore.controller.ShoppingCartController this;

        this := @this: com.bookstore.controller.ShoppingCartController;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
    public void <init>(org.springframework.samples.petclinic.owner.OwnerRepository, org.springframework.samples.petclinic.visit.VisitRepository)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.OwnerRepository clinicService;
        org.springframework.samples.petclinic.visit.VisitRepository visits;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        clinicService := @parameter0: org.springframework.samples.petclinic.owner.OwnerRepository;

        visits := @parameter1: org.springframework.samples.petclinic.visit.VisitRepository;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners> = clinicService;

        this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits> = visits;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: void setAllowedFields(org.springframework.web.bind.WebDataBinder)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setAllowedFields
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: shoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        java.util.List cartItemList;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2;

        $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl;

        virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart);

        return "shoppingCart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.ShoppingCartController: java.lang.String addItem(com.bookstore.domain.Book,java.lang.String,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: addItem
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String addItem(com.bookstore.domain.Book, java.lang.String, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.String qty, $r1, $r9;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        com.bookstore.service.impl.BookService $r2;
        java.lang.Long $r3, $r7;
        com.bookstore.service.impl.CartItemService $r4;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r8;
        com.bookstore.domain.Book book, book;

        this := @this: com.bookstore.controller.ShoppingCartController;

        book := @parameter0: com.bookstore.domain.Book;

        qty := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        principal := @parameter3: java.security.Principal;

        $r0 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookService bookService>;

        $r3 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        book = interfaceinvoke $r2.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>($r3);

        $r4 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(qty);

        interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forward:/bookDetail?id=");

        $r7 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
    public void setAllowedFields(org.springframework.web.bind.WebDataBinder)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.web.bind.WebDataBinder dataBinder;
        java.lang.String[] $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        dataBinder := @parameter0: org.springframework.web.bind.WebDataBinder;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "id";

        virtualinvoke dataBinder.<org.springframework.web.bind.WebDataBinder: void setDisallowedFields(java.lang.String[])>($r0);

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initCreationForm(java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initCreationForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
    public java.lang.String initCreationForm(java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.util.Map model;
        org.springframework.samples.petclinic.owner.Owner owner, $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        model := @parameter0: java.util.Map;

        $r0 = new org.springframework.samples.petclinic.owner.Owner;

        specialinvoke $r0.<org.springframework.samples.petclinic.owner.Owner: void <init>()>();

        owner = $r0;

        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r0);

        return "owners/createOrUpdateOwnerForm";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processCreationForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
    public java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.validation.BindingResult result;
        boolean $z0;
        org.springframework.samples.petclinic.owner.OwnerRepository $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Integer $r3;
        java.lang.String $r5;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke result.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "owners/createOrUpdateOwnerForm";

     label1:
        $r0 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        interfaceinvoke $r0.<org.springframework.samples.petclinic.owner.OwnerRepository: void save(org.springframework.samples.petclinic.owner.Owner)>(owner);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initFindForm(java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initFindForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
    public java.lang.String initFindForm(java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.util.Map model;
        org.springframework.samples.petclinic.owner.Owner $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        model := @parameter0: java.util.Map;

        $r0 = new org.springframework.samples.petclinic.owner.Owner;

        specialinvoke $r0.<org.springframework.samples.petclinic.owner.Owner: void <init>()>();

        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r0);

        return "owners/findOwners";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processFindForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
    public java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.validation.BindingResult result;
        java.util.Map model;
        java.util.Collection results;
        java.lang.String $r0, $r2, $r10;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        boolean $z0;
        int $i0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Integer $r8;
        org.springframework.samples.petclinic.owner.Owner owner, owner;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        model := @parameter2: java.util.Map;

        $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        if $r0 != null goto label1;

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);

        $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");

        return "owners/findOwners";

     label2:
        $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        owner = (org.springframework.samples.petclinic.owner.Owner) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label3:
        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

        return "owners/ownersList";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initUpdateOwnerForm(int,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initUpdateOwnerForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String initUpdateOwnerForm(int, org.springframework.ui.Model)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.ui.Model model;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.samples.petclinic.owner.OwnerRepository $r0;
        java.lang.Integer $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        model := @parameter1: org.springframework.ui.Model;

        $r0 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r0.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.Object)>(owner);

        return "owners/createOrUpdateOwnerForm";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processUpdateOwnerForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.validation.BindingResult result;
        int ownerId;
        boolean $z0;
        java.lang.Integer $r0;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        ownerId := @parameter2: int;

        $z0 = interfaceinvoke result.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "owners/createOrUpdateOwnerForm";

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setId(java.lang.Integer)>($r0);

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: void save(org.springframework.samples.petclinic.owner.Owner)>(owner);

        return "redirect:/owners/{ownerId}";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: showOwner
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public org.springframework.web.servlet.ModelAndView showOwner(int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        org.springframework.samples.petclinic.owner.Owner owner;
        java.util.Iterator l4;
        org.springframework.samples.petclinic.owner.Pet pet;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        java.lang.Integer $r2, $r7;
        java.util.List $r3, $r8;
        boolean $z0;
        java.lang.Object $r5;
        org.springframework.samples.petclinic.visit.VisitRepository $r6;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();

        l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        pet = (org.springframework.samples.petclinic.owner.Pet) $r5;

        $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;

        $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();

        $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findBypetId(java.lang.Integer)>($r7);

        virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);

        goto label1;

     label2:
        virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwners(java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: showOwners
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public org.springframework.web.servlet.ModelAndView showOwners(java.lang.String)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.lang.String lastName;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        java.util.Collection o;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        lastName := @parameter0: java.lang.String;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        o = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>(lastName);

        virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(o);

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r4 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.BookServiceImpl, $r4=com.bookstore.service.impl.CartItemServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = book := @parameter0: com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = qty := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter3: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookService bookService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = book = interfaceinvoke $r2.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>($r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(qty)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = new java.lang.StringBuilder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forward:/bookDetail?id=")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return $r9
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addItem(com.bookstore.domain.Book, java.lang.String, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.String qty, $r1, $r9;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        com.bookstore.service.impl.BookService $r2;
        java.lang.Long $r3, $r7;
        com.bookstore.service.impl.CartItemService $r4;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r8;
        com.bookstore.domain.Book book, book;

        this := @this: com.bookstore.controller.ShoppingCartController;

        book := @parameter0: com.bookstore.domain.Book;

        qty := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        principal := @parameter3: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.BookServiceImpl;

        $r3 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        book = interfaceinvoke $r2.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>($r3);

        $r4 = new com.bookstore.service.impl.CartItemServiceImpl;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(qty);

        interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forward:/bookDetail?id=");

        $r7 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = book := @parameter0: com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = qty := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter3: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = book = interfaceinvoke $r2.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>($r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookService bookService>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(qty)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = new java.lang.StringBuilder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forward:/bookDetail?id=")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return $r9
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addItem(com.bookstore.domain.Book, java.lang.String, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.String qty, $r1, $r9;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        com.bookstore.service.impl.BookService $r2;
        java.lang.Long $r3, $r7;
        com.bookstore.service.impl.CartItemService $r4;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r8;
        com.bookstore.domain.Book book, book;

        this := @this: com.bookstore.controller.ShoppingCartController;

        book := @parameter0: com.bookstore.domain.Book;

        qty := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        principal := @parameter3: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.BookServiceImpl;

        $r3 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        book = virtualinvoke $r2.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.domain.Book findById(java.lang.Long)>($r3);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r2;

        $r4 = new com.bookstore.service.impl.CartItemServiceImpl;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(qty);

        interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forward:/bookDetail?id=");

        $r7 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = book := @parameter0: com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = qty := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter3: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = book = virtualinvoke $r2.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.domain.Book findById(java.lang.Long)>($r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(qty)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r4.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = new java.lang.StringBuilder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forward:/bookDetail?id=")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return $r9
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addItem(com.bookstore.domain.Book, java.lang.String, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.String qty, $r1, $r9;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        com.bookstore.service.impl.BookService $r2;
        java.lang.Long $r3, $r7;
        com.bookstore.service.impl.CartItemService $r4;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r8;
        com.bookstore.domain.Book book, book;

        this := @this: com.bookstore.controller.ShoppingCartController;

        book := @parameter0: com.bookstore.domain.Book;

        qty := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        principal := @parameter3: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.BookServiceImpl;

        $r3 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        book = virtualinvoke $r2.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.domain.Book findById(java.lang.Long)>($r3);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r2;

        $r4 = new com.bookstore.service.impl.CartItemServiceImpl;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(qty);

        virtualinvoke $r4.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem addBookToCartItem(com.bookstore.domain.Book,com.bookstore.domain.User,int)>(book, user, $i0);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forward:/bookDetail?id=");

        $r7 = virtualinvoke book.<com.bookstore.domain.Book: java.lang.Long getId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.ShoppingCartController: java.lang.String updateShoppingCart(java.lang.Long,int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: updateShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String updateShoppingCart(java.lang.Long, int)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.Long cartItemId;
        int qty;
        com.bookstore.domain.CartItem cartItem;
        com.bookstore.service.impl.CartItemService $r0, $r1;

        this := @this: com.bookstore.controller.ShoppingCartController;

        cartItemId := @parameter0: java.lang.Long;

        qty := @parameter1: int;

        $r0 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>;

        cartItem = interfaceinvoke $r0.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem findById(java.lang.Long)>(cartItemId);

        virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setQty(int)>(qty);

        $r1 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>;

        interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);

        return "forward:/shoppingCart/cart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.CartItemServiceImpl, $r1=com.bookstore.service.impl.CartItemServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItemId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = qty := @parameter1: int
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItem = interfaceinvoke $r0.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem findById(java.lang.Long)>(cartItemId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setQty(int)>(qty)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "forward:/shoppingCart/cart"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String updateShoppingCart(java.lang.Long, int)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.Long cartItemId;
        int qty;
        com.bookstore.domain.CartItem cartItem;
        com.bookstore.service.impl.CartItemService $r0, $r1;

        this := @this: com.bookstore.controller.ShoppingCartController;

        cartItemId := @parameter0: java.lang.Long;

        qty := @parameter1: int;

        $r0 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItem = virtualinvoke $r0.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem findById(java.lang.Long)>(cartItemId);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r0;

        virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setQty(int)>(qty);

        $r1 = new com.bookstore.service.impl.CartItemServiceImpl;

        interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);

        return "forward:/shoppingCart/cart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItemId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = qty := @parameter1: int
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = cartItem = virtualinvoke $r0.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem findById(java.lang.Long)>(cartItemId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setQty(int)>(qty)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "forward:/shoppingCart/cart"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String updateShoppingCart(java.lang.Long, int)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.Long cartItemId;
        int qty;
        com.bookstore.domain.CartItem cartItem;
        com.bookstore.service.impl.CartItemService $r0, $r1;

        this := @this: com.bookstore.controller.ShoppingCartController;

        cartItemId := @parameter0: java.lang.Long;

        qty := @parameter1: int;

        $r0 = new com.bookstore.service.impl.CartItemServiceImpl;

        cartItem = virtualinvoke $r0.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem findById(java.lang.Long)>(cartItemId);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r0;

        virtualinvoke cartItem.<com.bookstore.domain.CartItem: void setQty(int)>(qty);

        $r1 = new com.bookstore.service.impl.CartItemServiceImpl;

        virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem)>(cartItem);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;

        return "forward:/shoppingCart/cart";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.ShoppingCartController: java.lang.String removeItem(java.lang.Long)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: removeItem
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String removeItem(java.lang.Long)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.Long id;
        com.bookstore.service.impl.CartItemService $r0, $r1;
        com.bookstore.domain.CartItem $r2;

        this := @this: com.bookstore.controller.ShoppingCartController;

        id := @parameter0: java.lang.Long;

        $r1 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>;

        $r0 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>;

        $r2 = interfaceinvoke $r0.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem findById(java.lang.Long)>(id);

        interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: void removeCartItem(com.bookstore.domain.CartItem)>($r2);

        return "forward:/shoppingCart/cart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [org.springframework.samples.petclinic.owner.OwnerController, com.bookstore.controller.ShoppingCartController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r1=com.bookstore.service.impl.CartItemServiceImpl, $r0=com.bookstore.service.impl.CartItemServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = interfaceinvoke $r0.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem findById(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: void removeCartItem(com.bookstore.domain.CartItem)>($r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r1.<com.bookstore.service.impl.CartItemService: void removeCartItem(com.bookstore.domain.CartItem)>($r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "forward:/shoppingCart/cart"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeItem(java.lang.Long)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.Long id;
        com.bookstore.service.impl.CartItemService $r0, $r1;
        com.bookstore.domain.CartItem $r2;

        this := @this: com.bookstore.controller.ShoppingCartController;

        id := @parameter0: java.lang.Long;

        $r1 = new com.bookstore.service.impl.CartItemServiceImpl;

        $r0 = new com.bookstore.service.impl.CartItemServiceImpl;

        $r2 = interfaceinvoke $r0.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem findById(java.lang.Long)>(id);

        virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: void removeCartItem(com.bookstore.domain.CartItem)>($r2);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;

        return "forward:/shoppingCart/cart";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = interfaceinvoke $r0.<com.bookstore.service.impl.CartItemService: com.bookstore.domain.CartItem findById(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl>, <com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: void removeCartItem(com.bookstore.domain.CartItem)>($r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "forward:/shoppingCart/cart"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeItem(java.lang.Long)
    {
        com.bookstore.controller.ShoppingCartController this;
        java.lang.Long id;
        com.bookstore.service.impl.CartItemService $r0, $r1;
        com.bookstore.domain.CartItem $r2;

        this := @this: com.bookstore.controller.ShoppingCartController;

        id := @parameter0: java.lang.Long;

        $r1 = new com.bookstore.service.impl.CartItemServiceImpl;

        $r0 = new com.bookstore.service.impl.CartItemServiceImpl;

        $r2 = virtualinvoke $r0.<com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem findById(java.lang.Long)>(id);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r0;

        virtualinvoke $r1.<com.bookstore.service.impl.CartItemServiceImpl: void removeCartItem(com.bookstore.domain.CartItem)>($r2);

        this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r1;

        return "forward:/shoppingCart/cart";
    }

FuncStackAnalyzer.java: constructDIRForStack(): FSA: constructDIRsForStack: Stack = [com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal), com.bookstore.service.impl.UserServiceImpl: void <clinit>(), com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart), com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart), com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart(), com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String), com.bookstore.service.impl.CartItemServiceImpl: com.bookstore.domain.CartItem updateCartItem(com.bookstore.domain.CartItem), com.bookstore.domain.Book: int getInStockNumber(), com.bookstore.domain.CartItem: java.math.BigDecimal getSubtotal(), com.bookstore.domain.CartItem: com.bookstore.domain.Book getBook(), com.bookstore.domain.Book: double getOurPrice(), com.bookstore.domain.CartItem: void setSubtotal(java.math.BigDecimal), com.bookstore.domain.CartItem: int getQty()]
FuncStackAnalyzer.java: constructDIRForStack(): top function sig: com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)
FuncStackAnalyzer.java: constructDIRForStack(): body rootmethod before analysis: [this := @this: com.bookstore.controller.ShoppingCartController, model := @parameter0: org.springframework.ui.Model, principal := @parameter1: java.security.Principal, $r0 = new com.bookstore.service.impl.UserServiceImpl, $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>(), user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0, shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>(), $r2 = new com.bookstore.service.impl.CartItemServiceImpl, cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2, $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl, virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3, interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList), interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart), return "shoppingCart"]
FuncStackAnalyzer.java: constructDIRForStack(): Top level func i.e. com.bookstore.controller.ShoppingCartController: java.lang.String shoppingCart(org.springframework.ui.Model,java.security.Principal)has typemap: {}
ARegion.java: analyze(): set cur method of analyzer to: shoppingCart
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.bookstore.controller.ShoppingCartController, model := @parameter0: org.springframework.ui.Model, principal := @parameter1: java.security.Principal, $r0 = new com.bookstore.service.impl.UserServiceImpl, $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>(), user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0, shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>(), $r2 = new com.bookstore.service.impl.CartItemServiceImpl, cartItemList = virtualinvoke $r2.<com.bookstore.service.impl.CartItemServiceImpl: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemServiceImpl cartItemServiceImpl> = $r2, $r3 = new com.bookstore.service.impl.ShoppingCartServiceImpl, virtualinvoke $r3.<com.bookstore.service.impl.ShoppingCartServiceImpl: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart), this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartServiceImpl shoppingCartServiceImpl> = $r3, interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("cartItemList", cartItemList), interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("shoppingCart", shoppingCart), return "shoppingCart"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.bookstore.controller.ShoppingCartController
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = model := @parameter0: org.springframework.ui.Model
DIRRegionAnalyzer.java: constructDIR(): curUnit = principal := @parameter1: java.security.Principal
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = new com.bookstore.service.impl.UserServiceImpl
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
