EqSQLDriverTest.java: main(): Got the bench-dir option value: target/classes
EqSQLDriverTest.java: main(): Got the controllersig option value: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
github/Utils.java: getAbsBenchDir(): pwd: /home/akash/Study/3rd sem/Project/current use/NRAandLoops
starttime, test: 1681831635862
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: java.lang.Object is a phantom class!
Warning: org.springframework.web.bind.annotation.PostMapping is a phantom class!
Warning: java.util.Iterator is a phantom class!
Warning: java.util.Collection is a phantom class!
Warning: org.springframework.validation.BindingResult is a phantom class!
Warning: org.springframework.stereotype.Controller is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: org.springframework.web.servlet.ModelAndView is a phantom class!
Warning: org.springframework.ui.Model is a phantom class!
Warning: java.util.List is a phantom class!
Warning: org.springframework.web.bind.WebDataBinder is a phantom class!
Warning: java.util.Map is a phantom class!
Warning: org.springframework.web.bind.annotation.GetMapping is a phantom class!
Warning: java.lang.StringBuilder is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: org.springframework.web.bind.annotation.InitBinder is a phantom class!
Warning: org.springframework.format.annotation.DateTimeFormat is a phantom class!
Warning: java.util.ArrayList is a phantom class!
Warning: java.util.HashSet is a phantom class!
Warning: javax.persistence.Table is a phantom class!
Warning: org.springframework.beans.support.PropertyComparator is a phantom class!
Warning: java.util.LinkedHashSet is a phantom class!
Warning: javax.persistence.Entity is a phantom class!
Warning: org.springframework.beans.support.MutableSortDefinition is a phantom class!
Warning: javax.persistence.ManyToOne is a phantom class!
Warning: javax.persistence.JoinColumn is a phantom class!
Warning: javax.persistence.OneToMany is a phantom class!
Warning: java.util.Set is a phantom class!
Warning: org.springframework.beans.support.SortDefinition is a phantom class!
Warning: javax.persistence.Column is a phantom class!
Warning: java.time.LocalDate is a phantom class!
Warning: java.util.Collections is a phantom class!
Warning: org.springframework.data.repository.Repository is a phantom class!
Warning: org.springframework.data.jpa.repository.Query is a phantom class!
Warning: org.springframework.transaction.annotation.Transactional is a phantom class!
Warning: javax.validation.constraints.NotEmpty is a phantom class!
Warning: javax.validation.constraints.Digits is a phantom class!
Warning: org.springframework.core.style.ToStringCreator is a phantom class!
Warning: org.springframework.dao.DataAccessException is a phantom class!
Warning: javax.persistence.MappedSuperclass is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: javax.persistence.GeneratedValue is a phantom class!
Warning: javax.persistence.Id is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
patternMatch.java: getUserInputRules: i=0
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? (Neq (= <col1> <col2>) (0Node)) (union (repo) (list)) (repo))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (select <coll> (= <col1> <col2>))
Fold
| FuncExpr
| | Ternary
| | | NotEq
| | | | Eq
| | | | | Any
| | | | | Any
| | | | Any
| | | Union
| | | | Any
| | | | List
| | | Any
| Any
| Any
| Any


Select
| Id:13
| Eq
| | Id:5
| | Id:6

{<col1>=5, <col2>=6, <init_val>=12, <itr>=14, <coll>=13}
patternMatch.java: getUserInputRules: i=2
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (save <repo> <list1>) (save <repo> <list2>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <init_val> <coll>) (union (pi (select <coll> <cond>) <list1>) (pi (select <coll> (= <cond> 0)) <list2>)))
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Any
| | | | Any
| | | Save
| | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:25
| | Id:26
| Union
| | Project
| | | Select
| | | | Id:26
| | | | Id:18
| | | Id:21
| | Project
| | | Select
| | | | Id:26
| | | | Eq
| | | | | Id:18
| | | | | Zero
| | | Id:24

{<col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=18, <list1>=21, <init_val>=25, <itr>=27, <coll>=26}
patternMatch.java: getUserInputRules: i=4
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (add_all_fields <list>) <elseval>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <coll> <cond>) <list>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | AddWithFieldExprs
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:36
| | | Id:31
| | Id:33
| Id:35

{<list>=33, <elseval>=34, <col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=31, <list1>=21, <init_val>=35, <itr>=37, <coll>=36}
patternMatch.java: getUserInputRules: i=6
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (save <repo> (tuple (join next <join_right> <nop>) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <repo> (select <repo> (in id (pi (join <coll> <join_right>) id)))) (pi <list> (join <coll> <join_right>)))
Fold
| FuncExpr
| | Save
| | | Any
| | | Tuple
| | | | Join
| | | | | Iterator
| | | | | Any
| | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:41
| | Select
| | | Id:41
| | | In
| | | | Id
| | | | Project
| | | | | Join
| | | | | | Id:49
| | | | | | Id:45
| | | | | Id
| Project
| | Id:47
| | Join
| | | Id:49
| | | Id:45

{<list>=47, <repo>=41, <cond>=31, <nop>=46, <init_val>=48, <join_right>=45, <itr>=50, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=49}
patternMatch.java: getUserInputRules: i=8
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (add_all_fields <receiver> (tuple (select <rel> (= <clm> <itr>)) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi <list> (select <rel> (in <clm> <coll>))) <init_val>)
Fold
| FuncExpr
| | AddWithFieldExprs
| | | Any
| | | Tuple
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| Project
| | Id:61
| | Select
| | | Id:57
| | | In
| | | | Id:59
| | | | Id:63
| Id:62

{<list>=61, <rel>=57, <repo>=41, <cond>=31, <nop>=46, <clm>=59, <init_val>=62, <join_right>=45, <itr>=64, <receiver>=54, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=63}
patternMatch.java: getUserInputRules: i=10
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (+ <aggvar> (pi (select <rel> (= <clm> <itr>)) <clmagg>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (+ (agg_sum (select <rel> (in <clm> <coll>)) <clmagg>) <init_val>)
Fold
| FuncExpr
| | ArithAdd
| | | Any
| | | Project
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


ArithAdd
| AggSum
| | Select
| | | Id:71
| | | In
| | | | Id:73
| | | | Id:77
| | Id:75
| Id:76

{<list>=61, <rel>=71, <repo>=41, <cond>=31, <nop>=46, <clm>=73, <init_val>=76, <join_right>=45, <itr>=78, <clmagg>=75, <receiver>=54, <aggvar>=68, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=77}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Project/current%20use/NRAandLoops/lib/eqsql.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Project/current%20use/NRAandLoops/lib/soot-trunk-1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: showOwner
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public org.springframework.web.servlet.ModelAndView showOwner(int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        org.springframework.samples.petclinic.owner.Owner owner;
        java.util.Iterator l4;
        org.springframework.samples.petclinic.owner.Pet pet;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        java.lang.Integer $r2, $r7;
        java.util.List $r3, $r8;
        boolean $z0;
        java.lang.Object $r5;
        org.springframework.samples.petclinic.visit.VisitRepository $r6;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();

        l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        pet = (org.springframework.samples.petclinic.owner.Pet) $r5;

        $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;

        $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();

        $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7);

        virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);

        goto label1;

     label2:
        virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

        return mav;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder internalTransform called!
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: body: 
    public org.springframework.web.servlet.ModelAndView showOwner(int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        org.springframework.samples.petclinic.owner.Owner owner;
        java.util.Iterator l4;
        org.springframework.samples.petclinic.owner.Pet pet;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        java.lang.Integer $r2, $r7;
        java.util.List $r3, $r8;
        boolean $z0;
        java.lang.Object $r5;
        org.springframework.samples.petclinic.visit.VisitRepository $r6;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();

        l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        pet = (org.springframework.samples.petclinic.owner.Pet) $r5;

        $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;

        $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();

        $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7);

        virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);

        goto label1;

     label2:
        virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

        return mav;
    }

FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: ownerId
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: ownerId
FuncStackInfoBuilder.java: regionTreeForBody(): local: mav
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: mav
FuncStackInfoBuilder.java: regionTreeForBody(): local: owner
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: owner
FuncStackInfoBuilder.java: regionTreeForBody(): local: l4
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: l4
FuncStackInfoBuilder.java: regionTreeForBody(): local: pet
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: pet
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r8
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r8
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: showOwner is Block 0:
[preds: ] [succs: 1 ]
this := @this: org.springframework.samples.petclinic.owner.OwnerController;
ownerId := @parameter0: int;
$r0 = new org.springframework.web.servlet.ModelAndView;
specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");
mav = $r0;
$r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);
owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);
$r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();
l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();
pet = (org.springframework.samples.petclinic.owner.Pet) $r5;
$r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;
$r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();
$r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7);
virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);
goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()];

Block 3:
[preds: 1 ] [succs: ]
virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);
return mav;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
2 -> 1
0 -> 1
1 -> 2
1 -> 3
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
dfsVisit: start = 1
dfsVisit: start = 2
dfsVisit: start = 3
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [2, 3, 1, 0]
StructuralAnalysis.java: structuralAnalysis(): break point!
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [2]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 2
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [2]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 2
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [2]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 3
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [3]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 3
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 3
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 3
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [3]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 3
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [3]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: [2]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [1, 2]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [1, 2]
dfsVisit: start = 1
dfsVisit: start = 2
dfsVisit: start = 3
StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_WhileLoop0
StructuralAnalysis.java: replace(): v: 1
StructuralAnalysis.java: replace(): v: 2
StructuralAnalyis.java: compact(): compact: vset = [1, 2]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 3, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [2, 3, 1, 0]
removeVertices: vset = [1, 2]
removeVertices: v = 1
removeVertex: adj = {1=[2, 3], 2=[1], 3=[], 0=[1]}
removeVertex: incoming = {1=[0, 2], 2=[1], 3=[1], 0=[]}
removeVertex: v = 1
removeVertex: v2 = 0
removeVertex: v2 = 2
removeVertices: v = 2
removeVertex: adj = {2=[], 3=[], 0=[]}
removeVertex: incoming = {2=[], 3=[], 0=[]}
removeVertex: v = 2
StructuralAnalyis.java: compact(): compact: g.vertices after: [3, R_WhileLoop0, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [3, R_WhileLoop0, 0]
StructuralAnalysis.java: reduce(): structType before: {}
StructuralAnalysis.java: reduce(): structType after: {R_WhileLoop0=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_WhileLoop0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_WhileLoop0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [0, R_WhileLoop0, 3]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = Sequential

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_Sequential1
StructuralAnalysis.java: replace(): v: 0
StructuralAnalysis.java: replace(): v: R_WhileLoop0
StructuralAnalysis.java: replace(): v: 3
StructuralAnalyis.java: compact(): compact: vset = [0, R_WhileLoop0, 3]
StructuralAnalyis.java: compact(): compact: g.vertices before: [3, R_WhileLoop0, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [3, R_WhileLoop0, 0]
removeVertices: vset = [0, R_WhileLoop0, 3]
removeVertices: v = 0
removeVertex: adj = {3=[], R_WhileLoop0=[3], 0=[R_WhileLoop0]}
removeVertex: incoming = {3=[R_WhileLoop0], R_WhileLoop0=[0], 0=[]}
removeVertex: v = 0
removeVertices: v = R_WhileLoop0
removeVertex: adj = {3=[], R_WhileLoop0=[3]}
removeVertex: incoming = {3=[R_WhileLoop0], R_WhileLoop0=[]}
removeVertex: v = R_WhileLoop0
removeVertices: v = 3
removeVertex: adj = {3=[]}
removeVertex: incoming = {3=[]}
removeVertex: v = 3
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_Sequential1]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_Sequential1]
StructuralAnalysis.java: reduce(): structType before: {R_WhileLoop0=WhileLoop}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structType: {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop}
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[0, R_WhileLoop0, 3], R_WhileLoop0=[1, 2]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_WhileLoop0, 2=R_WhileLoop0, 3=R_Sequential1, R_WhileLoop0=R_Sequential1, 0=R_Sequential1}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential1
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- R_Sequential1
|  +- 0
|  +- R_WhileLoop0
|  |  +- 1
|  |  +- 2
|  +- 3

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: 1 ]
this := @this: org.springframework.samples.petclinic.owner.OwnerController;
ownerId := @parameter0: int;
$r0 = new org.springframework.web.servlet.ModelAndView;
specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");
mav = $r0;
$r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);
owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);
$r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();
l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();
pet = (org.springframework.samples.petclinic.owner.Pet) $r5;
$r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;
$r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();
$r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7);
virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);
goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()];

Block 3:
[preds: 1 ] [succs: ]
virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);
return mav;


StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[0, R_WhileLoop0, 3], R_WhileLoop0=[1, 2]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_WhileLoop0, 2=R_WhileLoop0, 3=R_Sequential1, R_WhileLoop0=R_Sequential1, 0=R_Sequential1}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential1
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return mav]
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 1
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 1
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return mav]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_Sequential1=Sequential, R_WhileLoop0=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 2
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 2
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return mav]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_Sequential1=Sequential, R_WhileLoop0=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_WhileLoop0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
LoopRegion created
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_Sequential1=Sequential, R_WhileLoop0=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 3
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 3
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 3
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return mav]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, R_Sequential1=Sequential, R_WhileLoop0=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_Sequential1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 3
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = R_Sequential1
FuncStackInfoBuilder.java: regionTreeForBody(): | Sequential
| | BasicBlock0
| | WhileLoop
| | | BasicBlock1
| | | BasicBlock2
| | BasicBlock3

FuncStackInfoBuilder.java: internalTransformHelper(): topr is not null
FuncStackInfoBuilder.java: internalTransformHelper(): topr = 
| Sequential
| | BasicBlock0
| | WhileLoop
| | | BasicBlock1
| | | BasicBlock2
| | BasicBlock3

FuncStackInfoBuilder.java: internalTransformHelper(): CGSTART: 
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId) in <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails") in <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)> ==> <org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>() in <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)> ==> <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>
VIRTUAL edge: $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>() in <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)> ==> <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
VIRTUAL edge: virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8) in <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)> ==> <org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>
STATIC edge: staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2) in <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()> ==> <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>
STATIC edge: $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets) in <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()> ==> <java.util.Collections: java.util.List unmodifiableList(java.util.List)>
VIRTUAL edge: $r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>() in <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()> ==> <org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>
SPECIAL edge: specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1) in <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()> ==> <java.util.ArrayList: void <init>(java.util.Collection)>
SPECIAL edge: specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1) in <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()> ==> <org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>
SPECIAL edge: specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits) in <org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)> ==> <java.util.LinkedHashSet: void <init>(java.util.Collection)>
SPECIAL edge: specialinvoke $r2.<java.util.HashSet: void <init>()>() in <org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()> ==> <java.util.HashSet: void <init>()>
CGEND

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.lang.Integer: java.lang.Integer valueOf(int)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setVisitsInternal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.Pet
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    protected void setVisitsInternal(java.util.Collection)
    {
        org.springframework.samples.petclinic.owner.Pet this;
        java.util.Collection visits;
        java.util.LinkedHashSet $r0;

        this := @this: org.springframework.samples.petclinic.owner.Pet;

        visits := @parameter0: java.util.Collection;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits);

        this.<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits> = $r0;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: visits
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: visits
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setVisitsInternal is Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.owner.Pet;
visits := @parameter0: java.util.Collection;
$r0 = new java.util.LinkedHashSet;
specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits);
this.<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits> = $r0;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.owner.Pet;
visits := @parameter0: java.util.Collection;
$r0 = new java.util.LinkedHashSet;
specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits);
this.<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits> = $r0;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.Pet, visits := @parameter0: java.util.Collection, $r0 = new java.util.LinkedHashSet, specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits), this.<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits> = $r0, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getId
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.model.BaseEntity
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.Integer getId()
    {
        org.springframework.samples.petclinic.model.BaseEntity this;
        java.lang.Integer $r0;

        this := @this: org.springframework.samples.petclinic.model.BaseEntity;

        $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getId is Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.BaseEntity;
$r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.BaseEntity;
$r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.model.BaseEntity, $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getPets
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.Owner
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.util.List getPets()
    {
        org.springframework.samples.petclinic.owner.Owner this;
        java.util.ArrayList sortedPets, $r0;
        java.util.Set $r1;
        org.springframework.beans.support.MutableSortDefinition $r2;
        java.util.List $r3;

        this := @this: org.springframework.samples.petclinic.owner.Owner;

        $r0 = new java.util.ArrayList;

        $r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        sortedPets = $r0;

        $r2 = new org.springframework.beans.support.MutableSortDefinition;

        specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1);

        staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets);

        return $r3;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: sortedPets
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: sortedPets
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getPets is Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.owner.Owner;
$r0 = new java.util.ArrayList;
$r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>();
specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);
sortedPets = $r0;
$r2 = new org.springframework.beans.support.MutableSortDefinition;
specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1);
staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2);
$r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets);
return $r3;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.owner.Owner;
$r0 = new java.util.ArrayList;
$r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>();
specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);
sortedPets = $r0;
$r2 = new org.springframework.beans.support.MutableSortDefinition;
specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1);
staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2);
$r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets);
return $r3;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = new java.util.ArrayList, $r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>(), specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1), sortedPets = $r0, $r2 = new org.springframework.beans.support.MutableSortDefinition, specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1), staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2), $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets), return $r3]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.util.LinkedHashSet: void <init>(java.util.Collection)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.util.ArrayList: void <init>(java.util.Collection)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getPetsInternal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.Owner
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    protected java.util.Set getPetsInternal()
    {
        org.springframework.samples.petclinic.owner.Owner this;
        java.util.Set $r0, $r1;
        java.util.HashSet $r2;

        this := @this: org.springframework.samples.petclinic.owner.Owner;

        $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;

        if $r0 != null goto label1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2;

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;

        return $r1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getPetsInternal is Block 0:
[preds: ] [succs: 1 2 ]
this := @this: org.springframework.samples.petclinic.owner.Owner;
$r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;
if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;

Block 1:
[preds: 0 ] [succs: 2 ]
$r2 = new java.util.HashSet;
specialinvoke $r2.<java.util.HashSet: void <init>()>();
this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2;

Block 2:
[preds: 0 1 ] [succs: ]
$r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;
return $r1;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
0 -> 1
1 -> 2
0 -> 2
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
dfsVisit: start = 1
dfsVisit: start = 2
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [2, 1, 0]
StructuralAnalysis.java: structuralAnalysis(): break point!
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [2]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 2
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [2]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 2
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [2]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [1]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [1]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [0]

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_IfThen0
StructuralAnalysis.java: replace(): v: 0
StructuralAnalysis.java: replace(): v: 1
StructuralAnalyis.java: compact(): compact: vset = [0, 1]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [2, 1, 0]
removeVertices: vset = [0, 1]
removeVertices: v = 0
removeVertex: adj = {1=[2], 2=[], 0=[1, 2]}
removeVertex: incoming = {1=[0], 2=[0, 1], 0=[]}
removeVertex: v = 0
removeVertices: v = 1
removeVertex: adj = {1=[2], 2=[]}
removeVertex: incoming = {1=[], 2=[1]}
removeVertex: v = 1
StructuralAnalyis.java: compact(): compact: g.vertices after: [2, R_IfThen0]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [2, R_IfThen0]
StructuralAnalysis.java: reduce(): structType before: {}
StructuralAnalysis.java: reduce(): structType after: {R_IfThen0=IfThen}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_IfThen0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_IfThen0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [R_IfThen0, 2]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = Sequential

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_Sequential1
StructuralAnalysis.java: replace(): v: R_IfThen0
StructuralAnalysis.java: replace(): v: 2
StructuralAnalyis.java: compact(): compact: vset = [R_IfThen0, 2]
StructuralAnalyis.java: compact(): compact: g.vertices before: [2, R_IfThen0]
StructuralAnalyis.java: compact(): compact: postCtr before: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [2, R_IfThen0]
removeVertices: vset = [R_IfThen0, 2]
removeVertices: v = R_IfThen0
removeVertex: adj = {2=[], R_IfThen0=[2]}
removeVertex: incoming = {2=[R_IfThen0], R_IfThen0=[]}
removeVertex: v = R_IfThen0
removeVertices: v = 2
removeVertex: adj = {2=[]}
removeVertex: incoming = {2=[]}
removeVertex: v = 2
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_Sequential1]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_Sequential1]
StructuralAnalysis.java: reduce(): structType before: {R_IfThen0=IfThen}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_IfThen0=IfThen}
StructuralAnalysis.java: structuralAnalysis(): structType: {R_Sequential1=Sequential, R_IfThen0=IfThen}
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[R_IfThen0, 2], R_IfThen0=[0, 1]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_IfThen0, 2=R_Sequential1, R_IfThen0=R_Sequential1, 0=R_IfThen0}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential1
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- R_Sequential1
|  +- R_IfThen0
|  |  +- 0
|  |  +- 1
|  +- 2

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: 1 2 ]
this := @this: org.springframework.samples.petclinic.owner.Owner;
$r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;
if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;

Block 1:
[preds: 0 ] [succs: 2 ]
$r2 = new java.util.HashSet;
specialinvoke $r2.<java.util.HashSet: void <init>()>();
this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2;

Block 2:
[preds: 0 1 ] [succs: ]
$r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;
return $r1;


StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[R_IfThen0, 2], R_IfThen0=[0, 1]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_IfThen0, 2=R_Sequential1, R_IfThen0=R_Sequential1, 0=R_IfThen0}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential1
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_IfThen0=IfThen}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, $r2 = new java.util.HashSet, specialinvoke $r2.<java.util.HashSet: void <init>()>(), this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2, $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, return $r1]
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_IfThen0=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 1
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 1
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, $r2 = new java.util.HashSet, specialinvoke $r2.<java.util.HashSet: void <init>()>(), this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2, $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, return $r1]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_Sequential1=Sequential, R_IfThen0=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_IfThen0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
FuncStackInfoBuilder: createARegionTree(): child0 is head
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_Sequential1=Sequential, R_IfThen0=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 2
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 2
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, $r2 = new java.util.HashSet, specialinvoke $r2.<java.util.HashSet: void <init>()>(), this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2, $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, return $r1]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_Sequential1=Sequential, R_IfThen0=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_Sequential1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = R_Sequential1
FuncStackInfoBuilder.java: regionTreeForBody(): | Sequential
| | IfThen
| | | BasicBlock0
| | | BasicBlock1
| | BasicBlock2

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.util.Collections: java.util.List unmodifiableList(java.util.List)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.util.HashSet: void <init>()
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: functionstack: 
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
FuncStackInfoBuilder.java: internalTransformHelper(): {org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()=    public java.util.List getPets()
    {
        org.springframework.samples.petclinic.owner.Owner this;
        java.util.ArrayList sortedPets, $r0;
        java.util.Set $r1;
        org.springframework.beans.support.MutableSortDefinition $r2;
        java.util.List $r3;

        this := @this: org.springframework.samples.petclinic.owner.Owner;

        $r0 = new java.util.ArrayList;

        $r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        sortedPets = $r0;

        $r2 = new org.springframework.beans.support.MutableSortDefinition;

        specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1);

        staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets);

        return $r3;
    }
, org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()=    protected java.util.Set getPetsInternal()
    {
        org.springframework.samples.petclinic.owner.Owner this;
        java.util.Set $r0, $r1;
        java.util.HashSet $r2;

        this := @this: org.springframework.samples.petclinic.owner.Owner;

        $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;

        if $r0 != null goto label1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2;

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>;

        return $r1;
    }
, org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)=    public org.springframework.web.servlet.ModelAndView showOwner(int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        org.springframework.samples.petclinic.owner.Owner owner;
        java.util.Iterator l4;
        org.springframework.samples.petclinic.owner.Pet pet;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        java.lang.Integer $r2, $r7;
        java.util.List $r3, $r8;
        boolean $z0;
        java.lang.Object $r5;
        org.springframework.samples.petclinic.visit.VisitRepository $r6;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();

        l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        pet = (org.springframework.samples.petclinic.owner.Pet) $r5;

        $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;

        $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();

        $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7);

        virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);

        goto label1;

     label2:
        virtualinvoke mav.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

        return mav;
    }
, org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()=    public java.lang.Integer getId()
    {
        org.springframework.samples.petclinic.model.BaseEntity this;
        java.lang.Integer $r0;

        this := @this: org.springframework.samples.petclinic.model.BaseEntity;

        $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;

        return $r0;
    }
, org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)=    protected void setVisitsInternal(java.util.Collection)
    {
        org.springframework.samples.petclinic.owner.Pet this;
        java.util.Collection visits;
        java.util.LinkedHashSet $r0;

        this := @this: org.springframework.samples.petclinic.owner.Pet;

        visits := @parameter0: java.util.Collection;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits);

        this.<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits> = $r0;

        return;
    }
}

Decompiling org.springframework.samples.petclinic.owner.OwnerController... 
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: void <init>(org.springframework.samples.petclinic.owner.OwnerRepository,org.springframework.samples.petclinic.visit.VisitRepository)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void <init>(org.springframework.samples.petclinic.owner.OwnerRepository, org.springframework.samples.petclinic.visit.VisitRepository)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.OwnerRepository clinicService;
        org.springframework.samples.petclinic.visit.VisitRepository visits;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        clinicService := @parameter0: org.springframework.samples.petclinic.owner.OwnerRepository;

        visits := @parameter1: org.springframework.samples.petclinic.visit.VisitRepository;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners> = clinicService;

        this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits> = visits;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: void setAllowedFields(org.springframework.web.bind.WebDataBinder)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setAllowedFields
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setAllowedFields(org.springframework.web.bind.WebDataBinder)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.web.bind.WebDataBinder dataBinder;
        java.lang.String[] $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        dataBinder := @parameter0: org.springframework.web.bind.WebDataBinder;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "id";

        virtualinvoke dataBinder.<org.springframework.web.bind.WebDataBinder: void setDisallowedFields(java.lang.String[])>($r0);

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initCreationForm(java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initCreationForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String initCreationForm(java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.util.Map model;
        org.springframework.samples.petclinic.owner.Owner owner, $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        model := @parameter0: java.util.Map;

        $r0 = new org.springframework.samples.petclinic.owner.Owner;

        specialinvoke $r0.<org.springframework.samples.petclinic.owner.Owner: void <init>()>();

        owner = $r0;

        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r0);

        return "owners/createOrUpdateOwnerForm";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processCreationForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.validation.BindingResult result;
        boolean $z0;
        org.springframework.samples.petclinic.owner.OwnerRepository $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Integer $r3;
        java.lang.String $r5;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke result.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "owners/createOrUpdateOwnerForm";

     label1:
        $r0 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        interfaceinvoke $r0.<org.springframework.samples.petclinic.owner.OwnerRepository: void save(org.springframework.samples.petclinic.owner.Owner)>(owner);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initFindForm(java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initFindForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String initFindForm(java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.util.Map model;
        org.springframework.samples.petclinic.owner.Owner $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        model := @parameter0: java.util.Map;

        $r0 = new org.springframework.samples.petclinic.owner.Owner;

        specialinvoke $r0.<org.springframework.samples.petclinic.owner.Owner: void <init>()>();

        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r0);

        return "owners/findOwners";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processFindForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.validation.BindingResult result;
        java.util.Map model;
        java.util.Collection results;
        java.lang.String $r0, $r2, $r10;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        boolean $z0;
        int $i0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Integer $r8;
        org.springframework.samples.petclinic.owner.Owner owner, owner;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        model := @parameter2: java.util.Map;

        $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        if $r0 != null goto label1;

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);

        $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");

        return "owners/findOwners";

     label2:
        $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        owner = (org.springframework.samples.petclinic.owner.Owner) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label3:
        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

        return "owners/ownersList";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initUpdateOwnerForm(int,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initUpdateOwnerForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String initUpdateOwnerForm(int, org.springframework.ui.Model)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.ui.Model model;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.samples.petclinic.owner.OwnerRepository $r0;
        java.lang.Integer $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        model := @parameter1: org.springframework.ui.Model;

        $r0 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r0.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.Object)>(owner);

        return "owners/createOrUpdateOwnerForm";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processUpdateOwnerForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.validation.BindingResult result;
        int ownerId;
        boolean $z0;
        java.lang.Integer $r0;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        ownerId := @parameter2: int;

        $z0 = interfaceinvoke result.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "owners/createOrUpdateOwnerForm";

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setId(java.lang.Integer)>($r0);

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: void save(org.springframework.samples.petclinic.owner.Owner)>(owner);

        return "redirect:/owners/{ownerId}";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: showOwner
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public org.springframework.web.servlet.ModelAndView showOwner(int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        org.springframework.samples.petclinic.owner.Owner owner;
        java.util.Iterator l4;
        org.springframework.samples.petclinic.owner.Pet pet;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        java.lang.Integer $r2, $r7;
        java.util.List $r3, $r8;
        boolean $z0;
        java.lang.Object $r5;
        org.springframework.samples.petclinic.visit.VisitRepository $r6;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();

        l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        pet = (org.springframework.samples.petclinic.owner.Pet) $r5;

        $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;

        $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();

        $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7);

        virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);

        goto label1;

     label2:
        virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwners(java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: showOwners
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public org.springframework.web.servlet.ModelAndView showOwners(java.lang.String)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.lang.String lastName;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        java.util.Collection o;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        lastName := @parameter0: java.lang.String;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        o = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>(lastName);

        virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(o);

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackAnalyzer.java: constructDIRForStack(): FSA: constructDIRsForStack: Stack = [org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()]
FuncStackAnalyzer.java: constructDIRForStack(): top function sig: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
FuncStackAnalyzer.java: constructDIRForStack(): body rootmethod before analysis: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return $r0]
FuncStackAnalyzer.java: constructDIRForStack(): Top level func i.e. org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)has typemap: {}
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregions: [| BasicBlock0, | WhileLoop
| | BasicBlock1
| | BasicBlock2
, | BasicBlock3]
DIRSequentialRegionAnalyzerN.java: constructDIR(): Break point!
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: showOwner
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.owner.OwnerController
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = ownerId := @parameter0: int
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = new org.springframework.web.servlet.ModelAndView
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails")
DIRRegionAnalyzer.java: constructDIR(): curUnit = mav = $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2, type(v1, v2) = ptr
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: mav
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r0
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: []
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>
DIRRegionAnalyzer.java: constructDIR(): Debug stop
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r1 -> this.owners
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JStaticInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Integer: java.lang.Integer valueOf(int)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Integer: java.lang.Integer valueOf(int)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Integer: java.lang.Integer valueOf(int)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r2
Utils.java: getVarNode(): LinkedVariableBox($r2)
JAssignStmtCons.java: construct(): staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId)
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Integer: java.lang.Integer valueOf(int)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Integer: java.lang.Integer valueOf(int)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Integer: java.lang.Integer valueOf(int)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): curUnit = owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findById
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>
construct/Utils.java: parseObjectInvoke(): methodName = findById
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
construct/Utils.java: parseObjectInvoke(): Case : findBy
Utils.java: getRelExpForMethod(): getRelExpForMethod: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
Utils.java: getRelExpForMethod(): actualargs = [$r2]
Utils.java: getRelExpForMethod(): methodInvoked = <org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>
Utils.java: getRelExpForMethod(): taglist: 
[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/jpa/repository/Query; num elems: 1 elems: 
Annotation Element: kind: s name: value value: SELECT owner FROM Owner owner left join fetch owner.pets WHERE owner.id =:id

Annotation: type: Lorg/springframework/transaction/annotation/Transactional; num elems: 1 elems: 
Annotation Element: kind: Z name: readOnly value: 1

, Visibility Param Annotation: num params: 1 kind: 0
Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/repository/query/Param; num elems: 1 elems: 
Annotation Element: kind: s name: value value: id


]
164
165
175
70
154
55
54
|  |  |  |  |  |  |Owner
6
|  |  |  |  |  |  |owner
|  |  |  |  |  |ENTITY_PERSISTER_REF
159
108
|  |  |  |  |  |  |left
66
|  |  |  |  |  |  |fetch
6
|  |  |  |  |  |  |<gen:0>
151
45
84
|  |  |  |  |  |  |  |  |owner
84
|  |  |  |  |  |  |  |  |pets
|  |  |  |  |  |  |  |.
|  |  |  |  |  |  |PATH
|  |  |  |  |  |CommonTreeWalk.java: postOrder(): left
CommonTreeWalk.java: postOrder(): fetch
CommonTreeWalk.java: postOrder(): owner.pets
property-join
|  |  |  |  |PERSISTER_SPACE
|  |  |  |FROM
174
177
176
151
84
|  |  |  |  |  |  |  |owner
|  |  |  |  |  |  |PATH
|  |  |  |  |  |SELECT_ITEM
|  |  |  |  |SELECT_LIST
|  |  |  |SELECT
|  |  |SELECT_FROM
211
57
151
45
84
|  |  |  |  |  |  |owner
84
|  |  |  |  |  |  |id
|  |  |  |  |  |.
|  |  |  |  |PATH
130
|  |  |  |  |id
|  |  |  |=
|  |  |WHERE
|  |QUERY_SPEC
|QUERY
Utils.java: getRelExpForMethod(): Info collected by walk: 
CommonTreeWalk.java: printInfo: tableName = Owner
CommonTreeWalk.java: printInfo: tableAlias = owner
CommonTreeWalk.java: printInfo: conditionOp = =
CommonTreeWalk.java: printInfo: conditionLeftOperand = (PATH (. owner id))
CommonTreeWalk.java: printInfo: conditionRightOperand = id
CommonTreeWalk.java: printInfo: selectedExpr = owner
construct/Utils.java: parseObjectInvoke(): relExpFor method : interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
construct/Utils.java: parseObjectInvoke(): expr : Sel
| Cartesian
| | ClassRef(Owner)
| Equals
| | FieldRef(owner.id)
| | $r2=pets
construct/Utils.java: parseObjectInvoke(): relExp = Sel
| Cartesian
| | ClassRef(Owner)
| Equals
| | FieldRef(owner.id)
| | $r2
construct/Utils.java: parseObjectInvoke(): entityClass = org.springframework.samples.petclinic.owner.Owner
construct/Utils.java: parseObjectInvoke(): retType = org.springframework.samples.petclinic.owner.Owner
construct/Utils.java: parseObjectInvoke(): attributes = [address, city, telephone, firstName, lastName, id]
construct/Utils.java: parseObjectInvoke(): Mapped return.address to Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address
construct/Utils.java: parseObjectInvoke(): Mapped return.city to Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city
construct/Utils.java: parseObjectInvoke(): Mapped return.telephone to Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone
construct/Utils.java: parseObjectInvoke(): Mapped return.firstName to Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName
construct/Utils.java: parseObjectInvoke(): Mapped return.lastName to Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName
construct/Utils.java: parseObjectInvoke(): Mapped return.id to Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Owner
 fieldName= pets
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String address [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String city [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String telephone [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 02 13 00 00 32 00 00 13 00... (truncated))]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set pets [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
construct/Utils.java: parseObjectInvoke(): nested field type = org.springframework.samples.petclinic.owner.Pet
construct/Utils.java: parseObjectInvoke(): check = Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): leftType : org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: owner
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: constructDIR(): left type = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): method sig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2

~~~ return.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address

~~~ return.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city

~~~ return.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName

~~~ return.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id

~~~ return.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName

~~~ return.pets ~~~
Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| NullOp

~~~ return.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ return ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2

~~~ return.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address

~~~ return.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city

~~~ return.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName

~~~ return.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id

~~~ return.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName

~~~ return.pets ~~~
Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| NullOp

~~~ return.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [Owner.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: owners

]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findById
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Owner fields = [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String address>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>  type=Pet
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = owner, org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [owner.address, owner.city, owner.telephone, owner.pets, owner.firstName, owner.lastName, owner.id]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)]
DIRRegionAnalyzer.java: constructDIR(): callee = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
Flatten.java: getNestedFields(): LVAL TYPE: org.springframework.samples.petclinic.owner.Owner
Flatten.java: getNestedFields(): Type of sf: <org.springframework.samples.petclinic.owner.Owner: java.lang.String address> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: address

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
Flatten.java: getNestedFields(): Type of sf: <org.springframework.samples.petclinic.owner.Owner: java.lang.String city> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: city

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
Flatten.java: getNestedFields(): Type of sf: <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: telephone

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
Annotation: type: Ljavax/validation/constraints/Digits; num elems: 2 elems: 
Annotation Element: kind: I name: fraction value: 0
Annotation Element: kind: I name: integer value: 10

]
Flatten.java: getNestedFields(): Type of sf: <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = java.util.Set
Flatten.java: getNestedFields(): tags= [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
Flatten.java: getNestedFields(): check *ToMany sf: pets , type = java.util.Set
Flatten.java: getNestedFields(): Type of sf: <org.springframework.samples.petclinic.model.Person: java.lang.String firstName> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: first_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
Flatten.java: getNestedFields(): Type of sf: <org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: last_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
Flatten.java: getNestedFields(): Type of sf: <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id> = java.lang.Integer
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
Flatten.java: getNestedFields(): Id fields=id
Flatten.java: getNestedFields(): returning: [<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>]
DIRRegionAnalyzer.java: constructDIR(): check nestedFields=[<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>]
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.pets
DIRRegionAnalyzer.java: constructDIR(): baseEntity NAme=org.springframework.samples.petclinic.owner.Owner
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Owner
 fieldName= pets
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String address [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String city [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String telephone [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 02 13 00 00 32 00 00 13 00... (truncated))]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set pets [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
DIRRegionAnalyzer.java: constructDIR(): nestedField Entity= org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): From soot typeclass= org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): key= return.pets
 value= Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| NullOp
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Pet.ownerId
DIRRegionAnalyzer.java: constructDIR(): relExp = Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| NullOp
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): nested field name= pets
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Pet fields = [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>  type=PetType
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>  type=Owner
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>  type=Visit
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.Pet fields= [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 6
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: birth_date

Annotation: type: Lorg/springframework/format/annotation/DateTimeFormat; num elems: 1 elems: 
Annotation Element: kind: s name: pattern value: yyyy-MM-dd

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: typeId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=type
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= type
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= type
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.PetType
NRA.java: getJoinedColumn(): joined Column value=  typeId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.typeId
| PetType.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): nested field name= type
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.PetType
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.PetType fields = [<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.PetType fields= [<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 2
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: name

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.PetType.name), FieldRef(org.springframework.samples.petclinic.owner.PetType.id)]
NRA.java: genExprNra(): projectNode name: Pet.type=Pi
NRA.java: genExprNra(): nestexpr= Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: ownerId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=owner
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= owner
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.Owner owner [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= owner
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.Owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.ownerId
| Owner.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): nested field name= owner
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.Owner
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Owner fields = [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String address>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>  type=Pet
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.Owner fields= [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 7
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: address

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String city>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: city

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: telephone

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
Annotation: type: Ljavax/validation/constraints/Digits; num elems: 2 elems: 
Annotation Element: kind: I name: fraction value: 0
Annotation Element: kind: I name: integer value: 10

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=pets
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Owner
 fieldName= pets
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String address [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String city [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String telephone [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 02 13 00 00 32 00 00 13 00... (truncated))]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set pets [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Pet.ownerId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): nested field name= pets
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Pet fields = [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>  type=PetType
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>  type=Owner
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>  type=Visit
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.Pet fields= [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 6
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: birth_date

Annotation: type: Lorg/springframework/format/annotation/DateTimeFormat; num elems: 1 elems: 
Annotation Element: kind: s name: pattern value: yyyy-MM-dd

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: typeId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=type
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= type
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= type
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.PetType
NRA.java: getJoinedColumn(): joined Column value=  typeId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.typeId
| PetType.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: ownerId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=owner
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= owner
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.Owner owner [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= owner
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.Owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.ownerId
| Owner.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=visits
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= visits
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.Owner owner [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set visits [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.visit.Visit
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Visit.petId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: name

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate), FieldRef(org.springframework.samples.petclinic.owner.Pet.type), FieldRef(org.springframework.samples.petclinic.owner.Pet.owner), FieldRef(org.springframework.samples.petclinic.owner.Pet.visits), FieldRef(org.springframework.samples.petclinic.owner.Pet.name), FieldRef(org.springframework.samples.petclinic.owner.Pet.id)]
NRA.java: genExprNra(): projectNode name: Owner.pets=Pi
NRA.java: genExprNra(): nestexpr= Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | NullOp
| | NullOp
| | NullOp
| | name
| | id
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.Person: java.lang.String firstName>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: first_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: last_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.Owner.address), FieldRef(org.springframework.samples.petclinic.owner.Owner.city), FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), FieldRef(org.springframework.samples.petclinic.owner.Owner.pets), FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName), FieldRef(org.springframework.samples.petclinic.owner.Owner.id)]
NRA.java: genExprNra(): projectNode name: Pet.owner=Pi
NRA.java: genExprNra(): nestexpr= Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | name
| | | | id
| | firstName
| | lastName
| | id
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=visits
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= visits
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.Owner owner [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set visits [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.visit.Visit
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Visit.petId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): nested field name= visits
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.visit.Visit
NRA.java: processTableandFields: org.springframework.samples.petclinic.visit.Visit fields = [<org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>, <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>, <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): org.springframework.samples.petclinic.visit.Visit fields= [<org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>, <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>, <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 4
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: visit_date

Annotation: type: Lorg/springframework/format/annotation/DateTimeFormat; num elems: 1 elems: 
Annotation Element: kind: s name: pattern value: yyyy-MM-dd

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.visit.Visit: java.lang.String description>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: petId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.visit.Visit.date), FieldRef(org.springframework.samples.petclinic.visit.Visit.description), FieldRef(org.springframework.samples.petclinic.visit.Visit.petId), FieldRef(org.springframework.samples.petclinic.visit.Visit.id)]
NRA.java: genExprNra(): projectNode name: Pet.visits=Pi
NRA.java: genExprNra(): nestexpr= Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: name

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [org.springframework.samples.petclinic.owner.Owner~pets]
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate), FieldRef(org.springframework.samples.petclinic.owner.Pet.type), FieldRef(org.springframework.samples.petclinic.owner.Pet.owner), FieldRef(org.springframework.samples.petclinic.owner.Pet.visits), FieldRef(org.springframework.samples.petclinic.owner.Pet.name), FieldRef(org.springframework.samples.petclinic.owner.Pet.id)]
NRA.java: genExprNra(): projectNode name: Owner.pets=Pi
DIRRegionAnalyzer.java: constructDIR(): nested VeMap : 
DIRRegionAnalyzer.java: constructDIR(): key : return.pets
 value : 
 Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: constructDIR(): key = return.address
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address
DIRRegionAnalyzer.java: constructDIR(): key = return.city
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city
DIRRegionAnalyzer.java: constructDIR(): key = return.pets
DIRRegionAnalyzer.java: constructDIR(): val = Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
DIRRegionAnalyzer.java: constructDIR(): key = return.lastName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName
DIRRegionAnalyzer.java: constructDIR(): key = return.firstName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName
DIRRegionAnalyzer.java: constructDIR(): key = return.id
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2
DIRRegionAnalyzer.java: constructDIR(): key = return.telephone
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer) END
DIRRegionAnalyzer.java: constructDIR(): v1 access paths: [owner.address, owner.city, owner.telephone, owner.pets, owner.firstName, owner.lastName, owner.id]
DIRRegionAnalyzer.java: constructDIR(): key = owner.address
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.address
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
DIRRegionAnalyzer.java: constructDIR(): key = owner.city
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.city
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
DIRRegionAnalyzer.java: constructDIR(): key = owner.telephone
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.telephone
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
DIRRegionAnalyzer.java: constructDIR(): key = owner.pets
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.pets
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
DIRRegionAnalyzer.java: constructDIR(): key = owner.firstName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.firstName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
DIRRegionAnalyzer.java: constructDIR(): key = owner.lastName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
DIRRegionAnalyzer.java: constructDIR(): key = owner.id
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.id
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getPets
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
construct/Utils.java: parseObjectInvoke(): virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>
construct/Utils.java: parseObjectInvoke(): methodName = getPets
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getPets
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = new java.util.ArrayList, $r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>(), specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1), sortedPets = $r0, $r2 = new org.springframework.beans.support.MutableSortDefinition, specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1), staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2), $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets), return $r3]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.owner.Owner
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = new java.util.ArrayList
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r1 = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getPetsInternal
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
construct/Utils.java: parseObjectInvoke(): virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>
construct/Utils.java: parseObjectInvoke(): methodName = getPetsInternal
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.SequentialRegionN
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregions: [| IfThen
| | BasicBlock0
| | BasicBlock1
, | BasicBlock2]
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.IfThenRegion
DIRIfThenRegionAnalyzer.java: constructDIR(): headRegion: | BasicBlock0
DIRIfThenRegionAnalyzer.java: constructDIR(): trueRegion: | BasicBlock1
ARegion.java: analyze(): set cur method of analyzer to: getPetsInternal
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, $r2 = new java.util.HashSet, specialinvoke $r2.<java.util.HashSet: void <init>()>(), this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2, $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, return $r1]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.owner.Owner
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.pets
DIRRegionAnalyzer.java: constructDIR(): curUnit = if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()$r0 != null
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.pets
DIR.java: updateRegion(): update region entry: condition=NotEq
| this.pets
| NullOp
DIR.java: updateRegion(): update region entry: this=Self
~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


ARegion.java: analyze(): set cur method of analyzer to: getPetsInternal
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 1
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, $r2 = new java.util.HashSet, specialinvoke $r2.<java.util.HashSet: void <init>()>(), this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2, $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, return $r1]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r2 = new java.util.HashSet
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r2.<java.util.HashSet: void <init>()>()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r2.<java.util.HashSet: void <init>()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.util.HashSet: void <init>()

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): Mapping: this.pets -> BottomNode
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r2 ~~~
BottomNode

~~~ this.pets ~~~
BottomNode


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r2 ~~~
BottomNode

~~~ this.pets ~~~
BottomNode


DIR.java: updateRegion(): update region entry: this.pets=BottomNode
DIR.java: updateRegion(): update region entry: $r2=BottomNode
~~~ $r2 ~~~
BottomNode

~~~ this.pets ~~~
BottomNode


DIRIfThenRegionAnalyzer.java: constructDIR(): headDIR: ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


DIRIfThenRegionAnalyzer.java: constructDIR(): trueDIR: ~~~ $r2 ~~~
BottomNode

~~~ this.pets ~~~
BottomNode


analysis/Utils.java: extractCondition(): condVar: condition
analysis/Utils.java: extractCondition(): input dir (of headRegion): ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


DIRIfThenRegionAnalyzer.java: constructDIR(): condition: NotEq
| this.pets
| NullOp
DIRIfThenRegionAnalyzer.java: constructDIR(): condition after inversion: Equals
| this.pets
| NullOp
DIRIfThenRegionAnalyzer.java: constructDIR(): merging head with cond
analysis/Utils.java: mergeSeqDirs(): following dir domain: [this.pets, $r2]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {this.pets=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets, $r2=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2}
analysis/Utils.java: mergeSeqDirs(): key: this.pets
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.pets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.pets
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:this.pets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.pets
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: mergeSeqDirs(): key: $r2
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r2
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r2
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:this.pets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.pets
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): return
DIRIfThenRegionAnalyzer.java: constructDIR(): IfThenRegion: | IfThen
| | BasicBlock0
| | BasicBlock1

DIRIfThenRegionAnalyzer.java: constructDIR(): IfThenRegionDIR: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: this.pets=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIR.java: updateRegion(): update region entry: $r0=this.pets
DIR.java: updateRegion(): update region entry: condition=NotEq
| this.pets
| NullOp
DIR.java: updateRegion(): update region entry: $r2=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): following dir domain: [this, this.pets, $r0, condition, $r2]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {this=Self, this.pets=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets, $r0=this.pets, condition=NotEq
| this.pets
| NullOp, $r2=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2}
analysis/Utils.java: mergeSeqDirs(): key: this
analysis/Utils.java: mergeSeqDirs(): before resolution: Self
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Self
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: Self
analysis/Utils.java: mergeSeqDirs(): key: this.pets
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.pets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.pets
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:this.pets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.pets
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: mergeSeqDirs(): key: $r0
analysis/Utils.java: mergeSeqDirs(): before resolution: this.pets
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: this.pets
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: this.pets
analysis/Utils.java: mergeSeqDirs(): key: condition
analysis/Utils.java: mergeSeqDirs(): before resolution: NotEq
| this.pets
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: NotEq
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:this.pets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.pets
analysis/Utils.java: resolveTree(): out: NotEq
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: NotEq
| this.pets
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r2
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r2
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r2
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| this.pets
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:this.pets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.pets
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | IfThen
| | BasicBlock0
| | BasicBlock1

DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getPetsInternal
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 2
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.Owner, $r0 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, $r2 = new java.util.HashSet, specialinvoke $r2.<java.util.HashSet: void <init>()>(), this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets> = $r2, $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, return $r1]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r1 = this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r1 -> this.pets
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r1
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r1 ~~~
this.pets

~~~ return ~~~
this.pets


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r1 ~~~
this.pets

~~~ return ~~~
this.pets


DIR.java: updateRegion(): update region entry: $r1=this.pets
DIR.java: updateRegion(): update region entry: return=this.pets
~~~ $r1 ~~~
this.pets

~~~ return ~~~
this.pets


analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r1, return]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r1 ~~~
this.pets

~~~ return ~~~
this.pets


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r1=this.pets, return=this.pets}
analysis/Utils.java: mergeSeqDirs(): key: $r1
analysis/Utils.java: mergeSeqDirs(): before resolution: this.pets
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: this.pets
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: mergeSeqDirs(): key: return
analysis/Utils.java: mergeSeqDirs(): before resolution: this.pets
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: this.pets
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | BasicBlock2
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $r1 ~~~
this.pets

~~~ return ~~~
this.pets


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


{this.pets=BottomNode, $r0=this.pets, condition=NotEq
| this.pets
| NullOp, $r1=this.pets, $r2=BottomNode, this=Self, return=this.pets}
AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIR.java: updateRegion(): update region entry: this.pets=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIR.java: updateRegion(): update region entry: $r0=this.pets
DIR.java: updateRegion(): update region entry: condition=NotEq
| this.pets
| NullOp
DIR.java: updateRegion(): update region entry: $r1=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIR.java: updateRegion(): update region entry: $r2=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
AccessPath.java: isReturnTypeEntity(): check :java.util.Set
AccessPath.java: isReturnTypeEntity(): tags = [Signature: ()Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.owner.Pet
AccessPath.java: getCollectionEntityType(): virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
AccessPath.java: getCollectionEntityType(): [Signature: ()Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/owner/Pet
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): leftType : org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r1
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
AccessPath.java: isReturnTypeEntity(): check :java.util.Set
AccessPath.java: isReturnTypeEntity(): tags = [Signature: ()Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.owner.Pet
AccessPath.java: getCollectionEntityType(): virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
AccessPath.java: getCollectionEntityType(): [Signature: ()Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/owner/Pet
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): left type = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): java.util.Set
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.util.Set
DIRRegionAnalyzer.java: constructDIR(): method sig = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()=~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

, org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2

~~~ return.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address

~~~ return.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city

~~~ return.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName

~~~ return.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id

~~~ return.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName

~~~ return.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ return.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [Pet.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: pets

]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.address, this.city, this.telephone, this.pets, this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getPetsInternal
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: this
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.address, this.city, this.telephone, this.pets, this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.address
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.pets, $r0, condition, $r1, $r2, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.city
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.pets, $r0, condition, $r1, $r2, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.telephone
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.pets, $r0, condition, $r1, $r2, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.pets
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.pets, $r0, condition, $r1, $r2, this, return]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.address, this.city, this.telephone, this.pets, this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.pets, $r0, condition, $r1, $r2, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.pets, $r0, condition, $r1, $r2, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.pets, $r0, condition, $r1, $r2, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getPetsInternal, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: this
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.address, this.city, this.telephone, this.pets, this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Pet fields = [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>  type=PetType
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>  type=Owner
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>  type=Visit
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r1, org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r1.birthDate, $r1.type, $r1.type.name, $r1.type.id, $r1.owner, $r1.owner.address, $r1.owner.city, $r1.owner.telephone, $r1.owner.pets, $r1.owner.firstName, $r1.owner.lastName, $r1.owner.id, $r1.visits, $r1.name, $r1.id]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)]
DIRRegionAnalyzer.java: constructDIR(): callee = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
DIRRegionAnalyzer.java: constructDIR(): invokeExpr = virtualinvoke this.<org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()>()
DIRRegionAnalyzer.java: constructDIR(): return type collection
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()
DIRRegionAnalyzer.java: constructDIR(): key = this.pets
DIRRegionAnalyzer.java: constructDIR(): val = ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: constructDIR(): key = $r0
DIRRegionAnalyzer.java: constructDIR(): val = this.pets
DIRRegionAnalyzer.java: constructDIR(): key = condition
DIRRegionAnalyzer.java: constructDIR(): val = NotEq
| this.pets
| NullOp
DIRRegionAnalyzer.java: constructDIR(): key = $r1
DIRRegionAnalyzer.java: constructDIR(): val = ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: constructDIR(): key = $r2
DIRRegionAnalyzer.java: constructDIR(): val = ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2
DIRRegionAnalyzer.java: constructDIR(): key = this
DIRRegionAnalyzer.java: constructDIR(): val = Self
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal() END
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.util.ArrayList: void <init>(java.util.Collection)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = sortedPets = $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2, type(v1, v2) = ptr
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: sortedPets
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r0
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: []
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r2 = new org.springframework.beans.support.MutableSortDefinition
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r2.<org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)>("name", 1, 1)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.beans.support.MutableSortDefinition: void <init>(java.lang.String,boolean,boolean)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = staticinvoke <org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)>(sortedPets, $r2)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: sort
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.beans.support.PropertyComparator: void sort(java.util.List,org.springframework.beans.support.SortDefinition)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JStaticInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = unmodifiableList
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Collections: java.util.List unmodifiableList(java.util.List)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Collections: java.util.List unmodifiableList(java.util.List)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Collections: java.util.List unmodifiableList(java.util.List)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: unmodifiableList
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r3
Utils.java: getVarNode(): LinkedVariableBox($r3)
JAssignStmtCons.java: construct(): staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(sortedPets)
construct/Utils.java: parseInvokeExpr(): methodName = unmodifiableList
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Collections: java.util.List unmodifiableList(java.util.List)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Collections: java.util.List unmodifiableList(java.util.List)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Collections: java.util.List unmodifiableList(java.util.List)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: unmodifiableList
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r3
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r1=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIR.java: updateRegion(): update region entry: $r3=sortedPets
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=sortedPets
~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
AccessPath.java: isReturnTypeEntity(): check :java.util.List
AccessPath.java: isReturnTypeEntity(): tags = [Signature: ()Ljava/util/List<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.owner.Pet
AccessPath.java: getCollectionEntityType(): virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
AccessPath.java: getCollectionEntityType(): [Signature: ()Ljava/util/List<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/owner/Pet
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): leftType : org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r3
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
AccessPath.java: isReturnTypeEntity(): check :java.util.List
AccessPath.java: isReturnTypeEntity(): tags = [Signature: ()Ljava/util/List<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.owner.Pet
AccessPath.java: getCollectionEntityType(): virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
AccessPath.java: getCollectionEntityType(): [Signature: ()Ljava/util/List<Lorg/springframework/samples/petclinic/owner/Pet;>;]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/owner/Pet
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): left type = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): java.util.List
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.util.List
DIRRegionAnalyzer.java: constructDIR(): method sig = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()=~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self

, org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()=~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

, org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2

~~~ return.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address

~~~ return.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city

~~~ return.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName

~~~ return.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id

~~~ return.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName

~~~ return.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ return.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [Pet.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: pets

]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: sortedPets
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [owner]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.address, this.city, this.telephone, this.pets, this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: sortedPets
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getPets
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [owner]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: owner
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.address, this.city, this.telephone, this.pets, this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.address
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r1, $r3, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.city
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r1, $r3, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.telephone
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r1, $r3, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.pets
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r1, $r3, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r1, $r3, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r1, $r3, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r1, $r3, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getPets, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: owner
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.address, this.city, this.telephone, this.pets, this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Pet fields = [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>  type=PetType
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>  type=Owner
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>  type=Visit
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r3, org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r3.birthDate, $r3.type, $r3.type.name, $r3.type.id, $r3.owner, $r3.owner.address, $r3.owner.city, $r3.owner.telephone, $r3.owner.pets, $r3.owner.firstName, $r3.owner.lastName, $r3.owner.id, $r3.visits, $r3.name, $r3.id]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)]
DIRRegionAnalyzer.java: constructDIR(): callee = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
DIRRegionAnalyzer.java: constructDIR(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>()
DIRRegionAnalyzer.java: constructDIR(): return type collection
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()
DIRRegionAnalyzer.java: constructDIR(): key = $r1
DIRRegionAnalyzer.java: constructDIR(): val = ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIRRegionAnalyzer.java: constructDIR(): key = $r3
DIRRegionAnalyzer.java: constructDIR(): val = sortedPets
DIRRegionAnalyzer.java: constructDIR(): key = this
DIRRegionAnalyzer.java: constructDIR(): val = Self
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = sortedPets
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.Owner: java.util.List getPets() END
DIRRegionAnalyzer.java: constructDIR(): curUnit = l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = iterator
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.List: java.util.Iterator iterator()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.List: java.util.Iterator iterator()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.List: java.util.Iterator iterator()>
construct/Utils.java: parseObjectInvoke(): methodName = iterator
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.List: java.util.Iterator iterator()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): l4
Utils.java: getVarNode(): LinkedVariableBox(l4)
JAssignStmtCons.java: construct(): interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
construct/Utils.java: parseInvokeExpr(): methodName = iterator
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.List: java.util.Iterator iterator()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.List: java.util.Iterator iterator()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.List: java.util.Iterator iterator()>
construct/Utils.java: parseObjectInvoke(): methodName = iterator
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.List: java.util.Iterator iterator()
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: owner=Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
DIR.java: updateRegion(): update region entry: $r1=this.owners
DIR.java: updateRegion(): update region entry: $r2=ownerId
DIR.java: updateRegion(): update region entry: $r3=sortedPets
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: mav_view="owners/ownerDetails"
DIR.java: updateRegion(): update region entry: l4=InvokeMethod
| sortedPets
| Iterator()
DIR.java: updateRegion(): update region entry: owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
DIR.java: updateRegion(): update region entry: owner.address=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
DIR.java: updateRegion(): update region entry: owner.firstName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
DIR.java: updateRegion(): update region entry: owner.id=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
DIR.java: updateRegion(): update region entry: owner.city=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
DIR.java: updateRegion(): update region entry: owner.telephone=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
DIR.java: updateRegion(): update region entry: owner.lastName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): following dir domain: [owner, $r1, $r2, $r3, this, mav_view, l4, owner.pets, owner.address, owner.firstName, owner.id, owner.city, owner.telephone, owner.lastName]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {owner=Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId, $r1=this.owners, $r2=ownerId, $r3=sortedPets, this=Self, mav_view="owners/ownerDetails", l4=InvokeMethod
| sortedPets
| Iterator(), owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id, owner.address=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address, owner.firstName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName, owner.id=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id, owner.city=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city, owner.telephone=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone, owner.lastName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName}
analysis/Utils.java: mergeSeqDirs(): key: owner
analysis/Utils.java: mergeSeqDirs(): before resolution: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: mergeSeqDirs(): key: $r1
analysis/Utils.java: mergeSeqDirs(): before resolution: this.owners
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: this.owners
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: this.owners
analysis/Utils.java: mergeSeqDirs(): key: $r2
analysis/Utils.java: mergeSeqDirs(): before resolution: ownerId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: ownerId
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: ownerId
analysis/Utils.java: mergeSeqDirs(): key: $r3
analysis/Utils.java: mergeSeqDirs(): before resolution: sortedPets
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: sortedPets
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: sortedPets
analysis/Utils.java: mergeSeqDirs(): key: this
analysis/Utils.java: mergeSeqDirs(): before resolution: Self
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Self
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: Self
analysis/Utils.java: mergeSeqDirs(): key: mav_view
analysis/Utils.java: mergeSeqDirs(): before resolution: "owners/ownerDetails"
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: "owners/ownerDetails"
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: "owners/ownerDetails"
analysis/Utils.java: mergeSeqDirs(): key: l4
analysis/Utils.java: mergeSeqDirs(): before resolution: InvokeMethod
| sortedPets
| Iterator()
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: InvokeMethod
| sortedPets
| Iterator()
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: InvokeMethod
| sortedPets
| Iterator()
analysis/Utils.java: resolveTree(): i = 0 child of top:sortedPets
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Iterator()
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:FuncParams
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FuncParams
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Iterator()
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: sortedPets
analysis/Utils.java: resolveTree(): out: InvokeMethod
| sortedPets
| Iterator()
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: InvokeMethod
| sortedPets
| Iterator()
analysis/Utils.java: mergeSeqDirs(): key: owner.pets
analysis/Utils.java: mergeSeqDirs(): before resolution: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | NullOp
| | | | | NullOp
| | | | | NullOp
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | NullOp
| | | | | NullOp
| | | | | NullOp
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:birthDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:date
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:description
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: description
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: date
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Visit.petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | NullOp
| | | NullOp
| | | NullOp
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | NullOp
| | | NullOp
| | | NullOp
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | NullOp
| | NullOp
| | NullOp
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | NullOp
| | NullOp
| | NullOp
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| birthDate
| NullOp
| NullOp
| NullOp
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| birthDate
| NullOp
| NullOp
| NullOp
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:birthDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: birthDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.typeId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: PetType.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.typeId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: birthDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: mergeSeqDirs(): key: owner.address
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
analysis/Utils.java: mergeSeqDirs(): key: owner.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
analysis/Utils.java: mergeSeqDirs(): key: owner.id
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
analysis/Utils.java: mergeSeqDirs(): key: owner.city
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
analysis/Utils.java: mergeSeqDirs(): key: owner.telephone
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
analysis/Utils.java: mergeSeqDirs(): key: owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | BasicBlock0
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ this ~~~
Self


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
InvokeMethod
| sortedPets
| Iterator()

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.LoopRegion
DIRLoopRegionAnalyzer.java: constructDIR(): Analyzing loop head
ARegion.java: analyze(): set cur method of analyzer to: showOwner
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 1
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = hasNext
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Iterator: boolean hasNext()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Iterator: boolean hasNext()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Iterator: boolean hasNext()>
construct/Utils.java: parseObjectInvoke(): methodName = hasNext
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Iterator: boolean hasNext()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $z0
Utils.java: getVarNode(): LinkedVariableBox($z0)
JAssignStmtCons.java: construct(): interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
construct/Utils.java: parseInvokeExpr(): methodName = hasNext
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Iterator: boolean hasNext()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Iterator: boolean hasNext()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Iterator: boolean hasNext()>
construct/Utils.java: parseObjectInvoke(): methodName = hasNext
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Iterator: boolean hasNext()
DIRRegionAnalyzer.java: constructDIR(): curUnit = if $z0 == 0 goto virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner)
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()$z0 == 0
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $z0 ~~~
InvokeMethod
| l4
| HasNext()

~~~ condition ~~~
Equals
| InvokeMethod
| | l4
| | HasNext()
| 0


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $z0 ~~~
InvokeMethod
| l4
| HasNext()

~~~ condition ~~~
Equals
| InvokeMethod
| | l4
| | HasNext()
| 0


DIR.java: updateRegion(): update region entry: condition=Equals
| InvokeMethod
| | l4
| | HasNext()
| 0
DIR.java: updateRegion(): update region entry: $z0=InvokeMethod
| l4
| HasNext()
~~~ $z0 ~~~
InvokeMethod
| l4
| HasNext()

~~~ condition ~~~
Equals
| InvokeMethod
| | l4
| | HasNext()
| 0


DIRLoopRegionAnalyzer.java: constructDIR(): Analyzing loop body
ARegion.java: analyze(): set cur method of analyzer to: showOwner
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 2
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = next
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Iterator: java.lang.Object next()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Iterator: java.lang.Object next()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Iterator: java.lang.Object next()>
construct/Utils.java: parseObjectInvoke(): methodName = next
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Iterator: java.lang.Object next()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r5
Utils.java: getVarNode(): LinkedVariableBox($r5)
JAssignStmtCons.java: construct(): interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
construct/Utils.java: parseInvokeExpr(): methodName = next
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Iterator: java.lang.Object next()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Iterator: java.lang.Object next()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Iterator: java.lang.Object next()>
construct/Utils.java: parseObjectInvoke(): methodName = next
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Iterator: java.lang.Object next()
DIRRegionAnalyzer.java: constructDIR(): curUnit = pet = (org.springframework.samples.petclinic.owner.Pet) $r5
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JCastExpr
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = (type1) v2
DIRRegionAnalyzer.java: constructDIR(): type1: org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: constructDIR(): castExpr: (org.springframework.samples.petclinic.owner.Pet) $r5
DIRRegionAnalyzer.java: constructDIR(): v2: $r5
DIRRegionAnalyzer.java: constructDIR(): cur dir: {$r5=NextOp}
DIRRegionAnalyzer.java: constructDIR(): rightVar in dir: true
DIRRegionAnalyzer.java: constructDIR(): CASE: actual_iterator = (type1) it
DIRRegionAnalyzer.java: constructDIR(): rightVar's value in dir: NextOp
DIRRegionAnalyzer.java: constructDIR(): check : Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): check : Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): flattenedIterator = [pet.birthDate, pet.name, pet.id]
DIRRegionAnalyzer.java: constructDIR(): dir: {pet.type=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp, pet.birthDate=FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate), pet.owner.id=FieldRef(org.springframework.samples.petclinic.owner.Owner.id), pet.owner.telephone=FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), pet.type.id=FieldRef(org.springframework.samples.petclinic.owner.PetType.id), $r5=NextOp, pet.owner.address=FieldRef(org.springframework.samples.petclinic.owner.Owner.address), pet.owner=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp, pet.id=FieldRef(org.springframework.samples.petclinic.owner.Pet.id), pet.owner.firstName=FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), pet.type.name=FieldRef(org.springframework.samples.petclinic.owner.PetType.name), pet.owner.lastName=FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName), pet.owner.city=FieldRef(org.springframework.samples.petclinic.owner.Owner.city), pet.name=FieldRef(org.springframework.samples.petclinic.owner.Pet.name)}
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r6 -> this.visits
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getId
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
construct/Utils.java: parseObjectInvoke(): virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>
construct/Utils.java: parseObjectInvoke(): methodName = getId
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getId
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.model.BaseEntity, $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>, return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.model.BaseEntity
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.id
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.id
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=this.id
~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.Integer
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.Integer
DIRRegionAnalyzer.java: constructDIR(): case : caseCallToMethodWBodyRetPrim()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), v1 is primitive, foo is not a library method
DIRRegionAnalyzer.java: constructDIR(): v1: $r7
DIRRegionAnalyzer.java: constructDIR(): foo: <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getId
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [pet]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.model.BaseEntity
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: pet
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getId, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: pet
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.id]
DIRRegionAnalyzer.java: constructDIR(): methodSig: org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
DIRRegionAnalyzer.java: constructDIR(): FuncStackAnalyzer.funcDIRMap: {org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()=~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self

, org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()=~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

, org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()=~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self

, org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2

~~~ return.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address

~~~ return.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city

~~~ return.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName

~~~ return.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id

~~~ return.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName

~~~ return.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ return.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone

}
DIRRegionAnalyzer.java: constructDIR(): dir callee: ~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): retCalleeCloned: this.id
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.id
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [pet]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.id
DIRRegionAnalyzer.java: constructDIR(): after dag formals to actuals: pet.id
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findByPetId
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>
construct/Utils.java: parseObjectInvoke(): methodName = findByPetId
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)
construct/Utils.java: parseObjectInvoke(): Case : findBy
Utils.java: getRelExpForMethod(): getRelExpForMethod: interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
Utils.java: getRelExpForMethod(): actualargs = [$r7]
Utils.java: getRelExpForMethod(): methodInvoked = <org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>
Utils.java: getRelExpForMethod(): taglist: 
[Signature: (Ljava/lang/Integer;)Ljava/util/List<Lorg/springframework/samples/petclinic/visit/Visit;>;]
construct/Utils.java: parseObjectInvoke(): relExpFor method : interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
construct/Utils.java: parseObjectInvoke(): expr : null
DIRRegionAnalyzer.java: valIsRepository(): fpar val: $r6
DIRRegionAnalyzer.java: valIsRepository(): refType: org.springframework.samples.petclinic.visit.VisitRepository
DIRRegionAnalyzer.java: valIsRepository(): valClass: org.springframework.samples.petclinic.visit.VisitRepository
DIRRegionAnalyzer.java: valIsRepository(): ret: true
construct/Utils.java: parseObjectInvoke(): retTypeStr: java.util.List
construct/Utils.java: parseObjectInvoke(): retType = java.util.List
construct/Utils.java: parseObjectInvoke(): entityClass = java.util.List
construct/Utils.java: parseObjectInvoke(): table = org.springframework.samples.petclinic.visit.VisitRepository
construct/Utils.java: parseObjectInvoke(): check =Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | $r7
construct/Utils.java: parseObjectInvoke(): @Query not present, relnode = Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | $r7
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
AccessPath.java: isReturnTypeEntity(): check :java.util.List
AccessPath.java: isReturnTypeEntity(): tags = [Signature: (Ljava/lang/Integer;)Ljava/util/List<Lorg/springframework/samples/petclinic/visit/Visit;>;]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.visit.Visit
AccessPath.java: getCollectionEntityType(): interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
AccessPath.java: getCollectionEntityType(): [Signature: (Ljava/lang/Integer;)Ljava/util/List<Lorg/springframework/samples/petclinic/visit/Visit;>;]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/visit/Visit
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.visit.Visit
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.visit.Visit
DIRRegionAnalyzer.java: constructDIR(): leftType : org.springframework.samples.petclinic.visit.Visit
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r8
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
AccessPath.java: isReturnTypeEntity(): check :java.util.List
AccessPath.java: isReturnTypeEntity(): tags = [Signature: (Ljava/lang/Integer;)Ljava/util/List<Lorg/springframework/samples/petclinic/visit/Visit;>;]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.visit.Visit
AccessPath.java: getCollectionEntityType(): interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
AccessPath.java: getCollectionEntityType(): [Signature: (Ljava/lang/Integer;)Ljava/util/List<Lorg/springframework/samples/petclinic/visit/Visit;>;]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/visit/Visit
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.visit.Visit
DIRRegionAnalyzer.java: constructDIR(): left type = org.springframework.samples.petclinic.visit.Visit
DIRRegionAnalyzer.java: constructDIR(): java.util.List
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.util.List
DIRRegionAnalyzer.java: constructDIR(): method sig = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)=~~~ return ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | $r7

, org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()=~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self

, org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()=~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

, org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()=~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self

, org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2

~~~ return.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address

~~~ return.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city

~~~ return.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName

~~~ return.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id

~~~ return.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName

~~~ return.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ return.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ return ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | $r7


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [Visit.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: visits

]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | $r7
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.visit.Visit
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findByPetId
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: org.springframework.samples.petclinic.visit.Visit fields = [<org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>, <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>, <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r8, org.springframework.samples.petclinic.visit.Visit
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r8.date, $r8.description, $r8.petId, $r8.id]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer), org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)]
DIRRegionAnalyzer.java: constructDIR(): callee = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
DIRRegionAnalyzer.java: constructDIR(): invokeExpr = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7)
DIRRegionAnalyzer.java: constructDIR(): return type collection
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | $r7
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer) END
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: setVisitsInternal
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [visits, this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [$r8, pet]
ARegion.java: analyze(): set cur method of analyzer to: setVisitsInternal
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.Pet, visits := @parameter0: java.util.Collection, $r0 = new java.util.LinkedHashSet, specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits), this.<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits> = $r0, return]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.owner.Pet
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = visits := @parameter0: java.util.Collection
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = new java.util.LinkedHashSet
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(visits)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.util.LinkedHashSet: void <init>(java.util.Collection)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits> = $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): Mapping: this.visits -> visits
DIRRegionAnalyzer.java: constructDIR(): curUnit = return
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
visits

~~~ this ~~~
Self

~~~ this.visits ~~~
visits


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
visits

~~~ this ~~~
Self

~~~ this.visits ~~~
visits


DIR.java: updateRegion(): update region entry: $r0=visits
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: this.visits=visits
~~~ $r0 ~~~
visits

~~~ this ~~~
Self

~~~ this.visits ~~~
visits


DIRRegionAnalyzer.java: handleSideEffects(): ith formal: visits
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: java.util.Collection
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.owner.Pet
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: pet
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.birthDate, this.type, this.type.name, this.type.id, this.owner, this.owner.address, this.owner.city, this.owner.telephone, this.owner.pets, this.owner.firstName, this.owner.lastName, this.owner.id, this.visits, this.name, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.birthDate
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.type
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.type.name
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.type.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner.address
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner.city
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner.telephone
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner.pets
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.owner.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.visits
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: visits
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.Owner: java.util.List getPets(), org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal(), org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [visits, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r8, pet]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formal = visits, actual = $r8
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.birthDate, this.type, this.type.name, this.type.id, this.owner, this.owner.address, this.owner.city, this.owner.telephone, this.owner.pets, this.owner.firstName, this.owner.lastName, this.owner.id, this.visits, this.name, this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: visits
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.name
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, this.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = setVisitsInternal, [pet.visits]
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: visits
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r8
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive
DIRRegionAnalyzer.java: handleSideEffects(): fml: visits
DIRRegionAnalyzer.java: handleSideEffects(): actual arg (Soot Value): $r8
DIRRegionAnalyzer.java: handleSideEffects(): actualNode (Node constructed from value): $r8
DIRRegionAnalyzer.java: handleSideEffects(): formal = visits, actual = $r8
DIRRegionAnalyzer.java: handleSideEffects(): resolvedActual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive, Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: pet
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.birthDate, this.type, this.type.name, this.type.id, this.owner, this.owner.address, this.owner.city, this.owner.telephone, this.owner.pets, this.owner.firstName, this.owner.lastName, this.owner.id, this.visits, this.name, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRRegionAnalyzer.java: handleSideEffects(): for key = pet.visits
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: handleSideEffects(): after: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIRRegionAnalyzer.java: constructDIR(): curUnit = goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()]
DIRRegionAnalyzer.java: constructDIR(): GOTO stmt in seq region
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIR.java: updateRegion(): update region entry: pet.type=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp
DIR.java: updateRegion(): update region entry: pet.birthDate=FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)
DIR.java: updateRegion(): update region entry: pet.owner.id=FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
DIR.java: updateRegion(): update region entry: pet.owner.telephone=FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
DIR.java: updateRegion(): update region entry: pet.type.id=FieldRef(org.springframework.samples.petclinic.owner.PetType.id)
DIR.java: updateRegion(): update region entry: $r5=NextOp
DIR.java: updateRegion(): update region entry: pet.owner.address=FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
DIR.java: updateRegion(): update region entry: pet.owner=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp
DIR.java: updateRegion(): update region entry: $r6=this.visits
DIR.java: updateRegion(): update region entry: pet.id=FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIR.java: updateRegion(): update region entry: $r7=FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIR.java: updateRegion(): update region entry: pet.owner.firstName=FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
DIR.java: updateRegion(): update region entry: $r8=Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIR.java: updateRegion(): update region entry: pet.type.name=FieldRef(org.springframework.samples.petclinic.owner.PetType.name)
DIR.java: updateRegion(): update region entry: pet.owner.lastName=FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
DIR.java: updateRegion(): update region entry: pet.visits=Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)
DIR.java: updateRegion(): update region entry: pet.owner.city=FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
DIR.java: updateRegion(): update region entry: pet.name=FieldRef(org.springframework.samples.petclinic.owner.Pet.name)
~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
this.visits

~~~ $r7 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ $r8 ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)

~~~ pet.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.Pet.name)

~~~ pet.owner ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp

~~~ pet.owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ pet.owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ pet.owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ pet.owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ pet.owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ pet.owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ pet.type ~~~
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp

~~~ pet.type.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)

~~~ pet.type.name ~~~
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)

~~~ pet.visits ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id)


DIRLoopRegionAnalyzer.java: constructDIR(): Done with analyzing loop body
DIRLoopRegionAnalyzer.java: constructDIR(): bodyVEMap: {pet.type=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp, pet.birthDate=FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate), pet.owner.id=FieldRef(org.springframework.samples.petclinic.owner.Owner.id), pet.owner.telephone=FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), pet.type.id=FieldRef(org.springframework.samples.petclinic.owner.PetType.id), $r5=NextOp, pet.owner.address=FieldRef(org.springframework.samples.petclinic.owner.Owner.address), pet.owner=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp, $r6=this.visits, pet.id=FieldRef(org.springframework.samples.petclinic.owner.Pet.id), $r7=FieldRef(org.springframework.samples.petclinic.owner.Pet.id), pet.owner.firstName=FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), $r8=Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id), pet.type.name=FieldRef(org.springframework.samples.petclinic.owner.PetType.name), pet.owner.lastName=FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName), pet.visits=Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id), pet.owner.city=FieldRef(org.springframework.samples.petclinic.owner.Owner.city), pet.name=FieldRef(org.springframework.samples.petclinic.owner.Pet.name)}
DIRLoopRegionAnalyzer.java: constructDIR(): headVEMap: {condition=Equals
| InvokeMethod
| | l4
| | HasNext()
| 0, $z0=InvokeMethod
| l4
| HasNext()}
DIRLoopRegionAnalyzer.java: constructDIR(): headR: | BasicBlock1
DIRLoopRegionAnalyzer.java: getLoopingCol(): headDIR: ~~~ $z0 ~~~
InvokeMethod
| l4
| HasNext()

~~~ condition ~~~
Equals
| InvokeMethod
| | l4
| | HasNext()
| 0


DIRLoopRegionAnalyzer.java: constructDIR(): loopingVar: l4
DIRLoopRegionAnalyzer.java: constructDIR(): foldVars: [pet.type, pet.birthDate, pet.owner.id, pet.owner.telephone, pet.type.id, $r5, pet.owner.address, l4, pet.owner, $r6, pet.id, $r7, pet.owner.firstName, $r8, pet.type.name, pet.owner.lastName, pet.visits, pet.owner.city, pet.name]
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.type
[$r0, $r2]
Body_Expr:
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.birthDate
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.owner.id
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.owner.telephone
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.type.id
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.PetType.id)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r5
[$r0, $r2]
Body_Expr:
NextOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.owner.address
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: l4
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.owner
[$r0, $r2]
Body_Expr:
Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r6
[$r0, $r2]
Body_Expr:
this.visits
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.id
[$r0, $r2]
Body_Expr:
id(org.springframework.samples.petclinic.owner.Pet.id)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r7
[$r0, $r2]
Body_Expr:
id(org.springframework.samples.petclinic.owner.Pet.id)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.owner.firstName
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r8
[$r0, $r2]
Body_Expr:
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.type.name
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.PetType.name)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.owner.lastName
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.visits
[$r0, $r2]
Body_Expr:
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.owner.city
[$r0, $r2]
Body_Expr:
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: pet.name
[$r0, $r2]
Body_Expr:
name(org.springframework.samples.petclinic.owner.Pet.name)
DIRLoopRegionAnalyzer.java: constructDIR(): loopDIR: {pet.type=UnknownNode, pet.birthDate=UnknownNode, pet.owner.id=UnknownNode, pet.owner.telephone=UnknownNode, pet.type.id=UnknownNode, $r5=UnknownNode, pet.owner.address=UnknownNode, pet.owner=UnknownNode, $r6=UnknownNode, pet.id=UnknownNode, $r7=UnknownNode, pet.owner.firstName=UnknownNode, $r8=UnknownNode, owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id), pet.type.name=UnknownNode, pet.owner.lastName=UnknownNode, pet.visits=UnknownNode, pet.owner.city=UnknownNode, pet.name=UnknownNode}
{}
AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode


DIR.java: updateRegion(): update region entry: pet.type=UnknownNode
DIR.java: updateRegion(): update region entry: pet.birthDate=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.id=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.telephone=UnknownNode
DIR.java: updateRegion(): update region entry: pet.type.id=UnknownNode
DIR.java: updateRegion(): update region entry: $r5=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.address=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner=UnknownNode
DIR.java: updateRegion(): update region entry: $r6=UnknownNode
DIR.java: updateRegion(): update region entry: pet.id=UnknownNode
DIR.java: updateRegion(): update region entry: $r7=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.firstName=UnknownNode
DIR.java: updateRegion(): update region entry: $r8=UnknownNode
DIR.java: updateRegion(): update region entry: owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
DIR.java: updateRegion(): update region entry: pet.type.name=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.lastName=UnknownNode
DIR.java: updateRegion(): update region entry: pet.visits=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.city=UnknownNode
DIR.java: updateRegion(): update region entry: pet.name=UnknownNode
~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode


{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)}
{owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)}
{owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)}
{owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)}
{owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)}
{owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)}
analysis/Utils.java: mergeSeqDirs(): following dir domain: [pet.type, pet.birthDate, pet.owner.id, pet.owner.telephone, pet.type.id, $r5, pet.owner.address, pet.owner, $r6, pet.id, $r7, pet.owner.firstName, $r8, owner.pets, pet.type.name, pet.owner.lastName, pet.visits, pet.owner.city, pet.name]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {pet.type=UnknownNode, pet.birthDate=UnknownNode, pet.owner.id=UnknownNode, pet.owner.telephone=UnknownNode, pet.type.id=UnknownNode, $r5=UnknownNode, pet.owner.address=UnknownNode, pet.owner=UnknownNode, $r6=UnknownNode, pet.id=UnknownNode, $r7=UnknownNode, pet.owner.firstName=UnknownNode, $r8=UnknownNode, owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id), pet.type.name=UnknownNode, pet.owner.lastName=UnknownNode, pet.visits=UnknownNode, pet.owner.city=UnknownNode, pet.name=UnknownNode}
analysis/Utils.java: mergeSeqDirs(): key: pet.type
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.birthDate
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.owner.id
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.owner.telephone
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.type.id
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r5
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.owner.address
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.owner
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r6
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.id
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r7
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.owner.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r8
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: owner.pets
analysis/Utils.java: mergeSeqDirs(): before resolution: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | NullOp
| | | | | NullOp
| | | | | NullOp
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
| Sel
| | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | Equals
| | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | id(org.springframework.samples.petclinic.owner.Pet.id)
| name(org.springframework.samples.petclinic.owner.Pet.name)
| id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | NullOp
| | | | | NullOp
| | | | | NullOp
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
| Sel
| | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | Equals
| | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | id(org.springframework.samples.petclinic.owner.Pet.id)
| name(org.springframework.samples.petclinic.owner.Pet.name)
| id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): i = 0 child of top:birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:name(org.springframework.samples.petclinic.owner.Pet.name)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name(org.springframework.samples.petclinic.owner.Pet.name)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | NullOp
| | | NullOp
| | | NullOp
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | NullOp
| | | NullOp
| | | NullOp
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | NullOp
| | NullOp
| | NullOp
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | NullOp
| | NullOp
| | NullOp
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| birthDate
| NullOp
| NullOp
| NullOp
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| birthDate
| NullOp
| NullOp
| NullOp
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:birthDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: birthDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.typeId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: PetType.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.typeId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(owner.id)
| ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): out: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: mergeSeqDirs(): key: pet.type.name
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.visits
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.owner.city
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: pet.name
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | WhileLoop
| | BasicBlock1
| | BasicBlock2

DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: showOwner
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock3
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 3
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, ownerId := @parameter0: int, $r0 = new org.springframework.web.servlet.ModelAndView, specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails"), mav = $r0, $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId), owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2), $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>(), l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>(), $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>(), if $z0 == 0 goto virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), pet = (org.springframework.samples.petclinic.owner.Pet) $r5, $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>, $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>(), $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7), virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8), goto [?= $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()], virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner), return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner)
DIRRegionAnalyzer.java: constructDIR(): Model Add Attribute Statement
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: __modelattribute__owner
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: owner
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [Owner.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: owners

]
AccessPath.java: replaceBase(): input access path: __modelattribute__owner.address
AccessPath.java: replaceBase(): replacement of base: owner
AccessPath.java: replaceBase(): input access path: __modelattribute__owner.city
AccessPath.java: replaceBase(): replacement of base: owner
AccessPath.java: replaceBase(): input access path: __modelattribute__owner.telephone
AccessPath.java: replaceBase(): replacement of base: owner
AccessPath.java: replaceBase(): input access path: __modelattribute__owner.pets
AccessPath.java: replaceBase(): replacement of base: owner
AccessPath.java: replaceBase(): input access path: __modelattribute__owner.firstName
AccessPath.java: replaceBase(): replacement of base: owner
AccessPath.java: replaceBase(): input access path: __modelattribute__owner.lastName
AccessPath.java: replaceBase(): replacement of base: owner
AccessPath.java: replaceBase(): input access path: __modelattribute__owner.id
AccessPath.java: replaceBase(): replacement of base: owner
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: return
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r0
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: []
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock3
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ __modelattribute__owner ~~~
owner

~~~ __modelattribute__owner.address ~~~
owner.address

~~~ __modelattribute__owner.city ~~~
owner.city

~~~ __modelattribute__owner.firstName ~~~
owner.firstName

~~~ __modelattribute__owner.id ~~~
owner.id

~~~ __modelattribute__owner.lastName ~~~
owner.lastName

~~~ __modelattribute__owner.pets ~~~
owner.pets

~~~ __modelattribute__owner.telephone ~~~
owner.telephone

~~~ return ~~~
$r0


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ __modelattribute__owner ~~~
owner

~~~ __modelattribute__owner.address ~~~
owner.address

~~~ __modelattribute__owner.city ~~~
owner.city

~~~ __modelattribute__owner.firstName ~~~
owner.firstName

~~~ __modelattribute__owner.id ~~~
owner.id

~~~ __modelattribute__owner.lastName ~~~
owner.lastName

~~~ __modelattribute__owner.pets ~~~
owner.pets

~~~ __modelattribute__owner.telephone ~~~
owner.telephone

~~~ return ~~~
$r0


DIR.java: updateRegion(): update region entry: __modelattribute__owner.id=owner.id
DIR.java: updateRegion(): update region entry: __modelattribute__owner.lastName=owner.lastName
DIR.java: updateRegion(): update region entry: __modelattribute__owner.pets=owner.pets
DIR.java: updateRegion(): update region entry: __modelattribute__owner.firstName=owner.firstName
DIR.java: updateRegion(): update region entry: __modelattribute__owner=owner
DIR.java: updateRegion(): update region entry: __modelattribute__owner.city=owner.city
DIR.java: updateRegion(): update region entry: __modelattribute__owner.address=owner.address
DIR.java: updateRegion(): update region entry: __modelattribute__owner.telephone=owner.telephone
DIR.java: updateRegion(): update region entry: return=$r0
~~~ __modelattribute__owner ~~~
owner

~~~ __modelattribute__owner.address ~~~
owner.address

~~~ __modelattribute__owner.city ~~~
owner.city

~~~ __modelattribute__owner.firstName ~~~
owner.firstName

~~~ __modelattribute__owner.id ~~~
owner.id

~~~ __modelattribute__owner.lastName ~~~
owner.lastName

~~~ __modelattribute__owner.pets ~~~
owner.pets

~~~ __modelattribute__owner.telephone ~~~
owner.telephone

~~~ return ~~~
$r0


analysis/Utils.java: mergeSeqDirs(): following dir domain: [__modelattribute__owner.id, __modelattribute__owner.lastName, __modelattribute__owner.pets, __modelattribute__owner.firstName, __modelattribute__owner, __modelattribute__owner.city, __modelattribute__owner.address, __modelattribute__owner.telephone, return]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ __modelattribute__owner ~~~
owner

~~~ __modelattribute__owner.address ~~~
owner.address

~~~ __modelattribute__owner.city ~~~
owner.city

~~~ __modelattribute__owner.firstName ~~~
owner.firstName

~~~ __modelattribute__owner.id ~~~
owner.id

~~~ __modelattribute__owner.lastName ~~~
owner.lastName

~~~ __modelattribute__owner.pets ~~~
owner.pets

~~~ __modelattribute__owner.telephone ~~~
owner.telephone

~~~ return ~~~
$r0


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {__modelattribute__owner.id=owner.id, __modelattribute__owner.lastName=owner.lastName, __modelattribute__owner.pets=owner.pets, __modelattribute__owner.firstName=owner.firstName, __modelattribute__owner=owner, __modelattribute__owner.city=owner.city, __modelattribute__owner.address=owner.address, __modelattribute__owner.telephone=owner.telephone, return=$r0}
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner.id
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner.id
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner.lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner.pets
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.pets
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner.pets
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner.firstName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner
analysis/Utils.java: mergeSeqDirs(): before resolution: owner
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner.city
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.city
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner.city
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner.address
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.address
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner.address
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__owner.telephone
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.telephone
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: owner.telephone
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
analysis/Utils.java: mergeSeqDirs(): key: return
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): in: $r0
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: resolveTree(): out: this.pets
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: this.pets
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ __modelattribute__owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ __modelattribute__owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ __modelattribute__owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ __modelattribute__owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ __modelattribute__owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ __modelattribute__owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ __modelattribute__owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ __modelattribute__owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | BasicBlock3
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ __modelattribute__owner ~~~
owner

~~~ __modelattribute__owner.address ~~~
owner.address

~~~ __modelattribute__owner.city ~~~
owner.city

~~~ __modelattribute__owner.firstName ~~~
owner.firstName

~~~ __modelattribute__owner.id ~~~
owner.id

~~~ __modelattribute__owner.lastName ~~~
owner.lastName

~~~ __modelattribute__owner.pets ~~~
owner.pets

~~~ __modelattribute__owner.telephone ~~~
owner.telephone

~~~ return ~~~
$r0


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ __modelattribute__owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ __modelattribute__owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ __modelattribute__owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ __modelattribute__owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ __modelattribute__owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ __modelattribute__owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ __modelattribute__owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ __modelattribute__owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ __modelattribute__owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ __modelattribute__owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ __modelattribute__owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ __modelattribute__owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ __modelattribute__owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ __modelattribute__owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ __modelattribute__owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ __modelattribute__owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


{pet.owner.id=FieldRef(org.springframework.samples.petclinic.owner.Owner.id), __modelattribute__owner.lastName=owner.lastName, mav_view="owners/ownerDetails", l4=InvokeMethod
| sortedPets
| Iterator(), pet.owner=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| NullOp, pet.owner.firstName=FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id), pet.type.name=FieldRef(org.springframework.samples.petclinic.owner.PetType.name), owner.address=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address, __modelattribute__owner.pets=owner.pets, __modelattribute__owner.firstName=owner.firstName, owner.id=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id, pet.visits=Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id), __modelattribute__owner=owner, $z0=InvokeMethod
| l4
| HasNext(), __modelattribute__owner.address=owner.address, owner.telephone=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone, this.pets=BottomNode, owner=Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId, pet.type=Join
| NextOp
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| NullOp, $r0=this.pets, pet.birthDate=FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate), $r1=this.pets, $r2=BottomNode, pet.owner.telephone=FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), $r3=sortedPets, pet.type.id=FieldRef(org.springframework.samples.petclinic.owner.PetType.id), $r5=NextOp, pet.owner.address=FieldRef(org.springframework.samples.petclinic.owner.Owner.address), this=Self, $r6=this.visits, __modelattribute__owner.city=owner.city, pet.id=FieldRef(org.springframework.samples.petclinic.owner.Pet.id), $r7=FieldRef(org.springframework.samples.petclinic.owner.Pet.id), $r8=Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | FieldRef(org.springframework.samples.petclinic.owner.Pet.id), __modelattribute__owner.telephone=owner.telephone, __modelattribute__owner.id=owner.id, condition=NotEq
| this.pets
| NullOp, owner.firstName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName, pet.owner.lastName=FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName), owner.city=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city, pet.owner.city=FieldRef(org.springframework.samples.petclinic.owner.Owner.city), pet.name=FieldRef(org.springframework.samples.petclinic.owner.Pet.name), return=this.pets, owner.lastName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName, this.visits=visits}
AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ __modelattribute__owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ __modelattribute__owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ __modelattribute__owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ __modelattribute__owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ __modelattribute__owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ __modelattribute__owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ __modelattribute__owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ __modelattribute__owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


DIR.java: updateRegion(): update region entry: pet.owner.id=UnknownNode
DIR.java: updateRegion(): update region entry: __modelattribute__owner.lastName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
DIR.java: updateRegion(): update region entry: mav_view="owners/ownerDetails"
DIR.java: updateRegion(): update region entry: l4=sortedPets
DIR.java: updateRegion(): update region entry: pet.owner=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.firstName=UnknownNode
DIR.java: updateRegion(): update region entry: owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
DIR.java: updateRegion(): update region entry: pet.type.name=UnknownNode
DIR.java: updateRegion(): update region entry: owner.address=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
DIR.java: updateRegion(): update region entry: __modelattribute__owner.pets=Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
DIR.java: updateRegion(): update region entry: __modelattribute__owner.firstName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
DIR.java: updateRegion(): update region entry: owner.id=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
DIR.java: updateRegion(): update region entry: pet.visits=UnknownNode
DIR.java: updateRegion(): update region entry: __modelattribute__owner=Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
DIR.java: updateRegion(): update region entry: __modelattribute__owner.address=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
DIR.java: updateRegion(): update region entry: owner.telephone=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
DIR.java: updateRegion(): update region entry: this.pets=?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
DIR.java: updateRegion(): update region entry: owner=Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
DIR.java: updateRegion(): update region entry: pet.type=UnknownNode
DIR.java: updateRegion(): update region entry: $r0=this.pets
DIR.java: updateRegion(): update region entry: pet.birthDate=UnknownNode
DIR.java: updateRegion(): update region entry: $r1=this.owners
DIR.java: updateRegion(): update region entry: $r2=ownerId
DIR.java: updateRegion(): update region entry: pet.owner.telephone=UnknownNode
DIR.java: updateRegion(): update region entry: $r3=sortedPets
DIR.java: updateRegion(): update region entry: pet.type.id=UnknownNode
DIR.java: updateRegion(): update region entry: $r5=UnknownNode
DIR.java: updateRegion(): update region entry: pet.owner.address=UnknownNode
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $r6=UnknownNode
DIR.java: updateRegion(): update region entry: __modelattribute__owner.city=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
DIR.java: updateRegion(): update region entry: pet.id=UnknownNode
DIR.java: updateRegion(): update region entry: $r7=UnknownNode
DIR.java: updateRegion(): update region entry: $r8=UnknownNode
DIR.java: updateRegion(): update region entry: __modelattribute__owner.telephone=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
DIR.java: updateRegion(): update region entry: __modelattribute__owner.id=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
DIR.java: updateRegion(): update region entry: condition=NotEq
| this.pets
| NullOp
DIR.java: updateRegion(): update region entry: owner.firstName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
DIR.java: updateRegion(): update region entry: pet.owner.lastName=UnknownNode
DIR.java: updateRegion(): update region entry: owner.city=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
DIR.java: updateRegion(): update region entry: pet.owner.city=UnknownNode
DIR.java: updateRegion(): update region entry: pet.name=UnknownNode
DIR.java: updateRegion(): update region entry: return=this.pets
DIR.java: updateRegion(): update region entry: owner.lastName=Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ __modelattribute__owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ __modelattribute__owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ __modelattribute__owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ __modelattribute__owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ __modelattribute__owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ __modelattribute__owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ __modelattribute__owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ __modelattribute__owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


Resultant dag : ~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
ownerId

~~~ $r3 ~~~
sortedPets

~~~ $r5 ~~~
UnknownNode

~~~ $r6 ~~~
UnknownNode

~~~ $r7 ~~~
UnknownNode

~~~ $r8 ~~~
UnknownNode

~~~ __modelattribute__owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ __modelattribute__owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ __modelattribute__owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ __modelattribute__owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ __modelattribute__owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ __modelattribute__owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ __modelattribute__owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ __modelattribute__owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ l4 ~~~
sortedPets

~~~ mav_view ~~~
"owners/ownerDetails"

~~~ owner ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

~~~ owner.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

~~~ owner.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

~~~ owner.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

~~~ owner.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

~~~ owner.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

~~~ owner.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

~~~ owner.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

~~~ pet.birthDate ~~~
UnknownNode

~~~ pet.id ~~~
UnknownNode

~~~ pet.name ~~~
UnknownNode

~~~ pet.owner ~~~
UnknownNode

~~~ pet.owner.address ~~~
UnknownNode

~~~ pet.owner.city ~~~
UnknownNode

~~~ pet.owner.firstName ~~~
UnknownNode

~~~ pet.owner.id ~~~
UnknownNode

~~~ pet.owner.lastName ~~~
UnknownNode

~~~ pet.owner.telephone ~~~
UnknownNode

~~~ pet.type ~~~
UnknownNode

~~~ pet.type.id ~~~
UnknownNode

~~~ pet.type.name ~~~
UnknownNode

~~~ pet.visits ~~~
UnknownNode

~~~ return ~~~
this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets


final FuncStackAnalyzer3 = 
{org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)=~~~ return ~~~
Sel
| ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| Equals
| | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | $r7

, org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()=~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r3 ~~~
sortedPets

~~~ return ~~~
sortedPets

~~~ this ~~~
Self

, org.springframework.samples.petclinic.owner.Owner: java.util.Set getPetsInternal()=~~~ $r0 ~~~
this.pets

~~~ $r1 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ $r2 ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| $r2

~~~ condition ~~~
NotEq
| this.pets
| NullOp

~~~ return ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

~~~ this ~~~
Self

~~~ this.pets ~~~
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

, org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()=~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self

, org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)=~~~ $r0 ~~~
visits

~~~ this ~~~
Self

~~~ this.visits ~~~
visits

, org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | $r2

~~~ return.address ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| address

~~~ return.city ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| city

~~~ return.firstName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| firstName

~~~ return.id ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| id

~~~ return.lastName ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| lastName

~~~ return.pets ~~~
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id

~~~ return.telephone ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | $r2
| telephone

}
FuncStackAnalyzer.java: constructDIRForStack(): Printing veMap for method: org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)
FuncStackAnalyzer.java: constructDIRForStack(): VEMap Num Entries: 44
FuncStackAnalyzer.java: constructDIRForStack(): key set of ve map of root function: [pet.owner.id, __modelattribute__owner.lastName, mav_view, l4, pet.owner, pet.owner.firstName, owner.pets, pet.type.name, owner.address, __modelattribute__owner.pets, __modelattribute__owner.firstName, owner.id, pet.visits, __modelattribute__owner, __modelattribute__owner.address, owner.telephone, this.pets, owner, pet.type, $r0, pet.birthDate, $r1, $r2, pet.owner.telephone, $r3, pet.type.id, $r5, pet.owner.address, this, $r6, __modelattribute__owner.city, pet.id, $r7, $r8, __modelattribute__owner.telephone, __modelattribute__owner.id, condition, owner.firstName, pet.owner.lastName, owner.city, pet.owner.city, pet.name, return, owner.lastName]
Final veMap of pet.owner.id = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.owner.id
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner.lastName = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner.lastName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of mav_view = 
"owners/ownerDetails"
SavePostProcess.java: SavePostProcess(): repo varnode: mav_view
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of l4 = 
sortedPets
SavePostProcess.java: SavePostProcess(): repo varnode: l4
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.owner = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.owner
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.owner.firstName = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.owner.firstName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.pets = 
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
SavePostProcess.java: SavePostProcess(): repo varnode: owner.pets
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.type.name = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.type.name
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.address = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
SavePostProcess.java: SavePostProcess(): repo varnode: owner.address
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner.pets = 
Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner.pets
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner.firstName = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner.firstName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.id = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
SavePostProcess.java: SavePostProcess(): repo varnode: owner.id
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.visits = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.visits
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner = 
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner.address = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner.address
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.telephone = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
SavePostProcess.java: SavePostProcess(): repo varnode: owner.telephone
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of this.pets = 
?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets
SavePostProcess.java: SavePostProcess(): repo varnode: this.pets
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner = 
Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId
SavePostProcess.java: SavePostProcess(): repo varnode: owner
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.type = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.type
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r0 = 
this.pets
SavePostProcess.java: SavePostProcess(): repo varnode: $r0
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.birthDate = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.birthDate
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r1 = 
this.owners
SavePostProcess.java: SavePostProcess(): repo varnode: $r1
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r2 = 
ownerId
SavePostProcess.java: SavePostProcess(): repo varnode: $r2
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.owner.telephone = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.owner.telephone
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r3 = 
sortedPets
SavePostProcess.java: SavePostProcess(): repo varnode: $r3
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.type.id = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.type.id
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r5 = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: $r5
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.owner.address = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.owner.address
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of this = 
Self
SavePostProcess.java: SavePostProcess(): repo varnode: this
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r6 = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: $r6
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner.city = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner.city
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.id = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.id
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r7 = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: $r7
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r8 = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: $r8
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner.telephone = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner.telephone
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__owner.id = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__owner.id
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of condition = 
NotEq
| this.pets
| NullOp
SavePostProcess.java: SavePostProcess(): repo varnode: condition
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.firstName = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName
SavePostProcess.java: SavePostProcess(): repo varnode: owner.firstName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.owner.lastName = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.owner.lastName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.city = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city
SavePostProcess.java: SavePostProcess(): repo varnode: owner.city
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.owner.city = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.owner.city
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of pet.name = 
UnknownNode
SavePostProcess.java: SavePostProcess(): repo varnode: pet.name
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of return = 
this.pets
SavePostProcess.java: SavePostProcess(): repo varnode: return
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.lastName = 
Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName
SavePostProcess.java: SavePostProcess(): repo varnode: owner.lastName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
key: pet.owner.id
value: UnknownNode

key: __modelattribute__owner.lastName
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName

key: mav_view
value: "owners/ownerDetails"

key: l4
value: sortedPets

key: pet.owner
value: UnknownNode

key: pet.owner.firstName
value: UnknownNode

key: owner.pets
value: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

key: pet.type.name
value: UnknownNode

key: owner.address
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

key: __modelattribute__owner.pets
value: Owner.pets=Pi
| Join
| | Sel
| | | Cartesian
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | FieldRef(owner.id)
| | | | ownerId
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate(org.springframework.samples.petclinic.owner.Pet.birthDate)
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Sel
| | | ClassRef(org.springframework.samples.petclinic.visit.VisitRepository)
| | | Equals
| | | | FieldRef(org.springframework.samples.petclinic.visit.VisitRepository.PetId)
| | | | id(org.springframework.samples.petclinic.owner.Pet.id)
| | name(org.springframework.samples.petclinic.owner.Pet.name)
| | id(org.springframework.samples.petclinic.owner.Pet.id)

key: __modelattribute__owner.firstName
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

key: owner.id
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

key: pet.visits
value: UnknownNode

key: __modelattribute__owner
value: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

key: __modelattribute__owner.address
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| address

key: owner.telephone
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

key: this.pets
value: ?
| Equals
| | this.pets
| | NullOp
| BottomNode
| this.pets

key: owner
value: Sel
| Cartesian
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | FieldRef(owner.id)
| | ownerId

key: pet.type
value: UnknownNode

key: $r0
value: this.pets

key: pet.birthDate
value: UnknownNode

key: $r1
value: this.owners

key: $r2
value: ownerId

key: pet.owner.telephone
value: UnknownNode

key: $r3
value: sortedPets

key: pet.type.id
value: UnknownNode

key: $r5
value: UnknownNode

key: pet.owner.address
value: UnknownNode

key: this
value: Self

key: $r6
value: UnknownNode

key: __modelattribute__owner.city
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

key: pet.id
value: UnknownNode

key: $r7
value: UnknownNode

key: $r8
value: UnknownNode

key: __modelattribute__owner.telephone
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| telephone

key: __modelattribute__owner.id
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| id

key: condition
value: NotEq
| this.pets
| NullOp

key: owner.firstName
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| firstName

key: pet.owner.lastName
value: UnknownNode

key: owner.city
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| city

key: pet.owner.city
value: UnknownNode

key: pet.name
value: UnknownNode

key: return
value: this.pets

key: owner.lastName
value: Pi
| Sel
| | Cartesian
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | FieldRef(owner.id)
| | | ownerId
| lastName





























Tables and Fields :

Owner fields = 
{pets=Pet, firstName=FieldData, lastName=FieldData, address=FieldData, city=FieldData, telephone=FieldData, id=FieldData, ownerId=FieldData}

Visit fields = 
{date=FieldData, petId=FieldData, description=FieldData, id=FieldData}

Pet fields = 
{owner=Owner, visits=Visit, petId=FieldData, name=FieldData, typeId=FieldData, id=FieldData, type=PetType, ownerId=FieldData, birthDate=FieldData}

PetType fields = 
{name=FieldData, id=FieldData}

{}
{}
 Node contains nested fields
u_Join___Sel_____Carte18u_Sel___Cartesian_____19u_idu_ownerId
u_Join___Sel_____Carte18
u_Join___Alpha___Class22
u_Join___Alpha___Class24
u_Join___Alpha___Class26
Time elapsed: 1.974 seconds
