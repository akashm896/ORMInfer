EqSQLDriverTest.java: main(): Got the bench-dir option value: target/classes
EqSQLDriverTest.java: main(): Got the controllersig option value: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
github/Utils.java: getAbsBenchDir(): pwd: /home/akash/Study/3rd sem/Project/current use/NRAandLoops
starttime, test: 1679893396469
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: java.lang.Object is a phantom class!
Warning: java.util.Arrays is a phantom class!
Warning: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder is a phantom class!
Warning: org.springframework.beans.factory.annotation.Autowired is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: org.springframework.ui.Model is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: java.util.Locale is a phantom class!
Warning: org.springframework.security.core.context.SecurityContextHolder is a phantom class!
Warning: org.springframework.web.bind.annotation.PostMapping is a phantom class!
Warning: java.lang.CharSequence is a phantom class!
Warning: java.util.Collection is a phantom class!
Warning: java.util.Set is a phantom class!
Warning: org.springframework.mail.javamail.JavaMailSender is a phantom class!
Warning: java.util.UUID is a phantom class!
Warning: java.lang.Exception is a phantom class!
Warning: java.util.List is a phantom class!
Warning: java.security.Principal is a phantom class!
Warning: org.springframework.security.core.context.SecurityContext is a phantom class!
Warning: java.lang.StringBuilder is a phantom class!
Warning: org.springframework.security.authentication.UsernamePasswordAuthenticationToken is a phantom class!
Warning: org.springframework.security.core.Authentication is a phantom class!
Warning: org.springframework.web.bind.annotation.RequestMapping is a phantom class!
Warning: org.springframework.mail.SimpleMailMessage is a phantom class!
Warning: org.springframework.stereotype.Controller is a phantom class!
Warning: java.util.HashSet is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: org.springframework.web.bind.annotation.GetMapping is a phantom class!
Warning: org.springframework.security.core.userdetails.UserDetails is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: java.util.Collections is a phantom class!
Warning: javax.persistence.Entity is a phantom class!
Warning: java.util.Date is a phantom class!
Warning: javax.persistence.JoinColumn is a phantom class!
Warning: javax.persistence.OneToOne is a phantom class!
Warning: java.util.Calendar is a phantom class!
Warning: javax.persistence.GeneratedValue is a phantom class!
Warning: javax.persistence.Id is a phantom class!
Warning: javax.persistence.OneToMany is a phantom class!
Warning: javax.persistence.Column is a phantom class!
Warning: javax.persistence.Transient is a phantom class!
Warning: com.fasterxml.jackson.annotation.JsonIgnore is a phantom class!
Warning: org.springframework.web.multipart.MultipartFile is a phantom class!
Warning: org.springframework.stereotype.Component is a phantom class!
Warning: org.springframework.core.env.Environment is a phantom class!
Warning: java.util.function.Consumer is a phantom class!
Warning: javax.persistence.ManyToOne is a phantom class!
Warning: java.security.SecureRandom is a phantom class!
Warning: java.util.Random is a phantom class!
Warning: org.springframework.context.annotation.Bean is a phantom class!
Warning: org.springframework.security.core.userdetails.UserDetailsService is a phantom class!
Warning: org.springframework.security.core.userdetails.UsernameNotFoundException is a phantom class!
Warning: org.springframework.stereotype.Service is a phantom class!
Warning: java.util.Map is a phantom class!
Warning: com.bookstore.utility.USConstants$1 is a phantom class!
Warning: java.util.ArrayList is a phantom class!
Warning: javax.persistence.Table is a phantom class!
Warning: java.math.BigDecimal is a phantom class!
Warning: org.springframework.security.core.GrantedAuthority is a phantom class!
Warning: org.springframework.data.repository.CrudRepository is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
patternMatch.java: getUserInputRules: i=0
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? (Neq (= <col1> <col2>) (0Node)) (union (repo) (list)) (repo))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (select <coll> (= <col1> <col2>))
Fold
| FuncExpr
| | Ternary
| | | NotEq
| | | | Eq
| | | | | Any
| | | | | Any
| | | | Any
| | | Union
| | | | Any
| | | | List
| | | Any
| Any
| Any
| Any


Select
| Id:13
| Eq
| | Id:5
| | Id:6

{<col1>=5, <col2>=6, <init_val>=12, <itr>=14, <coll>=13}
patternMatch.java: getUserInputRules: i=2
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (save <repo> <list1>) (save <repo> <list2>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <init_val> <coll>) (union (pi (select <coll> <cond>) <list1>) (pi (select <coll> (= <cond> 0)) <list2>)))
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Any
| | | | Any
| | | Save
| | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:25
| | Id:26
| Union
| | Project
| | | Select
| | | | Id:26
| | | | Id:18
| | | Id:21
| | Project
| | | Select
| | | | Id:26
| | | | Eq
| | | | | Id:18
| | | | | Zero
| | | Id:24

{<col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=18, <list1>=21, <init_val>=25, <itr>=27, <coll>=26}
patternMatch.java: getUserInputRules: i=4
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (add_all_fields <list>) <elseval>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <coll> <cond>) <list>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | AddWithFieldExprs
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:36
| | | Id:31
| | Id:33
| Id:35

{<list>=33, <elseval>=34, <col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=31, <list1>=21, <init_val>=35, <itr>=37, <coll>=36}
patternMatch.java: getUserInputRules: i=6
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (save <repo> (tuple (join next <join_right> <nop>) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <repo> (select <repo> (in id (pi (join <coll> <join_right>) id)))) (pi <list> (join <coll> <join_right>)))
Fold
| FuncExpr
| | Save
| | | Any
| | | Tuple
| | | | Join
| | | | | Iterator
| | | | | Any
| | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:41
| | Select
| | | Id:41
| | | In
| | | | Id
| | | | Project
| | | | | Join
| | | | | | Id:49
| | | | | | Id:45
| | | | | Id
| Project
| | Id:47
| | Join
| | | Id:49
| | | Id:45

{<list>=47, <repo>=41, <cond>=31, <nop>=46, <init_val>=48, <join_right>=45, <itr>=50, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=49}
patternMatch.java: getUserInputRules: i=8
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (add_all_fields <receiver> (tuple (select <rel> (= <clm> <itr>)) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi <list> (select <rel> (in <clm> <coll>))) <init_val>)
Fold
| FuncExpr
| | AddWithFieldExprs
| | | Any
| | | Tuple
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| Project
| | Id:61
| | Select
| | | Id:57
| | | In
| | | | Id:59
| | | | Id:63
| Id:62

{<list>=61, <rel>=57, <repo>=41, <cond>=31, <nop>=46, <clm>=59, <init_val>=62, <join_right>=45, <itr>=64, <receiver>=54, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=63}
patternMatch.java: getUserInputRules: i=10
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (+ <aggvar> (pi (select <rel> (= <clm> <itr>)) <clmagg>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (+ (agg_sum (select <rel> (in <clm> <coll>)) <clmagg>) <init_val>)
Fold
| FuncExpr
| | ArithAdd
| | | Any
| | | Project
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


ArithAdd
| AggSum
| | Select
| | | Id:71
| | | In
| | | | Id:73
| | | | Id:77
| | Id:75
| Id:76

{<list>=61, <rel>=71, <repo>=41, <cond>=31, <nop>=46, <clm>=73, <init_val>=76, <join_right>=45, <itr>=78, <clmagg>=75, <receiver>=54, <aggvar>=68, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=77}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Project/current%20use/NRAandLoops/lib/eqsql.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Project/current%20use/NRAandLoops/lib/soot-trunk-1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: bookShelf
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String bookShelf(org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.util.List bookList;
        com.bookstore.service.impl.BookService $r0;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookService bookService>;

        bookList = interfaceinvoke $r0.<com.bookstore.service.impl.BookService: java.util.List findAll()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList);

        return "bookshelf";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
Warning: org.springframework.boot.CommandLineRunner is a phantom class!
Warning: org.springframework.boot.autoconfigure.SpringBootApplication is a phantom class!
Warning: org.springframework.boot.SpringApplication is a phantom class!
Warning: org.springframework.context.ConfigurableApplicationContext is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
Warning: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.builders.HttpSecurity is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.CsrfConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity is a phantom class!
Warning: org.springframework.security.web.util.matcher.RequestMatcher is a phantom class!
Warning: org.springframework.context.annotation.Configuration is a phantom class!
Warning: org.springframework.security.config.annotation.SecurityBuilder is a phantom class!
Warning: org.springframework.security.crypto.password.PasswordEncoder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configuration.EnableWebSecurity is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.CorsConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.HttpSecurityBuilder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl is a phantom class!
Warning: org.springframework.security.web.util.matcher.AntPathRequestMatcher is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
Warning: org.springframework.transaction.annotation.Transactional is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
Warning: org.springframework.data.jpa.repository.JpaRepository is a phantom class!
Warning: org.springframework.data.jpa.repository.Modifying is a phantom class!
Warning: org.springframework.data.jpa.repository.Query is a phantom class!
Warning: java.util.stream.Stream is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
Warning: java.util.Optional is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
Warning: java.lang.Iterable is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: java.util.Iterator is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.BookServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = bookList = interfaceinvoke $r0.<com.bookstore.service.impl.BookService: java.util.List findAll()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookService bookService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "bookshelf"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String bookShelf(org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.util.List bookList;
        com.bookstore.service.impl.BookService $r0;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.BookServiceImpl;

        bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>();

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList);

        return "bookshelf";
    }

FuncStackInfoBuilder internalTransform called!
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: body: 
    public java.lang.String bookShelf(org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.util.List bookList;
        com.bookstore.service.impl.BookService $r0;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.BookServiceImpl;

        bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>();

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList);

        return "bookshelf";
    }

FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: model
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: model
FuncStackInfoBuilder.java: regionTreeForBody(): local: bookList
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: bookList
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: bookShelf is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.controller.HomeController;
model := @parameter0: org.springframework.ui.Model;
$r0 = new com.bookstore.service.impl.BookServiceImpl;
bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>();
this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0;
interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList);
return "bookshelf";


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.controller.HomeController;
model := @parameter0: org.springframework.ui.Model;
$r0 = new com.bookstore.service.impl.BookServiceImpl;
bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>();
this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0;
interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList);
return "bookshelf";


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.controller.HomeController, model := @parameter0: org.springframework.ui.Model, $r0 = new com.bookstore.service.impl.BookServiceImpl, bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>(), this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0, interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList), return "bookshelf"]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): topr is not null
FuncStackInfoBuilder.java: internalTransformHelper(): topr = 
| BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): CGSTART: 
VIRTUAL edge: bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>() in <com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)> ==> <com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>
CGEND

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: findAll
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.util.List findAll()
    {
        com.bookstore.service.impl.BookServiceImpl this;
        com.bookstore.repository.BookRepository $r0;
        java.lang.Iterable $r1;
        java.util.List $r2;

        this := @this: com.bookstore.service.impl.BookServiceImpl;

        $r0 = this.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.repository.BookRepository bookRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>();

        $r2 = (java.util.List) $r1;

        return $r2;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: findAll is Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.BookServiceImpl;
$r0 = this.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.repository.BookRepository bookRepository>;
$r1 = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>();
$r2 = (java.util.List) $r1;
return $r2;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.bookstore.service.impl.BookServiceImpl;
$r0 = this.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.repository.BookRepository bookRepository>;
$r1 = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>();
$r2 = (java.util.List) $r1;
return $r2;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.bookstore.service.impl.BookServiceImpl, $r0 = this.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.repository.BookRepository bookRepository>, $r1 = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>(), $r2 = (java.util.List) $r1, return $r2]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: functionstack: 
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
FuncStackInfoBuilder.java: internalTransformHelper():     com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
FuncStackInfoBuilder.java: internalTransformHelper(): {com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()=    public java.util.List findAll()
    {
        com.bookstore.service.impl.BookServiceImpl this;
        com.bookstore.repository.BookRepository $r0;
        java.lang.Iterable $r1;
        java.util.List $r2;

        this := @this: com.bookstore.service.impl.BookServiceImpl;

        $r0 = this.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.repository.BookRepository bookRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>();

        $r2 = (java.util.List) $r1;

        return $r2;
    }
, com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)=    public java.lang.String bookShelf(org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.util.List bookList;
        com.bookstore.service.impl.BookService $r0;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.BookServiceImpl;

        bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>();

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList);

        return "bookshelf";
    }
}

Decompiling com.bookstore.controller.HomeController... 
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: void <init>()>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void <init>()
    {
        com.bookstore.controller.HomeController this;

        this := @this: com.bookstore.controller.HomeController;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String index()>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: index
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String index()
    {
        com.bookstore.controller.HomeController this;

        this := @this: com.bookstore.controller.HomeController;

        return "index";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String login(org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: login
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String login(org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.lang.Boolean $r0;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveLogin", $r0);

        return "myAccount";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: bookShelf
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String bookShelf(org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.util.List bookList;
        com.bookstore.service.impl.BookService $r0;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.BookServiceImpl;

        bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>();

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList);

        return "bookshelf";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String bookDetail(java.lang.Long,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: bookDetail
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String bookDetail(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long id;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.service.impl.BookService $r0;
        java.lang.Integer[] $r2;
        java.lang.Integer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        com.bookstore.service.impl.UserService $r16;
        java.lang.String username;
        com.bookstore.domain.User user;
        com.bookstore.domain.Book username;
        java.util.List user;

        this := @this: com.bookstore.controller.HomeController;

        id := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        if principal == null goto label1;

        username = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        user = interfaceinvoke $r16.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

     label1:
        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookService bookService>;

        username = interfaceinvoke $r0.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>(id);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("book", username);

        $r2 = newarray (java.lang.Integer)[10];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r2[3] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r2[4] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r2[5] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r2[6] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r2[7] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r2[8] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r2[9] = $r12;

        user = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("gtyList", user);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("qty", $r14);

        return "bookDetail";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r16 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r16=com.bookstore.service.impl.UserServiceImpl, $r0=com.bookstore.service.impl.BookServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if principal == null goto $r0 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r16.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username = interfaceinvoke $r0.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("book", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("book", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = newarray (java.lang.Integer)[10]
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[0] = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[1] = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[2] = $r5
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[3] = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[4] = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[5] = $r8
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[6] = $r9
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[7] = $r10
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[8] = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[9] = $r12
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("gtyList", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("gtyList", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("qty", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("qty", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "bookDetail"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String bookDetail(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long id;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.service.impl.BookService $r0;
        java.lang.Integer[] $r2;
        java.lang.Integer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        com.bookstore.service.impl.UserService $r16;
        java.lang.String username;
        com.bookstore.domain.User user;
        com.bookstore.domain.Book username;
        java.util.List user;

        this := @this: com.bookstore.controller.HomeController;

        id := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        if principal == null goto label1;

        username = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        $r16 = new com.bookstore.service.impl.UserServiceImpl;

        user = virtualinvoke $r16.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r16;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

     label1:
        $r0 = new com.bookstore.service.impl.BookServiceImpl;

        username = interfaceinvoke $r0.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>(id);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("book", username);

        $r2 = newarray (java.lang.Integer)[10];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r2[3] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r2[4] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r2[5] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r2[6] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r2[7] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r2[8] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r2[9] = $r12;

        user = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("gtyList", user);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("qty", $r14);

        return "bookDetail";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if principal == null goto $r0 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r16.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r16
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username = interfaceinvoke $r0.<com.bookstore.service.impl.BookService: com.bookstore.domain.Book findById(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("book", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("book", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = newarray (java.lang.Integer)[10]
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[0] = $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[1] = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[2] = $r5
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[3] = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[4] = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[5] = $r8
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[6] = $r9
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[7] = $r10
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[8] = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2[9] = $r12
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("gtyList", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("gtyList", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("qty", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("qty", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "bookDetail"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String bookDetail(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long id;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.service.impl.BookService $r0;
        java.lang.Integer[] $r2;
        java.lang.Integer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        com.bookstore.service.impl.UserService $r16;
        java.lang.String username;
        com.bookstore.domain.User user;
        com.bookstore.domain.Book username;
        java.util.List user;

        this := @this: com.bookstore.controller.HomeController;

        id := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        if principal == null goto label1;

        username = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        $r16 = new com.bookstore.service.impl.UserServiceImpl;

        user = virtualinvoke $r16.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r16;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

     label1:
        $r0 = new com.bookstore.service.impl.BookServiceImpl;

        username = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.domain.Book findById(java.lang.Long)>(id);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("book", username);

        $r2 = newarray (java.lang.Integer)[10];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r2[3] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r2[4] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r2[5] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r2[6] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r2[7] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r2[8] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r2[9] = $r12;

        user = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("gtyList", user);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("qty", $r14);

        return "bookDetail";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String newUserPost(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: newUserPost
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String newUserPost(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, org.springframework.ui.Model) throws java.lang.Exception
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String userEmail, username, password, encryptedPassword;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r5, $r7, $r8;
        com.bookstore.domain.security.Role role, $r10;
        java.util.HashSet userRoles, $r11;
        java.lang.Boolean $r0, $r15, $r17;
        com.bookstore.service.impl.UserService $r4, $r6, $r13;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r9;
        com.bookstore.domain.security.UserRole $r12;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        userEmail := @parameter1: java.lang.String;

        username := @parameter2: java.lang.String;

        model := @parameter3: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username);

        $r4 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r5 = interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        if $r5 == null goto label1;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17);

        return "myAccount";

     label1:
        $r6 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r7 = interfaceinvoke $r6.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByEmail(java.lang.String)>(userEmail);

        if $r7 == null goto label2;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15);

        return "myAccount";

     label2:
        $r8 = new com.bookstore.domain.User;

        specialinvoke $r8.<com.bookstore.domain.User: void <init>()>();

        user = $r8;

        virtualinvoke $r8.<com.bookstore.domain.User: void setUsername(java.lang.String)>(username);

        virtualinvoke $r8.<com.bookstore.domain.User: void setEmail(java.lang.String)>(userEmail);

        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r9 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r9.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke $r8.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r10 = new com.bookstore.domain.security.Role;

        specialinvoke $r10.<com.bookstore.domain.security.Role: void <init>()>();

        role = $r10;

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setRoleId(int)>(1);

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setName(java.lang.String)>("ROLE_USER");

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        userRoles = $r11;

        $r12 = new com.bookstore.domain.security.UserRole;

        specialinvoke $r12.<com.bookstore.domain.security.UserRole: void <init>(com.bookstore.domain.User,com.bookstore.domain.security.Role)>($r8, $r10);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);

        $r13 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11);

        return "myAccount";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r6 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r13 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r4=com.bookstore.service.impl.UserServiceImpl, $r6=com.bookstore.service.impl.UserServiceImpl, $r13=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter0: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userEmail := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username := @parameter2: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter3: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r5 == null goto $r6 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = interfaceinvoke $r6.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByEmail(java.lang.String)>(userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r7 == null goto $r8 = new com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = new com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r8.<com.bookstore.domain.User: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = $r8
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setEmail(java.lang.String)>(userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = encryptedPassword = virtualinvoke $r9.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = new com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r10.<com.bookstore.domain.security.Role: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = role = $r10
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r10.<com.bookstore.domain.security.Role: void setRoleId(int)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r10.<com.bookstore.domain.security.Role: void setName(java.lang.String)>("ROLE_USER")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = new java.util.HashSet
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r11.<java.util.HashSet: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userRoles = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = new com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r12.<com.bookstore.domain.security.UserRole: void <init>(com.bookstore.domain.User,com.bookstore.domain.security.Role)>($r8, $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String newUserPost(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, org.springframework.ui.Model) throws java.lang.Exception
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String userEmail, username, password, encryptedPassword;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r5, $r7, $r8;
        com.bookstore.domain.security.Role role, $r10;
        java.util.HashSet userRoles, $r11;
        java.lang.Boolean $r0, $r15, $r17;
        com.bookstore.service.impl.UserService $r4, $r6, $r13;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r9;
        com.bookstore.domain.security.UserRole $r12;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        userEmail := @parameter1: java.lang.String;

        username := @parameter2: java.lang.String;

        model := @parameter3: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username);

        $r4 = new com.bookstore.service.impl.UserServiceImpl;

        $r5 = virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4;

        if $r5 == null goto label1;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17);

        return "myAccount";

     label1:
        $r6 = new com.bookstore.service.impl.UserServiceImpl;

        $r7 = interfaceinvoke $r6.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByEmail(java.lang.String)>(userEmail);

        if $r7 == null goto label2;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15);

        return "myAccount";

     label2:
        $r8 = new com.bookstore.domain.User;

        specialinvoke $r8.<com.bookstore.domain.User: void <init>()>();

        user = $r8;

        virtualinvoke $r8.<com.bookstore.domain.User: void setUsername(java.lang.String)>(username);

        virtualinvoke $r8.<com.bookstore.domain.User: void setEmail(java.lang.String)>(userEmail);

        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r9 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r9.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke $r8.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r10 = new com.bookstore.domain.security.Role;

        specialinvoke $r10.<com.bookstore.domain.security.Role: void <init>()>();

        role = $r10;

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setRoleId(int)>(1);

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setName(java.lang.String)>("ROLE_USER");

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        userRoles = $r11;

        $r12 = new com.bookstore.domain.security.UserRole;

        specialinvoke $r12.<com.bookstore.domain.security.UserRole: void <init>(com.bookstore.domain.User,com.bookstore.domain.security.Role)>($r8, $r10);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);

        $r13 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11);

        return "myAccount";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter0: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userEmail := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username := @parameter2: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter3: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r5 == null goto $r6 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = interfaceinvoke $r6.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByEmail(java.lang.String)>(userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r7 == null goto $r8 = new com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = new com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r8.<com.bookstore.domain.User: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = $r8
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setEmail(java.lang.String)>(userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = encryptedPassword = virtualinvoke $r9.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = new com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r10.<com.bookstore.domain.security.Role: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = role = $r10
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r10.<com.bookstore.domain.security.Role: void setRoleId(int)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r10.<com.bookstore.domain.security.Role: void setName(java.lang.String)>("ROLE_USER")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = new java.util.HashSet
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r11.<java.util.HashSet: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userRoles = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = new com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r12.<com.bookstore.domain.security.UserRole: void <init>(com.bookstore.domain.User,com.bookstore.domain.security.Role)>($r8, $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String newUserPost(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, org.springframework.ui.Model) throws java.lang.Exception
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String userEmail, username, password, encryptedPassword;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r5, $r7, $r8;
        com.bookstore.domain.security.Role role, $r10;
        java.util.HashSet userRoles, $r11;
        java.lang.Boolean $r0, $r15, $r17;
        com.bookstore.service.impl.UserService $r4, $r6, $r13;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r9;
        com.bookstore.domain.security.UserRole $r12;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        userEmail := @parameter1: java.lang.String;

        username := @parameter2: java.lang.String;

        model := @parameter3: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username);

        $r4 = new com.bookstore.service.impl.UserServiceImpl;

        $r5 = virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4;

        if $r5 == null goto label1;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17);

        return "myAccount";

     label1:
        $r6 = new com.bookstore.service.impl.UserServiceImpl;

        $r7 = virtualinvoke $r6.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(userEmail);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r6;

        if $r7 == null goto label2;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15);

        return "myAccount";

     label2:
        $r8 = new com.bookstore.domain.User;

        specialinvoke $r8.<com.bookstore.domain.User: void <init>()>();

        user = $r8;

        virtualinvoke $r8.<com.bookstore.domain.User: void setUsername(java.lang.String)>(username);

        virtualinvoke $r8.<com.bookstore.domain.User: void setEmail(java.lang.String)>(userEmail);

        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r9 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r9.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke $r8.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r10 = new com.bookstore.domain.security.Role;

        specialinvoke $r10.<com.bookstore.domain.security.Role: void <init>()>();

        role = $r10;

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setRoleId(int)>(1);

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setName(java.lang.String)>("ROLE_USER");

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        userRoles = $r11;

        $r12 = new com.bookstore.domain.security.UserRole;

        specialinvoke $r12.<com.bookstore.domain.security.UserRole: void <init>(com.bookstore.domain.User,com.bookstore.domain.security.Role)>($r8, $r10);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);

        $r13 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11);

        return "myAccount";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter0: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userEmail := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username := @parameter2: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter3: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r5 == null goto $r6 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = virtualinvoke $r6.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r6
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r7 == null goto $r8 = new com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = new com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r8.<com.bookstore.domain.User: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = $r8
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setEmail(java.lang.String)>(userEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = encryptedPassword = virtualinvoke $r9.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r8.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = new com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r10.<com.bookstore.domain.security.Role: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = role = $r10
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r10.<com.bookstore.domain.security.Role: void setRoleId(int)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r10.<com.bookstore.domain.security.Role: void setName(java.lang.String)>("ROLE_USER")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = new java.util.HashSet
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r11.<java.util.HashSet: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userRoles = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = new com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r12.<com.bookstore.domain.security.UserRole: void <init>(com.bookstore.domain.User,com.bookstore.domain.security.Role)>($r8, $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r11
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r13.<com.bookstore.service.impl.UserService: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r13
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String newUserPost(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, org.springframework.ui.Model) throws java.lang.Exception
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String userEmail, username, password, encryptedPassword;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r5, $r7, $r8;
        com.bookstore.domain.security.Role role, $r10;
        java.util.HashSet userRoles, $r11;
        java.lang.Boolean $r0, $r15, $r17;
        com.bookstore.service.impl.UserService $r4, $r6, $r13;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r9;
        com.bookstore.domain.security.UserRole $r12;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        userEmail := @parameter1: java.lang.String;

        username := @parameter2: java.lang.String;

        model := @parameter3: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveNewAccount", $r0);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("email", userEmail);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userName", username);

        $r4 = new com.bookstore.service.impl.UserServiceImpl;

        $r5 = virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4;

        if $r5 == null goto label1;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("usernameExists", $r17);

        return "myAccount";

     label1:
        $r6 = new com.bookstore.service.impl.UserServiceImpl;

        $r7 = virtualinvoke $r6.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(userEmail);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r6;

        if $r7 == null goto label2;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailExists", $r15);

        return "myAccount";

     label2:
        $r8 = new com.bookstore.domain.User;

        specialinvoke $r8.<com.bookstore.domain.User: void <init>()>();

        user = $r8;

        virtualinvoke $r8.<com.bookstore.domain.User: void setUsername(java.lang.String)>(username);

        virtualinvoke $r8.<com.bookstore.domain.User: void setEmail(java.lang.String)>(userEmail);

        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r9 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r9.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke $r8.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r10 = new com.bookstore.domain.security.Role;

        specialinvoke $r10.<com.bookstore.domain.security.Role: void <init>()>();

        role = $r10;

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setRoleId(int)>(1);

        virtualinvoke $r10.<com.bookstore.domain.security.Role: void setName(java.lang.String)>("ROLE_USER");

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        userRoles = $r11;

        $r12 = new com.bookstore.domain.security.UserRole;

        specialinvoke $r12.<com.bookstore.domain.security.UserRole: void <init>(com.bookstore.domain.User,com.bookstore.domain.security.Role)>($r8, $r10);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);

        $r13 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r13.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>($r8, $r11);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r13;

        return "myAccount";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String myProfile(org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: myProfile
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String myProfile(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.UserShipping userShipping, $r7;
        java.util.List stateList, $r3, $r5;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.lang.Boolean $r9, $r11, $r14;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3);

        $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5);

        $r7 = new com.bookstore.domain.UserShipping;

        specialinvoke $r7.<com.bookstore.domain.UserShipping: void <init>()>();

        userShipping = $r7;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r7);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r9);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r7.<com.bookstore.domain.UserShipping: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String myProfile(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.UserShipping userShipping, $r7;
        java.util.List stateList, $r3, $r5;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.lang.Boolean $r9, $r11, $r14;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3);

        $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5);

        $r7 = new com.bookstore.domain.UserShipping;

        specialinvoke $r7.<com.bookstore.domain.UserShipping: void <init>()>();

        userShipping = $r7;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r7);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r9);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String listOfCreditCards(org.springframework.ui.Model,java.security.Principal,javax.servlet.http.HttpServletRequest)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: listOfCreditCards
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String listOfCreditCards(org.springframework.ui.Model, java.security.Principal, javax.servlet.http.HttpServletRequest)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        javax.servlet.http.HttpServletRequest request;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.util.List $r3, $r5;
        java.lang.Boolean $r7, $r9, $r11;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        request := @parameter2: javax.servlet.http.HttpServletRequest;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3);

        $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r9);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter2: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String listOfCreditCards(org.springframework.ui.Model, java.security.Principal, javax.servlet.http.HttpServletRequest)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        javax.servlet.http.HttpServletRequest request;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.util.List $r3, $r5;
        java.lang.Boolean $r7, $r9, $r11;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        request := @parameter2: javax.servlet.http.HttpServletRequest;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3);

        $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r9);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String listOfShippingAddresses(org.springframework.ui.Model,java.security.Principal,javax.servlet.http.HttpServletRequest)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: listOfShippingAddresses
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String listOfShippingAddresses(org.springframework.ui.Model, java.security.Principal, javax.servlet.http.HttpServletRequest)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        javax.servlet.http.HttpServletRequest request;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.util.List $r3, $r5;
        java.lang.Boolean $r7, $r9, $r11;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        request := @parameter2: javax.servlet.http.HttpServletRequest;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3);

        $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r9);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter2: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String listOfShippingAddresses(org.springframework.ui.Model, java.security.Principal, javax.servlet.http.HttpServletRequest)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        javax.servlet.http.HttpServletRequest request;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.util.List $r3, $r5;
        java.lang.Boolean $r7, $r9, $r11;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        request := @parameter2: javax.servlet.http.HttpServletRequest;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r3);

        $r5 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r9);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r11);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String addNewCreditCard(org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: addNewCreditCard
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String addNewCreditCard(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.UserBilling userBilling, $r9;
        com.bookstore.domain.UserPayment userPayment, $r10;
        java.util.List stateList, $r14, $r16;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.lang.Boolean $r3, $r5, $r7;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r3);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r7);

        $r9 = new com.bookstore.domain.UserBilling;

        specialinvoke $r9.<com.bookstore.domain.UserBilling: void <init>()>();

        userBilling = $r9;

        $r10 = new com.bookstore.domain.UserPayment;

        specialinvoke $r10.<com.bookstore.domain.UserPayment: void <init>()>();

        userPayment = $r10;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", $r9);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", $r10);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r14 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r14);

        $r16 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r16);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = new com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r9.<com.bookstore.domain.UserBilling: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userBilling = $r9
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = new com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r10.<com.bookstore.domain.UserPayment: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment = $r10
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addNewCreditCard(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.UserBilling userBilling, $r9;
        com.bookstore.domain.UserPayment userPayment, $r10;
        java.util.List stateList, $r14, $r16;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.lang.Boolean $r3, $r5, $r7;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r3);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r7);

        $r9 = new com.bookstore.domain.UserBilling;

        specialinvoke $r9.<com.bookstore.domain.UserBilling: void <init>()>();

        userBilling = $r9;

        $r10 = new com.bookstore.domain.UserPayment;

        specialinvoke $r10.<com.bookstore.domain.UserPayment: void <init>()>();

        userPayment = $r10;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", $r9);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", $r10);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r14 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r14);

        $r16 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r16);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String addNewShippingAddress(org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: addNewShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String addNewShippingAddress(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.UserShipping userShipping, $r9;
        java.util.List stateList, $r12, $r14;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.lang.Boolean $r3, $r5, $r7;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r3);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7);

        $r9 = new com.bookstore.domain.UserShipping;

        specialinvoke $r9.<com.bookstore.domain.UserShipping: void <init>()>();

        userShipping = $r9;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r9);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r12);

        $r14 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = new com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r9.<com.bookstore.domain.UserShipping: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping = $r9
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addNewShippingAddress(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.UserShipping userShipping, $r9;
        java.util.List stateList, $r12, $r14;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        java.lang.Boolean $r3, $r5, $r7;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r3);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r7);

        $r9 = new com.bookstore.domain.UserShipping;

        specialinvoke $r9.<com.bookstore.domain.UserShipping: void <init>()>();

        userShipping = $r9;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", $r9);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r12);

        $r14 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String updateUserShipping(java.lang.Long,java.security.Principal,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: updateUserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String updateUserShipping(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long shippingAddressId, $r3, $r5;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserShipping userShipping;
        java.util.List stateList, $r9, $r11;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserShippingService $r2;
        java.lang.Boolean $r13, $r15, $r17;

        this := @this: com.bookstore.controller.HomeController;

        shippingAddressId := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>;

        userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(shippingAddressId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", userShipping);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r9 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r9);

        $r11 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r11);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r13);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r15);

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r17);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserShippingServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = shippingAddressId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(shippingAddressId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", userShipping)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", userShipping)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r13)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r13)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String updateUserShipping(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long shippingAddressId, $r3, $r5;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserShipping userShipping;
        java.util.List stateList, $r9, $r11;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserShippingService $r2;
        java.lang.Boolean $r13, $r15, $r17;

        this := @this: com.bookstore.controller.HomeController;

        shippingAddressId := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserShippingServiceImpl;

        userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(shippingAddressId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", userShipping);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r9 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r9);

        $r11 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r11);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r13);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r15);

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r17);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = shippingAddressId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(shippingAddressId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", userShipping)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", userShipping)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r9)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r11)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r13)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r13)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r15)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r17)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String updateUserShipping(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long shippingAddressId, $r3, $r5;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserShipping userShipping;
        java.util.List stateList, $r9, $r11;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserShippingService $r2;
        java.lang.Boolean $r13, $r15, $r17;

        this := @this: com.bookstore.controller.HomeController;

        shippingAddressId := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserShippingServiceImpl;

        userShipping = virtualinvoke $r2.<com.bookstore.service.impl.UserShippingServiceImpl: com.bookstore.domain.UserShipping findById(java.lang.Long)>(shippingAddressId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl> = $r2;

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShipping", userShipping);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r9 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r9);

        $r11 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r11);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewShippingAddress", $r13);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r15);

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r17);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String addNewCreditCardPost(com.bookstore.domain.UserPayment,com.bookstore.domain.UserBilling,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: addNewCreditCardPost
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String addNewCreditCardPost(com.bookstore.domain.UserPayment, com.bookstore.domain.UserBilling, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.domain.UserBilling userBilling;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        userPayment := @parameter0: com.bookstore.domain.UserPayment;

        userBilling := @parameter1: com.bookstore.domain.UserBilling;

        model := @parameter2: org.springframework.ui.Model;

        principal := @parameter3: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>(userBilling, userPayment, user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment := @parameter0: com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userBilling := @parameter1: com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter3: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>(userBilling, userPayment, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>(userBilling, userPayment, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addNewCreditCardPost(com.bookstore.domain.UserPayment, com.bookstore.domain.UserBilling, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.domain.UserBilling userBilling;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        userPayment := @parameter0: com.bookstore.domain.UserPayment;

        userBilling := @parameter1: com.bookstore.domain.UserBilling;

        model := @parameter2: org.springframework.ui.Model;

        principal := @parameter3: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>(userBilling, userPayment, user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment := @parameter0: com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userBilling := @parameter1: com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter3: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>(userBilling, userPayment, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>(userBilling, userPayment, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addNewCreditCardPost(com.bookstore.domain.UserPayment, com.bookstore.domain.UserBilling, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.domain.UserBilling userBilling;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        userPayment := @parameter0: com.bookstore.domain.UserPayment;

        userBilling := @parameter1: com.bookstore.domain.UserBilling;

        model := @parameter2: org.springframework.ui.Model;

        principal := @parameter3: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>(userBilling, userPayment, user);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String addNewShippingAddressPost(com.bookstore.domain.UserShipping,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: addNewShippingAddressPost
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String addNewShippingAddressPost(com.bookstore.domain.UserShipping, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        com.bookstore.domain.UserShipping userShipping;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        userShipping := @parameter0: com.bookstore.domain.UserShipping;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>(userShipping, user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping := @parameter0: com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>(userShipping, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>(userShipping, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addNewShippingAddressPost(com.bookstore.domain.UserShipping, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        com.bookstore.domain.UserShipping userShipping;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        userShipping := @parameter0: com.bookstore.domain.UserShipping;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>(userShipping, user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping := @parameter0: com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>(userShipping, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>(userShipping, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String addNewShippingAddressPost(com.bookstore.domain.UserShipping, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        com.bookstore.domain.UserShipping userShipping;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        userShipping := @parameter0: com.bookstore.domain.UserShipping;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>(userShipping, user);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String updateCreditCard(java.lang.Long,java.security.Principal,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: updateCreditCard
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String updateCreditCard(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long creditCardId, $r3, $r5;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.domain.UserBilling userBilling;
        java.util.List stateList, $r10, $r12;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserPaymentService $r2;
        java.lang.Boolean $r14, $r16, $r18;

        this := @this: com.bookstore.controller.HomeController;

        creditCardId := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>;

        userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        userBilling = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.UserBilling getUserBilling()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", userPayment);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", userBilling);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r10);

        $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r14);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r16);

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r18);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserPaymentServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = creditCardId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userBilling = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.UserBilling getUserBilling()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", userPayment)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", userPayment)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", userBilling)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", userBilling)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r18)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r18)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String updateCreditCard(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long creditCardId, $r3, $r5;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.domain.UserBilling userBilling;
        java.util.List stateList, $r10, $r12;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserPaymentService $r2;
        java.lang.Boolean $r14, $r16, $r18;

        this := @this: com.bookstore.controller.HomeController;

        creditCardId := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        userBilling = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.UserBilling getUserBilling()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", userPayment);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", userBilling);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r10);

        $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r14);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r16);

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r18);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = creditCardId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userBilling = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.UserBilling getUserBilling()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", userPayment)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", userPayment)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", userBilling)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", userBilling)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r18)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r18)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String updateCreditCard(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long creditCardId, $r3, $r5;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.domain.UserBilling userBilling;
        java.util.List stateList, $r10, $r12;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserPaymentService $r2;
        java.lang.Boolean $r14, $r16, $r18;

        this := @this: com.bookstore.controller.HomeController;

        creditCardId := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        userPayment = virtualinvoke $r2.<com.bookstore.service.impl.UserPaymentServiceImpl: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl> = $r2;

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        userBilling = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.UserBilling getUserBilling()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPayment", userPayment);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userBilling", userBilling);

        stateList = <com.bookstore.utility.USConstants: java.util.List listOfUSStatesCode>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(stateList);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("stateList", stateList);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r10);

        $r12 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("addNewCreditCard", $r14);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r16);

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r18);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String setDefaultPayment(java.lang.Long,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setDefaultPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String setDefaultPayment(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long defaultPaymentId;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        defaultPaymentId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>(defaultPaymentId, user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = defaultPaymentId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>(defaultPaymentId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>(defaultPaymentId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String setDefaultPayment(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long defaultPaymentId;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        defaultPaymentId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>(defaultPaymentId, user);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = defaultPaymentId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>(defaultPaymentId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>(defaultPaymentId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String setDefaultPayment(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long defaultPaymentId;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;
        java.util.List $r4, $r6;
        java.lang.Boolean $r8, $r10, $r12;

        this := @this: com.bookstore.controller.HomeController;

        defaultPaymentId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>(defaultPaymentId, user);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r4 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r4);

        $r6 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r8);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r12);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String setDefaultShippingAddress(java.lang.Long,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setDefaultShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String setDefaultShippingAddress(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long defaultShippingId;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;

        this := @this: com.bookstore.controller.HomeController;

        defaultShippingId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>(defaultShippingId, user);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = defaultShippingId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>(defaultShippingId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>(defaultShippingId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String setDefaultShippingAddress(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long defaultShippingId;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;

        this := @this: com.bookstore.controller.HomeController;

        defaultShippingId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>(defaultShippingId, user);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = defaultShippingId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>(defaultShippingId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.bookstore.service.impl.UserService: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>(defaultShippingId, user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String setDefaultShippingAddress(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long defaultShippingId;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.service.impl.UserService $r0, $r2;
        java.lang.String $r1;

        this := @this: com.bookstore.controller.HomeController;

        defaultShippingId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>(defaultShippingId, user);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2;

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String removeUserShipping(java.lang.Long,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: removeUserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String removeUserShipping(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long userShippingId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserShipping userShipping;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserShippingService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14;

        this := @this: com.bookstore.controller.HomeController;

        userShippingId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>;

        userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(userShippingId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingService userShippingService>;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId);

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r7 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserShippingServiceImpl, $r7=com.bookstore.service.impl.UserShippingServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShippingId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeUserShipping(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long userShippingId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserShipping userShipping;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserShippingService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14;

        this := @this: com.bookstore.controller.HomeController;

        userShippingId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserShippingServiceImpl;

        userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(userShippingId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = new com.bookstore.service.impl.UserShippingServiceImpl;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId);

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShippingId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping = interfaceinvoke $r2.<com.bookstore.service.impl.UserShippingService: com.bookstore.domain.UserShipping findById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeUserShipping(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long userShippingId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserShipping userShipping;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserShippingService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14;

        this := @this: com.bookstore.controller.HomeController;

        userShippingId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserShippingServiceImpl;

        userShipping = virtualinvoke $r2.<com.bookstore.service.impl.UserShippingServiceImpl: com.bookstore.domain.UserShipping findById(java.lang.Long)>(userShippingId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl> = $r2;

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = new com.bookstore.service.impl.UserShippingServiceImpl;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId);

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShippingId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userShipping = virtualinvoke $r2.<com.bookstore.service.impl.UserShippingServiceImpl: com.bookstore.domain.UserShipping findById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl> = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserShippingService: void removeById(java.lang.Long)>(userShippingId)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeUserShipping(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long userShippingId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserShipping userShipping;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserShippingService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14;

        this := @this: com.bookstore.controller.HomeController;

        userShippingId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserShippingServiceImpl;

        userShipping = virtualinvoke $r2.<com.bookstore.service.impl.UserShippingServiceImpl: com.bookstore.domain.UserShipping findById(java.lang.Long)>(userShippingId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl> = $r2;

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = new com.bookstore.service.impl.UserShippingServiceImpl;

        virtualinvoke $r7.<com.bookstore.service.impl.UserShippingServiceImpl: void removeById(java.lang.Long)>(userShippingId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl> = $r7;

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveShipping", $r14);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String removeCreditCard(java.lang.Long,org.springframework.ui.Model,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: removeCreditCard
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String removeCreditCard(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long creditCardId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserPaymentService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14, $r16;

        this := @this: com.bookstore.controller.HomeController;

        creditCardId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>;

        userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentService userPaymentService>;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId);

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r7 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl, $r2=com.bookstore.service.impl.UserPaymentServiceImpl, $r7=com.bookstore.service.impl.UserPaymentServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = creditCardId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeCreditCard(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long creditCardId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserPaymentService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14, $r16;

        this := @this: com.bookstore.controller.HomeController;

        creditCardId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId);

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId);

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = creditCardId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment = interfaceinvoke $r2.<com.bookstore.service.impl.UserPaymentService: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeCreditCard(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long creditCardId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserPaymentService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14, $r16;

        this := @this: com.bookstore.controller.HomeController;

        creditCardId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        userPayment = virtualinvoke $r2.<com.bookstore.service.impl.UserPaymentServiceImpl: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl> = $r2;

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId);

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = creditCardId := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter2: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userPayment = virtualinvoke $r2.<com.bookstore.service.impl.UserPaymentServiceImpl: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl> = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $r3 == $r5 goto interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "badRequestPage"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserPaymentService: void removeById(java.lang.Long)>(creditCardId)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String removeCreditCard(java.lang.Long, org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.HomeController this;
        java.lang.Long creditCardId, $r3, $r5;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user, $r4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.UserPaymentService $r2, $r7;
        java.util.List $r8, $r10;
        java.lang.Boolean $r12, $r14, $r16;

        this := @this: com.bookstore.controller.HomeController;

        creditCardId := @parameter0: java.lang.Long;

        model := @parameter1: org.springframework.ui.Model;

        principal := @parameter2: java.security.Principal;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        $r2 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        userPayment = virtualinvoke $r2.<com.bookstore.service.impl.UserPaymentServiceImpl: com.bookstore.domain.UserPayment findById(java.lang.Long)>(creditCardId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl> = $r2;

        $r3 = virtualinvoke user.<com.bookstore.domain.User: java.lang.Long getId()>();

        $r4 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: com.bookstore.domain.User getUser()>();

        $r5 = virtualinvoke $r4.<com.bookstore.domain.User: java.lang.Long getId()>();

        if $r3 == $r5 goto label1;

        return "badRequestPage";

     label1:
        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", user);

        $r7 = new com.bookstore.service.impl.UserPaymentServiceImpl;

        virtualinvoke $r7.<com.bookstore.service.impl.UserPaymentServiceImpl: void removeById(java.lang.Long)>(creditCardId);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl> = $r7;

        $r8 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userPaymentList", $r8);

        $r10 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("userShippingList", $r10);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfShippingAddresses", $r12);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveBilling", $r14);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("listOfCreditCards", $r16);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String newUser(org.springframework.ui.Model,java.util.Locale,java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: newUser
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String newUser(org.springframework.ui.Model, java.util.Locale, java.lang.String)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.util.Locale locale;
        java.lang.String token, username, $r3, message;
        com.bookstore.domain.security.PasswordResetToken passwordResetToken;
        org.springframework.security.core.userdetails.UserDetails userDetails;
        org.springframework.security.authentication.UsernamePasswordAuthenticationToken authentication, $r2;
        com.bookstore.service.impl.UserService $r0;
        com.bookstore.service.impl.UserSecurityService $r1;
        java.util.Collection $r4;
        org.springframework.security.core.context.SecurityContext $r5;
        java.lang.Boolean $r7;
        com.bookstore.domain.User message;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        locale := @parameter1: java.util.Locale;

        token := @parameter2: java.lang.String;

        $r0 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        passwordResetToken = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.security.PasswordResetToken getPasswordResetToken(java.lang.String)>(token);

        if passwordResetToken != null goto label1;

        message = "invalid Token.";

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("message", "invalid Token.");

        return "redirect:/badRequest";

     label1:
        message = virtualinvoke passwordResetToken.<com.bookstore.domain.security.PasswordResetToken: com.bookstore.domain.User getUser()>();

        username = virtualinvoke message.<com.bookstore.domain.User: java.lang.String getUsername()>();

        $r1 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>;

        userDetails = virtualinvoke $r1.<com.bookstore.service.impl.UserSecurityService: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)>(username);

        $r2 = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

        $r3 = interfaceinvoke userDetails.<org.springframework.security.core.userdetails.UserDetails: java.lang.String getPassword()>();

        $r4 = interfaceinvoke userDetails.<org.springframework.security.core.userdetails.UserDetails: java.util.Collection getAuthorities()>();

        specialinvoke $r2.<org.springframework.security.authentication.UsernamePasswordAuthenticationToken: void <init>(java.lang.Object,java.lang.Object,java.util.Collection)>(userDetails, $r3, $r4);

        authentication = $r2;

        $r5 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>();

        interfaceinvoke $r5.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r2);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", message);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r7);

        return "myProfile";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter0: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = locale := @parameter1: java.util.Locale
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = token := @parameter2: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = passwordResetToken = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.security.PasswordResetToken getPasswordResetToken(java.lang.String)>(token)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if passwordResetToken != null goto message = virtualinvoke passwordResetToken.<com.bookstore.domain.security.PasswordResetToken: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = message = "invalid Token."
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("message", "invalid Token.")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("message", "invalid Token.")
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "redirect:/badRequest"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = message = virtualinvoke passwordResetToken.<com.bookstore.domain.security.PasswordResetToken: com.bookstore.domain.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = username = virtualinvoke message.<com.bookstore.domain.User: java.lang.String getUsername()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = userDetails = virtualinvoke $r1.<com.bookstore.service.impl.UserSecurityService: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)>(username)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = interfaceinvoke userDetails.<org.springframework.security.core.userdetails.UserDetails: java.lang.String getPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = userDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = interfaceinvoke userDetails.<org.springframework.security.core.userdetails.UserDetails: java.util.Collection getAuthorities()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = userDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r2.<org.springframework.security.authentication.UsernamePasswordAuthenticationToken: void <init>(java.lang.Object,java.lang.Object,java.util.Collection)>(userDetails, $r3, $r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = authentication = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r5.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r5.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r5
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", message)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", message)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r7)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myProfile"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String newUser(org.springframework.ui.Model, java.util.Locale, java.lang.String)
    {
        com.bookstore.controller.HomeController this;
        org.springframework.ui.Model model;
        java.util.Locale locale;
        java.lang.String token, username, $r3, message;
        com.bookstore.domain.security.PasswordResetToken passwordResetToken;
        org.springframework.security.core.userdetails.UserDetails userDetails;
        org.springframework.security.authentication.UsernamePasswordAuthenticationToken authentication, $r2;
        com.bookstore.service.impl.UserService $r0;
        com.bookstore.service.impl.UserSecurityService $r1;
        java.util.Collection $r4;
        org.springframework.security.core.context.SecurityContext $r5;
        java.lang.Boolean $r7;
        com.bookstore.domain.User message;

        this := @this: com.bookstore.controller.HomeController;

        model := @parameter0: org.springframework.ui.Model;

        locale := @parameter1: java.util.Locale;

        token := @parameter2: java.lang.String;

        $r0 = new com.bookstore.service.impl.UserServiceImpl;

        passwordResetToken = virtualinvoke $r0.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.security.PasswordResetToken getPasswordResetToken(java.lang.String)>(token);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r0;

        if passwordResetToken != null goto label1;

        message = "invalid Token.";

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("message", "invalid Token.");

        return "redirect:/badRequest";

     label1:
        message = virtualinvoke passwordResetToken.<com.bookstore.domain.security.PasswordResetToken: com.bookstore.domain.User getUser()>();

        username = virtualinvoke message.<com.bookstore.domain.User: java.lang.String getUsername()>();

        $r1 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>;

        userDetails = virtualinvoke $r1.<com.bookstore.service.impl.UserSecurityService: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)>(username);

        $r2 = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

        $r3 = interfaceinvoke userDetails.<org.springframework.security.core.userdetails.UserDetails: java.lang.String getPassword()>();

        $r4 = interfaceinvoke userDetails.<org.springframework.security.core.userdetails.UserDetails: java.util.Collection getAuthorities()>();

        specialinvoke $r2.<org.springframework.security.authentication.UsernamePasswordAuthenticationToken: void <init>(java.lang.Object,java.lang.Object,java.util.Collection)>(userDetails, $r3, $r4);

        authentication = $r2;

        $r5 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>();

        interfaceinvoke $r5.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r2);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("user", message);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveEdit", $r7);

        return "myProfile";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.controller.HomeController: java.lang.String forgetPassword(javax.servlet.http.HttpServletRequest,java.lang.String,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: forgetPassword
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String forgetPassword(javax.servlet.http.HttpServletRequest, java.lang.String, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String email, password, encryptedPassword, token, appUrl, $r10, $r14;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user;
        org.springframework.mail.SimpleMailMessage newEmail;
        java.lang.Boolean $r0, $r19, $r21;
        com.bookstore.service.impl.UserService $r2, $r4, $r7;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r3;
        java.util.UUID $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r15;
        int $i0;
        com.bookstore.utility.MailConstructor $r16;
        java.util.Locale $r17;
        org.springframework.mail.javamail.JavaMailSender $r18;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        email := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0);

        $r2 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        user = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByEmail(java.lang.String)>(email);

        if user != null goto label1;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21);

        return "myAccount";

     label1:
        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r3 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r3.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke user.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r4 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User save(com.bookstore.domain.User)>(user);

        $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        token = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>();

        $r7 = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserService userService>;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r10 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: int getServerPort()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        appUrl = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>;

        $r17 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        newEmail = virtualinvoke $r16.<com.bookstore.utility.MailConstructor: org.springframework.mail.SimpleMailMessage constructResetTokenEmail(java.lang.String,java.util.Locale,java.lang.String,com.bookstore.domain.User,java.lang.String)>(appUrl, $r17, token, user, password);

        $r18 = this.<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>;

        interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19);

        return "myAccount";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.bookstore.controller.HomeController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.controller.ShoppingCartController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.BookstoreApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.CommandLineRunner
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.config.SecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.ShoppingCartRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.CartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserPaymentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookToCartItemRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.UserShippingRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.PasswordResetTokenRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.repository.BookRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.repository.CrudRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.USConstants
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.SecurityUtility
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.utility.MailConstructor
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserSecurityService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetailsService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserPaymentService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.BookService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): $r7 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.ShoppingCartService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.CartItemServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.bookstore.service.impl.CartItemService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.service.impl.UserShippingService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Book
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShoppingCart
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Payment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.CartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BillingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.Order
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.User
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.userdetails.UserDetails
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.BookToCartItem
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.ShippingAddress
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.UserRole
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.PasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Authority
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.core.GrantedAuthority
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.security.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): com.bookstore.domain.UserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r2=com.bookstore.service.impl.UserServiceImpl, $r4=com.bookstore.service.impl.UserServiceImpl, $r7=com.bookstore.service.impl.UserServiceImpl]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter0: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = email := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r2.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByEmail(java.lang.String)>(email)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if user != null goto password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = encryptedPassword = virtualinvoke $r3.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke user.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User save(com.bookstore.domain.User)>(user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User save(com.bookstore.domain.User)>(user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = token = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = new java.lang.StringBuilder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: int getServerPort()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = appUrl = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = newEmail = virtualinvoke $r16.<com.bookstore.utility.MailConstructor: org.springframework.mail.SimpleMailMessage constructResetTokenEmail(java.lang.String,java.util.Locale,java.lang.String,com.bookstore.domain.User,java.lang.String)>(appUrl, $r17, token, user, password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r18 = this.<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r18
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String forgetPassword(javax.servlet.http.HttpServletRequest, java.lang.String, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String email, password, encryptedPassword, token, appUrl, $r10, $r14;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user;
        org.springframework.mail.SimpleMailMessage newEmail;
        java.lang.Boolean $r0, $r19, $r21;
        com.bookstore.service.impl.UserService $r2, $r4, $r7;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r3;
        java.util.UUID $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r15;
        int $i0;
        com.bookstore.utility.MailConstructor $r16;
        java.util.Locale $r17;
        org.springframework.mail.javamail.JavaMailSender $r18;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        email := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0);

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        user = virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(email);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2;

        if user != null goto label1;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21);

        return "myAccount";

     label1:
        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r3 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r3.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke user.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r4 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User save(com.bookstore.domain.User)>(user);

        $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        token = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>();

        $r7 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r10 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: int getServerPort()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        appUrl = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>;

        $r17 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        newEmail = virtualinvoke $r16.<com.bookstore.utility.MailConstructor: org.springframework.mail.SimpleMailMessage constructResetTokenEmail(java.lang.String,java.util.Locale,java.lang.String,com.bookstore.domain.User,java.lang.String)>(appUrl, $r17, token, user, password);

        $r18 = this.<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>;

        interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19);

        return "myAccount";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter0: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = email := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(email)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if user != null goto password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = encryptedPassword = virtualinvoke $r3.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke user.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User save(com.bookstore.domain.User)>(user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r4.<com.bookstore.service.impl.UserService: com.bookstore.domain.User save(com.bookstore.domain.User)>(user)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = token = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = new java.lang.StringBuilder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: int getServerPort()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = appUrl = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = newEmail = virtualinvoke $r16.<com.bookstore.utility.MailConstructor: org.springframework.mail.SimpleMailMessage constructResetTokenEmail(java.lang.String,java.util.Locale,java.lang.String,com.bookstore.domain.User,java.lang.String)>(appUrl, $r17, token, user, password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r18 = this.<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r18
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String forgetPassword(javax.servlet.http.HttpServletRequest, java.lang.String, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String email, password, encryptedPassword, token, appUrl, $r10, $r14;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user;
        org.springframework.mail.SimpleMailMessage newEmail;
        java.lang.Boolean $r0, $r19, $r21;
        com.bookstore.service.impl.UserService $r2, $r4, $r7;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r3;
        java.util.UUID $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r15;
        int $i0;
        com.bookstore.utility.MailConstructor $r16;
        java.util.Locale $r17;
        org.springframework.mail.javamail.JavaMailSender $r18;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        email := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0);

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        user = virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(email);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2;

        if user != null goto label1;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21);

        return "myAccount";

     label1:
        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r3 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r3.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke user.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r4 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User save(com.bookstore.domain.User)>(user);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4;

        $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        token = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>();

        $r7 = new com.bookstore.service.impl.UserServiceImpl;

        interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r10 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: int getServerPort()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        appUrl = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>;

        $r17 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        newEmail = virtualinvoke $r16.<com.bookstore.utility.MailConstructor: org.springframework.mail.SimpleMailMessage constructResetTokenEmail(java.lang.String,java.util.Locale,java.lang.String,com.bookstore.domain.User,java.lang.String)>(appUrl, $r17, token, user, password);

        $r18 = this.<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>;

        interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19);

        return "myAccount";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.bookstore.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = request := @parameter0: javax.servlet.http.HttpServletRequest
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = email := @parameter1: java.lang.String
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(email)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if user != null goto password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = encryptedPassword = virtualinvoke $r3.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke user.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User save(com.bookstore.domain.User)>(user)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = token = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = new com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r7.<com.bookstore.service.impl.UserService: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>, <com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserSecurityService userSecurityService>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserShippingServiceImpl userShippingServiceImpl>, <com.bookstore.controller.HomeController: com.bookstore.service.impl.UserPaymentServiceImpl userPaymentServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.bookstore.service.impl.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r8 = new java.lang.StringBuilder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r10 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $i0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: int getServerPort()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r14 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = appUrl = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r17 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = request
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = newEmail = virtualinvoke $r16.<com.bookstore.utility.MailConstructor: org.springframework.mail.SimpleMailMessage constructResetTokenEmail(java.lang.String,java.util.Locale,java.lang.String,com.bookstore.domain.User,java.lang.String)>(appUrl, $r17, token, user, password)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r18 = this.<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r18
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "myAccount"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String forgetPassword(javax.servlet.http.HttpServletRequest, java.lang.String, org.springframework.ui.Model)
    {
        com.bookstore.controller.HomeController this;
        javax.servlet.http.HttpServletRequest request;
        java.lang.String email, password, encryptedPassword, token, appUrl, $r10, $r14;
        org.springframework.ui.Model model;
        com.bookstore.domain.User user;
        org.springframework.mail.SimpleMailMessage newEmail;
        java.lang.Boolean $r0, $r19, $r21;
        com.bookstore.service.impl.UserService $r2, $r4, $r7;
        org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder $r3;
        java.util.UUID $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r15;
        int $i0;
        com.bookstore.utility.MailConstructor $r16;
        java.util.Locale $r17;
        org.springframework.mail.javamail.JavaMailSender $r18;

        this := @this: com.bookstore.controller.HomeController;

        request := @parameter0: javax.servlet.http.HttpServletRequest;

        email := @parameter1: java.lang.String;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("classActiveForgetPassword", $r0);

        $r2 = new com.bookstore.service.impl.UserServiceImpl;

        user = virtualinvoke $r2.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>(email);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r2;

        if user != null goto label1;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("emailNotExists", $r21);

        return "myAccount";

     label1:
        password = staticinvoke <com.bookstore.utility.SecurityUtility: java.lang.String randomPassword()>();

        $r3 = staticinvoke <com.bookstore.utility.SecurityUtility: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder()>();

        encryptedPassword = virtualinvoke $r3.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>(password);

        virtualinvoke user.<com.bookstore.domain.User: void setPassword(java.lang.String)>(encryptedPassword);

        $r4 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r4.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User save(com.bookstore.domain.User)>(user);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r4;

        $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        token = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>();

        $r7 = new com.bookstore.service.impl.UserServiceImpl;

        virtualinvoke $r7.<com.bookstore.service.impl.UserServiceImpl: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>(user, token);

        this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.UserServiceImpl userServiceImpl> = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r10 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: int getServerPort()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        appUrl = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = this.<com.bookstore.controller.HomeController: com.bookstore.utility.MailConstructor mailConstructor>;

        $r17 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        newEmail = virtualinvoke $r16.<com.bookstore.utility.MailConstructor: org.springframework.mail.SimpleMailMessage constructResetTokenEmail(java.lang.String,java.util.Locale,java.lang.String,com.bookstore.domain.User,java.lang.String)>(appUrl, $r17, token, user, password);

        $r18 = this.<com.bookstore.controller.HomeController: org.springframework.mail.javamail.JavaMailSender mailSender>;

        interfaceinvoke $r18.<org.springframework.mail.javamail.JavaMailSender: void send(org.springframework.mail.SimpleMailMessage)>(newEmail);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("forgetPasswordEmailSent", $r19);

        return "myAccount";
    }

FuncStackAnalyzer.java: constructDIRForStack(): FSA: constructDIRsForStack: Stack = [com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model), com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()]
FuncStackAnalyzer.java: constructDIRForStack(): top function sig: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
FuncStackAnalyzer.java: constructDIRForStack(): body rootmethod before analysis: [this := @this: com.bookstore.controller.HomeController, model := @parameter0: org.springframework.ui.Model, $r0 = new com.bookstore.service.impl.BookServiceImpl, bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>(), this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0, interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList), return "bookshelf"]
FuncStackAnalyzer.java: constructDIRForStack(): Top level func i.e. com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)has typemap: {}
ARegion.java: analyze(): set cur method of analyzer to: bookShelf
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.bookstore.controller.HomeController, model := @parameter0: org.springframework.ui.Model, $r0 = new com.bookstore.service.impl.BookServiceImpl, bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>(), this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0, interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList), return "bookshelf"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.bookstore.controller.HomeController
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = model := @parameter0: org.springframework.ui.Model
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = new com.bookstore.service.impl.BookServiceImpl
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = bookList = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findAll
construct/Utils.java: parseInvokeExpr(): methodSignature = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>
construct/Utils.java: parseObjectInvoke(): methodName = findAll
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
DIRRegionAnalyzer.java: valIsRepository(): fpar val: $r0
DIRRegionAnalyzer.java: valIsRepository(): refType: com.bookstore.service.impl.BookService
DIRRegionAnalyzer.java: valIsRepository(): valClass: com.bookstore.service.impl.BookService
DIRRegionAnalyzer.java: valIsRepository(): ret: false
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [com.bookstore.service.impl.BookServiceImpl: java.util.List findAll(), com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: findAll
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.bookstore.service.impl.BookServiceImpl, $r0 = this.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.repository.BookRepository bookRepository>, $r1 = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>(), $r2 = (java.util.List) $r1, return $r2]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.bookstore.service.impl.BookServiceImpl
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<com.bookstore.service.impl.BookServiceImpl: com.bookstore.repository.BookRepository bookRepository>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.bookRepository
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r1 = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findAll
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Object: java.lang.Iterable findAll()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Object: java.lang.Iterable findAll()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>
construct/Utils.java: parseObjectInvoke(): methodName = findAll
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Object: java.lang.Iterable findAll()
DIRRegionAnalyzer.java: valIsRepository(): fpar val: $r0
DIRRegionAnalyzer.java: valIsRepository(): refType: com.bookstore.repository.BookRepository
DIRRegionAnalyzer.java: valIsRepository(): valClass: com.bookstore.repository.BookRepository
DIRRegionAnalyzer.java: valIsRepository(): ret: true
construct/Utils.java: parseObjectInvoke(): Case : findAll
Utils.java: getRelExpForMethod(): getRelExpForMethod: interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
Utils.java: getRelExpForMethod(): actualargs = []
Utils.java: getRelExpForMethod(): methodInvoked = <java.lang.Object: java.lang.Iterable findAll()>
Utils.java: getRelExpForMethod(): taglist: 
[]
construct/Utils.java: parseObjectInvoke(): relExpAndJoinedField = null
AccessPath.java: getCollectionEntityType(): interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
AccessPath.java: getCollectionEntityType(): []
AccessPath.java: getCollectionEntityType(): Collection Entity Type = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
AccessPath.java: isReturnTypeEntity(): check :java.lang.Iterable
AccessPath.java: isReturnTypeEntity(): tags = []
AccessPath.java: getCollectionEntityType(): interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
AccessPath.java: getCollectionEntityType(): []
AccessPath.java: getCollectionEntityType(): Collection Entity Type = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): leftType = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): leftType : com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r1
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
AccessPath.java: isReturnTypeEntity(): check :java.lang.Iterable
AccessPath.java: isReturnTypeEntity(): tags = []
AccessPath.java: getCollectionEntityType(): interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
AccessPath.java: getCollectionEntityType(): []
AccessPath.java: getCollectionEntityType(): Collection Entity Type = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): left type = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): java.lang.Iterable
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.lang.Iterable
DIRRegionAnalyzer.java: constructDIR(): method sig = java.lang.Object: java.lang.Iterable findAll()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{java.lang.Object: java.lang.Iterable findAll()=~~~ return ~~~
Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ return ~~~
Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [Book.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Iterable findAll()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.bookstore.service.impl.BookServiceImpl: java.util.List findAll(), com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)]
DIRRegionAnalyzer.java: constructDIR(): leftType = com.bookstore.domain.Book
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findAll
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.lang.Object: java.lang.Iterable findAll()

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: com.bookstore.domain.Book fields = [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String title>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String author>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publisher>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publicationDate>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String language>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String category>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int numberOfPages>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String format>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String isbn>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double shippingWeight>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double listPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double ourPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: boolean active>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int inStockNumber>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>  type=MultipartFile
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.util.List bookToCartItemsList>  type=BookToCartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>  type=CartItem
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r1, com.bookstore.domain.Book
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r1.id, $r1.title, $r1.author, $r1.publisher, $r1.publicationDate, $r1.language, $r1.category, $r1.numberOfPages, $r1.format, $r1.isbn, $r1.shippingWeight, $r1.listPrice, $r1.ourPrice, $r1.active, $r1.description, $r1.inStockNumber, $r1.bookToCartItemsList, $r1.cartItem, $r1.cartItem.id, $r1.cartItem.qty, $r1.cartItem.subtotal, $r1.cartItem.book, $r1.cartItem.book.id, $r1.cartItem.book.title, $r1.cartItem.book.author, $r1.cartItem.book.publisher, $r1.cartItem.book.publicationDate, $r1.cartItem.book.language, $r1.cartItem.book.category, $r1.cartItem.book.numberOfPages, $r1.cartItem.book.format, $r1.cartItem.book.isbn, $r1.cartItem.book.shippingWeight, $r1.cartItem.book.listPrice, $r1.cartItem.book.ourPrice, $r1.cartItem.book.active, $r1.cartItem.book.description, $r1.cartItem.book.inStockNumber, $r1.cartItem.book.bookToCartItemsList, $r1.cartItembook.cartItem, $r1.cartItem.bookToCartItemList, $r1.cartItem.shoppingCart, $r1.cartItem.shoppingCart.id, $r1.cartItem.shoppingCart.GrandTotal, $r1.cartItem.shoppingCart.cartItemList, $r1.cartItem.shoppingCart.user, $r1.cartItem.order, $r1.cartItem.order.id, $r1.cartItem.order.shippingMethod, $r1.cartItem.order.orederStatus, $r1.cartItem.order.orderTotal, $r1.cartItem.order.cartItemList, $r1.cartItem.order.shippingAddress, $r1.cartItem.order.payment, $r1.cartItem.order.billingAddress, $r1.cartItem.order.user]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [java.lang.Object: java.lang.Iterable findAll()]
DIRRegionAnalyzer.java: constructDIR(): callee = java.lang.Object: java.lang.Iterable findAll()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
DIRRegionAnalyzer.java: constructDIR(): invokeExpr = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
DIRRegionAnalyzer.java: constructDIR(): return type collection
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r0.<com.bookstore.repository.BookRepository: java.lang.Iterable findAll()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Iterable findAll()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.bookstore.service.impl.BookServiceImpl: java.util.List findAll(), com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)]
DIRRegionAnalyzer.java: constructDIR(): key= return
 value= Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Book
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.Book
NRA.java: processTableandFields: com.bookstore.domain.Book fields = [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String title>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String author>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publisher>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publicationDate>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String language>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String category>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int numberOfPages>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String format>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String isbn>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double shippingWeight>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double listPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double ourPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: boolean active>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int inStockNumber>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>  type=MultipartFile
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.util.List bookToCartItemsList>  type=BookToCartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>  type=CartItem
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.Book
NRA.java: genExprNra(): com.bookstore.domain.Book fields= [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: genExprNra(): fields count= 19
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String title>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String author>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String publisher>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String publicationDate>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String language>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String category>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: int numberOfPages>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String format>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String isbn>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double shippingWeight>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double listPrice>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double ourPrice>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: boolean active>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String description>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: columnDefinition value: text

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: int inStockNumber>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Transient; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookImage
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= bookImage
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/Transient;
Construct/Utils.java: bcelActualCollectionFieldType(): Transient field= bookImage
NRA.java: genExprNra(): sfEntity=org.springframework.web.multipart.MultipartFile
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = org.springframework.web.multipart.MultipartFile
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.util.List bookToCartItemsList>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookToCartItemsList
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= bookToCartItemsList
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemsList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Lcom/fasterxml/jackson/annotation/JsonIgnore;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.BookToCartItem
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| BookToCartItem.bookId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): nested field name= bookToCartItemsList
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: com.bookstore.domain.BookToCartItem fields = [<com.bookstore.domain.BookToCartItem: java.lang.Long id>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>]
NRA.java: processTableandFields: sf <com.bookstore.domain.BookToCartItem: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>  type=Book
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: bookId]
NRA.java: processTableandFields: sf <com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>  type=CartItem
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: cartItemId]
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): com.bookstore.domain.BookToCartItem fields= [<com.bookstore.domain.BookToCartItem: java.lang.Long id>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>]
NRA.java: genExprNra(): fields count= 3
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.BookToCartItem: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: bookId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=book
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.BookToCartItem
 fieldName= book
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= book
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.Book
NRA.java: genExprNra(): baseclass = com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.Book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: bookId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.bookId
| Book.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Book
NRA.java: genExprNra(): nested field name= book
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.Book
NRA.java: processTableandFields: com.bookstore.domain.Book fields = [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String title>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String author>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publisher>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publicationDate>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String language>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String category>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int numberOfPages>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String format>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String isbn>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double shippingWeight>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double listPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double ourPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: boolean active>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int inStockNumber>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>  type=MultipartFile
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.util.List bookToCartItemsList>  type=BookToCartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>  type=CartItem
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.Book
NRA.java: genExprNra(): com.bookstore.domain.Book fields= [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: genExprNra(): fields count= 19
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String title>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String author>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String publisher>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String publicationDate>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String language>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String category>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: int numberOfPages>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String format>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String isbn>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double shippingWeight>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double listPrice>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double ourPrice>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: boolean active>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String description>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: columnDefinition value: text

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: int inStockNumber>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Transient; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookImage
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= bookImage
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/Transient;
Construct/Utils.java: bcelActualCollectionFieldType(): Transient field= bookImage
NRA.java: genExprNra(): sfEntity=org.springframework.web.multipart.MultipartFile
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = org.springframework.web.multipart.MultipartFile
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.util.List bookToCartItemsList>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookToCartItemsList
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= bookToCartItemsList
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemsList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Lcom/fasterxml/jackson/annotation/JsonIgnore;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.BookToCartItem
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| BookToCartItem.bookId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: book

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemsList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.CartItem cartItem [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= cartItem
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.CartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.CartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| CartItem.bookId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: book

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.CartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.Book.id), FieldRef(com.bookstore.domain.Book.title), FieldRef(com.bookstore.domain.Book.author), FieldRef(com.bookstore.domain.Book.publisher), FieldRef(com.bookstore.domain.Book.publicationDate), FieldRef(com.bookstore.domain.Book.language), FieldRef(com.bookstore.domain.Book.category), FieldRef(com.bookstore.domain.Book.numberOfPages), FieldRef(com.bookstore.domain.Book.format), FieldRef(com.bookstore.domain.Book.isbn), FieldRef(com.bookstore.domain.Book.shippingWeight), FieldRef(com.bookstore.domain.Book.listPrice), FieldRef(com.bookstore.domain.Book.ourPrice), FieldRef(com.bookstore.domain.Book.active), FieldRef(com.bookstore.domain.Book.description), FieldRef(com.bookstore.domain.Book.inStockNumber), FieldRef(com.bookstore.domain.Book.bookImage), FieldRef(com.bookstore.domain.Book.bookToCartItemsList), FieldRef(com.bookstore.domain.Book.cartItem)]
NRA.java: genExprNra(): projectNode name: BookToCartItem.book=Pi
NRA.java: genExprNra(): nestexpr= BookToCartItem.book=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.Book)
| | Equals
| | | Alpha.bookId
| | | Book.id
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | NullOp
| | NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.BookToCartItem
 fieldName= cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.CartItem cartItem [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= cartItem
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.CartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.CartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: cartItemId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.cartItemId
| CartItem.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.CartItem
NRA.java: genExprNra(): nested field name= cartItem
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.CartItem
NRA.java: processTableandFields: com.bookstore.domain.CartItem fields = [<com.bookstore.domain.CartItem: java.lang.Long id>, <com.bookstore.domain.CartItem: int qty>, <com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>, <com.bookstore.domain.CartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.CartItem: java.util.List bookToCartItemList>, <com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>, <com.bookstore.domain.CartItem: com.bookstore.domain.Order order>]
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: int qty>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: com.bookstore.domain.Book book>  type=Book
NRA.java: getCondFromOneToOne(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: java.util.List bookToCartItemList>  type=BookToCartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: getCondFromOneToMany(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>  type=ShoppingCart
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: shoppingCartId]
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: com.bookstore.domain.Order order>  type=Order
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: orderId]
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.CartItem
NRA.java: genExprNra(): com.bookstore.domain.CartItem fields= [<com.bookstore.domain.CartItem: java.lang.Long id>, <com.bookstore.domain.CartItem: int qty>, <com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>, <com.bookstore.domain.CartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.CartItem: java.util.List bookToCartItemList>, <com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>, <com.bookstore.domain.CartItem: com.bookstore.domain.Order order>]
NRA.java: genExprNra(): fields count= 7
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: int qty>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: com.bookstore.domain.Book book>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: bookId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=book
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= book
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= book
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.Book
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.Book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToOne(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| Book.cartItemId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: bookId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Book
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: java.util.List bookToCartItemList>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookToCartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= bookToCartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Lcom/fasterxml/jackson/annotation/JsonIgnore;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.BookToCartItem
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| BookToCartItem.cartItemId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: shoppingCartId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=shoppingCart
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= shoppingCart
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShoppingCart shoppingCart [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= shoppingCart
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.ShoppingCart
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.ShoppingCart
NRA.java: getJoinedColumn(): joined Column value=  shoppingCartId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: shoppingCartId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.shoppingCartId
| ShoppingCart.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.ShoppingCart
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: com.bookstore.domain.Order order>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=order
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= order
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShoppingCart shoppingCart [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Order order [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= order
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.Order
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.Order
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: orderId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.orderId
| Order.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Order
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.CartItem.id), FieldRef(com.bookstore.domain.CartItem.qty), FieldRef(com.bookstore.domain.CartItem.subtotal), FieldRef(com.bookstore.domain.CartItem.book), FieldRef(com.bookstore.domain.CartItem.bookToCartItemList), FieldRef(com.bookstore.domain.CartItem.shoppingCart), FieldRef(com.bookstore.domain.CartItem.order)]
NRA.java: genExprNra(): projectNode name: BookToCartItem.cartItem=Pi
NRA.java: genExprNra(): nestexpr= BookToCartItem.cartItem=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.CartItem)
| | Equals
| | | Alpha.cartItemId
| | | CartItem.id
| List
| | id
| | qty
| | subtotal
| | NullOp
| | NullOp
| | NullOp
| | NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.BookToCartItem.id), FieldRef(com.bookstore.domain.BookToCartItem.book), FieldRef(com.bookstore.domain.BookToCartItem.cartItem)]
NRA.java: genExprNra(): projectNode name: Book.bookToCartItemsList=Pi
NRA.java: genExprNra(): nestexpr= Book.bookToCartItemsList=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.BookToCartItem)
| | Equals
| | | Alpha.id
| | | BookToCartItem.bookId
| List
| | id
| | BookToCartItem.book=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.Book)
| | | | Equals
| | | | | Alpha.bookId
| | | | | Book.id
| | | List
| | | | id
| | | | title
| | | | author
| | | | publisher
| | | | publicationDate
| | | | language
| | | | category
| | | | numberOfPages
| | | | format
| | | | isbn
| | | | shippingWeight
| | | | listPrice
| | | | ourPrice
| | | | active
| | | | description
| | | | inStockNumber
| | | | bookImage
| | | | NullOp
| | | | NullOp
| | BookToCartItem.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.cartItemId
| | | | | CartItem.id
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: book

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemsList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.CartItem cartItem [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= cartItem
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.CartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.CartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| CartItem.bookId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: book

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.CartItem
NRA.java: genExprNra(): nested field name= cartItem
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.CartItem
NRA.java: processTableandFields: com.bookstore.domain.CartItem fields = [<com.bookstore.domain.CartItem: java.lang.Long id>, <com.bookstore.domain.CartItem: int qty>, <com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>, <com.bookstore.domain.CartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.CartItem: java.util.List bookToCartItemList>, <com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>, <com.bookstore.domain.CartItem: com.bookstore.domain.Order order>]
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: int qty>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: com.bookstore.domain.Book book>  type=Book
NRA.java: getCondFromOneToOne(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: java.util.List bookToCartItemList>  type=BookToCartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: getCondFromOneToMany(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>  type=ShoppingCart
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: shoppingCartId]
NRA.java: processTableandFields: sf <com.bookstore.domain.CartItem: com.bookstore.domain.Order order>  type=Order
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: orderId]
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.CartItem
NRA.java: genExprNra(): com.bookstore.domain.CartItem fields= [<com.bookstore.domain.CartItem: java.lang.Long id>, <com.bookstore.domain.CartItem: int qty>, <com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>, <com.bookstore.domain.CartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.CartItem: java.util.List bookToCartItemList>, <com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>, <com.bookstore.domain.CartItem: com.bookstore.domain.Order order>]
NRA.java: genExprNra(): fields count= 7
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: int qty>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: java.math.BigDecimal subtotal>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: com.bookstore.domain.Book book>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: bookId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=book
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= book
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= book
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.Book
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.Book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToOne(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| Book.cartItemId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: bookId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Book
NRA.java: genExprNra(): nested field name= book
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.Book
NRA.java: processTableandFields: com.bookstore.domain.Book fields = [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String title>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String author>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publisher>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publicationDate>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String language>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String category>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int numberOfPages>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String format>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String isbn>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double shippingWeight>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double listPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double ourPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: boolean active>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int inStockNumber>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>  type=MultipartFile
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.util.List bookToCartItemsList>  type=BookToCartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>  type=CartItem
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.Book
NRA.java: genExprNra(): com.bookstore.domain.Book fields= [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: genExprNra(): fields count= 19
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String title>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String author>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String publisher>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String publicationDate>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String language>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String category>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: int numberOfPages>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String format>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String isbn>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double shippingWeight>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double listPrice>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: double ourPrice>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: boolean active>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.lang.String description>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: columnDefinition value: text

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: int inStockNumber>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Transient; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookImage
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= bookImage
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/Transient;
Construct/Utils.java: bcelActualCollectionFieldType(): Transient field= bookImage
NRA.java: genExprNra(): sfEntity=org.springframework.web.multipart.MultipartFile
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = org.springframework.web.multipart.MultipartFile
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: java.util.List bookToCartItemsList>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookToCartItemsList
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= bookToCartItemsList
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemsList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Lcom/fasterxml/jackson/annotation/JsonIgnore;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.BookToCartItem
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| BookToCartItem.bookId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: book

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Book
 fieldName= cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String title
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String author
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publisher
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String publicationDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String language
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String category
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int numberOfPages
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String format
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String isbn
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double shippingWeight
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double listPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private double ourPrice
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private boolean active
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String description [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int inStockNumber
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.web.multipart.MultipartFile bookImage [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemsList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.CartItem cartItem [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= cartItem
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.CartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Book
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.CartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| CartItem.bookId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: book

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.CartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.Book.id), FieldRef(com.bookstore.domain.Book.title), FieldRef(com.bookstore.domain.Book.author), FieldRef(com.bookstore.domain.Book.publisher), FieldRef(com.bookstore.domain.Book.publicationDate), FieldRef(com.bookstore.domain.Book.language), FieldRef(com.bookstore.domain.Book.category), FieldRef(com.bookstore.domain.Book.numberOfPages), FieldRef(com.bookstore.domain.Book.format), FieldRef(com.bookstore.domain.Book.isbn), FieldRef(com.bookstore.domain.Book.shippingWeight), FieldRef(com.bookstore.domain.Book.listPrice), FieldRef(com.bookstore.domain.Book.ourPrice), FieldRef(com.bookstore.domain.Book.active), FieldRef(com.bookstore.domain.Book.description), FieldRef(com.bookstore.domain.Book.inStockNumber), FieldRef(com.bookstore.domain.Book.bookImage), FieldRef(com.bookstore.domain.Book.bookToCartItemsList), FieldRef(com.bookstore.domain.Book.cartItem)]
NRA.java: genExprNra(): projectNode name: CartItem.book=Pi
NRA.java: genExprNra(): nestexpr= CartItem.book=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.Book)
| | Equals
| | | Alpha.id
| | | Book.cartItemId
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | NullOp
| | NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: java.util.List bookToCartItemList>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: cartItem

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=bookToCartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= bookToCartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Lcom/fasterxml/jackson/annotation/JsonIgnore;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.BookToCartItem
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= cartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| BookToCartItem.cartItemId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): nested field name= bookToCartItemList
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: com.bookstore.domain.BookToCartItem fields = [<com.bookstore.domain.BookToCartItem: java.lang.Long id>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>]
NRA.java: processTableandFields: sf <com.bookstore.domain.BookToCartItem: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>  type=Book
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: bookId]
NRA.java: processTableandFields: sf <com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>  type=CartItem
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: cartItemId]
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): com.bookstore.domain.BookToCartItem fields= [<com.bookstore.domain.BookToCartItem: java.lang.Long id>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>, <com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>]
NRA.java: genExprNra(): fields count= 3
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.BookToCartItem: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.BookToCartItem: com.bookstore.domain.Book book>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: bookId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=book
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.BookToCartItem
 fieldName= book
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= book
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.Book
NRA.java: genExprNra(): baseclass = com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.Book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: bookId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.bookId
| Book.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Book
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.BookToCartItem: com.bookstore.domain.CartItem cartItem>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: cartItemId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.BookToCartItem
 fieldName= cartItem
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.CartItem cartItem [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= cartItem
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.CartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.BookToCartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.CartItem
NRA.java: getJoinedColumn(): joined Column value=  cartItemId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: cartItemId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.cartItemId
| CartItem.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.CartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.BookToCartItem.id), FieldRef(com.bookstore.domain.BookToCartItem.book), FieldRef(com.bookstore.domain.BookToCartItem.cartItem)]
NRA.java: genExprNra(): projectNode name: CartItem.bookToCartItemList=Pi
NRA.java: genExprNra(): nestexpr= CartItem.bookToCartItemList=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.BookToCartItem)
| | Equals
| | | Alpha.id
| | | BookToCartItem.cartItemId
| List
| | id
| | NullOp
| | NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: com.bookstore.domain.ShoppingCart shoppingCart>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: shoppingCartId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=shoppingCart
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= shoppingCart
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShoppingCart shoppingCart [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= shoppingCart
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.ShoppingCart
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.ShoppingCart
NRA.java: getJoinedColumn(): joined Column value=  shoppingCartId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: shoppingCartId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.shoppingCartId
| ShoppingCart.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.ShoppingCart
NRA.java: genExprNra(): nested field name= shoppingCart
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.ShoppingCart
NRA.java: processTableandFields: com.bookstore.domain.ShoppingCart fields = [<com.bookstore.domain.ShoppingCart: java.lang.Long id>, <com.bookstore.domain.ShoppingCart: java.math.BigDecimal GrandTotal>, <com.bookstore.domain.ShoppingCart: java.util.List cartItemList>, <com.bookstore.domain.ShoppingCart: com.bookstore.domain.User user>]
NRA.java: processTableandFields: sf <com.bookstore.domain.ShoppingCart: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.ShoppingCart: java.math.BigDecimal GrandTotal>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: shoppingCart

]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.CartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.ShoppingCart: java.util.List cartItemList>  type=CartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: shoppingCart

]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.CartItem
NRA.java: getCondFromOneToMany(): mappedBy= shoppingCart
NRA.java: getJoinedColumn(): joined Column value=  shoppingCartId
NRA.java: processTableandFields: sf <com.bookstore.domain.ShoppingCart: com.bookstore.domain.User user>  type=User
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.ShoppingCart
NRA.java: genExprNra(): com.bookstore.domain.ShoppingCart fields= [<com.bookstore.domain.ShoppingCart: java.lang.Long id>, <com.bookstore.domain.ShoppingCart: java.math.BigDecimal GrandTotal>, <com.bookstore.domain.ShoppingCart: java.util.List cartItemList>, <com.bookstore.domain.ShoppingCart: com.bookstore.domain.User user>]
NRA.java: genExprNra(): fields count= 4
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.ShoppingCart: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.ShoppingCart: java.math.BigDecimal GrandTotal>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.ShoppingCart: java.util.List cartItemList>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: shoppingCart

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=cartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.ShoppingCart
 fieldName= cartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal GrandTotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List cartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.CartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.ShoppingCart
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.CartItem
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= shoppingCart
NRA.java: getJoinedColumn(): joined Column value=  shoppingCartId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| CartItem.shoppingCartId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.CartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.ShoppingCart: com.bookstore.domain.User user>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: userId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=user
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.ShoppingCart
 fieldName= user
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal GrandTotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List cartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.User user [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= user
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.User
NRA.java: genExprNra(): baseclass = com.bookstore.domain.ShoppingCart
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.User
NRA.java: getJoinedColumn(): joined Column value=  userId
NRA.java: getCondFromOneToOne(): join condition = Equals
| lhs.lhs
| rhs.rhs
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: userId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.User
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.ShoppingCart.id), FieldRef(com.bookstore.domain.ShoppingCart.GrandTotal), FieldRef(com.bookstore.domain.ShoppingCart.cartItemList), FieldRef(com.bookstore.domain.ShoppingCart.user)]
NRA.java: genExprNra(): projectNode name: CartItem.shoppingCart=Pi
NRA.java: genExprNra(): nestexpr= CartItem.shoppingCart=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.ShoppingCart)
| | Equals
| | | Alpha.shoppingCartId
| | | ShoppingCart.id
| List
| | id
| | GrandTotal
| | NullOp
| | NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.CartItem: com.bookstore.domain.Order order>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=order
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.CartItem
 fieldName= order
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int qty
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal subtotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Book book [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List bookToCartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShoppingCart shoppingCart [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Order order [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= order
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.Order
NRA.java: genExprNra(): baseclass = com.bookstore.domain.CartItem
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.Order
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: orderId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.orderId
| Order.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Order
NRA.java: genExprNra(): nested field name= order
NRA.java: genExprNra(): nested Entity = com.bookstore.domain.Order
NRA.java: processTableandFields: com.bookstore.domain.Order fields = [<com.bookstore.domain.Order: java.lang.Long id>, <com.bookstore.domain.Order: java.util.Date orderDate>, <com.bookstore.domain.Order: java.util.Date shippingDate>, <com.bookstore.domain.Order: java.lang.String shippingMethod>, <com.bookstore.domain.Order: java.lang.String orederStatus>, <com.bookstore.domain.Order: java.math.BigDecimal orderTotal>, <com.bookstore.domain.Order: java.util.List cartItemList>, <com.bookstore.domain.Order: com.bookstore.domain.ShippingAddress shippingAddress>, <com.bookstore.domain.Order: com.bookstore.domain.Payment payment>, <com.bookstore.domain.Order: com.bookstore.domain.BillingAddress billingAddress>, <com.bookstore.domain.Order: com.bookstore.domain.User user>]
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: java.util.Date orderDate>  type=Date
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: java.util.Date shippingDate>  type=Date
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: java.lang.String shippingMethod>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: java.lang.String orederStatus>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: java.math.BigDecimal orderTotal>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.CartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: java.util.List cartItemList>  type=CartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.CartItem
NRA.java: getCondFromOneToMany(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: com.bookstore.domain.ShippingAddress shippingAddress>  type=ShippingAddress
NRA.java: getCondFromOneToOne(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  order_id
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: com.bookstore.domain.Payment payment>  type=Payment
NRA.java: getCondFromOneToOne(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  order_id
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: com.bookstore.domain.BillingAddress billingAddress>  type=BillingAddress
NRA.java: getCondFromOneToOne(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  order_id
NRA.java: processTableandFields: sf <com.bookstore.domain.Order: com.bookstore.domain.User user>  type=User
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: user_id]
NRA.java: genExprNra(): From soot typeclass= com.bookstore.domain.Order
NRA.java: genExprNra(): com.bookstore.domain.Order fields= [<com.bookstore.domain.Order: java.lang.Long id>, <com.bookstore.domain.Order: java.util.Date orderDate>, <com.bookstore.domain.Order: java.util.Date shippingDate>, <com.bookstore.domain.Order: java.lang.String shippingMethod>, <com.bookstore.domain.Order: java.lang.String orederStatus>, <com.bookstore.domain.Order: java.math.BigDecimal orderTotal>, <com.bookstore.domain.Order: java.util.List cartItemList>, <com.bookstore.domain.Order: com.bookstore.domain.ShippingAddress shippingAddress>, <com.bookstore.domain.Order: com.bookstore.domain.Payment payment>, <com.bookstore.domain.Order: com.bookstore.domain.BillingAddress billingAddress>, <com.bookstore.domain.Order: com.bookstore.domain.User user>]
NRA.java: genExprNra(): fields count= 11
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: java.lang.Long id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: java.util.Date orderDate>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: java.util.Date shippingDate>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: java.lang.String shippingMethod>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: java.lang.String orederStatus>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: java.math.BigDecimal orderTotal>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: java.util.List cartItemList>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=cartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Order
 fieldName= cartItemList
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date orderDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date shippingDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String shippingMethod
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String orederStatus
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal orderTotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List cartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.CartItem
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Order
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.CartItem
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| CartItem.orderId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.CartItem
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: com.bookstore.domain.ShippingAddress shippingAddress>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=shippingAddress
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Order
 fieldName= shippingAddress
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date orderDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date shippingDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String shippingMethod
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String orederStatus
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal orderTotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List cartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShippingAddress shippingAddress [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= shippingAddress
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.ShippingAddress
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Order
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.ShippingAddress
NRA.java: getCondFromOneToOne(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  order_id
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| ShippingAddress.order_id
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.ShippingAddress
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: com.bookstore.domain.Payment payment>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=payment
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Order
 fieldName= payment
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date orderDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date shippingDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String shippingMethod
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String orederStatus
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal orderTotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List cartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShippingAddress shippingAddress [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Payment payment [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= payment
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.Payment
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Order
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.Payment
NRA.java: getCondFromOneToOne(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  order_id
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| Payment.order_id
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.Payment
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: com.bookstore.domain.BillingAddress billingAddress>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=billingAddress
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Order
 fieldName= billingAddress
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date orderDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date shippingDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String shippingMethod
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String orederStatus
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal orderTotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List cartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShippingAddress shippingAddress [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Payment payment [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.BillingAddress billingAddress [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= billingAddress
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.BillingAddress
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Order
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.BillingAddress
NRA.java: getCondFromOneToOne(): mappedBy= order
NRA.java: getJoinedColumn(): joined Column value=  order_id
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.id
| BillingAddress.order_id
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 2 elems: 
Annotation Element: kind: s name: mappedBy value: order
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.BillingAddress
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<com.bookstore.domain.Order: com.bookstore.domain.User user>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user_id

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=user
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.bookstore.domain.Order
 fieldName= user
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date orderDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Date shippingDate
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String shippingMethod
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String orederStatus
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.math.BigDecimal orderTotal
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.List cartItemList [Signature: Ljava/util/List<Lcom/bookstore/domain/CartItem;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.ShippingAddress shippingAddress [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.Payment payment [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.BillingAddress billingAddress [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.bookstore.domain.User user [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= user
NRA.java: genExprNra(): sfEntity=com.bookstore.domain.User
NRA.java: genExprNra(): baseclass = com.bookstore.domain.Order
NRA.java: genExprNra(): fieldclass = com.bookstore.domain.User
NRA.java: getJoinedColumn(): joined Column value=  user_id
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: user_id]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.user_id
| User.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.bookstore.domain.User
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.Order.id), FieldRef(com.bookstore.domain.Order.orderDate), FieldRef(com.bookstore.domain.Order.shippingDate), FieldRef(com.bookstore.domain.Order.shippingMethod), FieldRef(com.bookstore.domain.Order.orederStatus), FieldRef(com.bookstore.domain.Order.orderTotal), FieldRef(com.bookstore.domain.Order.cartItemList), FieldRef(com.bookstore.domain.Order.shippingAddress), FieldRef(com.bookstore.domain.Order.payment), FieldRef(com.bookstore.domain.Order.billingAddress), FieldRef(com.bookstore.domain.Order.user)]
NRA.java: genExprNra(): projectNode name: CartItem.order=Pi
NRA.java: genExprNra(): nestexpr= CartItem.order=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.Order)
| | Equals
| | | Alpha.orderId
| | | Order.id
| List
| | id
| | orderDate
| | shippingDate
| | shippingMethod
| | orederStatus
| | orderTotal
| | NullOp
| | NullOp
| | NullOp
| | NullOp
| | NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.CartItem.id), FieldRef(com.bookstore.domain.CartItem.qty), FieldRef(com.bookstore.domain.CartItem.subtotal), FieldRef(com.bookstore.domain.CartItem.book), FieldRef(com.bookstore.domain.CartItem.bookToCartItemList), FieldRef(com.bookstore.domain.CartItem.shoppingCart), FieldRef(com.bookstore.domain.CartItem.order)]
NRA.java: genExprNra(): projectNode name: Book.cartItem=Pi
NRA.java: genExprNra(): nestexpr= Book.cartItem=Pi
| Join
| | Alpha
| | ClassRef(com.bookstore.domain.CartItem)
| | Equals
| | | Alpha.id
| | | CartItem.bookId
| List
| | id
| | qty
| | subtotal
| | CartItem.book=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.Book)
| | | | Equals
| | | | | Alpha.id
| | | | | Book.cartItemId
| | | List
| | | | id
| | | | title
| | | | author
| | | | publisher
| | | | publicationDate
| | | | language
| | | | category
| | | | numberOfPages
| | | | format
| | | | isbn
| | | | shippingWeight
| | | | listPrice
| | | | ourPrice
| | | | active
| | | | description
| | | | inStockNumber
| | | | bookImage
| | | | NullOp
| | | | NullOp
| | CartItem.bookToCartItemList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.cartItemId
| | | List
| | | | id
| | | | NullOp
| | | | NullOp
| | CartItem.shoppingCart=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | Equals
| | | | | Alpha.shoppingCartId
| | | | | ShoppingCart.id
| | | List
| | | | id
| | | | GrandTotal
| | | | NullOp
| | | | NullOp
| | CartItem.order=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.Order)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Order.id
| | | List
| | | | id
| | | | orderDate
| | | | shippingDate
| | | | shippingMethod
| | | | orederStatus
| | | | orderTotal
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | NullOp
| | | | NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.bookstore.domain.Book.id), FieldRef(com.bookstore.domain.Book.title), FieldRef(com.bookstore.domain.Book.author), FieldRef(com.bookstore.domain.Book.publisher), FieldRef(com.bookstore.domain.Book.publicationDate), FieldRef(com.bookstore.domain.Book.language), FieldRef(com.bookstore.domain.Book.category), FieldRef(com.bookstore.domain.Book.numberOfPages), FieldRef(com.bookstore.domain.Book.format), FieldRef(com.bookstore.domain.Book.isbn), FieldRef(com.bookstore.domain.Book.shippingWeight), FieldRef(com.bookstore.domain.Book.listPrice), FieldRef(com.bookstore.domain.Book.ourPrice), FieldRef(com.bookstore.domain.Book.active), FieldRef(com.bookstore.domain.Book.description), FieldRef(com.bookstore.domain.Book.inStockNumber), FieldRef(com.bookstore.domain.Book.bookImage), FieldRef(com.bookstore.domain.Book.bookToCartItemsList), FieldRef(com.bookstore.domain.Book.cartItem)]
NRA.java: genExprNra(): projectNode name: Pi
DIRRegionAnalyzer.java: constructDIR(): nested VeMap : 
DIRRegionAnalyzer.java: constructDIR(): key : return
 value : 
 Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): leftval = $r1
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Iterable findAll()
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Iterable findAll() END
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r2 = (java.util.List) $r1
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JCastExpr
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = (type1) v2
DIRRegionAnalyzer.java: constructDIR(): type1: java.util.List
DIRRegionAnalyzer.java: constructDIR(): castExpr: (java.util.List) $r1
DIRRegionAnalyzer.java: constructDIR(): v2: $r1
DIRRegionAnalyzer.java: constructDIR(): cur dir: {$r0=this.bookRepository, $r1=Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp, this=Self}
DIRRegionAnalyzer.java: constructDIR(): rightVar in dir: true
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r2
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.bookRepository

~~~ $r1 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ $r2 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.bookRepository

~~~ $r1 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ $r2 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.bookRepository
DIR.java: updateRegion(): update region entry: $r1=Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIR.java: updateRegion(): update region entry: $r2=Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
~~~ $r0 ~~~
this.bookRepository

~~~ $r1 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ $r2 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
AccessPath.java: isReturnTypeEntity(): check :java.util.List
AccessPath.java: isReturnTypeEntity(): tags = [Signature: ()Ljava/util/List<Lcom/bookstore/domain/Book;>;]
AccessPath.java: isReturnTypeEntity(): method retType = com.bookstore.domain.Book
AccessPath.java: getCollectionEntityType(): virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
AccessPath.java: getCollectionEntityType(): [Signature: ()Ljava/util/List<Lcom/bookstore/domain/Book;>;]
AccessPath.java: getCollectionEntityType(): com/bookstore/domain/Book
AccessPath.java: getCollectionEntityType(): Collection Entity Type = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): leftType = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): leftType : com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: bookList
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
AccessPath.java: isReturnTypeEntity(): check :java.util.List
AccessPath.java: isReturnTypeEntity(): tags = [Signature: ()Ljava/util/List<Lcom/bookstore/domain/Book;>;]
AccessPath.java: isReturnTypeEntity(): method retType = com.bookstore.domain.Book
AccessPath.java: getCollectionEntityType(): virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
AccessPath.java: getCollectionEntityType(): [Signature: ()Ljava/util/List<Lcom/bookstore/domain/Book;>;]
AccessPath.java: getCollectionEntityType(): com/bookstore/domain/Book
AccessPath.java: getCollectionEntityType(): Collection Entity Type = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): left type = com.bookstore.domain.Book
DIRRegionAnalyzer.java: constructDIR(): java.util.List
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.util.List
DIRRegionAnalyzer.java: constructDIR(): method sig = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()=~~~ $r0 ~~~
this.bookRepository

~~~ $r1 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ $r2 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ this ~~~
Self

, java.lang.Object: java.lang.Iterable findAll()=~~~ return ~~~
Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ $r0 ~~~
this.bookRepository

~~~ $r1 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ $r2 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [Book.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.bookstore.service.impl.BookServiceImpl: java.util.List findAll(), com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r0]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.bookRepository]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): leftType = com.bookstore.domain.Book
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findAll
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [$r0]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.bookstore.service.impl.BookServiceImpl
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r0
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.bookRepository]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.bookRepository
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r1, $r2, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = findAll, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r0
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.bookRepository]
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: com.bookstore.domain.Book fields = [<com.bookstore.domain.Book: java.lang.Long id>, <com.bookstore.domain.Book: java.lang.String title>, <com.bookstore.domain.Book: java.lang.String author>, <com.bookstore.domain.Book: java.lang.String publisher>, <com.bookstore.domain.Book: java.lang.String publicationDate>, <com.bookstore.domain.Book: java.lang.String language>, <com.bookstore.domain.Book: java.lang.String category>, <com.bookstore.domain.Book: int numberOfPages>, <com.bookstore.domain.Book: java.lang.String format>, <com.bookstore.domain.Book: java.lang.String isbn>, <com.bookstore.domain.Book: double shippingWeight>, <com.bookstore.domain.Book: double listPrice>, <com.bookstore.domain.Book: double ourPrice>, <com.bookstore.domain.Book: boolean active>, <com.bookstore.domain.Book: java.lang.String description>, <com.bookstore.domain.Book: int inStockNumber>, <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>, <com.bookstore.domain.Book: java.util.List bookToCartItemsList>, <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>]
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String title>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String author>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publisher>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String publicationDate>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String language>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String category>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int numberOfPages>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String format>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String isbn>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double shippingWeight>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double listPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: double ourPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: boolean active>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: int inStockNumber>  type=FieldData
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: org.springframework.web.multipart.MultipartFile bookImage>  type=MultipartFile
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: java.util.List bookToCartItemsList>  type=BookToCartItem
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/List<Lcom/bookstore/domain/BookToCartItem;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: book

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
AccessPath.java: getCollectionType: Collection field Type = com.bookstore.domain.BookToCartItem
NRA.java: getCondFromOneToMany(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
NRA.java: processTableandFields: sf <com.bookstore.domain.Book: com.bookstore.domain.CartItem cartItem>  type=CartItem
NRA.java: getCondFromOneToOne(): mappedBy= book
NRA.java: getJoinedColumn(): joined Column value=  bookId
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = bookList, com.bookstore.domain.Book
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [bookList.id, bookList.title, bookList.author, bookList.publisher, bookList.publicationDate, bookList.language, bookList.category, bookList.numberOfPages, bookList.format, bookList.isbn, bookList.shippingWeight, bookList.listPrice, bookList.ourPrice, bookList.active, bookList.description, bookList.inStockNumber, bookList.bookToCartItemsList, bookList.cartItem, bookList.cartItem.id, bookList.cartItem.qty, bookList.cartItem.subtotal, bookList.cartItem.book, bookList.cartItem.book.id, bookList.cartItem.book.title, bookList.cartItem.book.author, bookList.cartItem.book.publisher, bookList.cartItem.book.publicationDate, bookList.cartItem.book.language, bookList.cartItem.book.category, bookList.cartItem.book.numberOfPages, bookList.cartItem.book.format, bookList.cartItem.book.isbn, bookList.cartItem.book.shippingWeight, bookList.cartItem.book.listPrice, bookList.cartItem.book.ourPrice, bookList.cartItem.book.active, bookList.cartItem.book.description, bookList.cartItem.book.inStockNumber, bookList.cartItem.book.bookToCartItemsList, bookList.cartItembook.cartItem, bookList.cartItem.bookToCartItemList, bookList.cartItem.shoppingCart, bookList.cartItem.shoppingCart.id, bookList.cartItem.shoppingCart.GrandTotal, bookList.cartItem.shoppingCart.cartItemList, bookList.cartItem.shoppingCart.user, bookList.cartItem.order, bookList.cartItem.order.id, bookList.cartItem.order.shippingMethod, bookList.cartItem.order.orederStatus, bookList.cartItem.order.orderTotal, bookList.cartItem.order.cartItemList, bookList.cartItem.order.shippingAddress, bookList.cartItem.order.payment, bookList.cartItem.order.billingAddress, bookList.cartItem.order.user]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [com.bookstore.service.impl.BookServiceImpl: java.util.List findAll(), java.lang.Object: java.lang.Iterable findAll()]
DIRRegionAnalyzer.java: constructDIR(): callee = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
DIRRegionAnalyzer.java: constructDIR(): invokeExpr = virtualinvoke $r0.<com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()>()
DIRRegionAnalyzer.java: constructDIR(): return type collection
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()
DIRRegionAnalyzer.java: constructDIR(): key = $r0
DIRRegionAnalyzer.java: constructDIR(): val = this.bookRepository
DIRRegionAnalyzer.java: constructDIR(): key = $r1
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): key = $r2
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): key = this
DIRRegionAnalyzer.java: constructDIR(): val = Self
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = com.bookstore.service.impl.BookServiceImpl: java.util.List findAll() END
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl> = $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v.f = expr, f is non-primtive
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.bookstore.controller.HomeController: com.bookstore.service.impl.BookServiceImpl bookServiceImpl>
DIRRegionAnalyzer.java: constructDIR(): accessPaths = [this.bookServiceImpl.bookRepository]
DIRRegionAnalyzer.java: constructDIR(): right val = $r0
DIRRegionAnalyzer.java: constructDIR(): Subcase: v1.f = v2
AccessPath.java: replaceBase(): input access path: this.bookServiceImpl.bookRepository
AccessPath.java: replaceBase(): replacement of base: $r0
WARN: DIRRegionAnalyzer.java: constructDIR(): Invalid intermediate access path found
DIRRegionAnalyzer.java: constructDIR(): curUnit = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("bookList", bookList)
DIRRegionAnalyzer.java: constructDIR(): Model Add Attribute Statement
Utils.java: getVarNode(): __modelattribute__bookList
Utils.java: getVarNode(): LinkedVariableBox(__modelattribute__bookList)
DIRRegionAnalyzer.java: constructDIR(): curUnit = return "bookshelf"
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ __modelattribute__bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
"bookshelf"

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ __modelattribute__bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
"bookshelf"

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: __modelattribute__bookList=Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
DIR.java: updateRegion(): update region entry: return="bookshelf"
DIR.java: updateRegion(): update region entry: bookList=Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
~~~ __modelattribute__bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
"bookshelf"

~~~ this ~~~
Self


Resultant dag : ~~~ __modelattribute__bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ bookList ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
"bookshelf"

~~~ this ~~~
Self


final FuncStackAnalyzer3 = 
{com.bookstore.service.impl.BookServiceImpl: java.util.List findAll()=~~~ $r0 ~~~
this.bookRepository

~~~ $r1 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ $r2 ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ return ~~~
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

~~~ this ~~~
Self

, java.lang.Object: java.lang.Iterable findAll()=~~~ return ~~~
Sel
| ClassRef(com.bookstore.domain.Book)
| NullOp

}
FuncStackAnalyzer.java: constructDIRForStack(): Printing veMap for method: com.bookstore.controller.HomeController: java.lang.String bookShelf(org.springframework.ui.Model)
FuncStackAnalyzer.java: constructDIRForStack(): VEMap Num Entries: 4
FuncStackAnalyzer.java: constructDIRForStack(): key set of ve map of root function: [this, __modelattribute__bookList, return, bookList]
Final veMap of this = 
Self
SavePostProcess.java: SavePostProcess(): repo varnode: this
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__bookList = 
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__bookList
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of return = 
"bookshelf"
SavePostProcess.java: SavePostProcess(): repo varnode: return
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of bookList = 
Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
SavePostProcess.java: SavePostProcess(): repo varnode: bookList
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
key: this
value: Self

key: __modelattribute__bookList
value: Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp

key: return
value: "bookshelf"

key: bookList
value: Pi
| Sel
| | ClassRef(com.bookstore.domain.Book)
| | NullOp
| List
| | id
| | title
| | author
| | publisher
| | publicationDate
| | language
| | category
| | numberOfPages
| | format
| | isbn
| | shippingWeight
| | listPrice
| | ourPrice
| | active
| | description
| | inStockNumber
| | bookImage
| | Book.bookToCartItemsList=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | BookToCartItem.bookId
| | | List
| | | | id
| | | | BookToCartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.bookId
| | | | | | | Book.id
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | BookToCartItem.cartItem=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.CartItem)
| | | | | | Equals
| | | | | | | Alpha.cartItemId
| | | | | | | CartItem.id
| | | | | List
| | | | | | id
| | | | | | qty
| | | | | | subtotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | Book.cartItem=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(com.bookstore.domain.CartItem)
| | | | Equals
| | | | | Alpha.id
| | | | | CartItem.bookId
| | | List
| | | | id
| | | | qty
| | | | subtotal
| | | | CartItem.book=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Book)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Book.cartItemId
| | | | | List
| | | | | | id
| | | | | | title
| | | | | | author
| | | | | | publisher
| | | | | | publicationDate
| | | | | | language
| | | | | | category
| | | | | | numberOfPages
| | | | | | format
| | | | | | isbn
| | | | | | shippingWeight
| | | | | | listPrice
| | | | | | ourPrice
| | | | | | active
| | | | | | description
| | | | | | inStockNumber
| | | | | | bookImage
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.bookToCartItemList=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.BookToCartItem)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | BookToCartItem.cartItemId
| | | | | List
| | | | | | id
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.shoppingCart=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.ShoppingCart)
| | | | | | Equals
| | | | | | | Alpha.shoppingCartId
| | | | | | | ShoppingCart.id
| | | | | List
| | | | | | id
| | | | | | GrandTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | CartItem.order=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(com.bookstore.domain.Order)
| | | | | | Equals
| | | | | | | Alpha.orderId
| | | | | | | Order.id
| | | | | List
| | | | | | id
| | | | | | orderDate
| | | | | | shippingDate
| | | | | | shippingMethod
| | | | | | orederStatus
| | | | | | orderTotal
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp
| | | | | | NullOp





























Tables and Fields :

Order fields = 
{orederStatus=FieldData, shippingDate=Date, orderId=FieldData, cartItemList=CartItem, shippingMethod=FieldData, orderTotal=FieldData, user_id=FieldData, shippingAddress=ShippingAddress, payment=Payment, id=FieldData, billingAddress=BillingAddress, orderDate=Date, order_id=FieldData, user=User}

ShoppingCart fields = 
{cartItemList=CartItem, GrandTotal=FieldData, id=FieldData, shoppingCartId=FieldData, user=User}

Book fields = 
{inStockNumber=FieldData, bookImage=MultipartFile, author=FieldData, isbn=FieldData, format=FieldData, active=FieldData, description=FieldData, language=FieldData, title=FieldData, bookToCartItemsList=BookToCartItem, cartItem=CartItem, bookId=FieldData, numberOfPages=FieldData, shippingWeight=FieldData, publisher=FieldData, id=FieldData, category=FieldData, publicationDate=FieldData, ourPrice=FieldData, listPrice=FieldData}

CartItem fields = 
{orderId=FieldData, subtotal=FieldData, qty=FieldData, book=Book, bookToCartItemList=BookToCartItem, shoppingCart=ShoppingCart, id=FieldData, shoppingCartId=FieldData, cartItemId=FieldData, order=Order}

BookToCartItem fields = 
{book=Book, id=FieldData, cartItem=CartItem, bookId=FieldData, cartItemId=FieldData}

{}
{}
 Node contains nested fields
u_Sel___ClassRef_com_b1
Akash
u_Join___Alpha___Class3
Akash
u_Join___Alpha___Class5
Akash
u_Join___Alpha___Class7
Akash
u_Join___Alpha___Class9
Akash
u_Join___Alpha___Class11
Akash
u_Join___Alpha___Class13
Akash
u_Join___Alpha___Class15
Akash
u_Join___Alpha___Class17
Time elapsed: 0.753 seconds
