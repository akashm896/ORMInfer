EqSQLDriverTest.java: main(): Got the bench-dir option value: target/classes
EqSQLDriverTest.java: main(): Got the controllersig option value: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
github/Utils.java: getAbsBenchDir(): pwd: /home/akash/Desktop/current/dbridge_loop
starttime, test: 1679669955306
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: java.lang.Object is a phantom class!
Warning: org.springframework.web.bind.annotation.PostMapping is a phantom class!
Warning: java.util.Iterator is a phantom class!
Warning: java.util.Collection is a phantom class!
Warning: org.springframework.validation.BindingResult is a phantom class!
Warning: org.springframework.stereotype.Controller is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: org.springframework.web.servlet.ModelAndView is a phantom class!
Warning: org.springframework.ui.Model is a phantom class!
Warning: java.util.List is a phantom class!
Warning: org.springframework.web.bind.WebDataBinder is a phantom class!
Warning: java.util.Map is a phantom class!
Warning: org.springframework.web.bind.annotation.GetMapping is a phantom class!
Warning: java.lang.StringBuilder is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: org.springframework.web.bind.annotation.InitBinder is a phantom class!
Warning: org.springframework.format.annotation.DateTimeFormat is a phantom class!
Warning: java.util.ArrayList is a phantom class!
Warning: java.util.HashSet is a phantom class!
Warning: javax.persistence.Table is a phantom class!
Warning: org.springframework.beans.support.PropertyComparator is a phantom class!
Warning: java.util.LinkedHashSet is a phantom class!
Warning: javax.persistence.Entity is a phantom class!
Warning: org.springframework.beans.support.MutableSortDefinition is a phantom class!
Warning: javax.persistence.ManyToOne is a phantom class!
Warning: javax.persistence.JoinColumn is a phantom class!
Warning: javax.persistence.OneToMany is a phantom class!
Warning: java.util.Set is a phantom class!
Warning: org.springframework.beans.support.SortDefinition is a phantom class!
Warning: javax.persistence.Column is a phantom class!
Warning: java.time.LocalDate is a phantom class!
Warning: java.util.Collections is a phantom class!
Warning: org.springframework.data.repository.Repository is a phantom class!
Warning: org.springframework.data.jpa.repository.Query is a phantom class!
Warning: org.springframework.transaction.annotation.Transactional is a phantom class!
Warning: javax.validation.constraints.NotEmpty is a phantom class!
Warning: javax.validation.constraints.Digits is a phantom class!
Warning: org.springframework.core.style.ToStringCreator is a phantom class!
Warning: org.springframework.dao.DataAccessException is a phantom class!
Warning: javax.persistence.MappedSuperclass is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: javax.persistence.GeneratedValue is a phantom class!
Warning: javax.persistence.Id is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
patternMatch.java: getUserInputRules: i=0
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? (Neq (= <col1> <col2>) (0Node)) (union (repo) (list)) (repo))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (select <coll> (= <col1> <col2>))
Fold
| FuncExpr
| | Ternary
| | | NotEq
| | | | Eq
| | | | | Any
| | | | | Any
| | | | Any
| | | Union
| | | | Any
| | | | List
| | | Any
| Any
| Any
| Any


Select
| Id:13
| Eq
| | Id:5
| | Id:6

{<col1>=5, <col2>=6, <init_val>=12, <itr>=14, <coll>=13}
patternMatch.java: getUserInputRules: i=2
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (save <repo> <list1>) (save <repo> <list2>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <init_val> <coll>) (union (pi (select <coll> <cond>) <list1>) (pi (select <coll> (= <cond> 0)) <list2>)))
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Any
| | | | Any
| | | Save
| | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:25
| | Id:26
| Union
| | Project
| | | Select
| | | | Id:26
| | | | Id:18
| | | Id:21
| | Project
| | | Select
| | | | Id:26
| | | | Eq
| | | | | Id:18
| | | | | Zero
| | | Id:24

{<col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=18, <list1>=21, <init_val>=25, <itr>=27, <coll>=26}
patternMatch.java: getUserInputRules: i=4
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (add_all_fields <list>) <elseval>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <coll> <cond>) <list>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | AddWithFieldExprs
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:36
| | | Id:31
| | Id:33
| Id:35

{<list>=33, <elseval>=34, <col1>=5, <repo>=23, <list2>=24, <col2>=6, <cond>=31, <list1>=21, <init_val>=35, <itr>=37, <coll>=36}
patternMatch.java: getUserInputRules: i=6
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (save <repo> (tuple (join next <join_right> <nop>) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <repo> (select <repo> (in id (pi (join <coll> <join_right>) id)))) (pi <list> (join <coll> <join_right>)))
Fold
| FuncExpr
| | Save
| | | Any
| | | Tuple
| | | | Join
| | | | | Iterator
| | | | | Any
| | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:41
| | Select
| | | Id:41
| | | In
| | | | Id
| | | | Project
| | | | | Join
| | | | | | Id:49
| | | | | | Id:45
| | | | | Id
| Project
| | Id:47
| | Join
| | | Id:49
| | | Id:45

{<list>=47, <repo>=41, <cond>=31, <nop>=46, <init_val>=48, <join_right>=45, <itr>=50, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=49}
patternMatch.java: getUserInputRules: i=8
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (add_all_fields <receiver> (tuple (select <rel> (= <clm> <itr>)) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi <list> (select <rel> (in <clm> <coll>))) <init_val>)
Fold
| FuncExpr
| | AddWithFieldExprs
| | | Any
| | | Tuple
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| Project
| | Id:61
| | Select
| | | Id:57
| | | In
| | | | Id:59
| | | | Id:63
| Id:62

{<list>=61, <rel>=57, <repo>=41, <cond>=31, <nop>=46, <clm>=59, <init_val>=62, <join_right>=45, <itr>=64, <receiver>=54, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=63}
patternMatch.java: getUserInputRules: i=10
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (+ <aggvar> (pi (select <rel> (= <clm> <itr>)) <clmagg>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (+ (agg_sum (select <rel> (in <clm> <coll>)) <clmagg>) <init_val>)
Fold
| FuncExpr
| | ArithAdd
| | | Any
| | | Project
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


ArithAdd
| AggSum
| | Select
| | | Id:71
| | | In
| | | | Id:73
| | | | Id:77
| | Id:75
| Id:76

{<list>=61, <rel>=71, <repo>=41, <cond>=31, <nop>=46, <clm>=73, <init_val>=76, <join_right>=45, <itr>=78, <clmagg>=75, <receiver>=54, <aggvar>=68, <elseval>=34, <col1>=5, <list2>=24, <col2>=6, <list1>=21, <coll>=77}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/akash/Desktop/current/dbridge_loop/lib/eqsql.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/akash/Desktop/current/dbridge_loop/lib/soot-trunk-1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processFindForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.validation.BindingResult result;
        java.util.Map model;
        java.util.Collection results;
        java.lang.String $r0, $r2, $r10;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        boolean $z0;
        int $i0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Integer $r8;
        org.springframework.samples.petclinic.owner.Owner owner, owner;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        model := @parameter2: java.util.Map;

        $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        if $r0 != null goto label1;

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);

        $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");

        return "owners/findOwners";

     label2:
        $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        owner = (org.springframework.samples.petclinic.owner.Owner) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label3:
        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

        return "owners/ownersList";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder internalTransform called!
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: body: 
    public java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.validation.BindingResult result;
        java.util.Map model;
        java.util.Collection results;
        java.lang.String $r0, $r2, $r10;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        boolean $z0;
        int $i0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Integer $r8;
        org.springframework.samples.petclinic.owner.Owner owner, owner;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        model := @parameter2: java.util.Map;

        $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        if $r0 != null goto label1;

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);

        $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");

        return "owners/findOwners";

     label2:
        $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        owner = (org.springframework.samples.petclinic.owner.Owner) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label3:
        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

        return "owners/ownersList";
    }

FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: result
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: result
FuncStackInfoBuilder.java: regionTreeForBody(): local: model
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: model
FuncStackInfoBuilder.java: regionTreeForBody(): local: results
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: results
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $i0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r8
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r8
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r9
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r9
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r10
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r10
FuncStackInfoBuilder.java: regionTreeForBody(): local: owner
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: owner
FuncStackInfoBuilder.java: regionTreeForBody(): local: owner
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: owner
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: processFindForm is Block 0:
[preds: ] [succs: 1 2 ]
this := @this: org.springframework.samples.petclinic.owner.OwnerController;
owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;
result := @parameter1: org.springframework.validation.BindingResult;
model := @parameter2: java.util.Map;
$r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();
if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

Block 1:
[preds: 0 ] [succs: 2 ]
virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;
$r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();
results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);
$z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();
if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

Block 3:
[preds: 2 ] [succs: ]
interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");
return "owners/findOwners";

Block 4:
[preds: 2 ] [succs: 5 6 ]
$i0 = interfaceinvoke results.<java.util.Collection: int size()>();
if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

Block 5:
[preds: 4 ] [succs: ]
$r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();
$r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
owner = (org.springframework.samples.petclinic.owner.Owner) $r5;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");
$r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
return $r10;

Block 6:
[preds: 4 ] [succs: ]
interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);
return "owners/ownersList";


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
0 -> 1
1 -> 2
2 -> 3
4 -> 5
0 -> 2
2 -> 4
4 -> 6
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
dfsVisit: start = 1
dfsVisit: start = 2
dfsVisit: start = 3
dfsVisit: start = 4
dfsVisit: start = 5
dfsVisit: start = 6
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [3, 5, 6, 4, 2, 1, 0]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 3
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [3]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 3
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 3
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 3
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [3]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 3
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [3]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 5
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [5]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 5
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 5
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 5
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [5]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 5
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [5]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 6
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [6]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 6
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 6
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 6
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [6]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 6
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [6]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 4
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [4]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = IfThenElse

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_IfThenElse0
StructuralAnalysis.java: replace(): v: 4
StructuralAnalysis.java: replace(): v: 5
StructuralAnalysis.java: replace(): v: 6
StructuralAnalyis.java: compact(): compact: vset = [4, 5, 6]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 3, 4, 5, 6, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 3
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [3, 5, 6, 4, 2, 1, 0]
removeVertices: vset = [4, 5, 6]
removeVertices: v = 4
removeVertex: adj = {1=[2], 2=[3, 4], 3=[], 4=[5, 6], 5=[], 6=[], 0=[1, 2]}
removeVertex: incoming = {1=[0], 2=[0, 1], 3=[2], 4=[2], 5=[4], 6=[4], 0=[]}
removeVertex: v = 4
removeVertex: v2 = 2
removeVertices: v = 5
removeVertex: adj = {1=[2], 2=[3], 3=[], 5=[], 6=[], 0=[1, 2]}
removeVertex: incoming = {1=[0], 2=[0, 1], 3=[2], 5=[], 6=[], 0=[]}
removeVertex: v = 5
removeVertices: v = 6
removeVertex: adj = {1=[2], 2=[3], 3=[], 6=[], 0=[1, 2]}
removeVertex: incoming = {1=[0], 2=[0, 1], 3=[2], 6=[], 0=[]}
removeVertex: v = 6
StructuralAnalyis.java: compact(): compact: g.vertices after: [1, 2, 3, R_IfThenElse0, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [3, R_IfThenElse0, 2, 1, 0]
StructuralAnalysis.java: reduce(): structType before: {}
StructuralAnalysis.java: reduce(): structType after: {R_IfThenElse0=IfThenElse}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_IfThenElse0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [R_IfThenElse0]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = R_IfThenElse0
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = R_IfThenElse0
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: R_IfThenElse0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [R_IfThenElse0]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = R_IfThenElse0
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [R_IfThenElse0]
StructuralAnalysis.java: structuralAnalysis(): break point!
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [2]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = IfThenElse

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_IfThenElse1
StructuralAnalysis.java: replace(): v: 2
StructuralAnalysis.java: replace(): v: 3
StructuralAnalysis.java: replace(): v: R_IfThenElse0
StructuralAnalyis.java: compact(): compact: vset = [2, 3, R_IfThenElse0]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 3, R_IfThenElse0, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [3, R_IfThenElse0, 2, 1, 0]
removeVertices: vset = [2, 3, R_IfThenElse0]
removeVertices: v = 2
removeVertex: adj = {1=[2], 2=[3, R_IfThenElse0], 3=[], R_IfThenElse0=[], 0=[1, 2]}
removeVertex: incoming = {1=[0], 2=[0, 1], 3=[2], R_IfThenElse0=[2], 0=[]}
removeVertex: v = 2
removeVertex: v2 = 0
removeVertex: v2 = 1
removeVertices: v = 3
removeVertex: adj = {1=[], 3=[], R_IfThenElse0=[], 0=[1]}
removeVertex: incoming = {1=[0], 3=[], R_IfThenElse0=[], 0=[]}
removeVertex: v = 3
removeVertices: v = R_IfThenElse0
removeVertex: adj = {1=[], R_IfThenElse0=[], 0=[1]}
removeVertex: incoming = {1=[0], R_IfThenElse0=[], 0=[]}
removeVertex: v = R_IfThenElse0
StructuralAnalyis.java: compact(): compact: g.vertices after: [1, R_IfThenElse1, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_IfThenElse1, 1, 0]
StructuralAnalysis.java: reduce(): structType before: {R_IfThenElse0=IfThenElse}
StructuralAnalysis.java: reduce(): structType after: {R_IfThenElse1=IfThenElse, R_IfThenElse0=IfThenElse}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_IfThenElse1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [R_IfThenElse1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = R_IfThenElse1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = R_IfThenElse1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: R_IfThenElse1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [R_IfThenElse1]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = R_IfThenElse1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [R_IfThenElse1]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [1]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [1]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [0]

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_IfThen2
StructuralAnalysis.java: replace(): v: 0
StructuralAnalysis.java: replace(): v: 1
StructuralAnalyis.java: compact(): compact: vset = [0, 1]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, R_IfThenElse1, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [R_IfThenElse1, 1, 0]
removeVertices: vset = [0, 1]
removeVertices: v = 0
removeVertex: adj = {1=[R_IfThenElse1], R_IfThenElse1=[], 0=[1, R_IfThenElse1]}
removeVertex: incoming = {1=[0], R_IfThenElse1=[1, 0], 0=[]}
removeVertex: v = 0
removeVertices: v = 1
removeVertex: adj = {1=[R_IfThenElse1], R_IfThenElse1=[]}
removeVertex: incoming = {1=[], R_IfThenElse1=[1]}
removeVertex: v = 1
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_IfThenElse1, R_IfThen2]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_IfThenElse1, R_IfThen2]
StructuralAnalysis.java: reduce(): structType before: {R_IfThenElse1=IfThenElse, R_IfThenElse0=IfThenElse}
StructuralAnalysis.java: reduce(): structType after: {R_IfThenElse1=IfThenElse, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_IfThen2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_IfThen2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [R_IfThen2, R_IfThenElse1]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = Sequential

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_Sequential3
StructuralAnalysis.java: replace(): v: R_IfThen2
StructuralAnalysis.java: replace(): v: R_IfThenElse1
StructuralAnalyis.java: compact(): compact: vset = [R_IfThen2, R_IfThenElse1]
StructuralAnalyis.java: compact(): compact: g.vertices before: [R_IfThenElse1, R_IfThen2]
StructuralAnalyis.java: compact(): compact: postCtr before: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [R_IfThenElse1, R_IfThen2]
removeVertices: vset = [R_IfThen2, R_IfThenElse1]
removeVertices: v = R_IfThen2
removeVertex: adj = {R_IfThenElse1=[], R_IfThen2=[R_IfThenElse1]}
removeVertex: incoming = {R_IfThenElse1=[R_IfThen2], R_IfThen2=[]}
removeVertex: v = R_IfThen2
removeVertices: v = R_IfThenElse1
removeVertex: adj = {R_IfThenElse1=[]}
removeVertex: incoming = {R_IfThenElse1=[]}
removeVertex: v = R_IfThenElse1
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_Sequential3]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_Sequential3]
StructuralAnalysis.java: reduce(): structType before: {R_IfThenElse1=IfThenElse, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen}
StructuralAnalysis.java: reduce(): structType after: {R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen}
StructuralAnalysis.java: structuralAnalysis(): structType: {R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen}
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {R_IfThenElse1=[2, 3, R_IfThenElse0], R_Sequential3=[R_IfThen2, R_IfThenElse1], R_IfThenElse0=[4, 5, 6], R_IfThen2=[0, 1]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_IfThen2, 2=R_IfThenElse1, 3=R_IfThenElse1, 4=R_IfThenElse0, 5=R_IfThenElse0, 6=R_IfThenElse0, R_IfThenElse1=R_Sequential3, R_IfThenElse0=R_IfThenElse1, R_IfThen2=R_Sequential3, 0=R_IfThen2}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential3
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- R_Sequential3
|  +- R_IfThen2
|  |  +- 0
|  |  +- 1
|  +- R_IfThenElse1
|  |  +- 2
|  |  +- 3
|  |  +- R_IfThenElse0
|  |  |  +- 4
|  |  |  +- 5
|  |  |  +- 6

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: 1 2 ]
this := @this: org.springframework.samples.petclinic.owner.OwnerController;
owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;
result := @parameter1: org.springframework.validation.BindingResult;
model := @parameter2: java.util.Map;
$r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();
if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

Block 1:
[preds: 0 ] [succs: 2 ]
virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;
$r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();
results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);
$z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();
if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

Block 3:
[preds: 2 ] [succs: ]
interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");
return "owners/findOwners";

Block 4:
[preds: 2 ] [succs: 5 6 ]
$i0 = interfaceinvoke results.<java.util.Collection: int size()>();
if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

Block 5:
[preds: 4 ] [succs: ]
$r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();
$r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
owner = (org.springframework.samples.petclinic.owner.Owner) $r5;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");
$r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
return $r10;

Block 6:
[preds: 4 ] [succs: ]
interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);
return "owners/ownersList";


StructuralAnalysis.java: controlTreeRoot(): control tree = {R_IfThenElse1=[2, 3, R_IfThenElse0], R_Sequential3=[R_IfThen2, R_IfThenElse1], R_IfThenElse0=[4, 5, 6], R_IfThen2=[0, 1]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_IfThen2, 2=R_IfThenElse1, 3=R_IfThenElse1, 4=R_IfThenElse0, 5=R_IfThenElse0, 6=R_IfThenElse0, R_IfThenElse1=R_Sequential3, R_IfThenElse0=R_IfThenElse1, R_IfThen2=R_Sequential3, 0=R_IfThen2}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential3
FuncStackInfoBuilder: createARegionTree(): structType = {R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackInfoBuilder: createARegionTree(): structType = {R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 1
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 1
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_IfThen2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
FuncStackInfoBuilder: createARegionTree(): child0 is head
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 2
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 2
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 3
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 3
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 3
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 4
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 4
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 4
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 5
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 5
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 5
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, 5=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 6
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 6
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 6
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, 5=BasicBlock, 6=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_IfThenElse0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 3
FuncStackInfoBuilder: createARegionTree(): ifte childregions =[| BasicBlock4, | BasicBlock5, | BasicBlock6]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, 5=BasicBlock, 6=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_IfThenElse1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 3
FuncStackInfoBuilder: createARegionTree(): ifte childregions =[| BasicBlock2, | BasicBlock3, | IfThenElse
| | BasicBlock4
| | BasicBlock5
| | BasicBlock6
]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, 5=BasicBlock, 6=BasicBlock, R_IfThenElse1=IfThenElse, R_Sequential3=Sequential, R_IfThenElse0=IfThenElse, R_IfThen2=IfThen, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_Sequential3
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = R_Sequential3
FuncStackInfoBuilder.java: regionTreeForBody(): | Sequential
| | IfThen
| | | BasicBlock0
| | | BasicBlock1
| | IfThenElse
| | | BasicBlock2
| | | BasicBlock3
| | | IfThenElse
| | | | BasicBlock4
| | | | BasicBlock5
| | | | BasicBlock6

FuncStackInfoBuilder.java: internalTransformHelper(): topr is not null
FuncStackInfoBuilder.java: internalTransformHelper(): topr = 
| Sequential
| | IfThen
| | | BasicBlock0
| | | BasicBlock1
| | IfThenElse
| | | BasicBlock2
| | | BasicBlock3
| | | IfThenElse
| | | | BasicBlock4
| | | | BasicBlock5
| | | | BasicBlock6

FuncStackInfoBuilder.java: internalTransformHelper(): CGSTART: 
VIRTUAL edge: $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>() in <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)> ==> <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
VIRTUAL edge: virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("") in <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)> ==> <org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>() in <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)> ==> <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
SPECIAL edge: specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() in <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>() in <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)> ==> <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
CGEND

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getLastName
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.model.Person
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String getLastName()
    {
        org.springframework.samples.petclinic.model.Person this;
        java.lang.String $r0;

        this := @this: org.springframework.samples.petclinic.model.Person;

        $r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getLastName is Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.Person;
$r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.Person;
$r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.model.Person, $r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getId
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.model.BaseEntity
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.Integer getId()
    {
        org.springframework.samples.petclinic.model.BaseEntity this;
        java.lang.Integer $r0;

        this := @this: org.springframework.samples.petclinic.model.BaseEntity;

        $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getId is Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.BaseEntity;
$r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.BaseEntity;
$r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.model.BaseEntity, $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.lang.StringBuilder: void <init>()
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setLastName
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.model.Person
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setLastName(java.lang.String)
    {
        org.springframework.samples.petclinic.model.Person this;
        java.lang.String lastName;

        this := @this: org.springframework.samples.petclinic.model.Person;

        lastName := @parameter0: java.lang.String;

        this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = lastName;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: lastName
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: lastName
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setLastName is Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.Person;
lastName := @parameter0: java.lang.String;
this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = lastName;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: org.springframework.samples.petclinic.model.Person;
lastName := @parameter0: java.lang.String;
this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = lastName;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: org.springframework.samples.petclinic.model.Person, lastName := @parameter0: java.lang.String, this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = lastName, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: functionstack: 
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
FuncStackInfoBuilder.java: internalTransformHelper():     org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)
FuncStackInfoBuilder.java: internalTransformHelper(): {org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)=    public java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.validation.BindingResult result;
        java.util.Map model;
        java.util.Collection results;
        java.lang.String $r0, $r2, $r10;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        boolean $z0;
        int $i0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Integer $r8;
        org.springframework.samples.petclinic.owner.Owner owner, owner;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        model := @parameter2: java.util.Map;

        $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        if $r0 != null goto label1;

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);

        $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");

        return "owners/findOwners";

     label2:
        $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        owner = (org.springframework.samples.petclinic.owner.Owner) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label3:
        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

        return "owners/ownersList";
    }
, org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()=    public java.lang.Integer getId()
    {
        org.springframework.samples.petclinic.model.BaseEntity this;
        java.lang.Integer $r0;

        this := @this: org.springframework.samples.petclinic.model.BaseEntity;

        $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>;

        return $r0;
    }
, org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()=    public java.lang.String getLastName()
    {
        org.springframework.samples.petclinic.model.Person this;
        java.lang.String $r0;

        this := @this: org.springframework.samples.petclinic.model.Person;

        $r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>;

        return $r0;
    }
, org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)=    public void setLastName(java.lang.String)
    {
        org.springframework.samples.petclinic.model.Person this;
        java.lang.String lastName;

        this := @this: org.springframework.samples.petclinic.model.Person;

        lastName := @parameter0: java.lang.String;

        this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = lastName;

        return;
    }
}

Decompiling org.springframework.samples.petclinic.owner.OwnerController... 
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: void <init>(org.springframework.samples.petclinic.owner.OwnerRepository,org.springframework.samples.petclinic.visit.VisitRepository)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void <init>(org.springframework.samples.petclinic.owner.OwnerRepository, org.springframework.samples.petclinic.visit.VisitRepository)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.OwnerRepository clinicService;
        org.springframework.samples.petclinic.visit.VisitRepository visits;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        clinicService := @parameter0: org.springframework.samples.petclinic.owner.OwnerRepository;

        visits := @parameter1: org.springframework.samples.petclinic.visit.VisitRepository;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners> = clinicService;

        this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits> = visits;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: void setAllowedFields(org.springframework.web.bind.WebDataBinder)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setAllowedFields
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setAllowedFields(org.springframework.web.bind.WebDataBinder)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.web.bind.WebDataBinder dataBinder;
        java.lang.String[] $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        dataBinder := @parameter0: org.springframework.web.bind.WebDataBinder;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "id";

        virtualinvoke dataBinder.<org.springframework.web.bind.WebDataBinder: void setDisallowedFields(java.lang.String[])>($r0);

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initCreationForm(java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initCreationForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String initCreationForm(java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.util.Map model;
        org.springframework.samples.petclinic.owner.Owner owner, $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        model := @parameter0: java.util.Map;

        $r0 = new org.springframework.samples.petclinic.owner.Owner;

        specialinvoke $r0.<org.springframework.samples.petclinic.owner.Owner: void <init>()>();

        owner = $r0;

        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r0);

        return "owners/createOrUpdateOwnerForm";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processCreationForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.validation.BindingResult result;
        boolean $z0;
        org.springframework.samples.petclinic.owner.OwnerRepository $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Integer $r3;
        java.lang.String $r5;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke result.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "owners/createOrUpdateOwnerForm";

     label1:
        $r0 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        interfaceinvoke $r0.<org.springframework.samples.petclinic.owner.OwnerRepository: void save(org.springframework.samples.petclinic.owner.Owner)>(owner);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initFindForm(java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initFindForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String initFindForm(java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.util.Map model;
        org.springframework.samples.petclinic.owner.Owner $r0;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        model := @parameter0: java.util.Map;

        $r0 = new org.springframework.samples.petclinic.owner.Owner;

        specialinvoke $r0.<org.springframework.samples.petclinic.owner.Owner: void <init>()>();

        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r0);

        return "owners/findOwners";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processFindForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, java.util.Map)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.validation.BindingResult result;
        java.util.Map model;
        java.util.Collection results;
        java.lang.String $r0, $r2, $r10;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        boolean $z0;
        int $i0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Integer $r8;
        org.springframework.samples.petclinic.owner.Owner owner, owner;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        model := @parameter2: java.util.Map;

        $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        if $r0 != null goto label1;

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("");

     label1:
        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>();

        results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2);

        $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found");

        return "owners/findOwners";

     label2:
        $i0 = interfaceinvoke results.<java.util.Collection: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        owner = (org.springframework.samples.petclinic.owner.Owner) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/");

        $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label3:
        interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results);

        return "owners/ownersList";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String initUpdateOwnerForm(int,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: initUpdateOwnerForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String initUpdateOwnerForm(int, org.springframework.ui.Model)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.ui.Model model;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.samples.petclinic.owner.OwnerRepository $r0;
        java.lang.Integer $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        model := @parameter1: org.springframework.ui.Model;

        $r0 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r0.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r1);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.Object)>(owner);

        return "owners/createOrUpdateOwnerForm";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: processUpdateOwnerForm
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        org.springframework.samples.petclinic.owner.Owner owner;
        org.springframework.validation.BindingResult result;
        int ownerId;
        boolean $z0;
        java.lang.Integer $r0;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        owner := @parameter0: org.springframework.samples.petclinic.owner.Owner;

        result := @parameter1: org.springframework.validation.BindingResult;

        ownerId := @parameter2: int;

        $z0 = interfaceinvoke result.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "owners/createOrUpdateOwnerForm";

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setId(java.lang.Integer)>($r0);

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: void save(org.springframework.samples.petclinic.owner.Owner)>(owner);

        return "redirect:/owners/{ownerId}";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwner(int)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: showOwner
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public org.springframework.web.servlet.ModelAndView showOwner(int)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        int ownerId;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        org.springframework.samples.petclinic.owner.Owner owner;
        java.util.Iterator l4;
        org.springframework.samples.petclinic.owner.Pet pet;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;
        java.lang.Integer $r2, $r7;
        java.util.List $r3, $r8;
        boolean $z0;
        java.lang.Object $r5;
        org.springframework.samples.petclinic.visit.VisitRepository $r6;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        ownerId := @parameter0: int;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(ownerId);

        owner = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: org.springframework.samples.petclinic.owner.Owner findById(java.lang.Integer)>($r2);

        $r3 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.util.List getPets()>();

        l4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        pet = (org.springframework.samples.petclinic.owner.Pet) $r5;

        $r6 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.visit.VisitRepository visits>;

        $r7 = virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: java.lang.Integer getId()>();

        $r8 = interfaceinvoke $r6.<org.springframework.samples.petclinic.visit.VisitRepository: java.util.List findByPetId(java.lang.Integer)>($r7);

        virtualinvoke pet.<org.springframework.samples.petclinic.owner.Pet: void setVisitsInternal(java.util.Collection)>($r8);

        goto label1;

     label2:
        virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(owner);

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <org.springframework.samples.petclinic.owner.OwnerController: org.springframework.web.servlet.ModelAndView showOwners(java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: showOwners
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: org.springframework.samples.petclinic.owner.OwnerController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: org.springframework
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public org.springframework.web.servlet.ModelAndView showOwners(java.lang.String)
    {
        org.springframework.samples.petclinic.owner.OwnerController this;
        java.lang.String lastName;
        org.springframework.web.servlet.ModelAndView mav, $r0;
        java.util.Collection o;
        org.springframework.samples.petclinic.owner.OwnerRepository $r1;

        this := @this: org.springframework.samples.petclinic.owner.OwnerController;

        lastName := @parameter0: java.lang.String;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>("owners/ownerDetails");

        mav = $r0;

        $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>;

        o = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>(lastName);

        virtualinvoke $r0.<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.Object)>(o);

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackAnalyzer.java: constructDIRForStack(): FSA: constructDIRsForStack: Stack = [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
FuncStackAnalyzer.java: constructDIRForStack(): top function sig: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
FuncStackAnalyzer.java: constructDIRForStack(): body rootmethod before analysis: [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
FuncStackAnalyzer.java: constructDIRForStack(): Top level func i.e. org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)has typemap: {}
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregions: [| IfThen
| | BasicBlock0
| | BasicBlock1
, | IfThenElse
| | BasicBlock2
| | BasicBlock3
| | IfThenElse
| | | BasicBlock4
| | | BasicBlock5
| | | BasicBlock6
]
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.IfThenRegion
DIRIfThenRegionAnalyzer.java: constructDIR(): headRegion: | BasicBlock0
DIRIfThenRegionAnalyzer.java: constructDIR(): trueRegion: | BasicBlock1
ARegion.java: analyze(): set cur method of analyzer to: processFindForm
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.owner.OwnerController
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = owner := @parameter0: org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): curUnit = result := @parameter1: org.springframework.validation.BindingResult
DIRRegionAnalyzer.java: constructDIR(): curUnit = model := @parameter2: java.util.Map
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getLastName
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
construct/Utils.java: parseObjectInvoke(): virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>
construct/Utils.java: parseObjectInvoke(): methodName = getLastName
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getLastName
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.model.Person, $r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.model.Person
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.lastName
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=this.lastName
~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.String
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.String
DIRRegionAnalyzer.java: constructDIR(): case : caseCallToMethodWBodyRetPrim()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), v1 is primitive, foo is not a library method
DIRRegionAnalyzer.java: constructDIR(): v1: $r0
DIRRegionAnalyzer.java: constructDIR(): foo: <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getLastName
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [owner]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.model.Person
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: owner
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getLastName, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: owner
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: constructDIR(): methodSig: org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
DIRRegionAnalyzer.java: constructDIR(): FuncStackAnalyzer.funcDIRMap: {org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()=~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self

}
DIRRegionAnalyzer.java: constructDIR(): dir callee: ~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): retCalleeCloned: this.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [owner]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.lastName
DIRRegionAnalyzer.java: constructDIR(): after dag formals to actuals: owner.lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()$r0 != null
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=owner.lastName
DIR.java: updateRegion(): update region entry: condition=NotEq
| owner.lastName
| NullOp
DIR.java: updateRegion(): update region entry: this=Self
~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ this ~~~
Self


ARegion.java: analyze(): set cur method of analyzer to: processFindForm
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 1
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("")
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("")
DIRRegionAnalyzer.java: handleSideEffects(): methodname: setLastName
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = ["", owner]
ARegion.java: analyze(): set cur method of analyzer to: setLastName
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.model.Person, lastName := @parameter0: java.lang.String, this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = lastName, return]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.model.Person
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = lastName := @parameter0: java.lang.String
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName> = lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): Mapping: this.lastName -> lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = return
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName


DIR.java: updateRegion(): update region entry: this.lastName=lastName
DIR.java: updateRegion(): update region entry: this=Self
~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName


DIRRegionAnalyzer.java: handleSideEffects(): ith formal: lastName
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: java.lang.String
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: ""
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.model.Person
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: owner
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("")
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>("")
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [lastName, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = ["", owner]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formal = lastName, actual = ""
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: lastName
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = ""
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = setLastName, [owner.lastName]
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: lastName
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: ""
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive
DIRRegionAnalyzer.java: handleSideEffects(): fml: lastName
DIRRegionAnalyzer.java: handleSideEffects(): actual arg (Soot Value): ""
DIRRegionAnalyzer.java: handleSideEffects(): actualNode (Node constructed from value): ""
DIRRegionAnalyzer.java: handleSideEffects(): formal = lastName, actual = ""
DIRRegionAnalyzer.java: handleSideEffects(): resolvedActual: ""
DIRRegionAnalyzer.java: handleSideEffects(): for key = owner.lastName
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive, ""
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: owner
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ owner.lastName ~~~
""


DIRRegionAnalyzer.java: handleSideEffects(): for key = owner.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: ""
DIRRegionAnalyzer.java: handleSideEffects(): after: ""
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ owner.lastName ~~~
""


DIRRegionAnalyzer.java: handleSideEffects(): for key = owner.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: ""
DIRRegionAnalyzer.java: handleSideEffects(): after: ""
DIRRegionAnalyzer.java: handleSideEffects(): callee: org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ owner.lastName ~~~
""


DIRRegionAnalyzer.java: handleSideEffects(): for key = owner.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: ""
DIRRegionAnalyzer.java: handleSideEffects(): after: ""
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ owner.lastName ~~~
""


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ owner.lastName ~~~
""


DIR.java: updateRegion(): update region entry: owner.lastName=""
~~~ owner.lastName ~~~
""


DIRIfThenRegionAnalyzer.java: constructDIR(): headDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ this ~~~
Self


DIRIfThenRegionAnalyzer.java: constructDIR(): trueDIR: ~~~ owner.lastName ~~~
""


analysis/Utils.java: extractCondition(): condVar: condition
analysis/Utils.java: extractCondition(): input dir (of headRegion): ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ this ~~~
Self


DIRIfThenRegionAnalyzer.java: constructDIR(): condition: NotEq
| owner.lastName
| NullOp
DIRIfThenRegionAnalyzer.java: constructDIR(): condition after inversion: Equals
| owner.lastName
| NullOp
DIRIfThenRegionAnalyzer.java: constructDIR(): merging head with cond
analysis/Utils.java: mergeSeqDirs(): following dir domain: [owner.lastName]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {owner.lastName=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName}
analysis/Utils.java: mergeSeqDirs(): key: owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| owner.lastName
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:""
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ""
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| owner.lastName
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): return
DIRIfThenRegionAnalyzer.java: constructDIR(): IfThenRegion: | IfThen
| | BasicBlock0
| | BasicBlock1

DIRIfThenRegionAnalyzer.java: constructDIR(): IfThenRegionDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $r0=owner.lastName
DIR.java: updateRegion(): update region entry: condition=NotEq
| owner.lastName
| NullOp
DIR.java: updateRegion(): update region entry: owner.lastName=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): following dir domain: [this, $r0, condition, owner.lastName]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {this=Self, $r0=owner.lastName, condition=NotEq
| owner.lastName
| NullOp, owner.lastName=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName}
analysis/Utils.java: mergeSeqDirs(): key: this
analysis/Utils.java: mergeSeqDirs(): before resolution: Self
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Self
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: Self
analysis/Utils.java: mergeSeqDirs(): key: $r0
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: owner.lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: owner.lastName
analysis/Utils.java: mergeSeqDirs(): key: condition
analysis/Utils.java: mergeSeqDirs(): before resolution: NotEq
| owner.lastName
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: NotEq
| owner.lastName
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| owner.lastName
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): out: NotEq
| owner.lastName
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: NotEq
| owner.lastName
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| owner.lastName
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:""
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ""
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| owner.lastName
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | IfThen
| | BasicBlock0
| | BasicBlock1

DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.IfThenElseRegion
DIRIfThenElseRegionAnalyzer.java: constructDIR(): region tree: | IfThenElse
| | BasicBlock2
| | BasicBlock3
| | IfThenElse
| | | BasicBlock4
| | | BasicBlock5
| | | BasicBlock6

DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock2
DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock3
DIRIfThenElseRegionAnalyzer.java: constructDIR(): | IfThenElse
| | BasicBlock4
| | BasicBlock5
| | BasicBlock6

ARegion.java: analyze(): set cur method of analyzer to: processFindForm
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 2
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r1 -> this.owners
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getLastName
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
construct/Utils.java: parseObjectInvoke(): virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>
construct/Utils.java: parseObjectInvoke(): methodName = getLastName
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getLastName
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.model.Person, $r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.model.Person
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.lastName
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=this.lastName
~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.String
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.String
DIRRegionAnalyzer.java: constructDIR(): case : caseCallToMethodWBodyRetPrim()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), v1 is primitive, foo is not a library method
DIRRegionAnalyzer.java: constructDIR(): v1: $r2
DIRRegionAnalyzer.java: constructDIR(): foo: <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getLastName
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [owner]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.model.Person
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: owner
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getLastName, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: owner
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: constructDIR(): methodSig: org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
DIRRegionAnalyzer.java: constructDIR(): FuncStackAnalyzer.funcDIRMap: {org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()=~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self

, org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

}
DIRRegionAnalyzer.java: constructDIR(): dir callee: ~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): retCalleeCloned: this.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [owner]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.firstName, this.lastName, this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.lastName
DIRRegionAnalyzer.java: constructDIR(): after dag formals to actuals: owner.lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findByLastName
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>
construct/Utils.java: parseObjectInvoke(): methodName = findByLastName
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)
construct/Utils.java: parseObjectInvoke(): Case : findBy
Utils.java: getRelExpForMethod(): getRelExpForMethod: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
Utils.java: getRelExpForMethod(): actualargs = [$r2]
Utils.java: getRelExpForMethod(): methodInvoked = <org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>
Utils.java: getRelExpForMethod(): taglist: 
[Signature: (Ljava/lang/String;)Ljava/util/Collection<Lorg/springframework/samples/petclinic/owner/Owner;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/jpa/repository/Query; num elems: 1 elems: 
Annotation Element: kind: s name: value value: SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName%

Annotation: type: Lorg/springframework/transaction/annotation/Transactional; num elems: 1 elems: 
Annotation Element: kind: Z name: readOnly value: 1

, Visibility Param Annotation: num params: 1 kind: 0
Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/repository/query/Param; num elems: 1 elems: 
Annotation Element: kind: s name: value value: lastName


]
164
165
175
70
154
55
54
|  |  |  |  |  |  |Owner
6
|  |  |  |  |  |  |owner
|  |  |  |  |  |ENTITY_PERSISTER_REF
159
108
|  |  |  |  |  |  |left
66
|  |  |  |  |  |  |fetch
6
|  |  |  |  |  |  |<gen:0>
151
45
84
|  |  |  |  |  |  |  |  |owner
84
|  |  |  |  |  |  |  |  |pets
|  |  |  |  |  |  |  |.
|  |  |  |  |  |  |PATH
|  |  |  |  |  |CommonTreeWalk.java: postOrder(): left
CommonTreeWalk.java: postOrder(): fetch
CommonTreeWalk.java: postOrder(): owner.pets
property-join
|  |  |  |  |PERSISTER_SPACE
|  |  |  |FROM
174
44
|  |  |  |  |DISTINCT
177
176
151
84
|  |  |  |  |  |  |  |owner
|  |  |  |  |  |  |PATH
|  |  |  |  |  |SELECT_ITEM
|  |  |  |  |SELECT_LIST
|  |  |  |SELECT
|  |  |SELECT_FROM
211
114
151
45
84
|  |  |  |  |  |  |owner
84
|  |  |  |  |  |  |lastName
|  |  |  |  |  |.
|  |  |  |  |PATH
130
|  |  |  |  |lastName
|  |  |  |LIKE
|  |  |WHERE
|  |QUERY_SPEC
|QUERY
Utils.java: getRelExpForMethod(): Info collected by walk: 
CommonTreeWalk.java: printInfo: tableName = Owner
CommonTreeWalk.java: printInfo: tableAlias = owner
CommonTreeWalk.java: printInfo: conditionOp = LIKE
CommonTreeWalk.java: printInfo: conditionLeftOperand = (PATH (. owner lastName))
CommonTreeWalk.java: printInfo: conditionRightOperand = lastName
CommonTreeWalk.java: printInfo: selectedExpr = owner
construct/Utils.java: parseObjectInvoke(): relExpFor method : interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
construct/Utils.java: parseObjectInvoke(): expr : Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2=pets
construct/Utils.java: parseObjectInvoke(): relExp = Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2
construct/Utils.java: parseObjectInvoke(): entityClass = java.util.Collection
construct/Utils.java: parseObjectInvoke(): retType = java.util.Collection
AccessPath.java: isReturnTypeEntity(): check :java.util.Collection
AccessPath.java: isReturnTypeEntity(): tags = [Signature: (Ljava/lang/String;)Ljava/util/Collection<Lorg/springframework/samples/petclinic/owner/Owner;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/jpa/repository/Query; num elems: 1 elems: 
Annotation Element: kind: s name: value value: SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName%

Annotation: type: Lorg/springframework/transaction/annotation/Transactional; num elems: 1 elems: 
Annotation Element: kind: Z name: readOnly value: 1

, Visibility Param Annotation: num params: 1 kind: 0
Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/repository/query/Param; num elems: 1 elems: 
Annotation Element: kind: s name: value value: lastName


]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
AccessPath.java: isReturnTypeEntity(): check :java.util.Collection
AccessPath.java: isReturnTypeEntity(): tags = [Signature: (Ljava/lang/String;)Ljava/util/Collection<Lorg/springframework/samples/petclinic/owner/Owner;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/jpa/repository/Query; num elems: 1 elems: 
Annotation Element: kind: s name: value value: SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName%

Annotation: type: Lorg/springframework/transaction/annotation/Transactional; num elems: 1 elems: 
Annotation Element: kind: Z name: readOnly value: 1

, Visibility Param Annotation: num params: 1 kind: 0
Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/repository/query/Param; num elems: 1 elems: 
Annotation Element: kind: s name: value value: lastName


]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.owner.Owner
AccessPath.java: getCollectionEntityType(): interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
AccessPath.java: getCollectionEntityType(): [Signature: (Ljava/lang/String;)Ljava/util/Collection<Lorg/springframework/samples/petclinic/owner/Owner;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/jpa/repository/Query; num elems: 1 elems: 
Annotation Element: kind: s name: value value: SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName%

Annotation: type: Lorg/springframework/transaction/annotation/Transactional; num elems: 1 elems: 
Annotation Element: kind: Z name: readOnly value: 1

, Visibility Param Annotation: num params: 1 kind: 0
Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/repository/query/Param; num elems: 1 elems: 
Annotation Element: kind: s name: value value: lastName


]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/owner/Owner
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): leftType : org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: results
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
AccessPath.java: isReturnTypeEntity(): check :java.util.Collection
AccessPath.java: isReturnTypeEntity(): tags = [Signature: (Ljava/lang/String;)Ljava/util/Collection<Lorg/springframework/samples/petclinic/owner/Owner;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/jpa/repository/Query; num elems: 1 elems: 
Annotation Element: kind: s name: value value: SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName%

Annotation: type: Lorg/springframework/transaction/annotation/Transactional; num elems: 1 elems: 
Annotation Element: kind: Z name: readOnly value: 1

, Visibility Param Annotation: num params: 1 kind: 0
Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/repository/query/Param; num elems: 1 elems: 
Annotation Element: kind: s name: value value: lastName


]
AccessPath.java: isReturnTypeEntity(): method retType = org.springframework.samples.petclinic.owner.Owner
AccessPath.java: getCollectionEntityType(): interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
AccessPath.java: getCollectionEntityType(): [Signature: (Ljava/lang/String;)Ljava/util/Collection<Lorg/springframework/samples/petclinic/owner/Owner;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/jpa/repository/Query; num elems: 1 elems: 
Annotation Element: kind: s name: value value: SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName%

Annotation: type: Lorg/springframework/transaction/annotation/Transactional; num elems: 1 elems: 
Annotation Element: kind: Z name: readOnly value: 1

, Visibility Param Annotation: num params: 1 kind: 0
Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Lorg/springframework/data/repository/query/Param; num elems: 1 elems: 
Annotation Element: kind: s name: value value: lastName


]
AccessPath.java: getCollectionEntityType(): org/springframework/samples/petclinic/owner/Owner
AccessPath.java: getCollectionEntityType(): Collection Entity Type = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): left type = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): java.util.Collection
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.util.Collection
DIRRegionAnalyzer.java: constructDIR(): method sig = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()=~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self

, org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ return ~~~
Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [Owner.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: owners

]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
DIRRegionAnalyzer.java: constructDIR(): leftType = org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findByLastName
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Owner fields = [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String address>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>  type=Pet
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = results, org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [results.address, results.city, results.telephone, results.pets, results.firstName, results.lastName, results.id]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String), org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)]
DIRRegionAnalyzer.java: constructDIR(): callee = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
DIRRegionAnalyzer.java: constructDIR(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
DIRRegionAnalyzer.java: constructDIR(): return type collection
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
DIRRegionAnalyzer.java: constructDIR(): key= return
 value= Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | owner.lastName
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.Owner
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Owner fields = [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String address>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>  type=Pet
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.Owner fields= [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 7
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: address

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String city>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: city

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: telephone

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
Annotation: type: Ljavax/validation/constraints/Digits; num elems: 2 elems: 
Annotation Element: kind: I name: fraction value: 0
Annotation Element: kind: I name: integer value: 10

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=pets
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Owner
 fieldName= pets
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String address [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String city [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String telephone [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 02 13 00 00 32 00 00 13 00... (truncated))]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set pets [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Pet.ownerId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): nested field name= pets
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Pet fields = [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>  type=PetType
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>  type=Owner
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>  type=Visit
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.visit.Visit
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.Pet fields= [<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>, <org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>, <org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>, <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 6
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: java.time.LocalDate birthDate>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: birth_date

Annotation: type: Lorg/springframework/format/annotation/DateTimeFormat; num elems: 1 elems: 
Annotation Element: kind: s name: pattern value: yyyy-MM-dd

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.PetType type>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: typeId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=type
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= type
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= type
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.PetType
NRA.java: getJoinedColumn(): joined Column value=  typeId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: typeId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.typeId
| PetType.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): nested field name= type
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.PetType
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.PetType fields = [<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.PetType
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.PetType fields= [<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 2
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: name

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.PetType.name), FieldRef(org.springframework.samples.petclinic.owner.PetType.id)]
NRA.java: genExprNra(): projectNode name: Pet.type=Pi
NRA.java: genExprNra(): nestexpr= Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: org.springframework.samples.petclinic.owner.Owner owner>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/ManyToOne; without elements
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: ownerId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=owner
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= owner
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.Owner owner [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): ManytoOne field= owner
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.Owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: getJoinCondFromField(): ManyToOne Field
NRA.java: getCondFromManyToOne(): anElems = [Annotation Element: kind: s name: name value: ownerId]
NRA.java: getCondFromManyToOne(): cond = Equals
| Alpha.ownerId
| Owner.id
NRA.java: genExprNra(): ManyToOne Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): nested field name= owner
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.owner.Owner
NRA.java: processTableandFields: org.springframework.samples.petclinic.owner.Owner fields = [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String address>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>  type=Pet
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
AccessPath.java: getCollectionType: Collection field Type = org.springframework.samples.petclinic.owner.Pet
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): org.springframework.samples.petclinic.owner.Owner fields= [<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String city>, <org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>, <org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>, <org.springframework.samples.petclinic.model.Person: java.lang.String firstName>, <org.springframework.samples.petclinic.model.Person: java.lang.String lastName>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 7
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String address>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: address

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String city>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: city

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.lang.String telephone>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: telephone

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
Annotation: type: Ljavax/validation/constraints/Digits; num elems: 2 elems: 
Annotation Element: kind: I name: fraction value: 0
Annotation Element: kind: I name: integer value: 10

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Owner: java.util.Set pets>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: owner

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=pets
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Owner
 fieldName= pets
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String address [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String city [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 01 13 00 00 32 00 00)]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String telephone [RuntimeVisibleAnnotations] [(Unknown attribute RuntimeVisibleTypeAnnotations: 00 02 13 00 00 32 00 00 13 00... (truncated))]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set pets [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/owner/Pet;>;
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Owner
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= owner
NRA.java: getJoinedColumn(): joined Column value=  ownerId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Pet.ownerId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.Person: java.lang.String firstName>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: first_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: last_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.Owner.address), FieldRef(org.springframework.samples.petclinic.owner.Owner.city), FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), FieldRef(org.springframework.samples.petclinic.owner.Owner.pets), FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName), FieldRef(org.springframework.samples.petclinic.owner.Owner.id)]
NRA.java: genExprNra(): projectNode name: Pet.owner=Pi
NRA.java: genExprNra(): nestexpr= Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | NullOp
| | firstName
| | lastName
| | id
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.owner.Pet: java.util.Set visits>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]
Annotation Element: kind: s name: mappedBy value: petId

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=visits
Construct/Utils.java: bcelActualCollectionFieldType(): className= org.springframework.samples.petclinic.owner.Pet
 fieldName= visits
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.time.LocalDate birthDate [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.PetType type [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private org.springframework.samples.petclinic.owner.Owner owner [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set visits [Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lorg/springframework/samples/petclinic/visit/Visit;>;
NRA.java: genExprNra(): sfEntity=org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): baseclass = org.springframework.samples.petclinic.owner.Pet
NRA.java: genExprNra(): fieldclass = org.springframework.samples.petclinic.visit.Visit
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= petId
NRA.java: getJoinedColumn(): joined Column value=  petId
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Visit.petId
NRA.java: genExprNra(): OneToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): nested field name= visits
NRA.java: genExprNra(): nested Entity = org.springframework.samples.petclinic.visit.Visit
NRA.java: processTableandFields: org.springframework.samples.petclinic.visit.Visit fields = [<org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>, <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>, <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>  type=FieldData
NRA.java: processTableandFields: sf <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= org.springframework.samples.petclinic.visit.Visit
NRA.java: genExprNra(): org.springframework.samples.petclinic.visit.Visit fields= [<org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>, <org.springframework.samples.petclinic.visit.Visit: java.lang.String description>, <org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>, <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>]
NRA.java: genExprNra(): fields count= 4
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.visit.Visit: java.time.LocalDate date>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: visit_date

Annotation: type: Lorg/springframework/format/annotation/DateTimeFormat; num elems: 1 elems: 
Annotation Element: kind: s name: pattern value: yyyy-MM-dd

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.visit.Visit: java.lang.String description>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.visit.Visit: java.lang.Integer petId>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: petId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.visit.Visit.date), FieldRef(org.springframework.samples.petclinic.visit.Visit.description), FieldRef(org.springframework.samples.petclinic.visit.Visit.petId), FieldRef(org.springframework.samples.petclinic.visit.Visit.id)]
NRA.java: genExprNra(): projectNode name: Pet.visits=Pi
NRA.java: genExprNra(): nestexpr= Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.NamedEntity: java.lang.String name>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: name

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.Pet.birthDate), FieldRef(org.springframework.samples.petclinic.owner.Pet.type), FieldRef(org.springframework.samples.petclinic.owner.Pet.owner), FieldRef(org.springframework.samples.petclinic.owner.Pet.visits), FieldRef(org.springframework.samples.petclinic.owner.Pet.name), FieldRef(org.springframework.samples.petclinic.owner.Pet.id)]
NRA.java: genExprNra(): projectNode name: Owner.pets=Pi
NRA.java: genExprNra(): nestexpr= Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | NullOp
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.Person: java.lang.String firstName>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: first_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.Person: java.lang.String lastName>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: last_name

Annotation type: Ljavax/validation/constraints/NotEmpty; without elements
]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= []
NRA.java: genExprNra(): field =<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: IDENTITY

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(org.springframework.samples.petclinic.owner.Owner.address), FieldRef(org.springframework.samples.petclinic.owner.Owner.city), FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), FieldRef(org.springframework.samples.petclinic.owner.Owner.pets), FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName), FieldRef(org.springframework.samples.petclinic.owner.Owner.id)]
NRA.java: genExprNra(): projectNode name: Pi
DIRRegionAnalyzer.java: constructDIR(): nested VeMap : 
DIRRegionAnalyzer.java: constructDIR(): key : return
 value : 
 Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
DIRRegionAnalyzer.java: constructDIR(): leftval = results
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String) END
DIRRegionAnalyzer.java: constructDIR(): curUnit = $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = isEmpty
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Collection: boolean isEmpty()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke results.<java.util.Collection: boolean isEmpty()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Collection: boolean isEmpty()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Collection: boolean isEmpty()>
construct/Utils.java: parseObjectInvoke(): methodName = isEmpty
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Collection: boolean isEmpty()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
construct/Utils.java: parseObjectInvoke(): method wont handle 4
DIRRegionAnalyzer.java: constructDIR(): Wont handle this method
DIRRegionAnalyzer.java: constructDIR(): curUnit = if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>()
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()$z0 == 0
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


DIR.java: updateRegion(): update region entry: condition=Equals
| MethodWontHandleOp
| 0
DIR.java: updateRegion(): update region entry: $r1=this.owners
DIR.java: updateRegion(): update region entry: $r2=owner.lastName
DIR.java: updateRegion(): update region entry: $z0=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: results=Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


ARegion.java: analyze(): set cur method of analyzer to: processFindForm
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock3
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 3
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found")
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found")
DIRRegionAnalyzer.java: handleSideEffects(): methodname: rejectValue
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = return "owners/findOwners"
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock3
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ return ~~~
"owners/findOwners"


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ return ~~~
"owners/findOwners"


DIR.java: updateRegion(): update region entry: return="owners/findOwners"
~~~ return ~~~
"owners/findOwners"


DIRIfThenElseRegionAnalyzer.java: constructDIR(): region tree: | IfThenElse
| | BasicBlock4
| | BasicBlock5
| | BasicBlock6

DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock4
DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock5
DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock6
ARegion.java: analyze(): set cur method of analyzer to: processFindForm
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock4
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 4
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $i0 = interfaceinvoke results.<java.util.Collection: int size()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = size
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Collection: int size()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke results.<java.util.Collection: int size()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Collection: int size()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Collection: int size()>
construct/Utils.java: parseObjectInvoke(): methodName = size
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke results.<java.util.Collection: int size()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Collection: int size()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
construct/Utils.java: parseObjectInvoke(): method wont handle 4
DIRRegionAnalyzer.java: constructDIR(): Wont handle this method
DIRRegionAnalyzer.java: constructDIR(): curUnit = if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results)
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()$i0 != 1
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock4
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


DIR.java: updateRegion(): update region entry: condition=NotEq
| MethodWontHandleOp
| 1
DIR.java: updateRegion(): update region entry: $i0=MethodWontHandleOp
~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


ARegion.java: analyze(): set cur method of analyzer to: processFindForm
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock5
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 5
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = iterator
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Collection: java.util.Iterator iterator()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Collection: java.util.Iterator iterator()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Collection: java.util.Iterator iterator()>
construct/Utils.java: parseObjectInvoke(): methodName = iterator
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Collection: java.util.Iterator iterator()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r4
Utils.java: getVarNode(): LinkedVariableBox($r4)
JAssignStmtCons.java: construct(): interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>()
construct/Utils.java: parseInvokeExpr(): methodName = iterator
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Collection: java.util.Iterator iterator()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Collection: java.util.Iterator iterator()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Collection: java.util.Iterator iterator()>
construct/Utils.java: parseObjectInvoke(): methodName = iterator
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Collection: java.util.Iterator iterator()
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = next
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Iterator: java.lang.Object next()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Iterator: java.lang.Object next()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Iterator: java.lang.Object next()>
construct/Utils.java: parseObjectInvoke(): methodName = next
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Iterator: java.lang.Object next()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r5
Utils.java: getVarNode(): LinkedVariableBox($r5)
JAssignStmtCons.java: construct(): interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
construct/Utils.java: parseInvokeExpr(): methodName = next
construct/Utils.java: parseInvokeExpr(): methodSignature = java.util.Iterator: java.lang.Object next()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.util.Iterator: java.lang.Object next()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.util.Iterator: java.lang.Object next()>
construct/Utils.java: parseObjectInvoke(): methodName = next
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.util.Iterator: java.lang.Object next()
DIRRegionAnalyzer.java: constructDIR(): curUnit = owner = (org.springframework.samples.petclinic.owner.Owner) $r5
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JCastExpr
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = (type1) v2
DIRRegionAnalyzer.java: constructDIR(): type1: org.springframework.samples.petclinic.owner.Owner
DIRRegionAnalyzer.java: constructDIR(): castExpr: (org.springframework.samples.petclinic.owner.Owner) $r5
DIRRegionAnalyzer.java: constructDIR(): v2: $r5
DIRRegionAnalyzer.java: constructDIR(): cur dir: {$r4=InvokeMethod
| results
| Iterator(), $r5=NextOp}
DIRRegionAnalyzer.java: constructDIR(): rightVar in dir: true
DIRRegionAnalyzer.java: constructDIR(): CASE: actual_iterator = (type1) it
DIRRegionAnalyzer.java: constructDIR(): rightVar's value in dir: NextOp
DIRRegionAnalyzer.java: constructDIR(): flattenedIterator = [owner.address, owner.city, owner.telephone, owner.firstName, owner.lastName, owner.id]
DIRRegionAnalyzer.java: constructDIR(): dir: {owner.address=FieldRef(org.springframework.samples.petclinic.owner.Owner.address), owner.firstName=FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), $r4=InvokeMethod
| results
| Iterator(), owner.id=FieldRef(org.springframework.samples.petclinic.owner.Owner.id), $r5=NextOp, owner.city=FieldRef(org.springframework.samples.petclinic.owner.Owner.city), owner.telephone=FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), owner.lastName=FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)}
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r6 = new java.lang.StringBuilder
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
Utils.java: getVarNode(): $r6
Utils.java: getVarNode(): LinkedVariableBox($r6)
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.lang.StringBuilder: void <init>()

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/")
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = append
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/")
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
construct/Utils.java: parseObjectInvoke(): methodName = append
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/")
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r7
Utils.java: getVarNode(): LinkedVariableBox($r7)
JAssignStmtCons.java: construct(): virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/")
construct/Utils.java: parseInvokeExpr(): methodName = append
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/")
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
construct/Utils.java: parseObjectInvoke(): methodName = append
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/")
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getId
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
construct/Utils.java: parseObjectInvoke(): virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>
construct/Utils.java: parseObjectInvoke(): methodName = getId
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getId
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.model.BaseEntity, $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>, return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: org.springframework.samples.petclinic.model.BaseEntity
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer id>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.id
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.id
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=this.id
~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.Integer
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.Integer
DIRRegionAnalyzer.java: constructDIR(): case : caseCallToMethodWBodyRetPrim()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), v1 is primitive, foo is not a library method
DIRRegionAnalyzer.java: constructDIR(): v1: $r8
DIRRegionAnalyzer.java: constructDIR(): foo: <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getId
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [owner]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: org.springframework.samples.petclinic.model.BaseEntity
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: owner
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.id]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getId, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: owner
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.id]
DIRRegionAnalyzer.java: constructDIR(): methodSig: org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
DIRRegionAnalyzer.java: constructDIR(): FuncStackAnalyzer.funcDIRMap: {org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()=~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self

, org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()=~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self

, org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2

}
DIRRegionAnalyzer.java: constructDIR(): dir callee: ~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): retCalleeCloned: this.id
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.id
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [owner]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.id
DIRRegionAnalyzer.java: constructDIR(): after dag formals to actuals: owner.id
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = append
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
construct/Utils.java: parseObjectInvoke(): methodName = append
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
construct/Utils.java: parseObjectInvoke(): method wont handle 4
DIRRegionAnalyzer.java: constructDIR(): Wont handle this method
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = toString
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.String toString()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.String toString()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.String toString()>
construct/Utils.java: parseObjectInvoke(): methodName = toString
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.String toString()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map), org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId(), org.springframework.samples.petclinic.model.Person: java.lang.String getLastName(), org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)]
construct/Utils.java: parseObjectInvoke(): method wont handle 4
DIRRegionAnalyzer.java: constructDIR(): Wont handle this method
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r10
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock5
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r10 ~~~
MethodWontHandleOp

~~~ $r4 ~~~
InvokeMethod
| results
| Iterator()

~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
BottomNode

~~~ $r7 ~~~
BottomNode

~~~ $r8 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ $r9 ~~~
MethodWontHandleOp

~~~ owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ return ~~~
MethodWontHandleOp


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r10 ~~~
MethodWontHandleOp

~~~ $r4 ~~~
InvokeMethod
| results
| Iterator()

~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
BottomNode

~~~ $r7 ~~~
BottomNode

~~~ $r8 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ $r9 ~~~
MethodWontHandleOp

~~~ owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ return ~~~
MethodWontHandleOp


DIR.java: updateRegion(): update region entry: $r4=InvokeMethod
| results
| Iterator()
DIR.java: updateRegion(): update region entry: $r5=NextOp
DIR.java: updateRegion(): update region entry: $r6=BottomNode
DIR.java: updateRegion(): update region entry: $r7=BottomNode
DIR.java: updateRegion(): update region entry: $r8=FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
DIR.java: updateRegion(): update region entry: $r9=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: owner.address=FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
DIR.java: updateRegion(): update region entry: owner.firstName=FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
DIR.java: updateRegion(): update region entry: owner.id=FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
DIR.java: updateRegion(): update region entry: owner.city=FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
DIR.java: updateRegion(): update region entry: owner.telephone=FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
DIR.java: updateRegion(): update region entry: owner.lastName=FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
DIR.java: updateRegion(): update region entry: return=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: $r10=MethodWontHandleOp
~~~ $r10 ~~~
MethodWontHandleOp

~~~ $r4 ~~~
InvokeMethod
| results
| Iterator()

~~~ $r5 ~~~
NextOp

~~~ $r6 ~~~
BottomNode

~~~ $r7 ~~~
BottomNode

~~~ $r8 ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ $r9 ~~~
MethodWontHandleOp

~~~ owner.address ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.address)

~~~ owner.city ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.city)

~~~ owner.firstName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)

~~~ owner.id ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.id)

~~~ owner.lastName ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)

~~~ owner.telephone ~~~
FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)

~~~ return ~~~
MethodWontHandleOp


ARegion.java: analyze(): set cur method of analyzer to: processFindForm
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock6
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 6
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: org.springframework.samples.petclinic.owner.OwnerController, owner := @parameter0: org.springframework.samples.petclinic.owner.Owner, result := @parameter1: org.springframework.validation.BindingResult, model := @parameter2: java.util.Map, $r0 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), if $r0 != null goto $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: void setLastName(java.lang.String)>(""), $r1 = this.<org.springframework.samples.petclinic.owner.OwnerController: org.springframework.samples.petclinic.owner.OwnerRepository owners>, $r2 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.String getLastName()>(), results = interfaceinvoke $r1.<org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)>($r2), $z0 = interfaceinvoke results.<java.util.Collection: boolean isEmpty()>(), if $z0 == 0 goto $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), interfaceinvoke result.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>("lastName", "notFound", "not found"), return "owners/findOwners", $i0 = interfaceinvoke results.<java.util.Collection: int size()>(), if $i0 != 1 goto interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), $r4 = interfaceinvoke results.<java.util.Collection: java.util.Iterator iterator()>(), $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>(), owner = (org.springframework.samples.petclinic.owner.Owner) $r5, $r6 = new java.lang.StringBuilder, specialinvoke $r6.<java.lang.StringBuilder: void <init>()>(), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/owners/"), $r8 = virtualinvoke owner.<org.springframework.samples.petclinic.owner.Owner: java.lang.Integer getId()>(), $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8), $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>(), return $r10, interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results), return "owners/ownersList"]
DIRRegionAnalyzer.java: constructDIR(): curUnit = interfaceinvoke model.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("selections", results)
DIRRegionAnalyzer.java: constructDIR(): Model Add Attribute Statement
Utils.java: getVarNode(): __modelattribute__selections
Utils.java: getVarNode(): LinkedVariableBox(__modelattribute__selections)
DIRRegionAnalyzer.java: constructDIR(): curUnit = return "owners/ownersList"
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock6
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ __modelattribute__selections ~~~
results

~~~ return ~~~
"owners/ownersList"


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ __modelattribute__selections ~~~
results

~~~ return ~~~
"owners/ownersList"


DIR.java: updateRegion(): update region entry: __modelattribute__selections=results
DIR.java: updateRegion(): update region entry: return="owners/ownersList"
~~~ __modelattribute__selections ~~~
results

~~~ return ~~~
"owners/ownersList"


analysis/Utils.java: extractCondition(): condVar: condition
analysis/Utils.java: extractCondition(): input dir (of headRegion): ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


DIRIfThenElseRegionAnalyzer.java: constructDIR(): condition: NotEq
| MethodWontHandleOp
| 1
DIRIfThenElseRegionAnalyzer.java: constructDIR(): condition after inversion: Equals
| MethodWontHandleOp
| 1
DIRIfThenElseRegionAnalyzer.java: constructDIR(): headDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


DIRIfThenElseRegionAnalyzer.java: constructDIR(): condRegDIR: ~~~ $r10 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10

~~~ $r4 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4

~~~ $r5 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5

~~~ $r6 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6

~~~ $r7 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7

~~~ $r8 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8

~~~ $r9 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9

~~~ __modelattribute__selections ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results

~~~ owner.address ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address

~~~ owner.city ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city

~~~ owner.firstName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName

~~~ owner.id ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id

~~~ owner.lastName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName

~~~ owner.telephone ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone

~~~ return ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"


DIRIfThenElseRegionAnalyzer.java: constructDIR(): merging head with cond
analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r4, $r5, $r6, $r7, $r8, $r9, owner.address, owner.firstName, __modelattribute__selections, owner.id, owner.city, owner.telephone, owner.lastName, return, $r10]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r10 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10

~~~ $r4 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4

~~~ $r5 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5

~~~ $r6 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6

~~~ $r7 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7

~~~ $r8 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8

~~~ $r9 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9

~~~ __modelattribute__selections ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results

~~~ owner.address ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address

~~~ owner.city ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city

~~~ owner.firstName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName

~~~ owner.id ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id

~~~ owner.lastName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName

~~~ owner.telephone ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone

~~~ return ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r4=?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4, $r5=?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5, $r6=?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6, $r7=?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7, $r8=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8, $r9=?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9, owner.address=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address, owner.firstName=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName, __modelattribute__selections=?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results, owner.id=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id, owner.city=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city, owner.telephone=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone, owner.lastName=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName, return=?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList", $r10=?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10}
analysis/Utils.java: mergeSeqDirs(): key: $r4
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:InvokeMethod
| results
| Iterator()
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: InvokeMethod
| results
| Iterator()
analysis/Utils.java: resolveTree(): i = 0 child of top:results
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Iterator()
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:FuncParams
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FuncParams
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Iterator()
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: results
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
analysis/Utils.java: mergeSeqDirs(): key: $r5
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NextOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r5
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NextOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: mergeSeqDirs(): key: $r6
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r6
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: mergeSeqDirs(): key: $r7
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r7
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: mergeSeqDirs(): key: $r8
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r8
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r8
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: mergeSeqDirs(): key: $r9
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r9
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r9
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: mergeSeqDirs(): key: owner.address
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: mergeSeqDirs(): key: owner.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__selections
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:__modelattribute__selections
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:results
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: results
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: __modelattribute__selections
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: mergeSeqDirs(): key: owner.id
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: mergeSeqDirs(): key: owner.city
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: mergeSeqDirs(): key: owner.telephone
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: mergeSeqDirs(): key: owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: mergeSeqDirs(): key: return
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:"owners/ownersList"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: "owners/ownersList"
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: mergeSeqDirs(): key: $r10
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): in: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: resolveTree(): dir: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r10
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r10
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ $r10 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10

~~~ $r4 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4

~~~ $r5 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5

~~~ $r6 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6

~~~ $r7 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7

~~~ $r8 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8

~~~ $r9 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9

~~~ __modelattribute__selections ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1

~~~ owner.address ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address

~~~ owner.city ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city

~~~ owner.firstName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName

~~~ owner.id ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id

~~~ owner.lastName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName

~~~ owner.telephone ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone

~~~ return ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"


analysis/Utils.java: mergeSeqDirs(): return
DIRIfThenElseRegionAnalyzer.java: constructDIR(): IfThenElseDIR: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ $r10 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10

~~~ $r4 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4

~~~ $r5 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5

~~~ $r6 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6

~~~ $r7 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7

~~~ $r8 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8

~~~ $r9 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9

~~~ __modelattribute__selections ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1

~~~ owner.address ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address

~~~ owner.city ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city

~~~ owner.firstName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName

~~~ owner.id ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id

~~~ owner.lastName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName

~~~ owner.telephone ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone

~~~ return ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $i0 ~~~
MethodWontHandleOp

~~~ $r10 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10

~~~ $r4 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4

~~~ $r5 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5

~~~ $r6 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6

~~~ $r7 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7

~~~ $r8 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8

~~~ $r9 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9

~~~ __modelattribute__selections ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1

~~~ owner.address ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address

~~~ owner.city ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city

~~~ owner.firstName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName

~~~ owner.id ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id

~~~ owner.lastName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName

~~~ owner.telephone ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone

~~~ return ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"


DIR.java: updateRegion(): update region entry: $r4=?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
DIR.java: updateRegion(): update region entry: $r5=?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
DIR.java: updateRegion(): update region entry: $r6=?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
DIR.java: updateRegion(): update region entry: $r7=?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
DIR.java: updateRegion(): update region entry: $r8=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
DIR.java: updateRegion(): update region entry: $i0=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: $r9=?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
DIR.java: updateRegion(): update region entry: owner.address=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
DIR.java: updateRegion(): update region entry: condition=NotEq
| MethodWontHandleOp
| 1
DIR.java: updateRegion(): update region entry: owner.firstName=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
DIR.java: updateRegion(): update region entry: __modelattribute__selections=?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
DIR.java: updateRegion(): update region entry: owner.id=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
DIR.java: updateRegion(): update region entry: owner.city=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
DIR.java: updateRegion(): update region entry: owner.telephone=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
DIR.java: updateRegion(): update region entry: owner.lastName=?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
DIR.java: updateRegion(): update region entry: return=?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
DIR.java: updateRegion(): update region entry: $r10=?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
~~~ $i0 ~~~
MethodWontHandleOp

~~~ $r10 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10

~~~ $r4 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4

~~~ $r5 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5

~~~ $r6 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6

~~~ $r7 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7

~~~ $r8 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8

~~~ $r9 ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9

~~~ __modelattribute__selections ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results

~~~ condition ~~~
NotEq
| MethodWontHandleOp
| 1

~~~ owner.address ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address

~~~ owner.city ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city

~~~ owner.firstName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName

~~~ owner.id ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id

~~~ owner.lastName ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName

~~~ owner.telephone ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone

~~~ return ~~~
?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"


analysis/Utils.java: extractCondition(): condVar: condition
analysis/Utils.java: extractCondition(): input dir (of headRegion): ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


DIRIfThenElseRegionAnalyzer.java: constructDIR(): condition: Equals
| MethodWontHandleOp
| 0
DIRIfThenElseRegionAnalyzer.java: constructDIR(): condition after inversion: NotEq
| MethodWontHandleOp
| 0
DIRIfThenElseRegionAnalyzer.java: constructDIR(): headDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


DIRIfThenElseRegionAnalyzer.java: constructDIR(): condRegDIR: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | results
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | results

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| condition
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


DIRIfThenElseRegionAnalyzer.java: constructDIR(): merging head with cond
analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r4, $r5, $r6, $r7, $r8, $i0, $r9, owner.address, condition, owner.firstName, __modelattribute__selections, owner.id, owner.city, return, owner.telephone, owner.lastName, $r10]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | results
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | results

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| condition
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r4=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | results
| | | Iterator()
| | $r4, $r5=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5, $r6=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6, $r7=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7, $r8=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8, $i0=?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp, $r9=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9, owner.address=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address, condition=?
| NotEq
| | MethodWontHandleOp
| | 0
| condition
| NotEq
| | MethodWontHandleOp
| | 1, owner.firstName=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName, __modelattribute__selections=?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | results, owner.id=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id, owner.city=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city, return=?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList", owner.telephone=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone, owner.lastName=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName, $r10=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10}
analysis/Utils.java: mergeSeqDirs(): key: $r4
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | results
| | | Iterator()
| | $r4
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | results
| | | Iterator()
| | $r4
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | results
| | | Iterator()
| | $r4
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | results
| | Iterator()
| $r4
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:InvokeMethod
| results
| Iterator()
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: InvokeMethod
| results
| Iterator()
analysis/Utils.java: resolveTree(): i = 0 child of top:results
analysis/Utils.java: resolveTree(): top: InvokeMethod
| results
| Iterator()
analysis/Utils.java: resolveTree(): resolvedValChild: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): new top: InvokeMethod
| Pi
| | Sel
| | | Cartesian
| | | | ClassRef(Owner)
| | | Like
| | | | FieldRef(owner.lastName)
| | | | owner.lastName
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | Pet.type=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | Equals
| | | | | | | | Alpha.typeId
| | | | | | | | PetType.id
| | | | | | List
| | | | | | | name
| | | | | | | id
| | | | | Pet.owner=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | Equals
| | | | | | | | Alpha.ownerId
| | | | | | | | Owner.id
| | | | | | List
| | | | | | | address
| | | | | | | city
| | | | | | | telephone
| | | | | | | NullOp
| | | | | | | firstName
| | | | | | | lastName
| | | | | | | id
| | | | | Pet.visits=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Visit.petId
| | | | | | List
| | | | | | | date
| | | | | | | description
| | | | | | | petId
| | | | | | | id
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
| Iterator()
analysis/Utils.java: resolveTree(): i = 1 child of top:Iterator()
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:FuncParams
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [0=Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FuncParams
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Iterator()
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
analysis/Utils.java: mergeSeqDirs(): key: $r5
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NextOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r5
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NextOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r5
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: mergeSeqDirs(): key: $r6
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r6
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r6
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: mergeSeqDirs(): key: $r7
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r7
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r7
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: mergeSeqDirs(): key: $r8
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r8
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r8
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r8
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r8
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: mergeSeqDirs(): key: $i0
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$i0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $i0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: mergeSeqDirs(): key: $r9
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r9
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r9
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r9
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r9
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: mergeSeqDirs(): key: owner.address
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: mergeSeqDirs(): key: condition
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| condition
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| condition
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| condition
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:condition
analysis/Utils.java: resolveTree(): top: ?
| NotEq
| | MethodWontHandleOp
| | 0
| condition
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): resolvedValChild: Equals
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): new top: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): i = 2 child of top:NotEq
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [1=Equals
| MethodWontHandleOp
| 0]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: mergeSeqDirs(): key: owner.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__selections
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | results
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | results
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | results
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:__modelattribute__selections
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:__modelattribute__selections
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:results
analysis/Utils.java: resolveTree(): top: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| results
analysis/Utils.java: resolveTree(): resolvedValChild: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): new top: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| Pi
| | Sel
| | | Cartesian
| | | | ClassRef(Owner)
| | | Like
| | | | FieldRef(owner.lastName)
| | | | owner.lastName
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | Pet.type=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | Equals
| | | | | | | | Alpha.typeId
| | | | | | | | PetType.id
| | | | | | List
| | | | | | | name
| | | | | | | id
| | | | | Pet.owner=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | Equals
| | | | | | | | Alpha.ownerId
| | | | | | | | Owner.id
| | | | | | List
| | | | | | | address
| | | | | | | city
| | | | | | | telephone
| | | | | | | NullOp
| | | | | | | firstName
| | | | | | | lastName
| | | | | | | id
| | | | | Pet.visits=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Visit.petId
| | | | | | List
| | | | | | | date
| | | | | | | description
| | | | | | | petId
| | | | | | | id
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [2=Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: __modelattribute__selections
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: __modelattribute__selections
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
analysis/Utils.java: mergeSeqDirs(): key: owner.id
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: mergeSeqDirs(): key: owner.city
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: mergeSeqDirs(): key: return
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:"owners/findOwners"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:"owners/ownersList"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: "owners/ownersList"
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: "owners/findOwners"
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: mergeSeqDirs(): key: owner.telephone
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: mergeSeqDirs(): key: owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: mergeSeqDirs(): key: $r10
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: resolveTree(): dir: ~~~ $r1 ~~~
this.owners

~~~ $r2 ~~~
owner.lastName

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r10
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r10
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r10
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r10
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


analysis/Utils.java: mergeSeqDirs(): return
DIRIfThenElseRegionAnalyzer.java: constructDIR(): IfThenElseDIR: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


DIR.java: updateRegion(): update region entry: $r1=this.owners
DIR.java: updateRegion(): update region entry: $r2=owner.lastName
DIR.java: updateRegion(): update region entry: $r4=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
DIR.java: updateRegion(): update region entry: $r5=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
DIR.java: updateRegion(): update region entry: $r6=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
DIR.java: updateRegion(): update region entry: $r7=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
DIR.java: updateRegion(): update region entry: $r8=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
DIR.java: updateRegion(): update region entry: $i0=?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
DIR.java: updateRegion(): update region entry: $r9=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
DIR.java: updateRegion(): update region entry: owner.address=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
DIR.java: updateRegion(): update region entry: condition=?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
DIR.java: updateRegion(): update region entry: owner.firstName=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
DIR.java: updateRegion(): update region entry: __modelattribute__selections=?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
DIR.java: updateRegion(): update region entry: owner.id=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
DIR.java: updateRegion(): update region entry: $z0=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: owner.city=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
DIR.java: updateRegion(): update region entry: results=Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
DIR.java: updateRegion(): update region entry: return=?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
DIR.java: updateRegion(): update region entry: owner.telephone=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
DIR.java: updateRegion(): update region entry: owner.lastName=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
DIR.java: updateRegion(): update region entry: $r10=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r1, $r2, $r4, $r5, $r6, $r7, $r8, $i0, $r9, owner.address, condition, owner.firstName, __modelattribute__selections, owner.id, $z0, owner.city, results, return, owner.telephone, owner.lastName, $r10]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r1=this.owners, $r2=owner.lastName, $r4=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4, $r5=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5, $r6=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6, $r7=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7, $r8=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8, $i0=?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp, $r9=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9, owner.address=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address, condition=?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1, owner.firstName=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName, __modelattribute__selections=?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id, owner.id=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id, $z0=MethodWontHandleOp, owner.city=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city, results=Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id, return=?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList", owner.telephone=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone, owner.lastName=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName, $r10=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10}
analysis/Utils.java: mergeSeqDirs(): key: $r1
analysis/Utils.java: mergeSeqDirs(): before resolution: this.owners
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: this.owners
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): after resolution: this.owners
analysis/Utils.java: mergeSeqDirs(): key: $r2
analysis/Utils.java: mergeSeqDirs(): before resolution: owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: owner.lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): out: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: mergeSeqDirs(): key: $r4
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Iterator()
| $r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| InvokeMethod
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
| | Iterator()
| $r4
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:InvokeMethod
| Pi
| | Sel
| | | Cartesian
| | | | ClassRef(Owner)
| | | Like
| | | | FieldRef(owner.lastName)
| | | | owner.lastName
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | Pet.type=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | Equals
| | | | | | | | Alpha.typeId
| | | | | | | | PetType.id
| | | | | | List
| | | | | | | name
| | | | | | | id
| | | | | Pet.owner=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | Equals
| | | | | | | | Alpha.ownerId
| | | | | | | | Owner.id
| | | | | | List
| | | | | | | address
| | | | | | | city
| | | | | | | telephone
| | | | | | | NullOp
| | | | | | | firstName
| | | | | | | lastName
| | | | | | | id
| | | | | Pet.visits=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Visit.petId
| | | | | | List
| | | | | | | date
| | | | | | | description
| | | | | | | petId
| | | | | | | id
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
| Iterator()
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: InvokeMethod
| Pi
| | Sel
| | | Cartesian
| | | | ClassRef(Owner)
| | | Like
| | | | FieldRef(owner.lastName)
| | | | owner.lastName
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | Pet.type=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | Equals
| | | | | | | | Alpha.typeId
| | | | | | | | PetType.id
| | | | | | List
| | | | | | | name
| | | | | | | id
| | | | | Pet.owner=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | Equals
| | | | | | | | Alpha.ownerId
| | | | | | | | Owner.id
| | | | | | List
| | | | | | | address
| | | | | | | city
| | | | | | | telephone
| | | | | | | NullOp
| | | | | | | firstName
| | | | | | | lastName
| | | | | | | id
| | | | | Pet.visits=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Visit.petId
| | | | | | List
| | | | | | | date
| | | | | | | description
| | | | | | | petId
| | | | | | | id
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
| Iterator()
analysis/Utils.java: resolveTree(): i = 0 child of top:Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Iterator()
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:FuncParams
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FuncParams
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Iterator()
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | Pet.type=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | Equals
| | | | | | Alpha.typeId
| | | | | | PetType.id
| | | | List
| | | | | name
| | | | | id
| | | Pet.owner=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | Equals
| | | | | | Alpha.ownerId
| | | | | | Owner.id
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | NullOp
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Pet.visits=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Visit.petId
| | | | List
| | | | | date
| | | | | description
| | | | | petId
| | | | | id
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | Pet.type=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | Equals
| | | | | | Alpha.typeId
| | | | | | PetType.id
| | | | List
| | | | | name
| | | | | id
| | | Pet.owner=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | Equals
| | | | | | Alpha.ownerId
| | | | | | Owner.id
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | NullOp
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Pet.visits=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Visit.petId
| | | | List
| | | | | date
| | | | | description
| | | | | petId
| | | | | id
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | NullOp
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | NullOp
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | NullOp
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | NullOp
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:birthDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | NullOp
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:date
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:description
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: description
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: date
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Visit.petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | NullOp
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| NullOp
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| NullOp
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.typeId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: PetType.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.typeId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: birthDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.lastName
analysis/Utils.java: resolveTree(): top: Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): resolvedValChild: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): new top: Like
| FieldRef(owner.lastName)
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [1=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
analysis/Utils.java: mergeSeqDirs(): key: $r5
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| NextOp
| $r5
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:NextOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r5
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NextOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r5
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
analysis/Utils.java: mergeSeqDirs(): key: $r6
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r6
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r6
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r6
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
analysis/Utils.java: mergeSeqDirs(): key: $r7
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| BottomNode
| $r7
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r7
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r7
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
analysis/Utils.java: mergeSeqDirs(): key: $r8
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r8
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| $r8
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r8
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r8
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r8
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
analysis/Utils.java: mergeSeqDirs(): key: $i0
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$i0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $i0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
analysis/Utils.java: mergeSeqDirs(): key: $r9
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r9
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r9
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r9
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r9
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r9
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
analysis/Utils.java: mergeSeqDirs(): key: owner.address
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| owner.address
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
analysis/Utils.java: mergeSeqDirs(): key: condition
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NotEq
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
analysis/Utils.java: mergeSeqDirs(): key: owner.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| owner.firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
analysis/Utils.java: mergeSeqDirs(): key: __modelattribute__selections
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:__modelattribute__selections
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| Pi
| | Sel
| | | Cartesian
| | | | ClassRef(Owner)
| | | Like
| | | | FieldRef(owner.lastName)
| | | | owner.lastName
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | Pet.type=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | Equals
| | | | | | | | Alpha.typeId
| | | | | | | | PetType.id
| | | | | | List
| | | | | | | name
| | | | | | | id
| | | | | Pet.owner=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | Equals
| | | | | | | | Alpha.ownerId
| | | | | | | | Owner.id
| | | | | | List
| | | | | | | address
| | | | | | | city
| | | | | | | telephone
| | | | | | | NullOp
| | | | | | | firstName
| | | | | | | lastName
| | | | | | | id
| | | | | Pet.visits=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Visit.petId
| | | | | | List
| | | | | | | date
| | | | | | | description
| | | | | | | petId
| | | | | | | id
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| __modelattribute__selections
| Pi
| | Sel
| | | Cartesian
| | | | ClassRef(Owner)
| | | Like
| | | | FieldRef(owner.lastName)
| | | | owner.lastName
| | List
| | | address
| | | city
| | | telephone
| | | Owner.pets=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Pet.ownerId
| | | | List
| | | | | birthDate
| | | | | Pet.type=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | Equals
| | | | | | | | Alpha.typeId
| | | | | | | | PetType.id
| | | | | | List
| | | | | | | name
| | | | | | | id
| | | | | Pet.owner=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | Equals
| | | | | | | | Alpha.ownerId
| | | | | | | | Owner.id
| | | | | | List
| | | | | | | address
| | | | | | | city
| | | | | | | telephone
| | | | | | | NullOp
| | | | | | | firstName
| | | | | | | lastName
| | | | | | | id
| | | | | Pet.visits=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Visit.petId
| | | | | | List
| | | | | | | date
| | | | | | | description
| | | | | | | petId
| | | | | | | id
| | | | | name
| | | | | id
| | | firstName
| | | lastName
| | | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:__modelattribute__selections
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | Pet.type=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | Equals
| | | | | | Alpha.typeId
| | | | | | PetType.id
| | | | List
| | | | | name
| | | | | id
| | | Pet.owner=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | Equals
| | | | | | Alpha.ownerId
| | | | | | Owner.id
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | NullOp
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Pet.visits=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Visit.petId
| | | | List
| | | | | date
| | | | | description
| | | | | petId
| | | | | id
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | Pet.type=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | Equals
| | | | | | Alpha.typeId
| | | | | | PetType.id
| | | | List
| | | | | name
| | | | | id
| | | Pet.owner=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | Equals
| | | | | | Alpha.ownerId
| | | | | | Owner.id
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | NullOp
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Pet.visits=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Visit.petId
| | | | List
| | | | | date
| | | | | description
| | | | | petId
| | | | | id
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | NullOp
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | NullOp
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | NullOp
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | NullOp
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:birthDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | NullOp
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:date
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:description
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: description
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: date
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Visit.petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | NullOp
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| NullOp
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| NullOp
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.typeId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: PetType.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.typeId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: birthDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.lastName
analysis/Utils.java: resolveTree(): top: Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): resolvedValChild: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): new top: Like
| FieldRef(owner.lastName)
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [1=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: __modelattribute__selections
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: __modelattribute__selections
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
analysis/Utils.java: mergeSeqDirs(): key: owner.id
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
analysis/Utils.java: mergeSeqDirs(): key: $z0
analysis/Utils.java: mergeSeqDirs(): before resolution: MethodWontHandleOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: MethodWontHandleOp
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): after resolution: MethodWontHandleOp
analysis/Utils.java: mergeSeqDirs(): key: owner.city
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| owner.city
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
analysis/Utils.java: mergeSeqDirs(): key: results
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | Pet.type=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | Equals
| | | | | | Alpha.typeId
| | | | | | PetType.id
| | | | List
| | | | | name
| | | | | id
| | | Pet.owner=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | Equals
| | | | | | Alpha.ownerId
| | | | | | Owner.id
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | NullOp
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Pet.visits=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Visit.petId
| | | | List
| | | | | date
| | | | | description
| | | | | petId
| | | | | id
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| Owner.pets=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | Equals
| | | | Alpha.id
| | | | Pet.ownerId
| | List
| | | birthDate
| | | Pet.type=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | Equals
| | | | | | Alpha.typeId
| | | | | | PetType.id
| | | | List
| | | | | name
| | | | | id
| | | Pet.owner=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | Equals
| | | | | | Alpha.ownerId
| | | | | | Owner.id
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | NullOp
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Pet.visits=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | Equals
| | | | | | Alpha.id
| | | | | | Visit.petId
| | | | List
| | | | | date
| | | | | description
| | | | | petId
| | | | | id
| | | name
| | | id
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | NullOp
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.pets=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | Equals
| | | Alpha.id
| | | Pet.ownerId
| List
| | birthDate
| | Pet.type=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | Equals
| | | | | Alpha.typeId
| | | | | PetType.id
| | | List
| | | | name
| | | | id
| | Pet.owner=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | Equals
| | | | | Alpha.ownerId
| | | | | Owner.id
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | NullOp
| | | | firstName
| | | | lastName
| | | | id
| | Pet.visits=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | Equals
| | | | | Alpha.id
| | | | | Visit.petId
| | | List
| | | | date
| | | | description
| | | | petId
| | | | id
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | NullOp
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| birthDate
| Pet.type=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | Equals
| | | | Alpha.typeId
| | | | PetType.id
| | List
| | | name
| | | id
| Pet.owner=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | Equals
| | | | Alpha.ownerId
| | | | Owner.id
| | List
| | | address
| | | city
| | | telephone
| | | NullOp
| | | firstName
| | | lastName
| | | id
| Pet.visits=Pi
| | Join
| | | Alpha
| | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | Equals
| | | | Alpha.id
| | | | Visit.petId
| | List
| | | date
| | | description
| | | petId
| | | id
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:birthDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | NullOp
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.visits=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | Equals
| | | Alpha.id
| | | Visit.petId
| List
| | date
| | description
| | petId
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| date
| description
| petId
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:date
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:description
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: description
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: date
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.visit.Visit)
| Equals
| | Alpha.id
| | Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Visit.petId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Visit.petId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Visit.petId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.visit.Visit)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.owner=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | Equals
| | | Alpha.ownerId
| | | Owner.id
| List
| | address
| | city
| | telephone
| | NullOp
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| address
| city
| telephone
| NullOp
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| address
| city
| telephone
| NullOp
| firstName
| lastName
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:address
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:city
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 4 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 5 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 6 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Owner)
| Equals
| | Alpha.ownerId
| | Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.ownerId
| Owner.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Owner.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Owner.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Owner)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.type=Pi
| Join
| | Alpha
| | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | Equals
| | | Alpha.typeId
| | | PetType.id
| List
| | name
| | id
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| name
| id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| name
| id
analysis/Utils.java: resolveTree(): i = 0 child of top:name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.PetType)
| Equals
| | Alpha.typeId
| | PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.typeId
| PetType.id
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.typeId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:PetType.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: PetType.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.typeId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.PetType)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: birthDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(org.springframework.samples.petclinic.owner.Pet)
| Equals
| | Alpha.id
| | Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.id
| Pet.ownerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Pet.ownerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pet.ownerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(org.springframework.samples.petclinic.owner.Pet)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: city
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: address
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Cartesian
| ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(owner.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.lastName
analysis/Utils.java: resolveTree(): top: Like
| FieldRef(owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): resolvedValChild: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): new top: Like
| FieldRef(owner.lastName)
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [1=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(owner.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Cartesian
| ClassRef(Owner)
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(Owner)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Owner)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
analysis/Utils.java: mergeSeqDirs(): key: return
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:"owners/findOwners"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| "owners/ownersList"
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:"owners/ownersList"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: "owners/ownersList"
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: "owners/findOwners"
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
analysis/Utils.java: mergeSeqDirs(): key: owner.telephone
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| owner.telephone
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.telephone
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: owner.telephone
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
analysis/Utils.java: mergeSeqDirs(): key: owner.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:owner.lastName
analysis/Utils.java: resolveTree(): top: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): resolvedValChild: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): new top: ?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | owner.lastName
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [1=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:owner.lastName
analysis/Utils.java: resolveTree(): top: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| owner.lastName
analysis/Utils.java: resolveTree(): resolvedValChild: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
analysis/Utils.java: resolveTree(): new top: ?
| Equals
| | MethodWontHandleOp
| | 1
| FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [2=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName
analysis/Utils.java: mergeSeqDirs(): key: $r10
analysis/Utils.java: mergeSeqDirs(): before resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: resolveTree(): dir: ~~~ $r0 ~~~
owner.lastName

~~~ condition ~~~
NotEq
| owner.lastName
| NullOp

~~~ owner.lastName ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r10
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| Equals
| | MethodWontHandleOp
| | 1
| MethodWontHandleOp
| $r10
analysis/Utils.java: resolveTree(): i = 0 child of top:Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:$r10
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r10
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| MethodWontHandleOp
| 1
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 1
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r10
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r0 ~~~
owner.lastName

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"

~~~ this ~~~
Self


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | IfThenElse
| | BasicBlock2
| | BasicBlock3
| | IfThenElse
| | | BasicBlock4
| | | BasicBlock5
| | | BasicBlock6

DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r0 ~~~
owner.lastName

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"

~~~ this ~~~
Self


~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r0 ~~~
owner.lastName

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"

~~~ this ~~~
Self


{$r0=this.lastName, $r1=this.owners, $r2=owner.lastName, $r4=InvokeMethod
| results
| Iterator(), $r5=NextOp, this=Self, $r6=BottomNode, $r7=BottomNode, $r8=FieldRef(org.springframework.samples.petclinic.owner.Owner.id), $i0=MethodWontHandleOp, $r9=MethodWontHandleOp, this.lastName=lastName, owner.address=FieldRef(org.springframework.samples.petclinic.owner.Owner.address), condition=NotEq
| owner.lastName
| NullOp, owner.firstName=FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName), __modelattribute__selections=results, owner.id=FieldRef(org.springframework.samples.petclinic.owner.Owner.id), $z0=MethodWontHandleOp, owner.city=FieldRef(org.springframework.samples.petclinic.owner.Owner.city), results=Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id, return=this.lastName, owner.lastName="", owner.telephone=FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone), $r10=MethodWontHandleOp}
AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r0 ~~~
owner.lastName

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=owner.lastName
DIR.java: updateRegion(): update region entry: $r1=this.owners
DIR.java: updateRegion(): update region entry: $r2=?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
DIR.java: updateRegion(): update region entry: $r4=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
DIR.java: updateRegion(): update region entry: $r5=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $r6=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
DIR.java: updateRegion(): update region entry: $r7=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
DIR.java: updateRegion(): update region entry: $r8=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
DIR.java: updateRegion(): update region entry: $i0=?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
DIR.java: updateRegion(): update region entry: $r9=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
DIR.java: updateRegion(): update region entry: owner.address=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
DIR.java: updateRegion(): update region entry: condition=?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
DIR.java: updateRegion(): update region entry: owner.firstName=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
DIR.java: updateRegion(): update region entry: __modelattribute__selections=?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
DIR.java: updateRegion(): update region entry: owner.id=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
DIR.java: updateRegion(): update region entry: $z0=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: owner.city=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
DIR.java: updateRegion(): update region entry: results=Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
DIR.java: updateRegion(): update region entry: owner.lastName=?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName
DIR.java: updateRegion(): update region entry: return=?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
DIR.java: updateRegion(): update region entry: owner.telephone=?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
DIR.java: updateRegion(): update region entry: $r10=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r0 ~~~
owner.lastName

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"

~~~ this ~~~
Self


Resultant dag : ~~~ $i0 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

~~~ $r0 ~~~
owner.lastName

~~~ $r1 ~~~
this.owners

~~~ $r10 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10

~~~ $r2 ~~~
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

~~~ $r8 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

~~~ $r9 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

~~~ $z0 ~~~
MethodWontHandleOp

~~~ __modelattribute__selections ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

~~~ condition ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

~~~ owner.address ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

~~~ owner.city ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

~~~ owner.firstName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

~~~ owner.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

~~~ owner.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

~~~ owner.telephone ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

~~~ results ~~~
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"

~~~ this ~~~
Self


final FuncStackAnalyzer3 = 
{org.springframework.samples.petclinic.model.BaseEntity: java.lang.Integer getId()=~~~ $r0 ~~~
this.id

~~~ return ~~~
this.id

~~~ this ~~~
Self

, org.springframework.samples.petclinic.model.Person: java.lang.String getLastName()=~~~ $r0 ~~~
this.lastName

~~~ return ~~~
this.lastName

~~~ this ~~~
Self

, org.springframework.samples.petclinic.model.Person: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, org.springframework.samples.petclinic.owner.OwnerRepository: java.util.Collection findByLastName(java.lang.String)=~~~ return ~~~
Sel
| Cartesian
| | ClassRef(Owner)
| Like
| | FieldRef(owner.lastName)
| | $r2

}
FuncStackAnalyzer.java: constructDIRForStack(): Printing veMap for method: org.springframework.samples.petclinic.owner.OwnerController: java.lang.String processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)
FuncStackAnalyzer.java: constructDIRForStack(): VEMap Num Entries: 23
FuncStackAnalyzer.java: constructDIRForStack(): key set of ve map of root function: [$r0, $r1, $r2, $r4, $r5, this, $r6, $r7, $r8, $i0, $r9, owner.address, condition, owner.firstName, __modelattribute__selections, owner.id, $z0, owner.city, results, owner.lastName, return, owner.telephone, $r10]
Final veMap of $r0 = 
owner.lastName
SavePostProcess.java: SavePostProcess(): repo varnode: $r0
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r1 = 
this.owners
SavePostProcess.java: SavePostProcess(): repo varnode: $r1
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r2 = 
?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName
SavePostProcess.java: SavePostProcess(): repo varnode: $r2
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4
SavePostProcess.java: SavePostProcess(): repo varnode: $r4
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r5 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5
SavePostProcess.java: SavePostProcess(): repo varnode: $r5
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of this = 
Self
SavePostProcess.java: SavePostProcess(): repo varnode: this
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r6 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6
SavePostProcess.java: SavePostProcess(): repo varnode: $r6
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r7 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7
SavePostProcess.java: SavePostProcess(): repo varnode: $r7
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r8 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8
SavePostProcess.java: SavePostProcess(): repo varnode: $r8
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $i0 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp
SavePostProcess.java: SavePostProcess(): repo varnode: $i0
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r9 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9
SavePostProcess.java: SavePostProcess(): repo varnode: $r9
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.address = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address
SavePostProcess.java: SavePostProcess(): repo varnode: owner.address
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of condition = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1
SavePostProcess.java: SavePostProcess(): repo varnode: condition
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.firstName = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName
SavePostProcess.java: SavePostProcess(): repo varnode: owner.firstName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of __modelattribute__selections = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id
SavePostProcess.java: SavePostProcess(): repo varnode: __modelattribute__selections
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.id = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id
SavePostProcess.java: SavePostProcess(): repo varnode: owner.id
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $z0 = 
MethodWontHandleOp
SavePostProcess.java: SavePostProcess(): repo varnode: $z0
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.city = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city
SavePostProcess.java: SavePostProcess(): repo varnode: owner.city
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of results = 
Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id
SavePostProcess.java: SavePostProcess(): repo varnode: results
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.lastName = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName
SavePostProcess.java: SavePostProcess(): repo varnode: owner.lastName
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of return = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"
SavePostProcess.java: SavePostProcess(): repo varnode: return
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of owner.telephone = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone
SavePostProcess.java: SavePostProcess(): repo varnode: owner.telephone
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r10 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10
SavePostProcess.java: SavePostProcess(): repo varnode: $r10
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
key: $r0
value: owner.lastName

key: $r1
value: this.owners

key: $r2
value: ?
| Equals
| | owner.lastName
| | NullOp
| ""
| owner.lastName

key: $r4
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | InvokeMethod
| | | Pi
| | | | Sel
| | | | | Cartesian
| | | | | | ClassRef(Owner)
| | | | | Like
| | | | | | FieldRef(owner.lastName)
| | | | | | ?
| | | | | | | Equals
| | | | | | | | owner.lastName
| | | | | | | | NullOp
| | | | | | | ""
| | | | | | | owner.lastName
| | | | List
| | | | | address
| | | | | city
| | | | | telephone
| | | | | Owner.pets=Pi
| | | | | | Join
| | | | | | | Alpha
| | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | | Equals
| | | | | | | | Alpha.id
| | | | | | | | Pet.ownerId
| | | | | | List
| | | | | | | birthDate
| | | | | | | Pet.type=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.typeId
| | | | | | | | | | PetType.id
| | | | | | | | List
| | | | | | | | | name
| | | | | | | | | id
| | | | | | | Pet.owner=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.ownerId
| | | | | | | | | | Owner.id
| | | | | | | | List
| | | | | | | | | address
| | | | | | | | | city
| | | | | | | | | telephone
| | | | | | | | | NullOp
| | | | | | | | | firstName
| | | | | | | | | lastName
| | | | | | | | | id
| | | | | | | Pet.visits=Pi
| | | | | | | | Join
| | | | | | | | | Alpha
| | | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | | Equals
| | | | | | | | | | Alpha.id
| | | | | | | | | | Visit.petId
| | | | | | | | List
| | | | | | | | | date
| | | | | | | | | description
| | | | | | | | | petId
| | | | | | | | | id
| | | | | | | name
| | | | | | | id
| | | | | firstName
| | | | | lastName
| | | | | id
| | | Iterator()
| | $r4

key: $r5
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | NextOp
| | $r5

key: this
value: Self

key: $r6
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r6

key: $r7
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | BottomNode
| | $r7

key: $r8
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r8
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | $r8

key: $i0
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $i0
| MethodWontHandleOp

key: $r9
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r9
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r9

key: owner.address
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.address
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.address)
| | owner.address

key: condition
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| Equals
| | MethodWontHandleOp
| | 0
| NotEq
| | MethodWontHandleOp
| | 1

key: owner.firstName
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.firstName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.firstName)
| | owner.firstName

key: __modelattribute__selections
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| __modelattribute__selections
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | __modelattribute__selections
| | Pi
| | | Sel
| | | | Cartesian
| | | | | ClassRef(Owner)
| | | | Like
| | | | | FieldRef(owner.lastName)
| | | | | ?
| | | | | | Equals
| | | | | | | owner.lastName
| | | | | | | NullOp
| | | | | | ""
| | | | | | owner.lastName
| | | List
| | | | address
| | | | city
| | | | telephone
| | | | Owner.pets=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Pet.ownerId
| | | | | List
| | | | | | birthDate
| | | | | | Pet.type=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | | | Equals
| | | | | | | | | Alpha.typeId
| | | | | | | | | PetType.id
| | | | | | | List
| | | | | | | | name
| | | | | | | | id
| | | | | | Pet.owner=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | | | Equals
| | | | | | | | | Alpha.ownerId
| | | | | | | | | Owner.id
| | | | | | | List
| | | | | | | | address
| | | | | | | | city
| | | | | | | | telephone
| | | | | | | | NullOp
| | | | | | | | firstName
| | | | | | | | lastName
| | | | | | | | id
| | | | | | Pet.visits=Pi
| | | | | | | Join
| | | | | | | | Alpha
| | | | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | | | Equals
| | | | | | | | | Alpha.id
| | | | | | | | | Visit.petId
| | | | | | | List
| | | | | | | | date
| | | | | | | | description
| | | | | | | | petId
| | | | | | | | id
| | | | | | name
| | | | | | id
| | | | firstName
| | | | lastName
| | | | id

key: owner.id
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.id
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.id)
| | owner.id

key: $z0
value: MethodWontHandleOp

key: owner.city
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.city
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.city)
| | owner.city

key: results
value: Pi
| Sel
| | Cartesian
| | | ClassRef(Owner)
| | Like
| | | FieldRef(owner.lastName)
| | | ?
| | | | Equals
| | | | | owner.lastName
| | | | | NullOp
| | | | ""
| | | | owner.lastName
| List
| | address
| | city
| | telephone
| | Owner.pets=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(org.springframework.samples.petclinic.owner.Pet)
| | | | Equals
| | | | | Alpha.id
| | | | | Pet.ownerId
| | | List
| | | | birthDate
| | | | Pet.type=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.PetType)
| | | | | | Equals
| | | | | | | Alpha.typeId
| | | | | | | PetType.id
| | | | | List
| | | | | | name
| | | | | | id
| | | | Pet.owner=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.owner.Owner)
| | | | | | Equals
| | | | | | | Alpha.ownerId
| | | | | | | Owner.id
| | | | | List
| | | | | | address
| | | | | | city
| | | | | | telephone
| | | | | | NullOp
| | | | | | firstName
| | | | | | lastName
| | | | | | id
| | | | Pet.visits=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(org.springframework.samples.petclinic.visit.Visit)
| | | | | | Equals
| | | | | | | Alpha.id
| | | | | | | Visit.petId
| | | | | List
| | | | | | date
| | | | | | description
| | | | | | petId
| | | | | | id
| | | | name
| | | | id
| | firstName
| | lastName
| | id

key: owner.lastName
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| ?
| | Equals
| | | owner.lastName
| | | NullOp
| | ""
| | owner.lastName
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.lastName)
| | ?
| | | Equals
| | | | owner.lastName
| | | | NullOp
| | | ""
| | | owner.lastName

key: return
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "owners/findOwners"
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | "owners/ownersList"

key: owner.telephone
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| owner.telephone
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | FieldRef(org.springframework.samples.petclinic.owner.Owner.telephone)
| | owner.telephone

key: $r10
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r10
| ?
| | Equals
| | | MethodWontHandleOp
| | | 1
| | MethodWontHandleOp
| | $r10





























Tables and Fields :

Owner fields = 
{pets=Pet, firstName=FieldData, lastName=FieldData, address=FieldData, city=FieldData, telephone=FieldData, id=FieldData, ownerId=FieldData}

Visit fields = 
{date=FieldData, petId=FieldData, description=FieldData, id=FieldData}

Pet fields = 
{owner=Owner, visits=Visit, petId=FieldData, name=FieldData, typeId=FieldData, id=FieldData, type=PetType, ownerId=FieldData, birthDate=FieldData}

PetType fields = 
{name=FieldData, id=FieldData}

{}
{}
 Node contains nested fields
u_idu_ownerId
u_Owneru_org_springframework_samples_petclinic_owner_PetEquals
| Alpha.id
| Pet.ownerId
u_typeIdu_id
u_org_springframework_samples_petclinic_owner_Petu_org_springframework_samples_petclinic_owner_PetTypeEquals
| Alpha.typeId
| PetType.id
u_ownerIdu_id
u_org_springframework_samples_petclinic_owner_Petu_org_springframework_samples_petclinic_owner_OwnerEquals
| Alpha.ownerId
| Owner.id
u_idu_petId
u_org_springframework_samples_petclinic_owner_Petu_org_springframework_samples_petclinic_visit_VisitEquals
| Alpha.id
| Visit.petId
Time elapsed: 1.266 seconds
