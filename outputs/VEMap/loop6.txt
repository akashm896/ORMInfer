EqSQLDriverTest.java: main(): Got the bench-dir option value: target/classes
EqSQLDriverTest.java: main(): Got the controllersig option value: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
github/Utils.java: getAbsBenchDir(): pwd: /home/akash/Desktop/current/dbridge_loop
starttime, test: 1678989444238
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: java.lang.Object is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: org.springframework.beans.factory.annotation.Autowired is a phantom class!
Warning: org.springframework.web.bind.annotation.RequestMapping is a phantom class!
Warning: java.util.Set is a phantom class!
Warning: org.springframework.stereotype.Controller is a phantom class!
Warning: org.springframework.web.bind.annotation.ResponseBody is a phantom class!
Warning: java.lang.Iterable is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: java.util.HashSet is a phantom class!
Warning: org.springframework.ui.Model is a phantom class!
Warning: java.util.List is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: org.springframework.data.repository.CrudRepository is a phantom class!
Warning: javax.persistence.Entity is a phantom class!
Warning: javax.persistence.Column is a phantom class!
Warning: javax.persistence.GeneratedValue is a phantom class!
Warning: javax.persistence.Id is a phantom class!
Warning: javax.persistence.OneToOne is a phantom class!
Warning: javax.persistence.JoinColumn is a phantom class!
Warning: org.springframework.data.jpa.repository.JpaRepository is a phantom class!
Warning: javax.persistence.JoinTable is a phantom class!
Warning: javax.persistence.ManyToMany is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
patternMatch.java: getUserInputRules: i=0
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <more_than> (save (join <next> <class> <nop>) <list1>) <coll1>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <init_val> <more_than>) <list1>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Join
| | | | | Any
| | | | | Any
| | | | | Any
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:11
| | | Id:3
| | Id:9
| Id:11

{<coll1>=10, <class>=7, <more_than>=3, <list1>=9, <nop>=8, <init_val>=11, <itr>=13, <next>=6, <coll>=12}
patternMatch.java: getUserInputRules: i=2
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? (more_than <col1> <col2>) (+ <col3> <col4>) <col3>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (? (more_than <col1> <col2>) (+ <init_val> <col4>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | MoreThan
| | | | Any
| | | | Any
| | | ArithAdd
| | | | Any
| | | | Any
| | | Any
| Any
| Any
| Any


Ternary
| MoreThan
| | Id:18
| | Id:19
| ArithAdd
| | Id:24
| | Id:22
| Id:24

{<coll1>=10, <col3>=23, <class>=7, <col4>=22, <nop>=8, <init_val>=24, <itr>=26, <next>=6, <col1>=18, <more_than>=3, <list1>=9, <col2>=19, <coll>=25}
patternMatch.java: getUserInputRules: i=4
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? (Neq (= <col1> <col2>) (0Node)) (union (repo) (list)) (repo))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (select <coll> (= <col1> <col2>))
Fold
| FuncExpr
| | Ternary
| | | NotEq
| | | | Eq
| | | | | Any
| | | | | Any
| | | | Any
| | | Union
| | | | Any
| | | | List
| | | Any
| Any
| Any
| Any


Select
| Id:40
| Eq
| | Id:32
| | Id:33

{<coll1>=10, <col3>=23, <class>=7, <col4>=22, <nop>=8, <init_val>=39, <itr>=41, <next>=6, <col1>=32, <more_than>=3, <list1>=9, <col2>=33, <coll>=40}
patternMatch.java: getUserInputRules: i=6
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? (= (? (= <col1> <col2>) (1Node) (0Node)) <col3>) (? (Neq (= <col4> <col5>) <col6>) (col7) (? (= (? (= <col8> <col9>) (1Node) (0Node)) <col10>) (? (Neq (= <col4> <col5>) <col6>) (col7) (col11)) (col11))) (col11))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (select <coll> (AND (OR (= <col1> <col2>) (Neq <col8> <col9>)) (= <col4> <col5>)))
Fold
| FuncExpr
| | Ternary
| | | Eq
| | | | Ternary
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | | Any
| | | | | Any
| | | | Any
| | | Ternary
| | | | NotEq
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | | Any
| | | | Any
| | | | Ternary
| | | | | Eq
| | | | | | Ternary
| | | | | | | Eq
| | | | | | | | Any
| | | | | | | | Any
| | | | | | | Any
| | | | | | | Any
| | | | | | Any
| | | | | Ternary
| | | | | | NotEq
| | | | | | | Eq
| | | | | | | | Any
| | | | | | | | Any
| | | | | | | Any
| | | | | | Any
| | | | | | Any
| | | | | Any
| | | Any
| Any
| Any
| Any


Select
| Id:80
| And
| | Or
| | | Eq
| | | | Id:48
| | | | Id:49
| | | NotEq
| | | | Id:64
| | | | Id:65
| | Eq
| | | Id:72
| | | Id:73

{<col9>=65, <coll1>=10, <col8>=64, <col5>=73, <col6>=74, <col3>=52, <class>=7, <col4>=72, <col10>=68, <nop>=8, <init_val>=79, <itr>=81, <next>=6, <col1>=48, <more_than>=3, <list1>=9, <col2>=49, <coll>=80}
patternMatch.java: getUserInputRules: i=8
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (save <repo> <list1>) (save <repo> <list2>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <init_val> <coll>) (union (pi (select <coll> <cond>) <list1>) (pi (select <coll> (= <cond> 0)) <list2>)))
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Any
| | | | Any
| | | Save
| | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:92
| | Id:93
| Union
| | Project
| | | Select
| | | | Id:93
| | | | Id:85
| | | Id:88
| | Project
| | | Select
| | | | Id:93
| | | | Eq
| | | | | Id:85
| | | | | Zero
| | | Id:91

{<col9>=65, <coll1>=10, <col8>=64, <col5>=73, <col6>=74, <col3>=52, <class>=7, <col4>=72, <col10>=68, <repo>=90, <cond>=85, <nop>=8, <init_val>=92, <itr>=94, <next>=6, <col1>=48, <list2>=91, <more_than>=3, <list1>=88, <col2>=49, <coll>=93}
patternMatch.java: getUserInputRules: i=10
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (add_all_fields <list>) <elseval>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <coll> <cond>) <list>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | AddWithFieldExprs
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:103
| | | Id:98
| | Id:100
| Id:102

{<col9>=65, <coll1>=10, <list>=100, <col8>=64, <col5>=73, <col6>=74, <col3>=52, <class>=7, <col4>=72, <col10>=68, <repo>=90, <cond>=98, <nop>=8, <init_val>=102, <itr>=104, <next>=6, <elseval>=101, <col1>=48, <list2>=91, <more_than>=3, <list1>=88, <col2>=49, <coll>=103}
patternMatch.java: getUserInputRules: i=12
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (save <repo> (tuple (join next <join_right> <nop>) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <repo> (select <repo> (in id (pi (join <coll> <join_right>) id)))) (pi <list> (join <coll> <join_right>)))
Fold
| FuncExpr
| | Save
| | | Any
| | | Tuple
| | | | Join
| | | | | Iterator
| | | | | Any
| | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:108
| | Select
| | | Id:108
| | | In
| | | | Id
| | | | Project
| | | | | Join
| | | | | | Id:116
| | | | | | Id:112
| | | | | Id
| Project
| | Id:114
| | Join
| | | Id:116
| | | Id:112

{<col9>=65, <coll1>=10, <list>=114, <col8>=64, <col5>=73, <col6>=74, <col3>=52, <class>=7, <col4>=72, <col10>=68, <repo>=108, <cond>=98, <nop>=113, <init_val>=115, <join_right>=112, <itr>=117, <next>=6, <elseval>=101, <col1>=48, <list2>=91, <more_than>=3, <list1>=88, <col2>=49, <coll>=116}
patternMatch.java: getUserInputRules: i=14
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (add_all_fields <receiver> (tuple (select <rel> (= <clm> <itr>)) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi <list> (select <rel> (in <clm> <coll>))) <init_val>)
Fold
| FuncExpr
| | AddWithFieldExprs
| | | Any
| | | Tuple
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| Project
| | Id:128
| | Select
| | | Id:124
| | | In
| | | | Id:126
| | | | Id:130
| Id:129

{<col8>=64, <rel>=124, <col6>=74, <class>=7, <col4>=72, <col10>=68, <repo>=108, <nop>=113, <init_val>=129, <itr>=131, <next>=6, <receiver>=121, <list2>=91, <more_than>=3, <col2>=49, <coll>=130, <col9>=65, <coll1>=10, <list>=128, <col5>=73, <col3>=52, <cond>=98, <clm>=126, <join_right>=112, <elseval>=101, <col1>=48, <list1>=88}
patternMatch.java: getUserInputRules: i=16
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (+ <aggvar> (pi (select <rel> (= <clm> <itr>)) <clmagg>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (+ (agg_sum (select <rel> (in <clm> <coll>)) <clmagg>) <init_val>)
Fold
| FuncExpr
| | ArithAdd
| | | Any
| | | Project
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


ArithAdd
| AggSum
| | Select
| | | Id:138
| | | In
| | | | Id:140
| | | | Id:144
| | Id:142
| Id:143

{<col8>=64, <rel>=138, <col6>=74, <class>=7, <col4>=72, <col10>=68, <repo>=108, <nop>=113, <init_val>=143, <itr>=145, <clmagg>=142, <next>=6, <receiver>=121, <aggvar>=135, <list2>=91, <more_than>=3, <col2>=49, <coll>=144, <col9>=65, <coll1>=10, <list>=128, <col5>=73, <col3>=52, <cond>=98, <clm>=140, <join_right>=112, <elseval>=101, <col1>=48, <list1>=88}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/akash/Desktop/current/dbridge_loop/lib/eqsql.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/akash/Desktop/current/dbridge_loop/lib/soot-trunk-1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
ServiceAllocTransform.java: internalTransform(): methodsig: <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: saveOrder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.controller.OrdersController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String saveOrder(java.lang.String, java.lang.String, java.lang.Long[])
    {
        com.shakeel.controller.OrdersController this;
        java.lang.String firstName, lastName, $r12;
        java.lang.Long[] productIds, total, l8;
        com.shakeel.model.Customer customer, $r0, $r7;
        com.shakeel.model.CustomerOrder customerOrder, $r3;
        java.util.HashSet productSet, $r8;
        java.lang.Long productId, $r5, $r11;
        com.shakeel.repository.CustomerRepository $r1, $r4;
        long $l0;
        java.lang.Object $r6, $r14, $r18;
        com.shakeel.repository.OrderRepository $r9;
        double $d0, $d1, $d2;
        com.shakeel.repository.ProductRepository $r13, $r17;
        com.shakeel.model.Product $r15, $r19;
        java.lang.Double $r16, total;
        int l8, l9, productId;

        this := @this: com.shakeel.controller.OrdersController;

        firstName := @parameter0: java.lang.String;

        lastName := @parameter1: java.lang.String;

        productIds := @parameter2: java.lang.Long[];

        $r0 = new com.shakeel.model.Customer;

        specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>();

        customer = $r0;

        virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName);

        virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName);

        $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer);

        $r3 = new com.shakeel.model.CustomerOrder;

        specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>();

        customerOrder = $r3;

        $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5);

        $r7 = (com.shakeel.model.Customer) $r6;

        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7);

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        productSet = $r8;

        total = productIds;

        l8 = lengthof total;

        l9 = 0;

     label1:
        if l9 >= l8 goto label2;

        productId = total[l9];

        $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r19 = (com.shakeel.model.Product) $r18;

        interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19);

        l9 = l9 + 1;

        goto label1;

     label2:
        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet);

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        l8 = productIds;

        l9 = lengthof l8;

        productId = 0;

     label3:
        if productId >= l9 goto label4;

        productId = l8[productId];

        $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>();

        $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r15 = (com.shakeel.model.Product) $r14;

        $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>();

        $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        productId = productId + 1;

        goto label3;

     label4:
        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);

        $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;

        interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder);

        $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>();

        $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>();

        return $r12;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder internalTransform called!
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: body: 
    public java.lang.String saveOrder(java.lang.String, java.lang.String, java.lang.Long[])
    {
        com.shakeel.controller.OrdersController this;
        java.lang.String firstName, lastName, $r12;
        java.lang.Long[] productIds, total, l8;
        com.shakeel.model.Customer customer, $r0, $r7;
        com.shakeel.model.CustomerOrder customerOrder, $r3;
        java.util.HashSet productSet, $r8;
        java.lang.Long productId, $r5, $r11;
        com.shakeel.repository.CustomerRepository $r1, $r4;
        long $l0;
        java.lang.Object $r6, $r14, $r18;
        com.shakeel.repository.OrderRepository $r9;
        double $d0, $d1, $d2;
        com.shakeel.repository.ProductRepository $r13, $r17;
        com.shakeel.model.Product $r15, $r19;
        java.lang.Double $r16, total;
        int l8, l9, productId;

        this := @this: com.shakeel.controller.OrdersController;

        firstName := @parameter0: java.lang.String;

        lastName := @parameter1: java.lang.String;

        productIds := @parameter2: java.lang.Long[];

        $r0 = new com.shakeel.model.Customer;

        specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>();

        customer = $r0;

        virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName);

        virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName);

        $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer);

        $r3 = new com.shakeel.model.CustomerOrder;

        specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>();

        customerOrder = $r3;

        $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5);

        $r7 = (com.shakeel.model.Customer) $r6;

        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7);

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        productSet = $r8;

        total = productIds;

        l8 = lengthof total;

        l9 = 0;

     label1:
        if l9 >= l8 goto label2;

        productId = total[l9];

        $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r19 = (com.shakeel.model.Product) $r18;

        interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19);

        l9 = l9 + 1;

        goto label1;

     label2:
        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet);

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        l8 = productIds;

        l9 = lengthof l8;

        productId = 0;

     label3:
        if productId >= l9 goto label4;

        productId = l8[productId];

        $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>();

        $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r15 = (com.shakeel.model.Product) $r14;

        $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>();

        $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        productId = productId + 1;

        goto label3;

     label4:
        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);

        $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;

        interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder);

        $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>();

        $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>();

        return $r12;
    }

FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: firstName
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: firstName
FuncStackInfoBuilder.java: regionTreeForBody(): local: lastName
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: lastName
FuncStackInfoBuilder.java: regionTreeForBody(): local: productIds
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: productIds
FuncStackInfoBuilder.java: regionTreeForBody(): local: customer
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: customer
FuncStackInfoBuilder.java: regionTreeForBody(): local: customerOrder
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: customerOrder
FuncStackInfoBuilder.java: regionTreeForBody(): local: productSet
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: productSet
FuncStackInfoBuilder.java: regionTreeForBody(): local: productId
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: productId
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local: $l0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $l0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r8
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r8
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r9
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r9
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r11
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r11
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r12
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r12
FuncStackInfoBuilder.java: regionTreeForBody(): local: $d0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $d0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r13
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r13
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r14
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r14
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r15
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r15
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r16
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r16
FuncStackInfoBuilder.java: regionTreeForBody(): local: $d1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $d1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $d2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $d2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r17
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r17
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r18
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r18
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r19
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r19
FuncStackInfoBuilder.java: regionTreeForBody(): local: total
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: total
FuncStackInfoBuilder.java: regionTreeForBody(): local: l8
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: l8
FuncStackInfoBuilder.java: regionTreeForBody(): local: l9
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: l9
FuncStackInfoBuilder.java: regionTreeForBody(): local: total
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: total
FuncStackInfoBuilder.java: regionTreeForBody(): local: l8
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: l8
FuncStackInfoBuilder.java: regionTreeForBody(): local: productId
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: productId
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: saveOrder is Block 0:
[preds: ] [succs: 1 ]
this := @this: com.shakeel.controller.OrdersController;
firstName := @parameter0: java.lang.String;
lastName := @parameter1: java.lang.String;
productIds := @parameter2: java.lang.Long[];
$r0 = new com.shakeel.model.Customer;
specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>();
customer = $r0;
virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName);
virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName);
$r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;
interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer);
$r3 = new com.shakeel.model.CustomerOrder;
specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>();
customerOrder = $r3;
$r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;
$l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>();
$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);
$r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5);
$r7 = (com.shakeel.model.Customer) $r6;
virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7);
$r8 = new java.util.HashSet;
specialinvoke $r8.<java.util.HashSet: void <init>()>();
productSet = $r8;
total = productIds;
l8 = lengthof total;
l9 = 0;

Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet);

Block 2:
[preds: 1 ] [succs: 1 ]
productId = total[l9];
$r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;
$r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);
$r19 = (com.shakeel.model.Product) $r18;
interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19);
l9 = l9 + 1;
goto [?= (branch)];

Block 3:
[preds: 1 ] [succs: 4 ]
virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet);
total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
l8 = productIds;
l9 = lengthof l8;
productId = 0;

Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);

Block 5:
[preds: 4 ] [succs: 4 ]
productId = l8[productId];
$d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>();
$r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;
$r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);
$r15 = (com.shakeel.model.Product) $r14;
$r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>();
$d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();
$d2 = $d0 + $d1;
total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);
productId = productId + 1;
goto [?= (branch)];

Block 6:
[preds: 4 ] [succs: ]
virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);
$r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;
interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder);
$r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>();
$r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>();
return $r12;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
2 -> 1
5 -> 4
0 -> 1
1 -> 2
3 -> 4
4 -> 5
1 -> 3
4 -> 6
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
dfsVisit: start = 1
dfsVisit: start = 2
dfsVisit: start = 3
dfsVisit: start = 4
dfsVisit: start = 5
dfsVisit: start = 6
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [2, 5, 6, 4, 3, 1, 0]
StructuralAnalysis.java: structuralAnalysis(): break point!
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [2]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 2
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [2]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 2
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [2]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 5
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = 5
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [5]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 5
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 5
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 5
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [5]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 5
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [5]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 6
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [6]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 6
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 6
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 6
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [6]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 6
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [6]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 4
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [4]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 4
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 4
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: [5]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 4
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [4, 5]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 4
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [4, 5]
dfsVisit: start = 4
dfsVisit: start = 5
dfsVisit: start = 6
StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_WhileLoop0
StructuralAnalysis.java: replace(): v: 4
StructuralAnalysis.java: replace(): v: 5
StructuralAnalyis.java: compact(): compact: vset = [4, 5]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 3, 4, 5, 6, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 3
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [2, 5, 6, 4, 3, 1, 0]
removeVertices: vset = [4, 5]
removeVertices: v = 4
removeVertex: adj = {1=[2, 3], 2=[1], 3=[4], 4=[5, 6], 5=[4], 6=[], 0=[1]}
removeVertex: incoming = {1=[0, 2], 2=[1], 3=[1], 4=[3, 5], 5=[4], 6=[4], 0=[]}
removeVertex: v = 4
removeVertex: v2 = 3
removeVertex: v2 = 5
removeVertices: v = 5
removeVertex: adj = {1=[2, 3], 2=[1], 3=[], 5=[], 6=[], 0=[1]}
removeVertex: incoming = {1=[0, 2], 2=[1], 3=[1], 5=[], 6=[], 0=[]}
removeVertex: v = 5
StructuralAnalyis.java: compact(): compact: g.vertices after: [1, 2, 3, 6, R_WhileLoop0, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [2, 6, R_WhileLoop0, 3, 1, 0]
StructuralAnalysis.java: reduce(): structType before: {}
StructuralAnalysis.java: reduce(): structType after: {R_WhileLoop0=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_WhileLoop0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_WhileLoop0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [3, R_WhileLoop0, 6]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = Sequential

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_Sequential1
StructuralAnalysis.java: replace(): v: 3
StructuralAnalysis.java: replace(): v: R_WhileLoop0
StructuralAnalysis.java: replace(): v: 6
StructuralAnalyis.java: compact(): compact: vset = [3, R_WhileLoop0, 6]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 3, 6, R_WhileLoop0, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [2, 6, R_WhileLoop0, 3, 1, 0]
removeVertices: vset = [3, R_WhileLoop0, 6]
removeVertices: v = 3
removeVertex: adj = {1=[2, 3], 2=[1], 3=[R_WhileLoop0], 6=[], R_WhileLoop0=[6], 0=[1]}
removeVertex: incoming = {1=[0, 2], 2=[1], 3=[1], 6=[R_WhileLoop0], R_WhileLoop0=[3], 0=[]}
removeVertex: v = 3
removeVertex: v2 = 1
removeVertices: v = R_WhileLoop0
removeVertex: adj = {1=[2], 2=[1], 6=[], R_WhileLoop0=[6], 0=[1]}
removeVertex: incoming = {1=[0, 2], 2=[1], 6=[R_WhileLoop0], R_WhileLoop0=[], 0=[]}
removeVertex: v = R_WhileLoop0
removeVertices: v = 6
removeVertex: adj = {1=[2], 2=[1], 6=[], 0=[1]}
removeVertex: incoming = {1=[0, 2], 2=[1], 6=[], 0=[]}
removeVertex: v = 6
StructuralAnalyis.java: compact(): compact: g.vertices after: [1, 2, R_Sequential1, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [2, R_Sequential1, 1, 0]
StructuralAnalysis.java: reduce(): structType before: {R_WhileLoop0=WhileLoop}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_Sequential1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [R_Sequential1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = R_Sequential1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = R_Sequential1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: R_Sequential1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [R_Sequential1]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = R_Sequential1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [R_Sequential1]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: [2]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [1, 2]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [1, 2]
dfsVisit: start = 1
dfsVisit: start = 2
dfsVisit: start = R_Sequential1
StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_WhileLoop2
StructuralAnalysis.java: replace(): v: 1
StructuralAnalysis.java: replace(): v: 2
StructuralAnalyis.java: compact(): compact: vset = [1, 2]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, R_Sequential1, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [2, R_Sequential1, 1, 0]
removeVertices: vset = [1, 2]
removeVertices: v = 1
removeVertex: adj = {1=[2, R_Sequential1], 2=[1], R_Sequential1=[], 0=[1]}
removeVertex: incoming = {1=[0, 2], 2=[1], R_Sequential1=[1], 0=[]}
removeVertex: v = 1
removeVertex: v2 = 0
removeVertex: v2 = 2
removeVertices: v = 2
removeVertex: adj = {2=[], R_Sequential1=[], 0=[]}
removeVertex: incoming = {2=[], R_Sequential1=[], 0=[]}
removeVertex: v = 2
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_Sequential1, R_WhileLoop2, 0]
StructuralAnalyis.java: compact(): compact: postCtr after: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_Sequential1, R_WhileLoop2, 0]
StructuralAnalysis.java: reduce(): structType before: {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = R_WhileLoop2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): currVer = R_WhileLoop2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [0, R_WhileLoop2, R_Sequential1]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = Sequential

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_Sequential3
StructuralAnalysis.java: replace(): v: 0
StructuralAnalysis.java: replace(): v: R_WhileLoop2
StructuralAnalysis.java: replace(): v: R_Sequential1
StructuralAnalyis.java: compact(): compact: vset = [0, R_WhileLoop2, R_Sequential1]
StructuralAnalyis.java: compact(): compact: g.vertices before: [R_Sequential1, R_WhileLoop2, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 1
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [R_Sequential1, R_WhileLoop2, 0]
removeVertices: vset = [0, R_WhileLoop2, R_Sequential1]
removeVertices: v = 0
removeVertex: adj = {R_Sequential1=[], R_WhileLoop2=[R_Sequential1], 0=[R_WhileLoop2]}
removeVertex: incoming = {R_Sequential1=[R_WhileLoop2], R_WhileLoop2=[0], 0=[]}
removeVertex: v = 0
removeVertices: v = R_WhileLoop2
removeVertex: adj = {R_Sequential1=[], R_WhileLoop2=[R_Sequential1]}
removeVertex: incoming = {R_Sequential1=[R_WhileLoop2], R_WhileLoop2=[]}
removeVertex: v = R_WhileLoop2
removeVertices: v = R_Sequential1
removeVertex: adj = {R_Sequential1=[]}
removeVertex: incoming = {R_Sequential1=[]}
removeVertex: v = R_Sequential1
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_Sequential3]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_Sequential3]
StructuralAnalysis.java: reduce(): structType before: {R_Sequential1=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop}
StructuralAnalysis.java: reduce(): structType after: {R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop}
StructuralAnalysis.java: structuralAnalysis(): structType: {R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop}
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[3, R_WhileLoop0, 6], R_Sequential3=[0, R_WhileLoop2, R_Sequential1], R_WhileLoop0=[4, 5], R_WhileLoop2=[1, 2]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_WhileLoop2, 2=R_WhileLoop2, 3=R_Sequential1, 4=R_WhileLoop0, R_Sequential1=R_Sequential3, 5=R_WhileLoop0, 6=R_Sequential1, R_WhileLoop0=R_Sequential1, R_WhileLoop2=R_Sequential3, 0=R_Sequential3}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential3
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- R_Sequential3
|  +- 0
|  +- R_WhileLoop2
|  |  +- 1
|  |  +- 2
|  +- R_Sequential1
|  |  +- 3
|  |  +- R_WhileLoop0
|  |  |  +- 4
|  |  |  +- 5
|  |  +- 6

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: 1 ]
this := @this: com.shakeel.controller.OrdersController;
firstName := @parameter0: java.lang.String;
lastName := @parameter1: java.lang.String;
productIds := @parameter2: java.lang.Long[];
$r0 = new com.shakeel.model.Customer;
specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>();
customer = $r0;
virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName);
virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName);
$r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;
interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer);
$r3 = new com.shakeel.model.CustomerOrder;
specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>();
customerOrder = $r3;
$r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;
$l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>();
$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);
$r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5);
$r7 = (com.shakeel.model.Customer) $r6;
virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7);
$r8 = new java.util.HashSet;
specialinvoke $r8.<java.util.HashSet: void <init>()>();
productSet = $r8;
total = productIds;
l8 = lengthof total;
l9 = 0;

Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet);

Block 2:
[preds: 1 ] [succs: 1 ]
productId = total[l9];
$r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;
$r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);
$r19 = (com.shakeel.model.Product) $r18;
interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19);
l9 = l9 + 1;
goto [?= (branch)];

Block 3:
[preds: 1 ] [succs: 4 ]
virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet);
total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
l8 = productIds;
l9 = lengthof l8;
productId = 0;

Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);

Block 5:
[preds: 4 ] [succs: 4 ]
productId = l8[productId];
$d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>();
$r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;
$r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);
$r15 = (com.shakeel.model.Product) $r14;
$r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>();
$d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();
$d2 = $d0 + $d1;
total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);
productId = productId + 1;
goto [?= (branch)];

Block 6:
[preds: 4 ] [succs: ]
virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);
$r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;
interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder);
$r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>();
$r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>();
return $r12;


StructuralAnalysis.java: controlTreeRoot(): control tree = {R_Sequential1=[3, R_WhileLoop0, 6], R_Sequential3=[0, R_WhileLoop2, R_Sequential1], R_WhileLoop0=[4, 5], R_WhileLoop2=[1, 2]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_WhileLoop2, 2=R_WhileLoop2, 3=R_Sequential1, 4=R_WhileLoop0, R_Sequential1=R_Sequential3, 5=R_WhileLoop0, 6=R_Sequential1, R_WhileLoop0=R_Sequential1, R_WhileLoop2=R_Sequential3, 0=R_Sequential3}
StructuralAnalysis.java: controlTreeRoot(): found root = R_Sequential3
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof total, l9 = 0, if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), productId = total[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof l8, productId = 0, if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = l8[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder), $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackInfoBuilder: createARegionTree(): structType = {R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 1
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 1
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof total, l9 = 0, if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), productId = total[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof l8, productId = 0, if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = l8[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder), $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 2
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 2
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof total, l9 = 0, if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), productId = total[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof l8, productId = 0, if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = l8[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder), $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_WhileLoop2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
LoopRegion created
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 3
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 3
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 3
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof total, l9 = 0, if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), productId = total[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof l8, productId = 0, if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = l8[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder), $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 4
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 4
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 4
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof total, l9 = 0, if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), productId = total[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof l8, productId = 0, if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = l8[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder), $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 5
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 5
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 5
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof total, l9 = 0, if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), productId = total[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof l8, productId = 0, if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = l8[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder), $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, 5=BasicBlock, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_WhileLoop0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 2
LoopRegion created
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, 5=BasicBlock, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 6
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 6
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 6
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof total, l9 = 0, if l9 >= l8 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), productId = total[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof l8, productId = 0, if productId >= l9 goto virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = l8[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder), $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, 5=BasicBlock, 6=BasicBlock, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_Sequential1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 3
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, 3=BasicBlock, 4=BasicBlock, R_Sequential1=Sequential, 5=BasicBlock, 6=BasicBlock, R_Sequential3=Sequential, R_WhileLoop0=WhileLoop, R_WhileLoop2=WhileLoop, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_Sequential3
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 3
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = R_Sequential3
FuncStackInfoBuilder.java: regionTreeForBody(): | Sequential
| | BasicBlock0
| | WhileLoop
| | | BasicBlock1
| | | BasicBlock2
| | Sequential
| | | BasicBlock3
| | | WhileLoop
| | | | BasicBlock4
| | | | BasicBlock5
| | | BasicBlock6

FuncStackInfoBuilder.java: internalTransformHelper(): topr is not null
FuncStackInfoBuilder.java: internalTransformHelper(): topr = 
| Sequential
| | BasicBlock0
| | WhileLoop
| | | BasicBlock1
| | | BasicBlock2
| | Sequential
| | | BasicBlock3
| | | WhileLoop
| | | | BasicBlock4
| | | | BasicBlock5
| | | BasicBlock6

FuncStackInfoBuilder.java: internalTransformHelper(): CGSTART: 
STATIC edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <java.lang.Double: java.lang.Double valueOf(double)>
STATIC edge: total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <java.lang.Double: java.lang.Double valueOf(double)>
SPECIAL edge: specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>() in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.Customer: void <init>()>
VIRTUAL edge: virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.Customer: void setFirstName(java.lang.String)>
VIRTUAL edge: virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.Customer: void setLastName(java.lang.String)>
VIRTUAL edge: $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>() in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.Customer: long getCustomerId()>
SPECIAL edge: specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>() in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.CustomerOrder: void <init>()>
VIRTUAL edge: virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
VIRTUAL edge: virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>
VIRTUAL edge: virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total) in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>
VIRTUAL edge: $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>() in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>
SPECIAL edge: specialinvoke $r8.<java.util.HashSet: void <init>()>() in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <java.util.HashSet: void <init>()>
VIRTUAL edge: $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>() in <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])> ==> <com.shakeel.model.Product: java.lang.Double getProductPrice()>
SPECIAL edge: specialinvoke this.<java.lang.Object: void <init>()>() in <com.shakeel.model.Customer: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke this.<java.lang.Object: void <init>()>() in <com.shakeel.model.CustomerOrder: void <init>()> ==> <java.lang.Object: void <init>()>
CGEND

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.lang.Long: java.lang.Long valueOf(long)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.Product: java.lang.Double getProductPrice()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getProductPrice
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.Product
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.Double getProductPrice()
    {
        com.shakeel.model.Product this;
        java.lang.Double $r0;

        this := @this: com.shakeel.model.Product;

        $r0 = this.<com.shakeel.model.Product: java.lang.Double productPrice>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getProductPrice is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Product;
$r0 = this.<com.shakeel.model.Product: java.lang.Double productPrice>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Product;
$r0 = this.<com.shakeel.model.Product: java.lang.Double productPrice>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.Product, $r0 = this.<com.shakeel.model.Product: java.lang.Double productPrice>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.util.HashSet: void <init>()
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getOrderId
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.CustomerOrder
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.Long getOrderId()
    {
        com.shakeel.model.CustomerOrder this;
        java.lang.Long $r0;

        this := @this: com.shakeel.model.CustomerOrder;

        $r0 = this.<com.shakeel.model.CustomerOrder: java.lang.Long orderId>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getOrderId is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
$r0 = this.<com.shakeel.model.CustomerOrder: java.lang.Long orderId>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
$r0 = this.<com.shakeel.model.CustomerOrder: java.lang.Long orderId>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.CustomerOrder, $r0 = this.<com.shakeel.model.CustomerOrder: java.lang.Long orderId>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setTotal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.CustomerOrder
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setTotal(java.lang.Double)
    {
        com.shakeel.model.CustomerOrder this;
        java.lang.Double total;

        this := @this: com.shakeel.model.CustomerOrder;

        total := @parameter0: java.lang.Double;

        this.<com.shakeel.model.CustomerOrder: java.lang.Double total> = total;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: total
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: total
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setTotal is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
total := @parameter0: java.lang.Double;
this.<com.shakeel.model.CustomerOrder: java.lang.Double total> = total;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
total := @parameter0: java.lang.Double;
this.<com.shakeel.model.CustomerOrder: java.lang.Double total> = total;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.CustomerOrder, total := @parameter0: java.lang.Double, this.<com.shakeel.model.CustomerOrder: java.lang.Double total> = total, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setProducts
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.CustomerOrder
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setProducts(java.util.Set)
    {
        com.shakeel.model.CustomerOrder this;
        java.util.Set products;

        this := @this: com.shakeel.model.CustomerOrder;

        products := @parameter0: java.util.Set;

        this.<com.shakeel.model.CustomerOrder: java.util.Set products> = products;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: products
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: products
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setProducts is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
products := @parameter0: java.util.Set;
this.<com.shakeel.model.CustomerOrder: java.util.Set products> = products;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
products := @parameter0: java.util.Set;
this.<com.shakeel.model.CustomerOrder: java.util.Set products> = products;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.CustomerOrder, products := @parameter0: java.util.Set, this.<com.shakeel.model.CustomerOrder: java.util.Set products> = products, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setCustomer
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.CustomerOrder
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setCustomer(com.shakeel.model.Customer)
    {
        com.shakeel.model.CustomerOrder this;
        com.shakeel.model.Customer customer;

        this := @this: com.shakeel.model.CustomerOrder;

        customer := @parameter0: com.shakeel.model.Customer;

        this.<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer> = customer;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: customer
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: customer
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setCustomer is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
customer := @parameter0: com.shakeel.model.Customer;
this.<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer> = customer;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.CustomerOrder;
customer := @parameter0: com.shakeel.model.Customer;
this.<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer> = customer;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.CustomerOrder, customer := @parameter0: com.shakeel.model.Customer, this.<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer> = customer, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.CustomerOrder: void <init>()
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.Customer: long getCustomerId()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getCustomerId
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.Customer
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public long getCustomerId()
    {
        com.shakeel.model.Customer this;
        long $l0;

        this := @this: com.shakeel.model.Customer;

        $l0 = this.<com.shakeel.model.Customer: long customerId>;

        return $l0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $l0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $l0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getCustomerId is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Customer;
$l0 = this.<com.shakeel.model.Customer: long customerId>;
return $l0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Customer;
$l0 = this.<com.shakeel.model.Customer: long customerId>;
return $l0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.Customer, $l0 = this.<com.shakeel.model.Customer: long customerId>, return $l0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.Customer: void setLastName(java.lang.String)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setLastName
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.Customer
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setLastName(java.lang.String)
    {
        com.shakeel.model.Customer this;
        java.lang.String lastName;

        this := @this: com.shakeel.model.Customer;

        lastName := @parameter0: java.lang.String;

        this.<com.shakeel.model.Customer: java.lang.String lastName> = lastName;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: lastName
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: lastName
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setLastName is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Customer;
lastName := @parameter0: java.lang.String;
this.<com.shakeel.model.Customer: java.lang.String lastName> = lastName;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Customer;
lastName := @parameter0: java.lang.String;
this.<com.shakeel.model.Customer: java.lang.String lastName> = lastName;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.Customer, lastName := @parameter0: java.lang.String, this.<com.shakeel.model.Customer: java.lang.String lastName> = lastName, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.Customer: void setFirstName(java.lang.String)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setFirstName
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.model.Customer
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setFirstName(java.lang.String)
    {
        com.shakeel.model.Customer this;
        java.lang.String firstName;

        this := @this: com.shakeel.model.Customer;

        firstName := @parameter0: java.lang.String;

        this.<com.shakeel.model.Customer: java.lang.String firstName> = firstName;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: firstName
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: firstName
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: setFirstName is Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Customer;
firstName := @parameter0: java.lang.String;
this.<com.shakeel.model.Customer: java.lang.String firstName> = firstName;
return;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.shakeel.model.Customer;
firstName := @parameter0: java.lang.String;
this.<com.shakeel.model.Customer: java.lang.String firstName> = firstName;
return;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.shakeel.model.Customer, firstName := @parameter0: java.lang.String, this.<com.shakeel.model.Customer: java.lang.String firstName> = firstName, return]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.shakeel.model.Customer: void <init>()
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.lang.Double: java.lang.Double valueOf(double)
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.lang.Double: java.lang.Double valueOf(double)
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: functionstack: 
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.Customer: void setLastName(java.lang.String)
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.Product: java.lang.Double getProductPrice()
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.Customer: long getCustomerId()
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.Customer: void setFirstName(java.lang.String)
FuncStackInfoBuilder.java: internalTransformHelper():     com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
FuncStackInfoBuilder.java: internalTransformHelper(): {com.shakeel.model.Customer: void setLastName(java.lang.String)=    public void setLastName(java.lang.String)
    {
        com.shakeel.model.Customer this;
        java.lang.String lastName;

        this := @this: com.shakeel.model.Customer;

        lastName := @parameter0: java.lang.String;

        this.<com.shakeel.model.Customer: java.lang.String lastName> = lastName;

        return;
    }
, com.shakeel.model.Product: java.lang.Double getProductPrice()=    public java.lang.Double getProductPrice()
    {
        com.shakeel.model.Product this;
        java.lang.Double $r0;

        this := @this: com.shakeel.model.Product;

        $r0 = this.<com.shakeel.model.Product: java.lang.Double productPrice>;

        return $r0;
    }
, com.shakeel.model.Customer: long getCustomerId()=    public long getCustomerId()
    {
        com.shakeel.model.Customer this;
        long $l0;

        this := @this: com.shakeel.model.Customer;

        $l0 = this.<com.shakeel.model.Customer: long customerId>;

        return $l0;
    }
, com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()=    public java.lang.Long getOrderId()
    {
        com.shakeel.model.CustomerOrder this;
        java.lang.Long $r0;

        this := @this: com.shakeel.model.CustomerOrder;

        $r0 = this.<com.shakeel.model.CustomerOrder: java.lang.Long orderId>;

        return $r0;
    }
, com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])=    public java.lang.String saveOrder(java.lang.String, java.lang.String, java.lang.Long[])
    {
        com.shakeel.controller.OrdersController this;
        java.lang.String firstName, lastName, $r12;
        java.lang.Long[] productIds, total, l8;
        com.shakeel.model.Customer customer, $r0, $r7;
        com.shakeel.model.CustomerOrder customerOrder, $r3;
        java.util.HashSet productSet, $r8;
        java.lang.Long productId, $r5, $r11;
        com.shakeel.repository.CustomerRepository $r1, $r4;
        long $l0;
        java.lang.Object $r6, $r14, $r18;
        com.shakeel.repository.OrderRepository $r9;
        double $d0, $d1, $d2;
        com.shakeel.repository.ProductRepository $r13, $r17;
        com.shakeel.model.Product $r15, $r19;
        java.lang.Double $r16, total;
        int l8, l9, productId;

        this := @this: com.shakeel.controller.OrdersController;

        firstName := @parameter0: java.lang.String;

        lastName := @parameter1: java.lang.String;

        productIds := @parameter2: java.lang.Long[];

        $r0 = new com.shakeel.model.Customer;

        specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>();

        customer = $r0;

        virtualinvoke customer.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName);

        virtualinvoke customer.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName);

        $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>(customer);

        $r3 = new com.shakeel.model.CustomerOrder;

        specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>();

        customerOrder = $r3;

        $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        $l0 = virtualinvoke customer.<com.shakeel.model.Customer: long getCustomerId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5);

        $r7 = (com.shakeel.model.Customer) $r6;

        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7);

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        productSet = $r8;

        total = productIds;

        l8 = lengthof total;

        l9 = 0;

     label1:
        if l9 >= l8 goto label2;

        productId = total[l9];

        $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r19 = (com.shakeel.model.Product) $r18;

        interfaceinvoke productSet.<java.util.Set: boolean add(java.lang.Object)>($r19);

        l9 = l9 + 1;

        goto label1;

     label2:
        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>(productSet);

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        l8 = productIds;

        l9 = lengthof l8;

        productId = 0;

     label3:
        if productId >= l9 goto label4;

        productId = l8[productId];

        $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>();

        $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r15 = (com.shakeel.model.Product) $r14;

        $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>();

        $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        productId = productId + 1;

        goto label3;

     label4:
        virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);

        $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;

        interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(customerOrder);

        $r11 = virtualinvoke customerOrder.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>();

        $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>();

        return $r12;
    }
, com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)=    public void setTotal(java.lang.Double)
    {
        com.shakeel.model.CustomerOrder this;
        java.lang.Double total;

        this := @this: com.shakeel.model.CustomerOrder;

        total := @parameter0: java.lang.Double;

        this.<com.shakeel.model.CustomerOrder: java.lang.Double total> = total;

        return;
    }
, com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)=    public void setCustomer(com.shakeel.model.Customer)
    {
        com.shakeel.model.CustomerOrder this;
        com.shakeel.model.Customer customer;

        this := @this: com.shakeel.model.CustomerOrder;

        customer := @parameter0: com.shakeel.model.Customer;

        this.<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer> = customer;

        return;
    }
, com.shakeel.model.Customer: void setFirstName(java.lang.String)=    public void setFirstName(java.lang.String)
    {
        com.shakeel.model.Customer this;
        java.lang.String firstName;

        this := @this: com.shakeel.model.Customer;

        firstName := @parameter0: java.lang.String;

        this.<com.shakeel.model.Customer: java.lang.String firstName> = firstName;

        return;
    }
, com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)=    public void setProducts(java.util.Set)
    {
        com.shakeel.model.CustomerOrder this;
        java.util.Set products;

        this := @this: com.shakeel.model.CustomerOrder;

        products := @parameter0: java.util.Set;

        this.<com.shakeel.model.CustomerOrder: java.util.Set products> = products;

        return;
    }
}

Decompiling com.shakeel.controller.OrdersController... 
ServiceAllocTransform.java: internalTransform(): methodsig: <com.shakeel.controller.OrdersController: void <init>()>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.controller.OrdersController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void <init>()
    {
        com.shakeel.controller.OrdersController this;

        this := @this: com.shakeel.controller.OrdersController;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.shakeel.controller.OrdersController: java.lang.String productsList(org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: productsList
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.controller.OrdersController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String productsList(org.springframework.ui.Model)
    {
        com.shakeel.controller.OrdersController this;
        org.springframework.ui.Model model;
        com.shakeel.repository.ProductRepository $r0;
        java.util.List $r1;
        com.shakeel.repository.OrderRepository $r3;
        java.lang.Iterable $r4;

        this := @this: com.shakeel.controller.OrdersController;

        model := @parameter0: org.springframework.ui.Model;

        $r0 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r1 = interfaceinvoke $r0.<com.shakeel.repository.ProductRepository: java.util.List findAll()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("products", $r1);

        $r3 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;

        $r4 = interfaceinvoke $r3.<com.shakeel.repository.OrderRepository: java.lang.Iterable findAll()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("orders", $r4);

        return "orders";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: saveOrder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.controller.OrdersController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String saveOrder(java.lang.String, java.lang.String, java.lang.Long[])
    {
        com.shakeel.controller.OrdersController this;
        java.lang.String firstName, lastName, $r12;
        java.lang.Long[] productIds, total, l8;
        com.shakeel.model.Customer customer, $r0, $r7;
        com.shakeel.model.CustomerOrder customerOrder, $r3;
        java.util.HashSet productSet, $r8;
        java.lang.Long productId, $r5, $r11;
        com.shakeel.repository.CustomerRepository $r1, $r4;
        long $l0;
        java.lang.Object $r6, $r14, $r18;
        com.shakeel.repository.OrderRepository $r9;
        double $d0, $d1, $d2;
        com.shakeel.repository.ProductRepository $r13, $r17;
        com.shakeel.model.Product $r15, $r19;
        java.lang.Double $r16, total;
        int l8, l9, productId;

        this := @this: com.shakeel.controller.OrdersController;

        firstName := @parameter0: java.lang.String;

        lastName := @parameter1: java.lang.String;

        productIds := @parameter2: java.lang.Long[];

        $r0 = new com.shakeel.model.Customer;

        specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>();

        customer = $r0;

        virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName);

        virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName);

        $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0);

        $r3 = new com.shakeel.model.CustomerOrder;

        specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>();

        customerOrder = $r3;

        $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>;

        $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5);

        $r7 = (com.shakeel.model.Customer) $r6;

        virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7);

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        productSet = $r8;

        total = productIds;

        l8 = lengthof productIds;

        l9 = 0;

     label1:
        if l9 >= l8 goto label2;

        productId = productIds[l9];

        $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r19 = (com.shakeel.model.Product) $r18;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19);

        l9 = l9 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8);

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        l8 = productIds;

        l9 = lengthof productIds;

        productId = 0;

     label3:
        if productId >= l9 goto label4;

        productId = productIds[productId];

        $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>();

        $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>;

        $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId);

        $r15 = (com.shakeel.model.Product) $r14;

        $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>();

        $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        productId = productId + 1;

        goto label3;

     label4:
        virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total);

        $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;

        interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3);

        $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>();

        $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>();

        return $r12;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.shakeel.controller.OrdersController: java.lang.String removeOrder(java.lang.Long)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: removeOrder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.shakeel.controller.OrdersController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.shakeel
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String removeOrder(java.lang.Long)
    {
        com.shakeel.controller.OrdersController this;
        java.lang.Long Id;
        com.shakeel.repository.OrderRepository $r0;
        java.lang.String $r1;

        this := @this: com.shakeel.controller.OrdersController;

        Id := @parameter0: java.lang.Long;

        $r0 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>;

        interfaceinvoke $r0.<com.shakeel.repository.OrderRepository: void delete(java.io.Serializable)>(Id);

        $r1 = virtualinvoke Id.<java.lang.Long: java.lang.String toString()>();

        return $r1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackAnalyzer.java: constructDIRForStack(): FSA: constructDIRsForStack: Stack = [com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Customer: void setFirstName(java.lang.String)]
FuncStackAnalyzer.java: constructDIRForStack(): top function sig: com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])
FuncStackAnalyzer.java: constructDIRForStack(): body rootmethod before analysis: [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof productIds, l9 = 0, if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), productId = productIds[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof productIds, productId = 0, if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = productIds[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3), $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
FuncStackAnalyzer.java: constructDIRForStack(): Top level func i.e. com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[])has typemap: {}
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregions: [| BasicBlock0, | WhileLoop
| | BasicBlock1
| | BasicBlock2
, | Sequential
| | BasicBlock3
| | WhileLoop
| | | BasicBlock4
| | | BasicBlock5
| | BasicBlock6
]
DIRSequentialRegionAnalyzerN.java: constructDIR(): Break point!
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: saveOrder
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof productIds, l9 = 0, if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), productId = productIds[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof productIds, productId = 0, if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = productIds[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3), $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.shakeel.controller.OrdersController
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = firstName := @parameter0: java.lang.String
DIRRegionAnalyzer.java: constructDIR(): curUnit = lastName := @parameter1: java.lang.String
DIRRegionAnalyzer.java: constructDIR(): curUnit = productIds := @parameter2: java.lang.Long[]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = new com.shakeel.model.Customer
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: caseAllocation(): Mapping $r0.customerId to Bottomnode
DIRRegionAnalyzer.java: caseAllocation(): Mapping $r0.firstName to Bottomnode
DIRRegionAnalyzer.java: caseAllocation(): Mapping $r0.lastName to Bottomnode
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.Customer: void <init>()

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = customer = $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2, type(v1, v2) = ptr
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: customer
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r0
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [Customer.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
]
WARN: Flatten.java: flatten(): depth > BOUND
AccessPath.java: replaceBase(): input access path: customer.customerId
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.firstName
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.lastName
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.orderId
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.total
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.products
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.customer
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.customer.customerId
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.customer.firstName
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.customer.lastName
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: customer.customerOrder.customer.customerOrder
AccessPath.java: replaceBase(): replacement of base: $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: setFirstName
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.shakeel.model.Customer: void setFirstName(java.lang.String)>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [firstName, this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [firstName, $r0]
ARegion.java: analyze(): set cur method of analyzer to: setFirstName
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.model.Customer, firstName := @parameter0: java.lang.String, this.<com.shakeel.model.Customer: java.lang.String firstName> = firstName, return]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.shakeel.model.Customer
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = firstName := @parameter0: java.lang.String
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<com.shakeel.model.Customer: java.lang.String firstName> = firstName
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): Mapping: this.firstName -> firstName
DIRRegionAnalyzer.java: constructDIR(): curUnit = return
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName


DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: this.firstName=firstName
~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName


DIRRegionAnalyzer.java: handleSideEffects(): ith formal: firstName
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: java.lang.String
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.shakeel.model.Customer
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r0
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: firstName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.Customer: void setFirstName(java.lang.String)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [firstName, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [firstName, $r0]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formal = firstName, actual = firstName
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: firstName
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = firstName
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = setFirstName, [$r0.firstName]
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: firstName
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: firstName
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive
DIRRegionAnalyzer.java: handleSideEffects(): fml: firstName
DIRRegionAnalyzer.java: handleSideEffects(): actual arg (Soot Value): firstName
DIRRegionAnalyzer.java: handleSideEffects(): actualNode (Node constructed from value): firstName
DIRRegionAnalyzer.java: handleSideEffects(): formal = firstName, actual = firstName
DIRRegionAnalyzer.java: handleSideEffects(): resolvedActual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive, firstName
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r0
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setFirstName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: firstName
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: setLastName
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.shakeel.model.Customer: void setLastName(java.lang.String)>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [lastName, $r0]
ARegion.java: analyze(): set cur method of analyzer to: setLastName
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.model.Customer, lastName := @parameter0: java.lang.String, this.<com.shakeel.model.Customer: java.lang.String lastName> = lastName, return]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.shakeel.model.Customer
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = lastName := @parameter0: java.lang.String
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<com.shakeel.model.Customer: java.lang.String lastName> = lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): Mapping: this.lastName -> lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = return
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName


DIR.java: updateRegion(): update region entry: this.lastName=lastName
DIR.java: updateRegion(): update region entry: this=Self
~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName


DIRRegionAnalyzer.java: handleSideEffects(): ith formal: lastName
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: java.lang.String
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.shakeel.model.Customer
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r0
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.Customer: void setLastName(java.lang.String)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [lastName, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [lastName, $r0]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formal = lastName, actual = lastName
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: lastName
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = lastName
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.lastName, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = setLastName, [$r0.lastName]
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: lastName
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: lastName
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive
DIRRegionAnalyzer.java: handleSideEffects(): fml: lastName
DIRRegionAnalyzer.java: handleSideEffects(): actual arg (Soot Value): lastName
DIRRegionAnalyzer.java: handleSideEffects(): actualNode (Node constructed from value): lastName
DIRRegionAnalyzer.java: handleSideEffects(): formal = lastName, actual = lastName
DIRRegionAnalyzer.java: handleSideEffects(): resolvedActual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive, lastName
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r0
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.Customer: void setLastName(java.lang.String)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r1 -> this.customerRepository
DIRRegionAnalyzer.java: constructDIR(): curUnit = interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0)
DIRRegionAnalyzer.java: constructDIR(): savestmt invoke expr: interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0)
DIRRegionAnalyzer.java: constructDIR(): baseVarNode: $r1
DIRRegionAnalyzer.java: constructDIR(): dir till now: ~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): ve map:{$r1=this.customerRepository, customer.customerId=BottomNode, customer.customerOrder.total=$r0.customerOrder.total, customer.customerOrder.products=$r0.customerOrder.products, customer.customerOrder.customer=$r0.customerOrder.customer, customer.customerOrder.customer.customerId=$r0.customerOrder.customer.customerId, customer.customerOrder.customer.lastName=$r0.customerOrder.customer.lastName, this=Self, $r0.firstName=firstName, customer.lastName=BottomNode, $r0.lastName=lastName, customer.customerOrder=$r0.customerOrder, $r0.customerId=BottomNode, customer.firstName=BottomNode, customer.customerOrder.customer.customerOrder=$r0.customerOrder.customer.customerOrder, customer.customerOrder.orderId=$r0.customerOrder.orderId, customer=$r0, customer.customerOrder.customer.firstName=$r0.customerOrder.customer.firstName}
DIRRegionAnalyzer.java: constructDIR(): repo: this.customerRepository
DIRRegionAnalyzer.java: constructDIR(): argType: com.shakeel.model.Customer
DIRRegionAnalyzer.java: constructDIR(): table: com.shakeel.model.Customer
DIRRegionAnalyzer.java: constructDIR(): attributes: [customerId, firstName, lastName]
DIRRegionAnalyzer.java: constructDIR(): fieldVarNodes: [$r0.customerId, $r0.firstName, $r0.lastName]
DIRRegionAnalyzer.java: constructDIR(): listNode.columns: [FieldRef(com.shakeel.model.Customer.customerId), FieldRef(com.shakeel.model.Customer.firstName), FieldRef(com.shakeel.model.Customer.lastName)]
DIRRegionAnalyzer.java: constructDIR(): mapping: this.customerRepository -> Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
DIRRegionAnalyzer.java: constructDIR(): savestmt args: [$r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r3 = new com.shakeel.model.CustomerOrder
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: caseAllocation(): Mapping $r3.orderId to Bottomnode
DIRRegionAnalyzer.java: caseAllocation(): Mapping $r3.total to Bottomnode
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.CustomerOrder: void <init>()

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = customerOrder = $r3
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2, type(v1, v2) = ptr
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: customerOrder
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r3
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [CustomerOrder.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
]
WARN: Flatten.java: flatten(): depth > BOUND
AccessPath.java: replaceBase(): input access path: customerOrder.orderId
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.total
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.products
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.customerId
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.firstName
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.lastName
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.customerOrder
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.customerOrder.orderId
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.customerOrder.total
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.customerOrder.products
AccessPath.java: replaceBase(): replacement of base: $r3
AccessPath.java: replaceBase(): input access path: customerOrder.customer.customerOrder.customer
AccessPath.java: replaceBase(): replacement of base: $r3
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r4 -> Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
DIRRegionAnalyzer.java: constructDIR(): curUnit = $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getCustomerId
construct/Utils.java: parseInvokeExpr(): methodSignature = com.shakeel.model.Customer: long getCustomerId()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <com.shakeel.model.Customer: long getCustomerId()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.shakeel.model.Customer: long getCustomerId()>
construct/Utils.java: parseObjectInvoke(): methodName = getCustomerId
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = com.shakeel.model.Customer: long getCustomerId()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getCustomerId
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.model.Customer, $l0 = this.<com.shakeel.model.Customer: long customerId>, return $l0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.shakeel.model.Customer
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $l0 = this.<com.shakeel.model.Customer: long customerId>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $l0 -> this.customerId
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $l0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $l0=this.customerId
DIR.java: updateRegion(): update region entry: return=this.customerId
~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = com.shakeel.model.Customer: long getCustomerId() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = long
DIRRegionAnalyzer.java: constructDIR(): leftType : long
DIRRegionAnalyzer.java: constructDIR(): case : caseCallToMethodWBodyRetPrim()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), v1 is primitive, foo is not a library method
DIRRegionAnalyzer.java: constructDIR(): v1: $l0
DIRRegionAnalyzer.java: constructDIR(): foo: <com.shakeel.model.Customer: long getCustomerId()>
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getCustomerId
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.Customer: long getCustomerId()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.shakeel.model.Customer: long getCustomerId()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [$r0]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.shakeel.model.Customer
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r0
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customerOrder.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, $l0, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getCustomerId, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r0
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: constructDIR(): methodSig: com.shakeel.model.Customer: long getCustomerId()
DIRRegionAnalyzer.java: constructDIR(): FuncStackAnalyzer.funcDIRMap: {com.shakeel.model.Customer: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, com.shakeel.model.Customer: long getCustomerId()=~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self

, com.shakeel.model.Customer: void setFirstName(java.lang.String)=~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName

}
DIRRegionAnalyzer.java: constructDIR(): dir callee: ~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): retCalleeCloned: this.customerId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.customerId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.Customer: long getCustomerId()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.Customer: long getCustomerId()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r0]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.customerId, this.firstName, this.lastName, this.customerOrder, this.customerOrder.orderId, this.customerOrder.total, this.customerOrder.products, this.customerOrder.customer, this.customerOrder.customer.customerId, this.customerOrder.customer.firstName, this.customerOrder.customer.lastName, this.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.customerId
DIRRegionAnalyzer.java: constructDIR(): after dag formals to actuals: $r0.customerId
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JStaticInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Long: java.lang.Long valueOf(long)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Long: java.lang.Long valueOf(long)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Long: java.lang.Long valueOf(long)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r5
Utils.java: getVarNode(): LinkedVariableBox($r5)
JAssignStmtCons.java: construct(): staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Long: java.lang.Long valueOf(long)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Long: java.lang.Long valueOf(long)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Long: java.lang.Long valueOf(long)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findOne
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Object: java.lang.Object findOne(java.io.Serializable)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>
construct/Utils.java: parseObjectInvoke(): methodName = findOne
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
construct/Utils.java: parseObjectInvoke(): repostr in findOne case: com.shakeel.repository.CustomerRepository
construct/Utils.java: parseObjectInvoke(): entity for repo in findOne case: com.shakeel.model.Customer
construct/Utils.java: parseObjectInvoke(): entity class findOne case: com.shakeel.model.Customer
construct/Utils.java: parseObjectInvoke(): check 1 =Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | $r5
cosntruct/utils.java: mapDBFetchAccessGraph(): check relExpBaseAccp= Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | $r5
cosntruct/utils.java: mapDBFetchAccessGraph(): prim fields = [<com.shakeel.model.Customer: long customerId>, <com.shakeel.model.Customer: java.lang.String firstName>, <com.shakeel.model.Customer: java.lang.String lastName>]
cosntruct/utils.java: mapDBFetchAccessGraph(): oneToOne fields= [<com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>]
cosntruct/utils.java: mapDBFetchAccessGraph(): check = Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
cosntruct/utils.java: mapDBFetchAccessGraph(): check relExpBaseAccp= Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
cosntruct/utils.java: mapDBFetchAccessGraph(): prim fields = [<com.shakeel.model.CustomerOrder: java.lang.Long orderId>, <com.shakeel.model.CustomerOrder: java.lang.Double total>]
cosntruct/utils.java: mapDBFetchAccessGraph(): oneToOne fields= [<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>]
cosntruct/utils.java: mapDBFetchAccessGraph(): check = Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Customer)
| NullOp
cosntruct/utils.java: mapDBFetchAccessGraph(): check relExpBaseAccp= Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Customer)
| NullOp
cosntruct/utils.java: mapDBFetchAccessGraph(): prim fields = [<com.shakeel.model.Customer: long customerId>, <com.shakeel.model.Customer: java.lang.String firstName>, <com.shakeel.model.Customer: java.lang.String lastName>]
cosntruct/utils.java: mapDBFetchAccessGraph(): oneToOne fields= [<com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>]
cosntruct/utils.java: mapDBFetchAccessGraph(): check = Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
cosntruct/utils.java: mapDBFetchAccessGraph(): manyToOne fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): collection fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyTomany fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyToOne fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): collection fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyTomany fields = [<com.shakeel.model.CustomerOrder: java.util.Set products>]
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.shakeel.model.CustomerOrder
 fieldName= products
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long orderId [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Double total
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set products [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/JoinTable;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;
cosntruct/utils.java: mapDBFetchAccessGraph(): manyToOne fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): collection fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyTomany fields = []
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r6
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: constructDIR(): left type = java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): method sig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{com.shakeel.model.Customer: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, java.lang.Object: java.lang.Object findOne(java.io.Serializable)=~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | $r5

~~~ return.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| customerId

~~~ return.customerOrder ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ return.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ return.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ return.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ return.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ return.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ return.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ return.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ return.customerOrdercustomer.customerOrder ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ return.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| firstName

~~~ return.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| lastName

, com.shakeel.model.Customer: long getCustomerId()=~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self

, com.shakeel.model.Customer: void setFirstName(java.lang.String)=~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | $r5

~~~ return.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| customerId

~~~ return.customerOrder ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ return.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ return.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ return.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ return.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ return.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ return.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ return.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ return.customerOrdercustomer.customerOrder ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ return.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| firstName

~~~ return.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| lastName


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: []
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | $r5
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): leftType = com.shakeel.model.Customer
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findOne
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: com.shakeel.model.Customer fields = [<com.shakeel.model.Customer: long customerId>, <com.shakeel.model.Customer: java.lang.String firstName>, <com.shakeel.model.Customer: java.lang.String lastName>, <com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>]
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: long customerId>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: java.lang.String firstName>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>  type=CustomerOrder
NRA.java: getCondFromOneToOne(): mappedBy= customer
NRA.java: getJoinedColumn(): joined Column value=  orderId
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r6, com.shakeel.model.Customer
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r6.customerId, $r6.firstName, $r6.lastName, $r6.customerOrder, $r6.customerOrder.orderId, $r6.customerOrder.total, $r6.customerOrder.products, $r6.customerOrder.customer, $r6.customerOrder.customer.customerId, $r6.customerOrder.customer.firstName, $r6.customerOrder.customer.lastName, $r6.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [com.shakeel.model.Customer: void setLastName(java.lang.String), java.lang.Object: java.lang.Object findOne(java.io.Serializable), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.Customer: void setFirstName(java.lang.String)]
DIRRegionAnalyzer.java: constructDIR(): callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
Flatten.java: getNestedFields(): LVAL TYPE: com.shakeel.model.Customer
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Customer: long customerId> = long
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

]
Flatten.java: getNestedFields(): Id fields=customerId
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Customer: java.lang.String firstName> = java.lang.String
Flatten.java: getNestedFields(): tags= []
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Customer: java.lang.String lastName> = java.lang.String
Flatten.java: getNestedFields(): tags= []
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder> = com.shakeel.model.CustomerOrder
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: customer

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: customerId

]
Flatten.java: getNestedFields(): check *ToOne sf: customerOrder , type = com.shakeel.model.CustomerOrder
Flatten.java: getNestedFields(): returning: [<com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>]
DIRRegionAnalyzer.java: constructDIR(): check nestedFields=[<com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>]
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder
DIRRegionAnalyzer.java: constructDIR(): baseEntity NAme=Customer
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.shakeel.model.Customer
 fieldName= customerOrder
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private long customerId [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String firstName
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String lastName
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.shakeel.model.CustomerOrder customerOrder [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= customerOrder
DIRRegionAnalyzer.java: constructDIR(): nestedField Entity= com.shakeel.model.CustomerOrder
DIRRegionAnalyzer.java: constructDIR(): From soot typeclass= com.shakeel.model.CustomerOrder
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): key= return.customerOrder
 value= Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
NRA.java: getCondFromOneToOne(): mappedBy= customer
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.customerId
| CustomerOrder.orderId
DIRRegionAnalyzer.java: constructDIR(): relExp = Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
This is NRA case
NRA.java: genExprNra(): baseEntity : com.shakeel.model.CustomerOrder
NRA.java: genExprNra(): nested field name= customerOrder
NRA.java: genExprNra(): nested Entity = com.shakeel.model.CustomerOrder
NRA.java: processTableandFields: com.shakeel.model.CustomerOrder fields = [<com.shakeel.model.CustomerOrder: java.lang.Long orderId>, <com.shakeel.model.CustomerOrder: java.lang.Double total>, <com.shakeel.model.CustomerOrder: java.util.Set products>, <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>]
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: java.lang.Long orderId>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: java.lang.Double total>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
AccessPath.java: getCollectionType: Collection field Type = com.shakeel.model.Product
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: java.util.Set products>  type=Product
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
AccessPath.java: getCollectionType: Collection field Type = com.shakeel.model.Product
NRA.java: getCondFromManyToMany(): tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
NRA.java: getCondFromManyToMany(): orderId
NRA.java: getCondFromManyToMany(): productId
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>  type=Customer
NRA.java: getCondFromOneToOne(): mappedBy= customerOrder
NRA.java: getJoinedColumn(): joined Column value=  customerId
NRA.java: genExprNra(): From soot typeclass= com.shakeel.model.CustomerOrder
NRA.java: genExprNra(): com.shakeel.model.CustomerOrder fields= [<com.shakeel.model.CustomerOrder: java.lang.Long orderId>, <com.shakeel.model.CustomerOrder: java.lang.Double total>, <com.shakeel.model.CustomerOrder: java.util.Set products>, <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>]
NRA.java: genExprNra(): fields count= 4
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: java.lang.Long orderId>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: java.lang.Double total>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: java.util.Set products>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=products
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.shakeel.model.CustomerOrder
 fieldName= products
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long orderId [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Double total
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set products [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/JoinTable;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;
NRA.java: genExprNra(): sfEntity=com.shakeel.model.Product
NRA.java: genExprNra(): baseclass = CustomerOrder
NRA.java: genExprNra(): fieldclass = Product
NRA.java: getJoinCondFromField(): ManyToMany Field
NRA.java: getCondFromManyToMany(): tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
NRA.java: getCondFromManyToMany(): orderId
NRA.java: getCondFromManyToMany(): productId
NRA.java: getCondFromManyToMany(): join condition = Equals
| Alpha.productId
| Product.orderId
NRA.java: genExprNra(): ManyToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.shakeel.model.Product
NRA.java: genExprNra(): nested field name= products
NRA.java: genExprNra(): nested Entity = com.shakeel.model.Product
NRA.java: processTableandFields: com.shakeel.model.Product fields = [<com.shakeel.model.Product: java.lang.Long productId>, <com.shakeel.model.Product: java.lang.String productName>, <com.shakeel.model.Product: java.lang.Double productPrice>, <com.shakeel.model.Product: java.lang.Long orderId>]
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Long productId>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.String productName>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Double productPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Long orderId>  type=FieldData
NRA.java: genExprNra(): From soot typeclass= com.shakeel.model.Product
NRA.java: genExprNra(): com.shakeel.model.Product fields= [<com.shakeel.model.Product: java.lang.Long productId>, <com.shakeel.model.Product: java.lang.String productName>, <com.shakeel.model.Product: java.lang.Double productPrice>, <com.shakeel.model.Product: java.lang.Long orderId>]
NRA.java: genExprNra(): fields count= 4
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Product: java.lang.Long productId>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Product: java.lang.String productName>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productName

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Product: java.lang.Double productPrice>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productPrice

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Product: java.lang.Long orderId>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.shakeel.model.Product.productId), FieldRef(com.shakeel.model.Product.productName), FieldRef(com.shakeel.model.Product.productPrice), FieldRef(com.shakeel.model.Product.orderId)]
NRA.java: genExprNra(): projectNode name: CustomerOrder.products=Pi
NRA.java: genExprNra(): nestexpr= CustomerOrder.products=Pi
| Join
| | Alpha
| | ClassRef(Product)
| | Equals
| | | Alpha.productId
| | | Product.orderId
| List
| | productId
| | productName
| | productPrice
| | orderId
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: customerOrder

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=customer
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.shakeel.model.CustomerOrder
 fieldName= customer
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long orderId [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Double total
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set products [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.shakeel.model.Customer customer [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= customer
NRA.java: genExprNra(): sfEntity=com.shakeel.model.Customer
NRA.java: genExprNra(): baseclass = CustomerOrder
NRA.java: genExprNra(): fieldclass = Customer
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: getCondFromOneToOne(): mappedBy= customerOrder
NRA.java: getJoinedColumn(): joined Column value=  customerId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.orderId
| Customer.customerId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: customerOrder

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.shakeel.model.Customer
NRA.java: genExprNra(): nested field name= customer
NRA.java: genExprNra(): nested Entity = com.shakeel.model.Customer
NRA.java: processTableandFields: com.shakeel.model.Customer fields = [<com.shakeel.model.Customer: long customerId>, <com.shakeel.model.Customer: java.lang.String firstName>, <com.shakeel.model.Customer: java.lang.String lastName>, <com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>]
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: long customerId>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: java.lang.String firstName>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>  type=CustomerOrder
NRA.java: getCondFromOneToOne(): mappedBy= customer
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: genExprNra(): From soot typeclass= com.shakeel.model.Customer
NRA.java: genExprNra(): com.shakeel.model.Customer fields= [<com.shakeel.model.Customer: long customerId>, <com.shakeel.model.Customer: java.lang.String firstName>, <com.shakeel.model.Customer: java.lang.String lastName>, <com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>]
NRA.java: genExprNra(): fields count= 4
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Customer: long customerId>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Customer: java.lang.String firstName>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Customer: java.lang.String lastName>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.Customer: com.shakeel.model.CustomerOrder customerOrder>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: customer

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: customerId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=customerOrder
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.shakeel.model.Customer
 fieldName= customerOrder
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private long customerId [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String firstName
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String lastName
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.shakeel.model.CustomerOrder customerOrder [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= customerOrder
NRA.java: genExprNra(): sfEntity=com.shakeel.model.CustomerOrder
NRA.java: genExprNra(): baseclass = Customer
NRA.java: genExprNra(): fieldclass = CustomerOrder
NRA.java: getJoinedColumn(): joined Column value=  customerId
NRA.java: getCondFromOneToOne(): mappedBy= customer
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.customerId
| CustomerOrder.orderId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: customer

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: customerId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.shakeel.model.CustomerOrder
NRA.java: genExprNra(): nested field name= customerOrder
NRA.java: genExprNra(): nested Entity = com.shakeel.model.CustomerOrder
NRA.java: processTableandFields: com.shakeel.model.CustomerOrder fields = [<com.shakeel.model.CustomerOrder: java.lang.Long orderId>, <com.shakeel.model.CustomerOrder: java.lang.Double total>, <com.shakeel.model.CustomerOrder: java.util.Set products>, <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>]
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: java.lang.Long orderId>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: java.lang.Double total>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
AccessPath.java: getCollectionType: Collection field Type = com.shakeel.model.Product
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: java.util.Set products>  type=Product
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
AccessPath.java: getCollectionType: Collection field Type = com.shakeel.model.Product
NRA.java: getCondFromManyToMany(): tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
NRA.java: getCondFromManyToMany(): orderId
NRA.java: getCondFromManyToMany(): productId
NRA.java: processTableandFields: sf <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>  type=Customer
NRA.java: getCondFromOneToOne(): mappedBy= customerOrder
NRA.java: getJoinedColumn(): joined Column value=  customerId
NRA.java: genExprNra(): From soot typeclass= com.shakeel.model.CustomerOrder
NRA.java: genExprNra(): com.shakeel.model.CustomerOrder fields= [<com.shakeel.model.CustomerOrder: java.lang.Long orderId>, <com.shakeel.model.CustomerOrder: java.lang.Double total>, <com.shakeel.model.CustomerOrder: java.util.Set products>, <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>]
NRA.java: genExprNra(): fields count= 4
NRA.java: genExprNra(): new ListNode = 0
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: java.lang.Long orderId>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: java.lang.Double total>
NRA.java: genExprNra(): tags=[]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): Primitive field 
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: java.util.Set products>
NRA.java: genExprNra(): tags=[Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
NRA.java: genExprNra(): isStarToManyField(sf) = true
NRA.java: genExprNra(): isStarToOne field = false
NRA.java: genExprNra(): sf.getname=products
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.shakeel.model.CustomerOrder
 fieldName= products
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long orderId [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Double total
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set products [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/JoinTable;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;
NRA.java: genExprNra(): sfEntity=com.shakeel.model.Product
NRA.java: genExprNra(): baseclass = CustomerOrder
NRA.java: genExprNra(): fieldclass = Product
NRA.java: getJoinCondFromField(): ManyToMany Field
NRA.java: getCondFromManyToMany(): tags = [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 2 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: PERSIST, Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: MERGE]
Annotation Element: kind: e name: fetch type name: Ljavax/persistence/FetchType; constant name: LAZY

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: ORDER_PRODUCTS
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId
]

]
NRA.java: getCondFromManyToMany(): orderId
NRA.java: getCondFromManyToMany(): productId
NRA.java: getCondFromManyToMany(): join condition = Equals
| Alpha.productId
| Product.orderId
NRA.java: genExprNra(): ManyToMany Field
This is NRA case
NRA.java: genExprNra(): baseEntity : com.shakeel.model.Product
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): visited= [com.shakeel.model.Customer~customerOrder]
NRA.java: genExprNra(): field =<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
NRA.java: genExprNra(): tags=[Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: customerOrder

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
NRA.java: genExprNra(): isStarToManyField(sf) = false
NRA.java: genExprNra(): isStarToOne field = true
NRA.java: genExprNra(): sf.getname=customer
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.shakeel.model.CustomerOrder
 fieldName= customer
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long orderId [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Double total
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Set products [Signature: Ljava/util/Set<Lcom/shakeel/model/Product;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private com.shakeel.model.Customer customer [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToOne;
Construct/Utils.java: bcelActualCollectionFieldType(): OneToOne field= customer
NRA.java: genExprNra(): sfEntity=com.shakeel.model.Customer
NRA.java: genExprNra(): baseclass = CustomerOrder
NRA.java: genExprNra(): fieldclass = Customer
NRA.java: getJoinedColumn(): joined Column value=  orderId
NRA.java: getCondFromOneToOne(): mappedBy= customerOrder
NRA.java: getJoinedColumn(): joined Column value=  customerId
NRA.java: getCondFromOneToOne(): join condition = Equals
| Alpha.orderId
| Customer.customerId
NRA.java: genExprNra(): OneToOne Field
NRA.java: genExprNra(): onetoone field tags = [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToOne; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: customerOrder

Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
This is NRA case
NRA.java: genExprNra(): baseEntity : com.shakeel.model.Customer
NRA.java: genExprNra(): nestexpr= NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.shakeel.model.CustomerOrder.orderId), FieldRef(com.shakeel.model.CustomerOrder.total), FieldRef(com.shakeel.model.CustomerOrder.products), FieldRef(com.shakeel.model.CustomerOrder.customer)]
NRA.java: genExprNra(): projectNode name: Customer.customerOrder=Pi
NRA.java: genExprNra(): nestexpr= Customer.customerOrder=Pi
| Join
| | Alpha
| | ClassRef(CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | NullOp
| | NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.shakeel.model.Customer.customerId), FieldRef(com.shakeel.model.Customer.firstName), FieldRef(com.shakeel.model.Customer.lastName), FieldRef(com.shakeel.model.Customer.customerOrder)]
NRA.java: genExprNra(): projectNode name: CustomerOrder.customer=Pi
NRA.java: genExprNra(): nestexpr= CustomerOrder.customer=Pi
| Join
| | Alpha
| | ClassRef(Customer)
| | Equals
| | | Alpha.orderId
| | | Customer.customerId
| List
| | customerId
| | firstName
| | lastName
| | Customer.customerOrder=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(CustomerOrder)
| | | | Equals
| | | | | Alpha.customerId
| | | | | CustomerOrder.orderId
| | | List
| | | | orderId
| | | | total
| | | | NullOp
| | | | NullOp
NRA.java: genExprNra(): ListNode columns=[FieldRef(com.shakeel.model.CustomerOrder.orderId), FieldRef(com.shakeel.model.CustomerOrder.total), FieldRef(com.shakeel.model.CustomerOrder.products), FieldRef(com.shakeel.model.CustomerOrder.customer)]
NRA.java: genExprNra(): projectNode name: Customer.customerOrder=Pi
DIRRegionAnalyzer.java: constructDIR(): nested VeMap : 
DIRRegionAnalyzer.java: constructDIR(): key : return.customerOrder
 value : 
 Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder.customer.lastName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder.customer
DIRRegionAnalyzer.java: constructDIR(): val = Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder.products
DIRRegionAnalyzer.java: constructDIR(): val = Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder
DIRRegionAnalyzer.java: constructDIR(): val = Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): key = return.lastName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| lastName
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder.customer.customerId
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrdercustomer.customerOrder
DIRRegionAnalyzer.java: constructDIR(): val = Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder.total
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder.customer.firstName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
DIRRegionAnalyzer.java: constructDIR(): key = return.customerId
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| customerId
DIRRegionAnalyzer.java: constructDIR(): key = return.firstName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| firstName
DIRRegionAnalyzer.java: constructDIR(): key = return.customerOrder.orderId
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | $r5
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable) END
DIRRegionAnalyzer.java: constructDIR(): v1 access paths: [$r6.customerId, $r6.firstName, $r6.lastName, $r6.customerOrder, $r6.customerOrder.orderId, $r6.customerOrder.total, $r6.customerOrder.products, $r6.customerOrder.customer, $r6.customerOrder.customer.customerId, $r6.customerOrder.customer.firstName, $r6.customerOrder.customer.lastName, $r6.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerId
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| customerId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: constructDIR(): key = $r6.firstName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.firstName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| firstName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: constructDIR(): key = $r6.lastName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.orderId
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.orderId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.total
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.total
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.products
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.products
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.customer
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.customer
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | $r5
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.customer.customerId
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.customer.customerId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.customer.firstName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.customer.firstName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.customer.lastName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.customer.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | $r5
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
DIRRegionAnalyzer.java: constructDIR(): key = $r6.customerOrder.customer.customerOrder
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.customerOrder.customer.customerOrder
DIRRegionAnalyzer.java: constructDIR(): No entry for lookup (retAccp) = return.customerOrder.customer.customerOrder
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r7 = (com.shakeel.model.Customer) $r6
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JCastExpr
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = (type1) v2
DIRRegionAnalyzer.java: constructDIR(): type1: com.shakeel.model.Customer
DIRRegionAnalyzer.java: constructDIR(): castExpr: (com.shakeel.model.Customer) $r6
DIRRegionAnalyzer.java: constructDIR(): v2: $r6
DIRRegionAnalyzer.java: constructDIR(): cur dir: {$r6.customerOrder.customer.firstName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName), customerOrder.customer.customerId=$r3.customer.customerId, customer.customerId=BottomNode, $r0.firstName=firstName, $r6.customerOrder.total=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total), customer.customerOrder=$r0.customerOrder, customerOrder.customer=$r3.customer, $r6.customerOrder=Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp, customerOrder.orderId=BottomNode, customerOrder.customer.customerOrder.orderId=$r3.customer.customerOrder.orderId, $r1=this.customerRepository, $r4=Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName, customer.customerOrder.total=$r0.customerOrder.total, customer.customerOrder.customer.lastName=$r0.customerOrder.customer.lastName, $r5=BottomNode, this=Self, $r6=Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode, customerOrder.total=BottomNode, customerOrder.customer.customerOrder.customer=$r3.customer.customerOrder.customer, customer.firstName=BottomNode, customer.customerOrder.orderId=$r0.customerOrder.orderId, customerOrder.customer.customerOrder.products=$r3.customer.customerOrder.products, $r6.customerOrder.customer=Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp, $r3.orderId=BottomNode, $r6.customerId=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId, $r6.customerOrder.customer.lastName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName), customer.customerOrder.products=$r0.customerOrder.products, customer.customerOrder.customer=$r0.customerOrder.customer, customer.customerOrder.customer.customerId=$r0.customerOrder.customer.customerId, customer.lastName=BottomNode, customerOrder=$r3, $r6.customerOrder.products=Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp, customerOrder.customer.customerOrder.total=$r3.customer.customerOrder.total, this.customerRepository=Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName, $r6.customerOrder.orderId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId), $r0.customerId=BottomNode, customer.customerOrder.customer.customerOrder=$r0.customerOrder.customer.customerOrder, $r6.lastName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName, customer.customerOrder.customer.firstName=$r0.customerOrder.customer.firstName, $r3.total=BottomNode, customerOrder.customer.customerOrder=$r3.customer.customerOrder, customerOrder.customer.firstName=$r3.customer.firstName, $l0=BottomNode, $r0.lastName=lastName, customerOrder.customer.lastName=$r3.customer.lastName, customerOrder.products=$r3.products, $r6.firstName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName, $r6.customerOrder.customer.customerId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId), customer=$r0}
DIRRegionAnalyzer.java: constructDIR(): rightVar in dir: true
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): v1 and v2 have diff types
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v1) = com.shakeel.model.Customer
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v2) = java.lang.Object
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: $r7
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r6
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [Customer.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
]
WARN: Flatten.java: flatten(): depth > BOUND
AccessPath.java: replaceBase(): input access path: $r7.customerId
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.firstName
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.lastName
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.orderId
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.total
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.products
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.customer
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.customer.customerId
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.customer.firstName
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.customer.lastName
AccessPath.java: replaceBase(): replacement of base: $r6
AccessPath.java: replaceBase(): input access path: $r7.customerOrder.customer.customerOrder
AccessPath.java: replaceBase(): replacement of base: $r6
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: setCustomer
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [$r7, $r3]
ARegion.java: analyze(): set cur method of analyzer to: setCustomer
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.model.CustomerOrder, customer := @parameter0: com.shakeel.model.Customer, this.<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer> = customer, return]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.shakeel.model.CustomerOrder
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = customer := @parameter0: com.shakeel.model.Customer
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer> = customer
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v.f = expr, f is non-primtive
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
WARN: Flatten.java: flatten(): depth > BOUND
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.shakeel.model.CustomerOrder: com.shakeel.model.Customer customer>
DIRRegionAnalyzer.java: constructDIR(): accessPaths = [this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: constructDIR(): right val = customer
DIRRegionAnalyzer.java: constructDIR(): Subcase: v1.f = v2
AccessPath.java: replaceBase(): input access path: this.customer.customerId
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.customerId -> customer.customerId
AccessPath.java: replaceBase(): input access path: this.customer.firstName
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.firstName -> customer.firstName
AccessPath.java: replaceBase(): input access path: this.customer.lastName
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.lastName -> customer.lastName
AccessPath.java: replaceBase(): input access path: this.customer.customerOrder
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.customerOrder -> customer.customerOrder
AccessPath.java: replaceBase(): input access path: this.customer.customerOrder.orderId
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.customerOrder.orderId -> customer.customerOrder.orderId
AccessPath.java: replaceBase(): input access path: this.customer.customerOrder.total
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.customerOrder.total -> customer.customerOrder.total
AccessPath.java: replaceBase(): input access path: this.customer.customerOrder.products
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.customerOrder.products -> customer.customerOrder.products
AccessPath.java: replaceBase(): input access path: this.customer.customerOrder.customer
AccessPath.java: replaceBase(): replacement of base: customer
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.customer.customerOrder.customer -> customer.customerOrder.customer
DIRRegionAnalyzer.java: constructDIR(): curUnit = return
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName


DIR.java: updateRegion(): update region entry: this.customer.customerOrder=customer.customerOrder
DIR.java: updateRegion(): update region entry: this.customer.firstName=customer.firstName
DIR.java: updateRegion(): update region entry: this.customer.customerOrder.orderId=customer.customerOrder.orderId
DIR.java: updateRegion(): update region entry: this.customer.customerOrder.total=customer.customerOrder.total
DIR.java: updateRegion(): update region entry: this.customer.customerId=customer.customerId
DIR.java: updateRegion(): update region entry: this.customer.lastName=customer.lastName
DIR.java: updateRegion(): update region entry: this.customer.customerOrder.products=customer.customerOrder.products
DIR.java: updateRegion(): update region entry: this.customer.customerOrder.customer=customer.customerOrder.customer
DIR.java: updateRegion(): update region entry: this=Self
~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName


DIRRegionAnalyzer.java: handleSideEffects(): ith formal: customer
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.shakeel.model.Customer
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r7
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: customer
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: customer.customerOrder.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.shakeel.model.CustomerOrder
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r3
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.customerId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.firstName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.customerOrder
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.customerOrder.orderId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.customerOrder.total
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.customerOrder.products
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this.customer.customerOrder, this.customer.firstName, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerId, this.customer.lastName, this.customer.customerOrder.products, this.customer.customerOrder.customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: customer.customerOrder.customer
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [customer, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r7, $r3]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = setCustomer, [$r3.customer.customerId, $r3.customer.firstName, $r3.customer.lastName, $r3.customer.customerOrder, $r3.customer.customerOrder.orderId, $r3.customer.customerOrder.total, $r3.customer.customerOrder.products, $r3.customer.customerOrder.customer]
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: customer
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r7
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [customer.customerId, customer.firstName, customer.lastName, customer.customerOrder, customer.customerOrder.orderId, customer.customerOrder.total, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.customerOrder.customer.firstName, customer.customerOrder.customer.lastName, customer.customerOrder.customer.customerOrder]
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r3
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): after: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: handleSideEffects(): after: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r8 = new java.util.HashSet
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r8.<java.util.HashSet: void <init>()>()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r8.<java.util.HashSet: void <init>()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.util.HashSet: void <init>()

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = productSet = $r8
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2, type(v1, v2) = ptr
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: productSet
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r8
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: []
DIRRegionAnalyzer.java: constructDIR(): curUnit = total = productIds
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
Utils.java: getVarNode(): total
Utils.java: getVarNode(): LinkedVariableBox(total)
DIRRegionAnalyzer.java: constructDIR(): curUnit = l8 = lengthof productIds
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JLengthExpr
Utils.java: getVarNode(): l8
Utils.java: getVarNode(): LinkedVariableBox(l8)
DIRRegionAnalyzer.java: constructDIR(): curUnit = l9 = 0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.IntConstant
Utils.java: getVarNode(): l9
Utils.java: getVarNode(): LinkedVariableBox(l9)
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


DIR.java: updateRegion(): update region entry: $r7.lastName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIR.java: updateRegion(): update region entry: $r7.customerOrder.customer.firstName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
DIR.java: updateRegion(): update region entry: $r6.customerOrder.customer.firstName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
DIR.java: updateRegion(): update region entry: customerOrder.customer.customerId=$r3.customer.customerId
DIR.java: updateRegion(): update region entry: customer.customerId=BottomNode
DIR.java: updateRegion(): update region entry: $r0.firstName=firstName
DIR.java: updateRegion(): update region entry: $r6.customerOrder.total=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIR.java: updateRegion(): update region entry: customer.customerOrder=$r0.customerOrder
DIR.java: updateRegion(): update region entry: productSet=$r8
DIR.java: updateRegion(): update region entry: $r7.customerOrder.customer.customerId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
DIR.java: updateRegion(): update region entry: customerOrder.customer=$r3.customer
DIR.java: updateRegion(): update region entry: $r6.customerOrder=Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIR.java: updateRegion(): update region entry: $r3.customer.customerOrder.orderId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIR.java: updateRegion(): update region entry: customerOrder.orderId=BottomNode
DIR.java: updateRegion(): update region entry: $r3.customer.lastName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIR.java: updateRegion(): update region entry: $r7.firstName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIR.java: updateRegion(): update region entry: customerOrder.customer.customerOrder.orderId=$r3.customer.customerOrder.orderId
DIR.java: updateRegion(): update region entry: $r1=this.customerRepository
DIR.java: updateRegion(): update region entry: $r3.customer.customerId=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIR.java: updateRegion(): update region entry: $r7.customerOrder.products=Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIR.java: updateRegion(): update region entry: $r7.customerOrder=Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIR.java: updateRegion(): update region entry: $r4=Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
DIR.java: updateRegion(): update region entry: customer.customerOrder.total=$r0.customerOrder.total
DIR.java: updateRegion(): update region entry: customer.customerOrder.customer.lastName=$r0.customerOrder.customer.lastName
DIR.java: updateRegion(): update region entry: $r5=BottomNode
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $r6=Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
DIR.java: updateRegion(): update region entry: $r7=Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
DIR.java: updateRegion(): update region entry: customerOrder.total=BottomNode
DIR.java: updateRegion(): update region entry: $r8=BottomNode
DIR.java: updateRegion(): update region entry: customerOrder.customer.customerOrder.customer=$r3.customer.customerOrder.customer
DIR.java: updateRegion(): update region entry: $r3.customer.customerOrder=Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
DIR.java: updateRegion(): update region entry: customer.firstName=BottomNode
DIR.java: updateRegion(): update region entry: customer.customerOrder.orderId=$r0.customerOrder.orderId
DIR.java: updateRegion(): update region entry: customerOrder.customer.customerOrder.products=$r3.customer.customerOrder.products
DIR.java: updateRegion(): update region entry: $r6.customerOrder.customer=Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIR.java: updateRegion(): update region entry: $r3.orderId=BottomNode
DIR.java: updateRegion(): update region entry: $r6.customerId=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIR.java: updateRegion(): update region entry: $r6.customerOrder.customer.lastName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
DIR.java: updateRegion(): update region entry: customer.customerOrder.products=$r0.customerOrder.products
DIR.java: updateRegion(): update region entry: customer.customerOrder.customer=$r0.customerOrder.customer
DIR.java: updateRegion(): update region entry: customer.customerOrder.customer.customerId=$r0.customerOrder.customer.customerId
DIR.java: updateRegion(): update region entry: customer.lastName=BottomNode
DIR.java: updateRegion(): update region entry: customerOrder=$r3
DIR.java: updateRegion(): update region entry: $r6.customerOrder.products=Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIR.java: updateRegion(): update region entry: $r7.customerOrder.customer.customerOrder=$r6.customerOrder.customer.customerOrder
DIR.java: updateRegion(): update region entry: customerOrder.customer.customerOrder.total=$r3.customer.customerOrder.total
DIR.java: updateRegion(): update region entry: l8=lengthof productIds
DIR.java: updateRegion(): update region entry: this.customerRepository=Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
DIR.java: updateRegion(): update region entry: l9=0
DIR.java: updateRegion(): update region entry: $r6.customerOrder.orderId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIR.java: updateRegion(): update region entry: $r3.customer.customerOrder.customer=Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIR.java: updateRegion(): update region entry: total=productIds
DIR.java: updateRegion(): update region entry: $r0.customerId=BottomNode
DIR.java: updateRegion(): update region entry: customer.customerOrder.customer.customerOrder=$r0.customerOrder.customer.customerOrder
DIR.java: updateRegion(): update region entry: $r3.customer.customerOrder.products=Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
DIR.java: updateRegion(): update region entry: $r7.customerOrder.customer=Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
DIR.java: updateRegion(): update region entry: $r3.customer.customerOrder.total=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIR.java: updateRegion(): update region entry: $r6.lastName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
DIR.java: updateRegion(): update region entry: customer.customerOrder.customer.firstName=$r0.customerOrder.customer.firstName
DIR.java: updateRegion(): update region entry: $r3.total=BottomNode
DIR.java: updateRegion(): update region entry: customerOrder.customer.customerOrder=$r3.customer.customerOrder
DIR.java: updateRegion(): update region entry: customerOrder.customer.firstName=$r3.customer.firstName
DIR.java: updateRegion(): update region entry: $r7.customerOrder.total=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
DIR.java: updateRegion(): update region entry: $l0=BottomNode
DIR.java: updateRegion(): update region entry: $r0.lastName=lastName
DIR.java: updateRegion(): update region entry: customerOrder.customer.lastName=$r3.customer.lastName
DIR.java: updateRegion(): update region entry: $r7.customerOrder.customer.lastName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
DIR.java: updateRegion(): update region entry: customerOrder.products=$r3.products
DIR.java: updateRegion(): update region entry: $r3.customer.firstName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIR.java: updateRegion(): update region entry: $r7.customerId=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
DIR.java: updateRegion(): update region entry: $r6.firstName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
DIR.java: updateRegion(): update region entry: $r6.customerOrder.customer.customerId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
DIR.java: updateRegion(): update region entry: $r7.customerOrder.orderId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
DIR.java: updateRegion(): update region entry: customer=$r0
~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r7.lastName, $r7.customerOrder.customer.firstName, $r6.customerOrder.customer.firstName, customerOrder.customer.customerId, customer.customerId, $r0.firstName, $r6.customerOrder.total, customer.customerOrder, productSet, $r7.customerOrder.customer.customerId, customerOrder.customer, $r6.customerOrder, $r3.customer.customerOrder.orderId, customerOrder.orderId, $r3.customer.lastName, $r7.firstName, customerOrder.customer.customerOrder.orderId, $r1, $r3.customer.customerId, $r7.customerOrder.products, $r7.customerOrder, $r4, customer.customerOrder.total, customer.customerOrder.customer.lastName, $r5, this, $r6, $r7, customerOrder.total, $r8, customerOrder.customer.customerOrder.customer, $r3.customer.customerOrder, customer.firstName, customer.customerOrder.orderId, customerOrder.customer.customerOrder.products, $r6.customerOrder.customer, $r3.orderId, $r6.customerId, $r6.customerOrder.customer.lastName, customer.customerOrder.products, customer.customerOrder.customer, customer.customerOrder.customer.customerId, customer.lastName, customerOrder, $r6.customerOrder.products, $r7.customerOrder.customer.customerOrder, customerOrder.customer.customerOrder.total, l8, this.customerRepository, l9, $r6.customerOrder.orderId, $r3.customer.customerOrder.customer, total, $r0.customerId, customer.customerOrder.customer.customerOrder, $r3.customer.customerOrder.products, $r7.customerOrder.customer, $r3.customer.customerOrder.total, $r6.lastName, customer.customerOrder.customer.firstName, $r3.total, customerOrder.customer.customerOrder, customerOrder.customer.firstName, $r7.customerOrder.total, $l0, $r0.lastName, customerOrder.customer.lastName, $r7.customerOrder.customer.lastName, customerOrder.products, $r3.customer.firstName, $r7.customerId, $r6.firstName, $r6.customerOrder.customer.customerId, $r7.customerOrder.orderId, customer]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r7.lastName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName, $r7.customerOrder.customer.firstName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName), $r6.customerOrder.customer.firstName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName), customerOrder.customer.customerId=$r3.customer.customerId, customer.customerId=BottomNode, $r0.firstName=firstName, $r6.customerOrder.total=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total), customer.customerOrder=$r0.customerOrder, productSet=$r8, $r7.customerOrder.customer.customerId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId), customerOrder.customer=$r3.customer, $r6.customerOrder=Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp, $r3.customer.customerOrder.orderId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId), customerOrder.orderId=BottomNode, $r3.customer.lastName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName, $r7.firstName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName, customerOrder.customer.customerOrder.orderId=$r3.customer.customerOrder.orderId, $r1=this.customerRepository, $r3.customer.customerId=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId, $r7.customerOrder.products=Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp, $r7.customerOrder=Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp, $r4=Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName, customer.customerOrder.total=$r0.customerOrder.total, customer.customerOrder.customer.lastName=$r0.customerOrder.customer.lastName, $r5=BottomNode, this=Self, $r6=Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode, $r7=Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode, customerOrder.total=BottomNode, $r8=BottomNode, customerOrder.customer.customerOrder.customer=$r3.customer.customerOrder.customer, $r3.customer.customerOrder=Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp, customer.firstName=BottomNode, customer.customerOrder.orderId=$r0.customerOrder.orderId, customerOrder.customer.customerOrder.products=$r3.customer.customerOrder.products, $r6.customerOrder.customer=Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp, $r3.orderId=BottomNode, $r6.customerId=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId, $r6.customerOrder.customer.lastName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName), customer.customerOrder.products=$r0.customerOrder.products, customer.customerOrder.customer=$r0.customerOrder.customer, customer.customerOrder.customer.customerId=$r0.customerOrder.customer.customerId, customer.lastName=BottomNode, customerOrder=$r3, $r6.customerOrder.products=Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp, $r7.customerOrder.customer.customerOrder=$r6.customerOrder.customer.customerOrder, customerOrder.customer.customerOrder.total=$r3.customer.customerOrder.total, l8=lengthof productIds, this.customerRepository=Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName, l9=0, $r6.customerOrder.orderId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId), $r3.customer.customerOrder.customer=Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp, total=productIds, $r0.customerId=BottomNode, customer.customerOrder.customer.customerOrder=$r0.customerOrder.customer.customerOrder, $r3.customer.customerOrder.products=Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp, $r7.customerOrder.customer=Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp, $r3.customer.customerOrder.total=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total), $r6.lastName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName, customer.customerOrder.customer.firstName=$r0.customerOrder.customer.firstName, $r3.total=BottomNode, customerOrder.customer.customerOrder=$r3.customer.customerOrder, customerOrder.customer.firstName=$r3.customer.firstName, $r7.customerOrder.total=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total), $l0=BottomNode, $r0.lastName=lastName, customerOrder.customer.lastName=$r3.customer.lastName, $r7.customerOrder.customer.lastName=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName), customerOrder.products=$r3.products, $r3.customer.firstName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName, $r7.customerId=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId, $r6.firstName=Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName, $r6.customerOrder.customer.customerId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId), $r7.customerOrder.orderId=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId), customer=$r0}
analysis/Utils.java: mergeSeqDirs(): key: $r7.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.customer.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder.customer.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.customerId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.customerId
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.customerId
analysis/Utils.java: mergeSeqDirs(): key: customer.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: $r0.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: firstName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: firstName
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder
analysis/Utils.java: mergeSeqDirs(): key: productSet
analysis/Utils.java: mergeSeqDirs(): before resolution: $r8
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r8
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r8
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.customer.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| orderId
| total
| CustomerOrder.products=Pi
| | Join
| | | Alpha
| | | ClassRef(Product)
| | | Equals
| | | | Alpha.productId
| | | | Product.orderId
| | List
| | | productId
| | | productName
| | | productPrice
| | | orderId
| CustomerOrder.customer=Pi
| | Join
| | | Alpha
| | | ClassRef(Customer)
| | | Equals
| | | | Alpha.orderId
| | | | Customer.customerId
| | List
| | | customerId
| | | firstName
| | | lastName
| | | Customer.customerOrder=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(CustomerOrder)
| | | | | Equals
| | | | | | Alpha.customerId
| | | | | | CustomerOrder.orderId
| | | | List
| | | | | orderId
| | | | | total
| | | | | NullOp
| | | | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| orderId
| total
| CustomerOrder.products=Pi
| | Join
| | | Alpha
| | | ClassRef(Product)
| | | Equals
| | | | Alpha.productId
| | | | Product.orderId
| | List
| | | productId
| | | productName
| | | productPrice
| | | orderId
| CustomerOrder.customer=Pi
| | Join
| | | Alpha
| | | ClassRef(Customer)
| | | Equals
| | | | Alpha.orderId
| | | | Customer.customerId
| | List
| | | customerId
| | | firstName
| | | lastName
| | | Customer.customerOrder=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(CustomerOrder)
| | | | | Equals
| | | | | | Alpha.customerId
| | | | | | CustomerOrder.orderId
| | | | List
| | | | | orderId
| | | | | total
| | | | | NullOp
| | | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:total
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:CustomerOrder.products=Pi
| Join
| | Alpha
| | ClassRef(Product)
| | Equals
| | | Alpha.productId
| | | Product.orderId
| List
| | productId
| | productName
| | productPrice
| | orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:CustomerOrder.customer=Pi
| Join
| | Alpha
| | ClassRef(Customer)
| | Equals
| | | Alpha.orderId
| | | Customer.customerId
| List
| | customerId
| | firstName
| | lastName
| | Customer.customerOrder=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(CustomerOrder)
| | | | Equals
| | | | | Alpha.customerId
| | | | | CustomerOrder.orderId
| | | List
| | | | orderId
| | | | total
| | | | NullOp
| | | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.customer=Pi
| Join
| | Alpha
| | ClassRef(Customer)
| | Equals
| | | Alpha.orderId
| | | Customer.customerId
| List
| | customerId
| | firstName
| | lastName
| | Customer.customerOrder=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(CustomerOrder)
| | | | Equals
| | | | | Alpha.customerId
| | | | | CustomerOrder.orderId
| | | List
| | | | orderId
| | | | total
| | | | NullOp
| | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(Customer)
| Equals
| | Alpha.orderId
| | Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| customerId
| firstName
| lastName
| Customer.customerOrder=Pi
| | Join
| | | Alpha
| | | ClassRef(CustomerOrder)
| | | Equals
| | | | Alpha.customerId
| | | | CustomerOrder.orderId
| | List
| | | orderId
| | | total
| | | NullOp
| | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| customerId
| firstName
| lastName
| Customer.customerOrder=Pi
| | Join
| | | Alpha
| | | ClassRef(CustomerOrder)
| | | Equals
| | | | Alpha.customerId
| | | | CustomerOrder.orderId
| | List
| | | orderId
| | | total
| | | NullOp
| | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Customer.customerOrder=Pi
| Join
| | Alpha
| | ClassRef(CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | NullOp
| | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerOrder=Pi
| Join
| | Alpha
| | ClassRef(CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | NullOp
| | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| orderId
| total
| NullOp
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| orderId
| total
| NullOp
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:total
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: total
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(Customer)
| Equals
| | Alpha.orderId
| | Customer.customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(Customer)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.orderId
| Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.orderId
| Customer.customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Customer)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.products=Pi
| Join
| | Alpha
| | ClassRef(Product)
| | Equals
| | | Alpha.productId
| | | Product.orderId
| List
| | productId
| | productName
| | productPrice
| | orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(Product)
| Equals
| | Alpha.productId
| | Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| productId
| productName
| productPrice
| orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| productId
| productName
| productPrice
| orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:productId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:productName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:productPrice
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productPrice
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(Product)
| Equals
| | Alpha.productId
| | Product.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(Product)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.productId
| Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.productId
| Product.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.productId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Product.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.productId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Product)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: total
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: mergeSeqDirs(): key: $r7.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.customerOrder.orderId
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): key: $r1
analysis/Utils.java: mergeSeqDirs(): before resolution: this.customerRepository
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: this.customerRepository
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: this.customerRepository
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): before resolution: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.Product)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.Product)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| orderId
| total
| CustomerOrder.products=Pi
| | Join
| | | Alpha
| | | ClassRef(Product)
| | | Equals
| | | | Alpha.productId
| | | | Product.orderId
| | List
| | | productId
| | | productName
| | | productPrice
| | | orderId
| CustomerOrder.customer=Pi
| | Join
| | | Alpha
| | | ClassRef(Customer)
| | | Equals
| | | | Alpha.orderId
| | | | Customer.customerId
| | List
| | | customerId
| | | firstName
| | | lastName
| | | Customer.customerOrder=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(CustomerOrder)
| | | | | Equals
| | | | | | Alpha.customerId
| | | | | | CustomerOrder.orderId
| | | | List
| | | | | orderId
| | | | | total
| | | | | NullOp
| | | | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| orderId
| total
| CustomerOrder.products=Pi
| | Join
| | | Alpha
| | | ClassRef(Product)
| | | Equals
| | | | Alpha.productId
| | | | Product.orderId
| | List
| | | productId
| | | productName
| | | productPrice
| | | orderId
| CustomerOrder.customer=Pi
| | Join
| | | Alpha
| | | ClassRef(Customer)
| | | Equals
| | | | Alpha.orderId
| | | | Customer.customerId
| | List
| | | customerId
| | | firstName
| | | lastName
| | | Customer.customerOrder=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(CustomerOrder)
| | | | | Equals
| | | | | | Alpha.customerId
| | | | | | CustomerOrder.orderId
| | | | List
| | | | | orderId
| | | | | total
| | | | | NullOp
| | | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:total
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:CustomerOrder.products=Pi
| Join
| | Alpha
| | ClassRef(Product)
| | Equals
| | | Alpha.productId
| | | Product.orderId
| List
| | productId
| | productName
| | productPrice
| | orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:CustomerOrder.customer=Pi
| Join
| | Alpha
| | ClassRef(Customer)
| | Equals
| | | Alpha.orderId
| | | Customer.customerId
| List
| | customerId
| | firstName
| | lastName
| | Customer.customerOrder=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(CustomerOrder)
| | | | Equals
| | | | | Alpha.customerId
| | | | | CustomerOrder.orderId
| | | List
| | | | orderId
| | | | total
| | | | NullOp
| | | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.customer=Pi
| Join
| | Alpha
| | ClassRef(Customer)
| | Equals
| | | Alpha.orderId
| | | Customer.customerId
| List
| | customerId
| | firstName
| | lastName
| | Customer.customerOrder=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(CustomerOrder)
| | | | Equals
| | | | | Alpha.customerId
| | | | | CustomerOrder.orderId
| | | List
| | | | orderId
| | | | total
| | | | NullOp
| | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(Customer)
| Equals
| | Alpha.orderId
| | Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| customerId
| firstName
| lastName
| Customer.customerOrder=Pi
| | Join
| | | Alpha
| | | ClassRef(CustomerOrder)
| | | Equals
| | | | Alpha.customerId
| | | | CustomerOrder.orderId
| | List
| | | orderId
| | | total
| | | NullOp
| | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| customerId
| firstName
| lastName
| Customer.customerOrder=Pi
| | Join
| | | Alpha
| | | ClassRef(CustomerOrder)
| | | Equals
| | | | Alpha.customerId
| | | | CustomerOrder.orderId
| | List
| | | orderId
| | | total
| | | NullOp
| | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Customer.customerOrder=Pi
| Join
| | Alpha
| | ClassRef(CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | NullOp
| | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerOrder=Pi
| Join
| | Alpha
| | ClassRef(CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | NullOp
| | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| orderId
| total
| NullOp
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| orderId
| total
| NullOp
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:total
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: total
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(Customer)
| Equals
| | Alpha.orderId
| | Customer.customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(Customer)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.orderId
| Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.orderId
| Customer.customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Customer)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.products=Pi
| Join
| | Alpha
| | ClassRef(Product)
| | Equals
| | | Alpha.productId
| | | Product.orderId
| List
| | productId
| | productName
| | productPrice
| | orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(Product)
| Equals
| | Alpha.productId
| | Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| productId
| productName
| productPrice
| orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| productId
| productName
| productPrice
| orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:productId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:productName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:productPrice
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productPrice
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(Product)
| Equals
| | Alpha.productId
| | Product.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(Product)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.productId
| Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.productId
| Product.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.productId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Product.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.productId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Product)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: total
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r4
analysis/Utils.java: mergeSeqDirs(): before resolution: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:$r1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Tuple
| $r0
| List
| | BottomNode
| | firstName
| | lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Tuple
| $r0
| List
| | BottomNode
| | firstName
| | lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:$r0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| BottomNode
| firstName
| lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| BottomNode
| firstName
| lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r1
analysis/Utils.java: resolveTree(): out: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.total
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.customer.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.customer.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.customer.lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.customer.lastName
analysis/Utils.java: mergeSeqDirs(): key: $r5
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: this
analysis/Utils.java: mergeSeqDirs(): before resolution: Self
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Self
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: Self
analysis/Utils.java: mergeSeqDirs(): key: $r6
analysis/Utils.java: mergeSeqDirs(): before resolution: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: mergeSeqDirs(): key: $r7
analysis/Utils.java: mergeSeqDirs(): before resolution: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.total
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: $r8
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.customerOrder.customer
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| orderId
| total
| CustomerOrder.products=Pi
| | Join
| | | Alpha
| | | ClassRef(Product)
| | | Equals
| | | | Alpha.productId
| | | | Product.orderId
| | List
| | | productId
| | | productName
| | | productPrice
| | | orderId
| CustomerOrder.customer=Pi
| | Join
| | | Alpha
| | | ClassRef(Customer)
| | | Equals
| | | | Alpha.orderId
| | | | Customer.customerId
| | List
| | | customerId
| | | firstName
| | | lastName
| | | Customer.customerOrder=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(CustomerOrder)
| | | | | Equals
| | | | | | Alpha.customerId
| | | | | | CustomerOrder.orderId
| | | | List
| | | | | orderId
| | | | | total
| | | | | NullOp
| | | | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| orderId
| total
| CustomerOrder.products=Pi
| | Join
| | | Alpha
| | | ClassRef(Product)
| | | Equals
| | | | Alpha.productId
| | | | Product.orderId
| | List
| | | productId
| | | productName
| | | productPrice
| | | orderId
| CustomerOrder.customer=Pi
| | Join
| | | Alpha
| | | ClassRef(Customer)
| | | Equals
| | | | Alpha.orderId
| | | | Customer.customerId
| | List
| | | customerId
| | | firstName
| | | lastName
| | | Customer.customerOrder=Pi
| | | | Join
| | | | | Alpha
| | | | | ClassRef(CustomerOrder)
| | | | | Equals
| | | | | | Alpha.customerId
| | | | | | CustomerOrder.orderId
| | | | List
| | | | | orderId
| | | | | total
| | | | | NullOp
| | | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:total
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:CustomerOrder.products=Pi
| Join
| | Alpha
| | ClassRef(Product)
| | Equals
| | | Alpha.productId
| | | Product.orderId
| List
| | productId
| | productName
| | productPrice
| | orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:CustomerOrder.customer=Pi
| Join
| | Alpha
| | ClassRef(Customer)
| | Equals
| | | Alpha.orderId
| | | Customer.customerId
| List
| | customerId
| | firstName
| | lastName
| | Customer.customerOrder=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(CustomerOrder)
| | | | Equals
| | | | | Alpha.customerId
| | | | | CustomerOrder.orderId
| | | List
| | | | orderId
| | | | total
| | | | NullOp
| | | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.customer=Pi
| Join
| | Alpha
| | ClassRef(Customer)
| | Equals
| | | Alpha.orderId
| | | Customer.customerId
| List
| | customerId
| | firstName
| | lastName
| | Customer.customerOrder=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(CustomerOrder)
| | | | Equals
| | | | | Alpha.customerId
| | | | | CustomerOrder.orderId
| | | List
| | | | orderId
| | | | total
| | | | NullOp
| | | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(Customer)
| Equals
| | Alpha.orderId
| | Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| customerId
| firstName
| lastName
| Customer.customerOrder=Pi
| | Join
| | | Alpha
| | | ClassRef(CustomerOrder)
| | | Equals
| | | | Alpha.customerId
| | | | CustomerOrder.orderId
| | List
| | | orderId
| | | total
| | | NullOp
| | | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| customerId
| firstName
| lastName
| Customer.customerOrder=Pi
| | Join
| | | Alpha
| | | ClassRef(CustomerOrder)
| | | Equals
| | | | Alpha.customerId
| | | | CustomerOrder.orderId
| | List
| | | orderId
| | | total
| | | NullOp
| | | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:Customer.customerOrder=Pi
| Join
| | Alpha
| | ClassRef(CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | NullOp
| | NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerOrder=Pi
| Join
| | Alpha
| | ClassRef(CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | NullOp
| | NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| orderId
| total
| NullOp
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| orderId
| total
| NullOp
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:total
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: total
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(Customer)
| Equals
| | Alpha.orderId
| | Customer.customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(Customer)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.orderId
| Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.orderId
| Customer.customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Customer.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Customer.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Customer)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.products=Pi
| Join
| | Alpha
| | ClassRef(Product)
| | Equals
| | | Alpha.productId
| | | Product.orderId
| List
| | productId
| | productName
| | productPrice
| | orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Alpha
| ClassRef(Product)
| Equals
| | Alpha.productId
| | Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| productId
| productName
| productPrice
| orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| productId
| productName
| productPrice
| orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:productId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:productName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:productPrice
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productPrice
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Alpha
| ClassRef(Product)
| Equals
| | Alpha.productId
| | Product.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(Product)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.productId
| Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.productId
| Product.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.productId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Product.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Product.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.productId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(Product)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: total
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| Equals
| | Alpha.customerId
| | CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| Alpha.customerId
| CustomerOrder.orderId
analysis/Utils.java: resolveTree(): i = 0 child of top:Alpha.customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: CustomerOrder.orderId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Alpha.customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp
analysis/Utils.java: mergeSeqDirs(): key: customer.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.orderId
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.customerOrder.products
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): before resolution: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r3.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder.customer.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.products
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.customer
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.customer.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.customer.customerId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.customer.customerId
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.customer.customerId
analysis/Utils.java: mergeSeqDirs(): key: customer.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): before resolution: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.Product)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.Product)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: $r6.customerOrder.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r6.customerOrder.customer.customerOrder
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r6.customerOrder.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.customerOrder.total
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): key: l8
analysis/Utils.java: mergeSeqDirs(): before resolution: lengthof productIds
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: lengthof productIds
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: lengthof productIds
analysis/Utils.java: mergeSeqDirs(): key: this.customerRepository
analysis/Utils.java: mergeSeqDirs(): before resolution: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:$r1
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Tuple
| $r0
| List
| | BottomNode
| | firstName
| | lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Tuple
| $r0
| List
| | BottomNode
| | firstName
| | lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:$r0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| BottomNode
| firstName
| lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| BottomNode
| firstName
| lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r1
analysis/Utils.java: resolveTree(): out: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName
analysis/Utils.java: mergeSeqDirs(): key: l9
analysis/Utils.java: mergeSeqDirs(): before resolution: 0
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: 0
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: 0
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): before resolution: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: total
analysis/Utils.java: mergeSeqDirs(): before resolution: productIds
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: productIds
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: productIds
analysis/Utils.java: mergeSeqDirs(): key: $r0.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.customer.customerOrder
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.customerOrder.products
analysis/Utils.java: mergeSeqDirs(): before resolution: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.Product)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.Product)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.customer
analysis/Utils.java: mergeSeqDirs(): before resolution: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: mergeSeqDirs(): key: $r6.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName
analysis/Utils.java: mergeSeqDirs(): key: customer.customerOrder.customer.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0.customerOrder.customer.firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0.customerOrder.customer.firstName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0.customerOrder.customer.firstName
analysis/Utils.java: mergeSeqDirs(): key: $r3.total
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.customerOrder
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.customerOrder
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.firstName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.firstName
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.total
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)
analysis/Utils.java: mergeSeqDirs(): key: $l0
analysis/Utils.java: mergeSeqDirs(): before resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: BottomNode
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: BottomNode
analysis/Utils.java: mergeSeqDirs(): key: $r0.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: lastName
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.customer.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.customer.lastName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.customer.lastName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.customer.lastName
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.customer.lastName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)
analysis/Utils.java: mergeSeqDirs(): key: customerOrder.products
analysis/Utils.java: mergeSeqDirs(): before resolution: $r3.products
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r3.products
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r3.products
analysis/Utils.java: mergeSeqDirs(): key: $r3.customer.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:customerId
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: customerId
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId
analysis/Utils.java: mergeSeqDirs(): key: $r6.firstName
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:firstName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: firstName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName
analysis/Utils.java: mergeSeqDirs(): key: $r6.customerOrder.customer.customerId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)
analysis/Utils.java: mergeSeqDirs(): key: $r7.customerOrder.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): i = 0 child of top:Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp
analysis/Utils.java: resolveTree(): i = 0 child of top:Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:NullOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NullOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.model.CustomerOrder)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Equals
| FieldRef(com.shakeel.model.Customer.id)
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Customer.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.CustomerRepository)
analysis/Utils.java: resolveTree(): out: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)
analysis/Utils.java: mergeSeqDirs(): key: customer
analysis/Utils.java: mergeSeqDirs(): before resolution: $r0
analysis/Utils.java: mergeSeqDirs(): precedingDIR: 
analysis/Utils.java: resolveTree(): in: $r0
analysis/Utils.java: resolveTree(): dir: 
analysis/Utils.java: mergeSeqDirs(): after resolution: $r0
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | BasicBlock0
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.LoopRegion
DIRLoopRegionAnalyzer.java: constructDIR(): Analyzing loop head
ARegion.java: analyze(): set cur method of analyzer to: saveOrder
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 1
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof productIds, l9 = 0, if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), productId = productIds[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof productIds, productId = 0, if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = productIds[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3), $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
DIRRegionAnalyzer.java: constructDIR(): curUnit = if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8)
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()l9 >= l8
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ condition ~~~
<
| l9
| l8


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ condition ~~~
<
| l9
| l8


DIR.java: updateRegion(): update region entry: condition=<
| l9
| l8
~~~ condition ~~~
<
| l9
| l8


DIRLoopRegionAnalyzer.java: constructDIR(): Analyzing loop body
ARegion.java: analyze(): set cur method of analyzer to: saveOrder
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 2
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof productIds, l9 = 0, if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), productId = productIds[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof productIds, productId = 0, if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = productIds[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3), $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
DIRRegionAnalyzer.java: constructDIR(): curUnit = productId = productIds[l9]
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JArrayRef
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r17 -> this.productRepository
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findOne
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Object: java.lang.Object findOne(java.io.Serializable)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>
construct/Utils.java: parseObjectInvoke(): methodName = findOne
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
construct/Utils.java: parseObjectInvoke(): repostr in findOne case: com.shakeel.repository.ProductRepository
construct/Utils.java: parseObjectInvoke(): entity for repo in findOne case: com.shakeel.model.Product
construct/Utils.java: parseObjectInvoke(): entity class findOne case: com.shakeel.model.Product
construct/Utils.java: parseObjectInvoke(): check 1 =Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
cosntruct/utils.java: mapDBFetchAccessGraph(): check relExpBaseAccp= Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
cosntruct/utils.java: mapDBFetchAccessGraph(): prim fields = [<com.shakeel.model.Product: java.lang.Long productId>, <com.shakeel.model.Product: java.lang.String productName>, <com.shakeel.model.Product: java.lang.Double productPrice>, <com.shakeel.model.Product: java.lang.Long orderId>]
cosntruct/utils.java: mapDBFetchAccessGraph(): oneToOne fields= []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyToOne fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): collection fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyTomany fields = []
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r18
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: constructDIR(): left type = java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): method sig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{com.shakeel.model.Customer: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, java.lang.Object: java.lang.Object findOne(java.io.Serializable)=~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId

~~~ return.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId

~~~ return.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId

~~~ return.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName

~~~ return.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice

, com.shakeel.model.Customer: long getCustomerId()=~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self

, com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)=~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName

, com.shakeel.model.Customer: void setFirstName(java.lang.String)=~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId

~~~ return.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId

~~~ return.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId

~~~ return.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName

~~~ return.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: []
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): leftType = com.shakeel.model.Product
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findOne
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: com.shakeel.model.Product fields = [<com.shakeel.model.Product: java.lang.Long productId>, <com.shakeel.model.Product: java.lang.String productName>, <com.shakeel.model.Product: java.lang.Double productPrice>, <com.shakeel.model.Product: java.lang.Long orderId>]
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Long productId>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.String productName>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Double productPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Long orderId>  type=FieldData
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r18, com.shakeel.model.Product
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r18.productId, $r18.productName, $r18.productPrice, $r18.orderId]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [com.shakeel.model.Customer: void setLastName(java.lang.String), java.lang.Object: java.lang.Object findOne(java.io.Serializable), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String)]
DIRRegionAnalyzer.java: constructDIR(): callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
Flatten.java: getNestedFields(): LVAL TYPE: com.shakeel.model.Product
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.Long productId> = java.lang.Long
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId

]
Flatten.java: getNestedFields(): Id fields=productId
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.String productName> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productName

]
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.Double productPrice> = java.lang.Double
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productPrice

]
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.Long orderId> = java.lang.Long
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
Flatten.java: getNestedFields(): returning: []
DIRRegionAnalyzer.java: constructDIR(): check nestedFields=[]
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): key = return.productName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName
DIRRegionAnalyzer.java: constructDIR(): key = return.orderId
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId
DIRRegionAnalyzer.java: constructDIR(): key = return.productId
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId
DIRRegionAnalyzer.java: constructDIR(): key = return.productPrice
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable) END
DIRRegionAnalyzer.java: constructDIR(): v1 access paths: [$r18.productId, $r18.productName, $r18.productPrice, $r18.orderId]
DIRRegionAnalyzer.java: constructDIR(): key = $r18.productId
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.productId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9
DIRRegionAnalyzer.java: constructDIR(): key = $r18.productName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.productName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName
DIRRegionAnalyzer.java: constructDIR(): key = $r18.productPrice
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.productPrice
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice
DIRRegionAnalyzer.java: constructDIR(): key = $r18.orderId
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.orderId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r19 = (com.shakeel.model.Product) $r18
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JCastExpr
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = (type1) v2
DIRRegionAnalyzer.java: constructDIR(): type1: com.shakeel.model.Product
DIRRegionAnalyzer.java: constructDIR(): castExpr: (com.shakeel.model.Product) $r18
DIRRegionAnalyzer.java: constructDIR(): v2: $r18
DIRRegionAnalyzer.java: constructDIR(): cur dir: {$r18.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9, productId=ArrayRef
| productIds
| l9, $r18.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName, $r17=this.productRepository, $r18=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9, $r18.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice, $r18.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId}
DIRRegionAnalyzer.java: constructDIR(): rightVar in dir: true
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): v1 and v2 have diff types
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v1) = com.shakeel.model.Product
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v2) = java.lang.Object
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: $r19
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r18
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [Product.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
]
AccessPath.java: replaceBase(): input access path: $r19.productId
AccessPath.java: replaceBase(): replacement of base: $r18
AccessPath.java: replaceBase(): input access path: $r19.productName
AccessPath.java: replaceBase(): replacement of base: $r18
AccessPath.java: replaceBase(): input access path: $r19.productPrice
AccessPath.java: replaceBase(): replacement of base: $r18
AccessPath.java: replaceBase(): input access path: $r19.orderId
AccessPath.java: replaceBase(): replacement of base: $r18
DIRRegionAnalyzer.java: constructDIR(): curUnit = interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19)
DIRRegionAnalyzer.java: constructDIR(): curUnit = l9 = l9 + 1
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JAddExpr
Utils.java: getVarNode(): l9
Utils.java: getVarNode(): LinkedVariableBox(l9)
DIRRegionAnalyzer.java: constructDIR(): curUnit = goto [?= (branch)]
DIRRegionAnalyzer.java: constructDIR(): GOTO stmt in seq region
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r17 ~~~
this.productRepository

~~~ $r18 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9

~~~ $r18.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId

~~~ $r18.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9

~~~ $r18.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName

~~~ $r18.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice

~~~ $r19 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9

~~~ $r19.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId

~~~ $r19.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9

~~~ $r19.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName

~~~ $r19.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice

~~~ $r8 ~~~
AddWithFieldExprs
| $r8
| Tuple
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | ArrayRef
| | | | | productIds
| | | | | l9
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)

~~~ l9 ~~~
+
| l9
| 1

~~~ productId ~~~
ArrayRef
| productIds
| l9


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r17 ~~~
this.productRepository

~~~ $r18 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9

~~~ $r18.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId

~~~ $r18.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9

~~~ $r18.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName

~~~ $r18.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice

~~~ $r19 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9

~~~ $r19.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId

~~~ $r19.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9

~~~ $r19.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName

~~~ $r19.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice

~~~ $r8 ~~~
AddWithFieldExprs
| $r8
| Tuple
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | ArrayRef
| | | | | productIds
| | | | | l9
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)

~~~ l9 ~~~
+
| l9
| 1

~~~ productId ~~~
ArrayRef
| productIds
| l9


DIR.java: updateRegion(): update region entry: $r18.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9
DIR.java: updateRegion(): update region entry: productId=ArrayRef
| productIds
| l9
DIR.java: updateRegion(): update region entry: $r19=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9
DIR.java: updateRegion(): update region entry: $r19.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9
DIR.java: updateRegion(): update region entry: $r17=this.productRepository
DIR.java: updateRegion(): update region entry: $r18=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9
DIR.java: updateRegion(): update region entry: $r8=AddWithFieldExprs
| $r8
| Tuple
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | ArrayRef
| | | | | productIds
| | | | | l9
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
DIR.java: updateRegion(): update region entry: $r18.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId
DIR.java: updateRegion(): update region entry: l9=+
| l9
| 1
DIR.java: updateRegion(): update region entry: $r19.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId
DIR.java: updateRegion(): update region entry: $r18.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName
DIR.java: updateRegion(): update region entry: $r18.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice
DIR.java: updateRegion(): update region entry: $r19.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName
DIR.java: updateRegion(): update region entry: $r19.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice
~~~ $r17 ~~~
this.productRepository

~~~ $r18 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9

~~~ $r18.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId

~~~ $r18.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9

~~~ $r18.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName

~~~ $r18.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice

~~~ $r19 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9

~~~ $r19.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId

~~~ $r19.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9

~~~ $r19.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName

~~~ $r19.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice

~~~ $r8 ~~~
AddWithFieldExprs
| $r8
| Tuple
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | ArrayRef
| | | | | productIds
| | | | | l9
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)

~~~ l9 ~~~
+
| l9
| 1

~~~ productId ~~~
ArrayRef
| productIds
| l9


DIRLoopRegionAnalyzer.java: constructDIR(): Done with analyzing loop body
DIRLoopRegionAnalyzer.java: constructDIR(): bodyVEMap: {$r18.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9, productId=ArrayRef
| productIds
| l9, $r19=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9, $r19.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| ArrayRef
| | productIds
| | l9, $r17=this.productRepository, $r18=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | l9, $r8=AddWithFieldExprs
| $r8
| Tuple
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | ArrayRef
| | | | | productIds
| | | | | l9
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId), $r18.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId, l9=+
| l9
| 1, $r19.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| orderId, $r18.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName, $r18.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice, $r19.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productName, $r19.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | l9
| productPrice}
DIRLoopRegionAnalyzer.java: constructDIR(): headVEMap: {condition=<
| l9
| l8}
DIRLoopRegionAnalyzer.java: constructDIR(): headR: | BasicBlock1
{com.shakeel.model.Customer: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, java.lang.Object: java.lang.Object findOne(java.io.Serializable)=~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId

~~~ return.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId

~~~ return.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId

~~~ return.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName

~~~ return.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice

, com.shakeel.model.Customer: long getCustomerId()=~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self

, com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)=~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName

, com.shakeel.model.Customer: void setFirstName(java.lang.String)=~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName

}
DIRLoopRegionAnalyzer.java: getLoopingCol(): headDIR: ~~~ condition ~~~
<
| l9
| l8


DIRLoopRegionAnalyzer.java: constructDIR(): loopingVar: productIds
DIRLoopRegionAnalyzer.java: constructDIR(): foldVars: [$r18.productId, productId, $r19, $r19.productId, $r17, $r18, $r8, $r18.orderId, l9, $r19.orderId, $r18.productName, $r18.productPrice, $r19.productName, $r19.productPrice]
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r18.productId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| NextOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: productId
[$r8]
Body_Expr:
NextOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r19
[$r8]
Body_Expr:
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | NextOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r19.productId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| NextOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r17
[$r8]
Body_Expr:
this.productRepository
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r18
[$r8]
Body_Expr:
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | NextOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r8
[$r8]
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r18.orderId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| orderId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: l9
[$r8]
Body_Expr:
+
| <v9>
| 1
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r19.orderId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| orderId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r18.productName
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| productName
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r18.productPrice
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| productPrice
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r19.productName
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| productName
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r19.productPrice
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | NextOp
| productPrice
DIRLoopRegionAnalyzer.java: constructDIR(): loopDIR: {$r18.productId=UnknownNode, productId=UnknownNode, $r19=UnknownNode, $r19.productId=UnknownNode, $r17=UnknownNode, $r18=UnknownNode, $r8=UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8, $r18.orderId=UnknownNode, l9=UnknownNode, $r19.orderId=UnknownNode, $r18.productName=UnknownNode, $r18.productPrice=UnknownNode, $r19.productName=UnknownNode, $r19.productPrice=UnknownNode}
{}
AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode


DIR.java: updateRegion(): update region entry: $r18.productId=UnknownNode
DIR.java: updateRegion(): update region entry: productId=UnknownNode
DIR.java: updateRegion(): update region entry: $r19=UnknownNode
DIR.java: updateRegion(): update region entry: $r19.productId=UnknownNode
DIR.java: updateRegion(): update region entry: $r17=UnknownNode
DIR.java: updateRegion(): update region entry: $r18=UnknownNode
DIR.java: updateRegion(): update region entry: $r8=UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8
DIR.java: updateRegion(): update region entry: $r18.orderId=UnknownNode
DIR.java: updateRegion(): update region entry: l9=UnknownNode
DIR.java: updateRegion(): update region entry: $r19.orderId=UnknownNode
DIR.java: updateRegion(): update region entry: $r18.productName=UnknownNode
DIR.java: updateRegion(): update region entry: $r18.productPrice=UnknownNode
DIR.java: updateRegion(): update region entry: $r19.productName=UnknownNode
DIR.java: updateRegion(): update region entry: $r19.productPrice=UnknownNode
~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode


{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r18.productId, productId, $r19, $r19.productId, $r17, $r18, $r8, $r18.orderId, l9, $r19.orderId, $r18.productName, $r18.productPrice, $r19.productName, $r19.productPrice]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r18.productId=UnknownNode, productId=UnknownNode, $r19=UnknownNode, $r19.productId=UnknownNode, $r17=UnknownNode, $r18=UnknownNode, $r8=UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8, $r18.orderId=UnknownNode, l9=UnknownNode, $r19.orderId=UnknownNode, $r18.productName=UnknownNode, $r18.productPrice=UnknownNode, $r19.productName=UnknownNode, $r19.productPrice=UnknownNode}
analysis/Utils.java: mergeSeqDirs(): key: $r18.productId
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: productId
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r19
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r19.productId
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r17
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r18
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r8
analysis/Utils.java: mergeSeqDirs(): before resolution: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8
analysis/Utils.java: resolveTree(): i = 0 child of top:Pi
| List
| | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r8
analysis/Utils.java: resolveTree(): top: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| $r8
analysis/Utils.java: resolveTree(): resolvedValChild: BottomNode
analysis/Utils.java: resolveTree(): new top: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode
analysis/Utils.java: resolveTree(): newChildValueList.size(): 1
analysis/Utils.java: resolveTree(): newChildValueList: [1=BottomNode]
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Pi
| List
| | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
analysis/Utils.java: resolveTree(): i = 0 child of top:List
| FieldRef(com.shakeel.repository.ProductRepository.productId)
| FieldRef(com.shakeel.repository.ProductRepository.productName)
| FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| FieldRef(com.shakeel.repository.ProductRepository.orderId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| IN
| | FieldRef(com.shakeel.model.Product.id)
| | productIds
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| IN
| | FieldRef(com.shakeel.model.Product.id)
| | productIds
analysis/Utils.java: resolveTree(): i = 0 child of top:ClassRef(com.shakeel.repository.ProductRepository)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:IN
| FieldRef(com.shakeel.model.Product.id)
| productIds
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: IN
| FieldRef(com.shakeel.model.Product.id)
| productIds
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.model.Product.id)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:productIds
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: productIds
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.model.Product.id)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ClassRef(com.shakeel.repository.ProductRepository)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| FieldRef(com.shakeel.repository.ProductRepository.productId)
| FieldRef(com.shakeel.repository.ProductRepository.productName)
| FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| FieldRef(com.shakeel.repository.ProductRepository.orderId)
analysis/Utils.java: resolveTree(): i = 0 child of top:FieldRef(com.shakeel.repository.ProductRepository.productId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:FieldRef(com.shakeel.repository.ProductRepository.productName)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:FieldRef(com.shakeel.repository.ProductRepository.productPrice)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:FieldRef(com.shakeel.repository.ProductRepository.orderId)
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.repository.ProductRepository.orderId)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.repository.ProductRepository.productPrice)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.repository.ProductRepository.productName)
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: FieldRef(com.shakeel.repository.ProductRepository.productId)
analysis/Utils.java: resolveTree(): out: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode
analysis/Utils.java: mergeSeqDirs(): key: $r18.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: l9
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r19.orderId
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r18.productName
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r18.productPrice
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r19.productName
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): key: $r19.productPrice
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: UnknownNode
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | WhileLoop
| | BasicBlock1
| | BasicBlock2

DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.SequentialRegionN
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregions: [| BasicBlock3, | WhileLoop
| | BasicBlock4
| | BasicBlock5
, | BasicBlock6]
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: saveOrder
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock3
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 3
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof productIds, l9 = 0, if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), productId = productIds[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof productIds, productId = 0, if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = productIds[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3), $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: setProducts
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [products, this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [$r8, $r3]
ARegion.java: analyze(): set cur method of analyzer to: setProducts
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.model.CustomerOrder, products := @parameter0: java.util.Set, this.<com.shakeel.model.CustomerOrder: java.util.Set products> = products, return]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.shakeel.model.CustomerOrder
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = products := @parameter0: java.util.Set
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<com.shakeel.model.CustomerOrder: java.util.Set products> = products
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): Mapping: this.products -> products
DIRRegionAnalyzer.java: constructDIR(): curUnit = return
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ this ~~~
Self

~~~ this.products ~~~
products


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ this ~~~
Self

~~~ this.products ~~~
products


DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: this.products=products
~~~ this ~~~
Self

~~~ this.products ~~~
products


DIRRegionAnalyzer.java: handleSideEffects(): ith formal: products
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: java.util.Set
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.shakeel.model.CustomerOrder
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r3
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: products
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [products, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r8, $r3]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formal = products, actual = $r8
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: products
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = $r8
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.firstName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.total
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.products
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.customer.customerOrder.customer
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [this, this.products]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = setProducts, [$r3.products]
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: products
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r8
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive
DIRRegionAnalyzer.java: handleSideEffects(): fml: products
DIRRegionAnalyzer.java: handleSideEffects(): actual arg (Soot Value): $r8
DIRRegionAnalyzer.java: handleSideEffects(): actualNode (Node constructed from value): $r8
DIRRegionAnalyzer.java: handleSideEffects(): formal = products, actual = $r8
DIRRegionAnalyzer.java: handleSideEffects(): resolvedActual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): Case the formal param is a primitive, $r8
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r3
WARN: Flatten.java: flatten(): depth > BOUND
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.orderId, this.total, this.products, this.customer, this.customer.customerId, this.customer.firstName, this.customer.lastName, this.customer.customerOrder, this.customer.customerOrder.orderId, this.customer.customerOrder.total, this.customer.customerOrder.products, this.customer.customerOrder.customer]
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r3.products ~~~
$r8


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r3.products
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: $r8
DIRRegionAnalyzer.java: handleSideEffects(): after: $r8
DIRRegionAnalyzer.java: constructDIR(): curUnit = total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
DIRRegionAnalyzer.java: constructDIR(): break point 2
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JStaticInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: java.lang.Double valueOf(double)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): total
Utils.java: getVarNode(): LinkedVariableBox(total)
JAssignStmtCons.java: construct(): staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: java.lang.Double valueOf(double)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): curUnit = l8 = productIds
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
Utils.java: getVarNode(): l8
Utils.java: getVarNode(): LinkedVariableBox(l8)
DIRRegionAnalyzer.java: constructDIR(): curUnit = l9 = lengthof productIds
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JLengthExpr
Utils.java: getVarNode(): l9
Utils.java: getVarNode(): LinkedVariableBox(l9)
DIRRegionAnalyzer.java: constructDIR(): curUnit = productId = 0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.IntConstant
Utils.java: getVarNode(): productId
Utils.java: getVarNode(): LinkedVariableBox(productId)
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock3
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r3.products ~~~
$r8

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ total ~~~
0.0


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r3.products ~~~
$r8

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ total ~~~
0.0


DIR.java: updateRegion(): update region entry: $r3.products=$r8
DIR.java: updateRegion(): update region entry: total=0.0
DIR.java: updateRegion(): update region entry: productId=0
DIR.java: updateRegion(): update region entry: l8=productIds
DIR.java: updateRegion(): update region entry: l9=lengthof productIds
~~~ $r3.products ~~~
$r8

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ total ~~~
0.0


analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r3.products, total, productId, l8, l9]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $r3.products ~~~
$r8

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ total ~~~
0.0


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r3.products=$r8, total=0.0, productId=0, l8=productIds, l9=lengthof productIds}
analysis/Utils.java: mergeSeqDirs(): key: $r3.products
analysis/Utils.java: mergeSeqDirs(): before resolution: $r8
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: $r8
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): out: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: mergeSeqDirs(): after resolution: UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode
analysis/Utils.java: mergeSeqDirs(): key: total
analysis/Utils.java: mergeSeqDirs(): before resolution: 0.0
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: 0.0
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: 0.0
analysis/Utils.java: mergeSeqDirs(): key: productId
analysis/Utils.java: mergeSeqDirs(): before resolution: 0
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: 0
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: 0
analysis/Utils.java: mergeSeqDirs(): key: l8
analysis/Utils.java: mergeSeqDirs(): before resolution: productIds
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: productIds
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: productIds
analysis/Utils.java: mergeSeqDirs(): key: l9
analysis/Utils.java: mergeSeqDirs(): before resolution: lengthof productIds
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: resolveTree(): in: lengthof productIds
analysis/Utils.java: resolveTree(): dir: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
lengthof productIds

~~~ l9 ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
productIds


analysis/Utils.java: mergeSeqDirs(): after resolution: lengthof productIds
analysis/Utils.java: mergeSeqDirs(): mergedDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.products ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
0.0


analysis/Utils.java: mergeSeqDirs(): return
DIRSequentialRegionAnalyzerN.java: constructDIR(): merging subregion: | BasicBlock3
DIRSequentialRegionAnalyzerN.java: constructDIR(): subregionDIR: ~~~ $r3.products ~~~
$r8

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ total ~~~
0.0


DIRSequentialRegionAnalyzerN.java: constructDIR(): prevDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.products ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
0.0


~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.products ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
0.0


DIRSequentialRegionAnalyzerN.java: constructDIR(): subregion class: class dbridge.analysis.region.regions.LoopRegion
DIRLoopRegionAnalyzer.java: constructDIR(): Analyzing loop head
ARegion.java: analyze(): set cur method of analyzer to: saveOrder
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock4
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 4
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof productIds, l9 = 0, if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), productId = productIds[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof productIds, productId = 0, if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = productIds[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3), $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
DIRRegionAnalyzer.java: constructDIR(): curUnit = if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total)
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()productId >= l9
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock4
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ condition ~~~
<
| productId
| l9


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ condition ~~~
<
| productId
| l9


DIR.java: updateRegion(): update region entry: condition=<
| productId
| l9
~~~ condition ~~~
<
| productId
| l9


DIRLoopRegionAnalyzer.java: constructDIR(): Analyzing loop body
ARegion.java: analyze(): set cur method of analyzer to: saveOrder
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock5
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 5
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.controller.OrdersController, firstName := @parameter0: java.lang.String, lastName := @parameter1: java.lang.String, productIds := @parameter2: java.lang.Long[], $r0 = new com.shakeel.model.Customer, specialinvoke $r0.<com.shakeel.model.Customer: void <init>()>(), customer = $r0, virtualinvoke $r0.<com.shakeel.model.Customer: void setFirstName(java.lang.String)>(firstName), virtualinvoke $r0.<com.shakeel.model.Customer: void setLastName(java.lang.String)>(lastName), $r1 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, interfaceinvoke $r1.<com.shakeel.repository.CustomerRepository: java.lang.Object save(java.lang.Object)>($r0), $r3 = new com.shakeel.model.CustomerOrder, specialinvoke $r3.<com.shakeel.model.CustomerOrder: void <init>()>(), customerOrder = $r3, $r4 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.CustomerRepository customerRepository>, $l0 = virtualinvoke $r0.<com.shakeel.model.Customer: long getCustomerId()>(), $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0), $r6 = interfaceinvoke $r4.<com.shakeel.repository.CustomerRepository: java.lang.Object findOne(java.io.Serializable)>($r5), $r7 = (com.shakeel.model.Customer) $r6, virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)>($r7), $r8 = new java.util.HashSet, specialinvoke $r8.<java.util.HashSet: void <init>()>(), productSet = $r8, total = productIds, l8 = lengthof productIds, l9 = 0, if l9 >= l8 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), productId = productIds[l9], $r17 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r18 = interfaceinvoke $r17.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r19 = (com.shakeel.model.Product) $r18, interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r19), l9 = l9 + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)>($r8), total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0), l8 = productIds, l9 = lengthof productIds, productId = 0, if productId >= l9 goto virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), productId = productIds[productId], $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>(), $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>, $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId), $r15 = (com.shakeel.model.Product) $r14, $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>(), $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>(), $d2 = $d0 + $d1, total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2), productId = productId + 1, goto [?= (branch)], virtualinvoke $r3.<com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double)>(total), $r9 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.OrderRepository orderRepository>, interfaceinvoke $r9.<com.shakeel.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($r3), $r11 = virtualinvoke $r3.<com.shakeel.model.CustomerOrder: java.lang.Long getOrderId()>(), $r12 = virtualinvoke $r11.<java.lang.Long: java.lang.String toString()>(), return $r12]
DIRRegionAnalyzer.java: constructDIR(): curUnit = productId = productIds[productId]
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JArrayRef
DIRRegionAnalyzer.java: constructDIR(): curUnit = $d0 = virtualinvoke total.<java.lang.Double: double doubleValue()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = doubleValue
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: double doubleValue()
construct/Utils.java: parseObjectInvoke(): virtualinvoke total.<java.lang.Double: double doubleValue()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: double doubleValue()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: double doubleValue()>
construct/Utils.java: parseObjectInvoke(): methodName = doubleValue
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke total.<java.lang.Double: double doubleValue()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Double: double doubleValue()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $d0
Utils.java: getVarNode(): LinkedVariableBox($d0)
JAssignStmtCons.java: construct(): virtualinvoke total.<java.lang.Double: double doubleValue()>()
construct/Utils.java: parseInvokeExpr(): methodName = doubleValue
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: double doubleValue()
construct/Utils.java: parseObjectInvoke(): virtualinvoke total.<java.lang.Double: double doubleValue()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: double doubleValue()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: double doubleValue()>
construct/Utils.java: parseObjectInvoke(): methodName = doubleValue
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke total.<java.lang.Double: double doubleValue()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Double: double doubleValue()
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r13 = this.<com.shakeel.controller.OrdersController: com.shakeel.repository.ProductRepository productRepository>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r13 -> this.productRepository
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r14 = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = findOne
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
construct/Utils.java: parseObjectInvoke(): interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Object: java.lang.Object findOne(java.io.Serializable)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>
construct/Utils.java: parseObjectInvoke(): methodName = findOne
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
construct/Utils.java: parseObjectInvoke(): repostr in findOne case: com.shakeel.repository.ProductRepository
construct/Utils.java: parseObjectInvoke(): entity for repo in findOne case: com.shakeel.model.Product
construct/Utils.java: parseObjectInvoke(): entity class findOne case: com.shakeel.model.Product
construct/Utils.java: parseObjectInvoke(): check 1 =Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
cosntruct/utils.java: mapDBFetchAccessGraph(): check relExpBaseAccp= Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
cosntruct/utils.java: mapDBFetchAccessGraph(): prim fields = [<com.shakeel.model.Product: java.lang.Long productId>, <com.shakeel.model.Product: java.lang.String productName>, <com.shakeel.model.Product: java.lang.Double productPrice>, <com.shakeel.model.Product: java.lang.Long orderId>]
cosntruct/utils.java: mapDBFetchAccessGraph(): oneToOne fields= []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyToOne fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): collection fields = []
cosntruct/utils.java: mapDBFetchAccessGraph(): manyTomany fields = []
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r14
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: constructDIR(): left type = java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: java.lang.Object
DIRRegionAnalyzer.java: constructDIR(): method sig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{com.shakeel.model.Customer: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, java.lang.Object: java.lang.Object findOne(java.io.Serializable)=~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId

~~~ return.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId

~~~ return.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId

~~~ return.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName

~~~ return.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice

, com.shakeel.model.Customer: long getCustomerId()=~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self

, com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)=~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName

, com.shakeel.model.Customer: void setFirstName(java.lang.String)=~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName

, com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)=~~~ this ~~~
Self

~~~ this.products ~~~
products

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId

~~~ return.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId

~~~ return.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId

~~~ return.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName

~~~ return.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: []
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): leftType = com.shakeel.model.Product
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: findOne
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: com.shakeel.model.Product fields = [<com.shakeel.model.Product: java.lang.Long productId>, <com.shakeel.model.Product: java.lang.String productName>, <com.shakeel.model.Product: java.lang.Double productPrice>, <com.shakeel.model.Product: java.lang.Long orderId>]
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Long productId>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.String productName>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Double productPrice>  type=FieldData
NRA.java: processTableandFields: sf <com.shakeel.model.Product: java.lang.Long orderId>  type=FieldData
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r14, com.shakeel.model.Product
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r14.productId, $r14.productName, $r14.productPrice, $r14.orderId]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [com.shakeel.model.Customer: void setLastName(java.lang.String), java.lang.Object: java.lang.Object findOne(java.io.Serializable), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
Flatten.java: getNestedFields(): LVAL TYPE: com.shakeel.model.Product
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.Long productId> = java.lang.Long
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productId

]
Flatten.java: getNestedFields(): Id fields=productId
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.String productName> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productName

]
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.Double productPrice> = java.lang.Double
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: productPrice

]
Flatten.java: getNestedFields(): Type of sf: <com.shakeel.model.Product: java.lang.Long orderId> = java.lang.Long
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: orderId

]
Flatten.java: getNestedFields(): returning: []
DIRRegionAnalyzer.java: constructDIR(): check nestedFields=[]
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: constructDIR(): key = return.productName
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName
DIRRegionAnalyzer.java: constructDIR(): key = return.orderId
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId
DIRRegionAnalyzer.java: constructDIR(): key = return.productId
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId
DIRRegionAnalyzer.java: constructDIR(): key = return.productPrice
DIRRegionAnalyzer.java: constructDIR(): val = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = java.lang.Object: java.lang.Object findOne(java.io.Serializable) END
DIRRegionAnalyzer.java: constructDIR(): v1 access paths: [$r14.productId, $r14.productName, $r14.productPrice, $r14.orderId]
DIRRegionAnalyzer.java: constructDIR(): key = $r14.productId
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.productId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId
DIRRegionAnalyzer.java: constructDIR(): key = $r14.productName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.productName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName
DIRRegionAnalyzer.java: constructDIR(): key = $r14.productPrice
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.productPrice
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIRRegionAnalyzer.java: constructDIR(): key = $r14.orderId
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.orderId
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = interfaceinvoke $r13.<com.shakeel.repository.ProductRepository: java.lang.Object findOne(java.io.Serializable)>(productId)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = java.lang.Object: java.lang.Object findOne(java.io.Serializable)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: constructDIR(): callersDag = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r15 = (com.shakeel.model.Product) $r14
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JCastExpr
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = (type1) v2
DIRRegionAnalyzer.java: constructDIR(): type1: com.shakeel.model.Product
DIRRegionAnalyzer.java: constructDIR(): castExpr: (com.shakeel.model.Product) $r14
DIRRegionAnalyzer.java: constructDIR(): v2: $r14
DIRRegionAnalyzer.java: constructDIR(): cur dir: {$d0=total, $r13=this.productRepository, $r14=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId, $r14.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId, $r14.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice, productId=ArrayRef
| productIds
| productId, $r14.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName, $r14.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId}
DIRRegionAnalyzer.java: constructDIR(): rightVar in dir: true
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): v1 and v2 have diff types
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v1) = com.shakeel.model.Product
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v2) = java.lang.Object
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: $r15
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r14
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [Product.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
]
AccessPath.java: replaceBase(): input access path: $r15.productId
AccessPath.java: replaceBase(): replacement of base: $r14
AccessPath.java: replaceBase(): input access path: $r15.productName
AccessPath.java: replaceBase(): replacement of base: $r14
AccessPath.java: replaceBase(): input access path: $r15.productPrice
AccessPath.java: replaceBase(): replacement of base: $r14
AccessPath.java: replaceBase(): input access path: $r15.orderId
AccessPath.java: replaceBase(): replacement of base: $r14
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r16 = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getProductPrice
construct/Utils.java: parseInvokeExpr(): methodSignature = com.shakeel.model.Product: java.lang.Double getProductPrice()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <com.shakeel.model.Product: java.lang.Double getProductPrice()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.shakeel.model.Product: java.lang.Double getProductPrice()>
construct/Utils.java: parseObjectInvoke(): methodName = getProductPrice
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = com.shakeel.model.Product: java.lang.Double getProductPrice()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getProductPrice
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.shakeel.model.Product, $r0 = this.<com.shakeel.model.Product: java.lang.Double productPrice>, return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.shakeel.model.Product
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<com.shakeel.model.Product: java.lang.Double productPrice>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.productPrice
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.productPrice

~~~ return ~~~
this.productPrice

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.productPrice

~~~ return ~~~
this.productPrice

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.productPrice
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=this.productPrice
~~~ $r0 ~~~
this.productPrice

~~~ return ~~~
this.productPrice

~~~ this ~~~
Self


construct/Utils.java: parseObjectInvoke(): Put DIR of callee = com.shakeel.model.Product: java.lang.Double getProductPrice() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.Double
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.Double
DIRRegionAnalyzer.java: constructDIR(): case : caseCallToMethodWBodyRetPrim()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), v1 is primitive, foo is not a library method
DIRRegionAnalyzer.java: constructDIR(): v1: $r16
DIRRegionAnalyzer.java: constructDIR(): foo: <com.shakeel.model.Product: java.lang.Double getProductPrice()>
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getProductPrice
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.shakeel.model.Product: java.lang.Double getProductPrice()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.shakeel.model.Product: java.lang.Double getProductPrice()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [$r15]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.shakeel.model.Product
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r15
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.productId, this.productName, this.productPrice, this.orderId]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.productId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.productName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.productPrice
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.orderId
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getProductPrice, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r15
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.productId, this.productName, this.productPrice, this.orderId]
DIRRegionAnalyzer.java: constructDIR(): methodSig: com.shakeel.model.Product: java.lang.Double getProductPrice()
DIRRegionAnalyzer.java: constructDIR(): FuncStackAnalyzer.funcDIRMap: {com.shakeel.model.Customer: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, java.lang.Object: java.lang.Object findOne(java.io.Serializable)=~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId

~~~ return.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId

~~~ return.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId

~~~ return.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName

~~~ return.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice

, com.shakeel.model.Product: java.lang.Double getProductPrice()=~~~ $r0 ~~~
this.productPrice

~~~ return ~~~
this.productPrice

~~~ this ~~~
Self

, com.shakeel.model.Customer: long getCustomerId()=~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self

, com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)=~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName

, com.shakeel.model.Customer: void setFirstName(java.lang.String)=~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName

, com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)=~~~ this ~~~
Self

~~~ this.products ~~~
products

}
DIRRegionAnalyzer.java: constructDIR(): dir callee: ~~~ $r0 ~~~
this.productPrice

~~~ return ~~~
this.productPrice

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): retCalleeCloned: this.productPrice
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.productPrice
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r15.<com.shakeel.model.Product: java.lang.Double getProductPrice()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.shakeel.model.Product: java.lang.Double getProductPrice()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.shakeel.model.Customer: void setLastName(java.lang.String), com.shakeel.model.Product: java.lang.Double getProductPrice(), com.shakeel.model.Customer: long getCustomerId(), com.shakeel.model.CustomerOrder: java.lang.Long getOrderId(), com.shakeel.controller.OrdersController: java.lang.String saveOrder(java.lang.String,java.lang.String,java.lang.Long[]), com.shakeel.model.CustomerOrder: void setTotal(java.lang.Double), com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer), com.shakeel.model.Customer: void setFirstName(java.lang.String), com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.shakeel.model.Product: java.lang.Double getProductPrice()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r15]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.productId, this.productName, this.productPrice, this.orderId]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.productPrice
DIRRegionAnalyzer.java: constructDIR(): after dag formals to actuals: $r15.productPrice
DIRRegionAnalyzer.java: constructDIR(): curUnit = $d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = doubleValue
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: double doubleValue()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r16.<java.lang.Double: double doubleValue()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: double doubleValue()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: double doubleValue()>
construct/Utils.java: parseObjectInvoke(): methodName = doubleValue
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r16.<java.lang.Double: double doubleValue()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Double: double doubleValue()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $d1
Utils.java: getVarNode(): LinkedVariableBox($d1)
JAssignStmtCons.java: construct(): virtualinvoke $r16.<java.lang.Double: double doubleValue()>()
construct/Utils.java: parseInvokeExpr(): methodName = doubleValue
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: double doubleValue()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r16.<java.lang.Double: double doubleValue()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: double doubleValue()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: double doubleValue()>
construct/Utils.java: parseObjectInvoke(): methodName = doubleValue
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r16.<java.lang.Double: double doubleValue()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.Double: double doubleValue()
DIRRegionAnalyzer.java: constructDIR(): curUnit = $d2 = $d0 + $d1
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JAddExpr
Utils.java: getVarNode(): $d2
Utils.java: getVarNode(): LinkedVariableBox($d2)
DIRRegionAnalyzer.java: constructDIR(): curUnit = total = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2)
DIRRegionAnalyzer.java: constructDIR(): break point 2
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JStaticInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: java.lang.Double valueOf(double)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): total
Utils.java: getVarNode(): LinkedVariableBox(total)
JAssignStmtCons.java: construct(): staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2)
construct/Utils.java: parseInvokeExpr(): methodName = valueOf
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.Double: java.lang.Double valueOf(double)
construct/Utils.java: parseInvokeExpr(): JstaticInvokeExpr
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.Double: java.lang.Double valueOf(double)>
Utils.java: parseStaticInvoke(): parseStaticInvoke: name: valueOf
DIRRegionAnalyzer.java: constructDIR(): curUnit = productId = productId + 1
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt and other conditions
DIRRegionAnalyzer.java: constructDIR(): curUnit = goto [?= (branch)]
DIRRegionAnalyzer.java: constructDIR(): GOTO stmt in seq region
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock5
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $d0 ~~~
total

~~~ $d1 ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $d2 ~~~
+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r13 ~~~
this.productRepository

~~~ $r14 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId

~~~ $r14.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId

~~~ $r14.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId

~~~ $r14.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName

~~~ $r14.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r15 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId

~~~ $r15.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId

~~~ $r15.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId

~~~ $r15.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName

~~~ $r15.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r16 ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ iteration_over_array ~~~
1

~~~ productId ~~~
ArrayRef
| productIds
| productId

~~~ total ~~~
+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $d0 ~~~
total

~~~ $d1 ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $d2 ~~~
+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r13 ~~~
this.productRepository

~~~ $r14 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId

~~~ $r14.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId

~~~ $r14.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId

~~~ $r14.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName

~~~ $r14.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r15 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId

~~~ $r15.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId

~~~ $r15.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId

~~~ $r15.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName

~~~ $r15.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r16 ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ iteration_over_array ~~~
1

~~~ productId ~~~
ArrayRef
| productIds
| productId

~~~ total ~~~
+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice


DIR.java: updateRegion(): update region entry: $r15=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId
DIR.java: updateRegion(): update region entry: $r16=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIR.java: updateRegion(): update region entry: $r13=this.productRepository
DIR.java: updateRegion(): update region entry: $r15.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId
DIR.java: updateRegion(): update region entry: $r14=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId
DIR.java: updateRegion(): update region entry: $r14.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIR.java: updateRegion(): update region entry: productId=ArrayRef
| productIds
| productId
DIR.java: updateRegion(): update region entry: $r14.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId
DIR.java: updateRegion(): update region entry: $r15.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIR.java: updateRegion(): update region entry: $r15.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId
DIR.java: updateRegion(): update region entry: iteration_over_array=1
DIR.java: updateRegion(): update region entry: $d0=total
DIR.java: updateRegion(): update region entry: $d1=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIR.java: updateRegion(): update region entry: $r15.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName
DIR.java: updateRegion(): update region entry: $d2=+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIR.java: updateRegion(): update region entry: total=+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIR.java: updateRegion(): update region entry: $r14.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId
DIR.java: updateRegion(): update region entry: $r14.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName
~~~ $d0 ~~~
total

~~~ $d1 ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $d2 ~~~
+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r13 ~~~
this.productRepository

~~~ $r14 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId

~~~ $r14.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId

~~~ $r14.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId

~~~ $r14.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName

~~~ $r14.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r15 ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId

~~~ $r15.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId

~~~ $r15.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId

~~~ $r15.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName

~~~ $r15.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ $r16 ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice

~~~ iteration_over_array ~~~
1

~~~ productId ~~~
ArrayRef
| productIds
| productId

~~~ total ~~~
+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice


DIRLoopRegionAnalyzer.java: constructDIR(): Done with analyzing loop body
DIRLoopRegionAnalyzer.java: constructDIR(): bodyVEMap: {$r15=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId, $r16=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice, $r13=this.productRepository, $r15.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId, $r14=Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId, $r14.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice, productId=ArrayRef
| productIds
| productId, $r14.orderId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId, $r15.productPrice=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice, $r15.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId, iteration_over_array=1, $d0=total, $d1=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice, $r15.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName, $d2=+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice, total=+
| total
| Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice, $r14.productId=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId, $r14.productName=Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName}
DIRLoopRegionAnalyzer.java: constructDIR(): headVEMap: {condition=<
| productId
| l9}
DIRLoopRegionAnalyzer.java: constructDIR(): headR: | BasicBlock4
{com.shakeel.model.Customer: void setLastName(java.lang.String)=~~~ this ~~~
Self

~~~ this.lastName ~~~
lastName

, java.lang.Object: java.lang.Object findOne(java.io.Serializable)=~~~ return ~~~
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | productId

~~~ return.orderId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| orderId

~~~ return.productId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productId

~~~ return.productName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productName

~~~ return.productPrice ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | productId
| productPrice

, com.shakeel.model.Product: java.lang.Double getProductPrice()=~~~ $r0 ~~~
this.productPrice

~~~ return ~~~
this.productPrice

~~~ this ~~~
Self

, com.shakeel.model.Customer: long getCustomerId()=~~~ $l0 ~~~
this.customerId

~~~ return ~~~
this.customerId

~~~ this ~~~
Self

, com.shakeel.model.CustomerOrder: void setCustomer(com.shakeel.model.Customer)=~~~ this ~~~
Self

~~~ this.customer.customerId ~~~
customer.customerId

~~~ this.customer.customerOrder ~~~
customer.customerOrder

~~~ this.customer.customerOrder.customer ~~~
customer.customerOrder.customer

~~~ this.customer.customerOrder.orderId ~~~
customer.customerOrder.orderId

~~~ this.customer.customerOrder.products ~~~
customer.customerOrder.products

~~~ this.customer.customerOrder.total ~~~
customer.customerOrder.total

~~~ this.customer.firstName ~~~
customer.firstName

~~~ this.customer.lastName ~~~
customer.lastName

, com.shakeel.model.Customer: void setFirstName(java.lang.String)=~~~ this ~~~
Self

~~~ this.firstName ~~~
firstName

, com.shakeel.model.CustomerOrder: void setProducts(java.util.Set)=~~~ this ~~~
Self

~~~ this.products ~~~
products

}
DIRLoopRegionAnalyzer.java: getLoopingCol(): headDIR: ~~~ condition ~~~
<
| productId
| l9


DIRLoopRegionAnalyzer.java: constructDIR(): loopingVar: productIds
DIRLoopRegionAnalyzer.java: constructDIR(): foldVars: [$r15, $r16, $r13, $r15.orderId, $r14, $r14.productPrice, productId, $r14.orderId, $r15.productPrice, $r15.productId, iteration_over_array, $d0, $d1, $r15.productName, $d2, total, $r14.productId, $r14.productName]
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r15
[$r8]
Body_Expr:
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r16
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r13
[$r8]
Body_Expr:
this.productRepository
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r15.orderId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r14
[$r8]
Body_Expr:
Sel
| ClassRef(com.shakeel.repository.ProductRepository)
| Equals
| | FieldRef(com.shakeel.model.Product.id)
| | ArrayRef
| | | productIds
| | | productId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r14.productPrice
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: productId
[$r8]
Body_Expr:
NextOp
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r14.orderId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| orderId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r15.productPrice
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r15.productId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: iteration_over_array
[$r8]
Body_Expr:
1
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $d0
[$r8]
Body_Expr:
total
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $d1
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productPrice
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r15.productName
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $d2
[$r8]
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: total
[$r8]
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r14.productId
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| ArrayRef
| | productIds
| | productId
DIRLoopRegionAnalyzer.java: constructDIR(): uvar: $r14.productName
[$r8]
Body_Expr:
Pi
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Product.id)
| | | ArrayRef
| | | | productIds
| | | | productId
| productName
DIRLoopRegionAnalyzer.java: constructDIR(): loopDIR: {$r15=UnknownNode, $r16=UnknownNode, $r13=UnknownNode, $r15.orderId=UnknownNode, $r14=UnknownNode, $r14.productPrice=UnknownNode, productId=UnknownNode, $r14.orderId=UnknownNode, $r15.productPrice=UnknownNode, $r15.productId=UnknownNode, iteration_over_array=UnknownNode, $d0=UnknownNode, $d1=UnknownNode, $r15.productName=UnknownNode, $d2=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2, total=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total, $r14.productId=UnknownNode, $r14.productName=UnknownNode}
{}
AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $d0 ~~~
UnknownNode

~~~ $d1 ~~~
UnknownNode

~~~ $d2 ~~~
+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2

~~~ $r13 ~~~
UnknownNode

~~~ $r14 ~~~
UnknownNode

~~~ $r14.orderId ~~~
UnknownNode

~~~ $r14.productId ~~~
UnknownNode

~~~ $r14.productName ~~~
UnknownNode

~~~ $r14.productPrice ~~~
UnknownNode

~~~ $r15 ~~~
UnknownNode

~~~ $r15.orderId ~~~
UnknownNode

~~~ $r15.productId ~~~
UnknownNode

~~~ $r15.productName ~~~
UnknownNode

~~~ $r15.productPrice ~~~
UnknownNode

~~~ $r16 ~~~
UnknownNode

~~~ iteration_over_array ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ total ~~~
+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total


DIR.java: updateRegion(): update region entry: $r15=UnknownNode
DIR.java: updateRegion(): update region entry: $r16=UnknownNode
DIR.java: updateRegion(): update region entry: $r13=UnknownNode
DIR.java: updateRegion(): update region entry: $r15.orderId=UnknownNode
DIR.java: updateRegion(): update region entry: $r14=UnknownNode
DIR.java: updateRegion(): update region entry: $r14.productPrice=UnknownNode
DIR.java: updateRegion(): update region entry: productId=UnknownNode
DIR.java: updateRegion(): update region entry: $r14.orderId=UnknownNode
DIR.java: updateRegion(): update region entry: $r15.productPrice=UnknownNode
DIR.java: updateRegion(): update region entry: $r15.productId=UnknownNode
DIR.java: updateRegion(): update region entry: iteration_over_array=UnknownNode
DIR.java: updateRegion(): update region entry: $d0=UnknownNode
DIR.java: updateRegion(): update region entry: $d1=UnknownNode
DIR.java: updateRegion(): update region entry: $r15.productName=UnknownNode
DIR.java: updateRegion(): update region entry: $d2=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2
DIR.java: updateRegion(): update region entry: total=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total
DIR.java: updateRegion(): update region entry: $r14.productId=UnknownNode
DIR.java: updateRegion(): update region entry: $r14.productName=UnknownNode
~~~ $d0 ~~~
UnknownNode

~~~ $d1 ~~~
UnknownNode

~~~ $d2 ~~~
+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2

~~~ $r13 ~~~
UnknownNode

~~~ $r14 ~~~
UnknownNode

~~~ $r14.orderId ~~~
UnknownNode

~~~ $r14.productId ~~~
UnknownNode

~~~ $r14.productName ~~~
UnknownNode

~~~ $r14.productPrice ~~~
UnknownNode

~~~ $r15 ~~~
UnknownNode

~~~ $r15.orderId ~~~
UnknownNode

~~~ $r15.productId ~~~
UnknownNode

~~~ $r15.productName ~~~
UnknownNode

~~~ $r15.productPrice ~~~
UnknownNode

~~~ $r16 ~~~
UnknownNode

~~~ iteration_over_array ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ total ~~~
+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total


{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{$d2=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2}
{$d2=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2, total=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total}
{$d2=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2, total=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total}
{$d2=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2, total=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total}
analysis/Utils.java: mergeSeqDirs(): following dir domain: [$r15, $r16, $r13, $r15.orderId, $r14, $r14.productPrice, productId, $r14.orderId, $r15.productPrice, $r15.productId, iteration_over_array, $d0, $d1, $r15.productName, $d2, total, $r14.productId, $r14.productName]
analysis/Utils.java: mergeSeqDirs(): following dir: ~~~ $d0 ~~~
UnknownNode

~~~ $d1 ~~~
UnknownNode

~~~ $d2 ~~~
+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2

~~~ $r13 ~~~
UnknownNode

~~~ $r14 ~~~
UnknownNode

~~~ $r14.orderId ~~~
UnknownNode

~~~ $r14.productId ~~~
UnknownNode

~~~ $r14.productName ~~~
UnknownNode

~~~ $r14.productPrice ~~~
UnknownNode

~~~ $r15 ~~~
UnknownNode

~~~ $r15.orderId ~~~
UnknownNode

~~~ $r15.productId ~~~
UnknownNode

~~~ $r15.productName ~~~
UnknownNode

~~~ $r15.productPrice ~~~
UnknownNode

~~~ $r16 ~~~
UnknownNode

~~~ iteration_over_array ~~~
UnknownNode

~~~ productId ~~~
UnknownNode

~~~ total ~~~
+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total


analysis/Utils.java: mergeSeqDirs(): following dir vemap: {$r15=UnknownNode, $r16=UnknownNode, $r13=UnknownNode, $r15.orderId=UnknownNode, $r14=UnknownNode, $r14.productPrice=UnknownNode, productId=UnknownNode, $r14.orderId=UnknownNode, $r15.productPrice=UnknownNode, $r15.productId=UnknownNode, iteration_over_array=UnknownNode, $d0=UnknownNode, $d1=UnknownNode, $r15.productName=UnknownNode, $d2=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| $d2, total=+
| AggSum
| Sel
| | ClassRef(com.shakeel.repository.ProductRepository)
| | IN
| | | FieldRef(com.shakeel.model.Product.id)
| | | productIds
| productPrice
| total, $r14.productId=UnknownNode, $r14.productName=UnknownNode}
analysis/Utils.java: mergeSeqDirs(): key: $r15
analysis/Utils.java: mergeSeqDirs(): before resolution: UnknownNode
analysis/Utils.java: mergeSeqDirs(): precedingDIR: ~~~ $l0 ~~~
BottomNode

~~~ $r0.customerId ~~~
BottomNode

~~~ $r0.firstName ~~~
firstName

~~~ $r0.lastName ~~~
lastName

~~~ $r1 ~~~
this.customerRepository

~~~ $r17 ~~~
UnknownNode

~~~ $r18 ~~~
UnknownNode

~~~ $r18.orderId ~~~
UnknownNode

~~~ $r18.productId ~~~
UnknownNode

~~~ $r18.productName ~~~
UnknownNode

~~~ $r18.productPrice ~~~
UnknownNode

~~~ $r19 ~~~
UnknownNode

~~~ $r19.orderId ~~~
UnknownNode

~~~ $r19.productId ~~~
UnknownNode

~~~ $r19.productName ~~~
UnknownNode

~~~ $r19.productPrice ~~~
UnknownNode

~~~ $r3.customer.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r3.customer.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r3.customer.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r3.customer.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r3.customer.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r3.customer.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r3.customer.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r3.customer.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r3.orderId ~~~
BottomNode

~~~ $r3.products ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ $r3.total ~~~
BottomNode

~~~ $r4 ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ $r5 ~~~
BottomNode

~~~ $r6 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r6.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r6.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r6.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r6.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r6.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r6.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r6.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r6.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r6.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r6.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r6.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r7 ~~~
Sel
| ClassRef(com.shakeel.repository.CustomerRepository)
| Equals
| | FieldRef(com.shakeel.model.Customer.id)
| | BottomNode

~~~ $r7.customerId ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| customerId

~~~ $r7.customerOrder ~~~
Customer.customerOrder=Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | Equals
| | | Alpha.customerId
| | | CustomerOrder.orderId
| List
| | orderId
| | total
| | CustomerOrder.products=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Product)
| | | | Equals
| | | | | Alpha.productId
| | | | | Product.orderId
| | | List
| | | | productId
| | | | productName
| | | | productPrice
| | | | orderId
| | CustomerOrder.customer=Pi
| | | Join
| | | | Alpha
| | | | ClassRef(Customer)
| | | | Equals
| | | | | Alpha.orderId
| | | | | Customer.customerId
| | | List
| | | | customerId
| | | | firstName
| | | | lastName
| | | | Customer.customerOrder=Pi
| | | | | Join
| | | | | | Alpha
| | | | | | ClassRef(CustomerOrder)
| | | | | | Equals
| | | | | | | Alpha.customerId
| | | | | | | CustomerOrder.orderId
| | | | | List
| | | | | | orderId
| | | | | | total
| | | | | | NullOp
| | | | | | NullOp

~~~ $r7.customerOrder.customer ~~~
Join
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| ClassRef(com.shakeel.model.CustomerOrder)
| NullOp

~~~ $r7.customerOrder.customer.customerId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.customerId)

~~~ $r7.customerOrder.customer.customerOrder ~~~
$r6.customerOrder.customer.customerOrder

~~~ $r7.customerOrder.customer.firstName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.firstName)

~~~ $r7.customerOrder.customer.lastName ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.Customer.lastName)

~~~ $r7.customerOrder.orderId ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.orderId)

~~~ $r7.customerOrder.products ~~~
Join
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| ClassRef(com.shakeel.model.Product)
| NullOp

~~~ $r7.customerOrder.total ~~~
Pi
| Join
| | Sel
| | | ClassRef(com.shakeel.repository.CustomerRepository)
| | | Equals
| | | | FieldRef(com.shakeel.model.Customer.id)
| | | | BottomNode
| | ClassRef(com.shakeel.model.CustomerOrder)
| | NullOp
| FieldRef(com.shakeel.model.CustomerOrder.total)

~~~ $r7.firstName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| firstName

~~~ $r7.lastName ~~~
Pi
| Sel
| | ClassRef(com.shakeel.repository.CustomerRepository)
| | Equals
| | | FieldRef(com.shakeel.model.Customer.id)
| | | BottomNode
| lastName

~~~ $r8 ~~~
UnionOp
| Pi
| | List
| | | FieldRef(com.shakeel.repository.ProductRepository.productId)
| | | FieldRef(com.shakeel.repository.ProductRepository.productName)
| | | FieldRef(com.shakeel.repository.ProductRepository.productPrice)
| | | FieldRef(com.shakeel.repository.ProductRepository.orderId)
| | Sel
| | | ClassRef(com.shakeel.repository.ProductRepository)
| | | IN
| | | | FieldRef(com.shakeel.model.Product.id)
| | | | productIds
| BottomNode

~~~ customer ~~~
$r0

~~~ customer.customerId ~~~
BottomNode

~~~ customer.customerOrder ~~~
$r0.customerOrder

~~~ customer.customerOrder.customer ~~~
$r0.customerOrder.customer

~~~ customer.customerOrder.customer.customerId ~~~
$r0.customerOrder.customer.customerId

~~~ customer.customerOrder.customer.customerOrder ~~~
$r0.customerOrder.customer.customerOrder

~~~ customer.customerOrder.customer.firstName ~~~
$r0.customerOrder.customer.firstName

~~~ customer.customerOrder.customer.lastName ~~~
$r0.customerOrder.customer.lastName

~~~ customer.customerOrder.orderId ~~~
$r0.customerOrder.orderId

~~~ customer.customerOrder.products ~~~
$r0.customerOrder.products

~~~ customer.customerOrder.total ~~~
$r0.customerOrder.total

~~~ customer.firstName ~~~
BottomNode

~~~ customer.lastName ~~~
BottomNode

~~~ customerOrder ~~~
$r3

~~~ customerOrder.customer ~~~
$r3.customer

~~~ customerOrder.customer.customerId ~~~
$r3.customer.customerId

~~~ customerOrder.customer.customerOrder ~~~
$r3.customer.customerOrder

~~~ customerOrder.customer.customerOrder.customer ~~~
$r3.customer.customerOrder.customer

~~~ customerOrder.customer.customerOrder.orderId ~~~
$r3.customer.customerOrder.orderId

~~~ customerOrder.customer.customerOrder.products ~~~
$r3.customer.customerOrder.products

~~~ customerOrder.customer.customerOrder.total ~~~
$r3.customer.customerOrder.total

~~~ customerOrder.customer.firstName ~~~
$r3.customer.firstName

~~~ customerOrder.customer.lastName ~~~
$r3.customer.lastName

~~~ customerOrder.orderId ~~~
BottomNode

~~~ customerOrder.products ~~~
$r3.products

~~~ customerOrder.total ~~~
BottomNode

~~~ l8 ~~~
productIds

~~~ l9 ~~~
lengthof productIds

~~~ productId ~~~
0

~~~ productSet ~~~
$r8

~~~ this ~~~
Self

~~~ this.customerRepository ~~~
Save
| $r1
| Tuple
| | $r0
| | List
| | | BottomNode
| | | firstName
| | | lastName

~~~ total ~~~
0.0


analysis/Utils.java: resolveTree(): in: UnknownNode
