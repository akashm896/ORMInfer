<?xml version="1.0" encoding="UTF-8"?>
<uma:MethodLibrary xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:uma="http://www.eclipse.org/epf/uma/1.0.3" name="library.xmi"
	briefDescription="" id="_y62TUKVPEdmMZJIzZ1W7Pw" orderingGuide=""
	suppressed="false" authors="" changeDescription="" version=""
	tool="epf=1.0.0">
	<MethodPlugin name="openup_basic"
		briefDescription="The OpenUP/Basic is an iterative software development process that is minimal, complete, and extensible."
		id="_0TLvwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
		authors="" changeDate="2005-07-25T08:30:48" changeDescription=""
		version="" userChangeable="true">
		<Copyright>_uuunoPsDEdmyhNQr5STrZQ</Copyright>
		<ReferencedMethodPlugin>
			_WCUhAO8KEdmKSqa_gSYthg
		</ReferencedMethodPlugin>
		<MethodPackage xsi:type="uma:ContentCategoryPackage"
			name="ContentCategories" id="_NVGN0FqxEduN_tADfCnkEA">
			<ContentCategory xsi:type="uma:CustomCategory"
				name="getting_started" briefDescription=""
				id="_cp6ycBOGEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/mic.gif"
				presentationName="Getting Started"
				shapeicon="openup_basic/customcategories/resources/icon_introL.gif"
				variabilityType="na">
				<Presentation
					name="getting_started,_cp6ycBOGEduCNqgZdt_OaA" briefDescription=""
					id="-945-1xTnAeJZR0Z9oYMJDA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-28T04:04:31" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<h4>
    What is OpenUP/Basic?
</h4>
<p>
    OpenUP is an open-source software development process framework that, over time, is expected to cover a broad set of
    development needs. OpenUP/Basic is a subset of OpenUP that takes an agile approach to software development, with only
    fundamental content providing a simplified set of work products, roles, tasks, and guidance. OpenUP/Basic is <strong>an
    iterative software development process that is minimal, complete, and extensible</strong>. It is a process for small,
    co-located teams that value collaboration and stakeholder benefits over unnecessary deliverables and formality. OpenUP
    is characterized by four mutually supporting core principles:
</p>
<ul>
    <li>
        Collaborate to align interests and share understanding
    </li>
    <li>
        Balance competing priorities to maximize stakeholder value
    </li>
    <li>
        Focus on articulating the architecture
    </li>
    <li>
        Evolve continuously to obtain feedback and improve
    </li>
</ul>
<p>
    OpenUP/Basic is a common language, a common way of doing things that aligns how stakeholders and practitioners
    understand a project. It focuses on articulating the architecture to facilitate technical collaboration, reduce risk,
    and minimize scrap and rework. OpenUP/Basic seeks a balance between stakeholder needs and technical costs that
    maximizes stakeholder value and guides the development process. The system evolves in an iterative lifecycle that
    mitigates risk early and often and demonstrates ongoing results to the customer.
</p>
<p>
    OpenUP/Basic is ready to use as-is; nothing needs to be added or removed. OpenUP/Basic is extensible, because it can be
    used as a foundation on which process content can be added or tailored as needed. It is an exemplary and extensible
    process for a range of software development and management processes that supports iterative, agile, and incremental
    development and is applicable to a broad set of development platforms and applications.
</p>
<h4>
    Who should use OpenUP/Basic?
</h4>
<p>
    OpenUP/Basic is most useful for four primary groups of users:
</p>
<ul>
    <li>
        Software development practitioners (developers, project managers, analysts, and testers) working together as a
        project team
    </li>
    <li>
        Stakeholders
    </li>
    <li>
        Software process engineers
    </li>
    <li>
        Instructors
    </li>
</ul>
<p>
    Software development practitioners can find guidance on what is required of them in the roles defined by OpenUP/Basic.
    Each role describes a set of activities and artifacts that the role is responsible for. Guidance is also given on how
    those roles collaborate.
</p>
<p>
    Stakeholders will find guidance on what they may expect from the software development team and how the software will be
    created. OpenUP/Basic also describes the stakeholders' responsibilities and how they can best work with the development
    team to obtain software that meets their needs.
</p>
<p>
    Process engineers can use EPF Composer to extend and modify OpenUP/Basic. Modification may be as simple as altering
    templates for work products or as sophisticated as adding activities necessary for creating software in your specific
    environment, such as audits for safety-critical systems. In addition to modifying method content, process engineers can
    add, change, or remove process flows to add organization-specific capability patterns.
</p>
<p>
    OpenUP/Basic is appropriate for academic organizations also. As an open source process, it can serve as the basis for
    software engineering courses and, when combined with the EPF Composer, courses in software process engineering.
</p>
<h4>
    How do I get started?
</h4>
<p>
    The fourth OpenUP core principle, "Evolve to continuously obtain feedback and improve", suggests an iterative and
    incremental approach to adopting OpenUP/Basic.
</p>
<ul>
    <li>
        <p>
            Start with the core principles and understand the intentions behind OpenUP.
        </p>
    </li>
    <li>
        <p>
            Then assess your existing process, and select one or two key areas that you would like to improve.
        </p>
    </li>
    <li>
        <p>
            Begin using OpenUP/Basic to improve these areas first.
        </p>
    </li>
    <li>
        <p>
            In later iterations or development cycles, make incremental improvements in other areas.
        </p>
    </li>
    <li>
        <p>
            If you have little or no experience with unified processes or other iterative processes, use OpenUP/Basic in a
            small pilot project, perhaps with only three to four people working for only two to three months.
        </p>
    </li>
</ul>
<p>
    While OpenUP/Basic is a ready to use as-is, it may be necessary to extend the process or modify the work product
    templates to suit your specific needs. You may require more or less precision in your work products. Your organization
    may have specific configuration management practices or safety protocols to include in your process. You may simply
    want to put your own corporate logo on the banner. Most important, you may want to incorporate lessons learned from a
    retrospective review into OpenUP/Basic. Use the EPF Composer to extend and tailor OpenUP/Basic. For more information
    about EPF composer, visit <a href="http://www.eclipse.org/epf" target="_blank">www.eclipse.org/epf</a>.
</p>
<br />]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_vEruwN-rEdqiM_wFaqLjNg
				</CategorizedElement>
				<CategorizedElement>
					_NOHy0BOGEduCNqgZdt_OaA
				</CategorizedElement>
				<CategorizedElement>
					_zIJTABOGEduCNqgZdt_OaA
				</CategorizedElement>
				<CategorizedElement>
					_ClDF4BOHEduCNqgZdt_OaA
				</CategorizedElement>
				<CategorizedElement>
					_UaGfECcTEduSX6N2jUafGA
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="additional_resources" briefDescription=""
				id="_zIJTABOGEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/bookc.gif"
				presentationName="Additional Resources"
				shapeicon="openup_basic/customcategories/resources/bookcL.gif"
				variabilityType="na">
				<Presentation
					name="additional_resources,_zIJTABOGEduCNqgZdt_OaA"
					briefDescription="" id="-TpBgy6k416izWLNtcNf1lQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-23T12:15:57"
					changeDescription="" version="">
					<MainDescription><![CDATA[[to do]]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_2oEWgBOGEduCNqgZdt_OaA
				</CategorizedElement>
				<CategorizedElement>
					_4QdQoBOGEduCNqgZdt_OaA
				</CategorizedElement>
				<CategorizedElement>
					_-y5p8BOGEduCNqgZdt_OaA
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="articles" briefDescription="" id="_2oEWgBOGEduCNqgZdt_OaA"
				orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/bookc.gif"
				presentationName="Articles"
				shapeicon="openup_basic/customcategories/resources/bookcL.gif"
				variabilityType="na">
				<Presentation name="articles,_2oEWgBOGEduCNqgZdt_OaA"
					briefDescription="" id="-Hk7PG6ppy7DDabErjlnLdQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-23T12:16:02"
					changeDescription="" version="">
					<MainDescription><![CDATA[[to do]]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="training_and_preso" briefDescription=""
				id="_4QdQoBOGEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/bookc.gif"
				presentationName="Training Material and Presentations"
				shapeicon="openup_basic/customcategories/resources/bookcL.gif"
				variabilityType="na">
				<Presentation
					name="training_and_preso,_4QdQoBOGEduCNqgZdt_OaA"
					briefDescription="" id="-axQk5UOejMS7f3GbacN4PA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-23T12:15:31"
					changeDescription="" version="">
					<MainDescription><![CDATA[[to do]]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="tutorials_and_demos" briefDescription=""
				id="_-y5p8BOGEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/bookc.gif"
				presentationName="Tutorials and Demos"
				shapeicon="openup_basic/customcategories/resources/bookcL.gif"
				variabilityType="na">
				<Presentation
					name="tutorials_and_demos,_-y5p8BOGEduCNqgZdt_OaA"
					briefDescription="" id="-6HbBcqTaWSRJjfn0d298LA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-23T12:15:48"
					changeDescription="" version="">
					<MainDescription><![CDATA[[to do]]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory" name="about"
				briefDescription="" id="_ClDF4BOHEduCNqgZdt_OaA" orderingGuide=""
				suppressed="false"
				nodeicon="openup_basic/customcategories/resources/about.gif"
				presentationName="About"
				shapeicon="openup_basic/customcategories/resources/processicon.gif"
				variabilityType="na">
				<Presentation name="about,_ClDF4BOHEduCNqgZdt_OaA"
					briefDescription="" id="-kiltuUhgu5dbjVjvA3l_kg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-23T12:15:51"
					changeDescription="" version="">
					<MainDescription><![CDATA[[to do]]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_8tSNMPGYEdqiDINUyockoA
				</CategorizedElement>
				<CategorizedElement>
					_uvje4D_fEdqDFvujd6NHiA
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="core_principles_cat"
				briefDescription="Four core principles capture the general intentions behind this process and create  the foundation for interpreting roles and work products and performing tasks."
				id="_HEu9QBOHEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/concept_obj.gif"
				presentationName="Core Principles"
				shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="core_principles,_HEu9QBOHEduCNqgZdt_OaA" briefDescription=""
					id="-Ss8EBFGKz6PI_08BAjuUwQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-07T09:25:49" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<h3>
    OpenUP Core Principles
</h3>
<p> OpenUP is based on four mutually supporting core principles: </p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Collaborate to align interests and share understanding
</h4>
<p> Software is created by people with different interests and skills who must 
  work together to create software effectively. </p>
<p> Therefore, develop practices that foster a healthy 
  team environment. A healthy team environment enables effective 
  collaboration that align the interests of project participants (development 
  team, quality assurance, product stakeholders, customers) and help project participants 
  develop a shared understanding of the project.</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Balance competing priorities to maximize stakeholder value
</h4>
<p> Systems are rarely all things to all people. Often, attempts to 
  make them  so are wasteful and result in bloated systems. </p>
<p> Therefore, project participants and stakeholders must collaborate to develop 
  a solution that maximizes Stakeholder benefits and is compliant with constraints 
  placed on the project. Achieving balance is a dynamic process, because, as both 
  the stakeholders and project participants learn more about the system, their 
  priorities and constraints change. </p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Focus on articulating the architecture
</h4>
<p> Without an architectural foundation, a system will evolve in an inefficient 
  and haphazard way. Such a system often proves difficult to evolve, reuse, or 
  integrate without substantial rework. It’s also difficult to organize the team 
  or communicate ideas without the common technical focus that 
  the architecture provides. </p>
<p>
    Therefore, use the architecture as a focal point for developers to align their interests and ideas by articulating the
    essential technical decisions through the growing architecture.<span style="mso-spacerun: yes">&nbsp;</span>
</p>
<h4>Evolve to continuously obtain feedback and improve </h4> 
<p> It is usually not possible to know all stakeholders needs, be aware of all 
  project risks, comprehend all project technologies, or know how to effectively 
  work with your colleagues. Even if it were possible to know all 
  of this, some of it is likely to change over the life of the project. 
</p>
<p> Therefore, divide the project into short, time-boxed 
  iterations to demonstrate incremental value and to get 
  early and continuous feedback.<span style="mso-spacerun: yes">&nbsp;</span> 
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_ssG6MMvpEdqukPpotm3DYg
				</CategorizedElement>
				<CategorizedElement>
					_KkTIsMp7EdqC_NfSivunjA
				</CategorizedElement>
				<CategorizedElement>
					_GXiogMvoEdqukPpotm3DYg
				</CategorizedElement>
				<CategorizedElement>
					_9gocwMvoEdqukPpotm3DYg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="openup_basic_views" briefDescription=""
				id="_NIIYMBOJEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				presentationName="OpenUP/Basic Views" variabilityType="na">
				<Presentation
					name="openup_basic_views,_NIIYMBOJEduCNqgZdt_OaA"
					briefDescription="" id="-8uqXjzIOnt6LVDae6Uv_0w" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-23T12:16:33"
					changeDescription="" version="">
					<MainDescription><![CDATA[[to do]]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_SEztkBOJEduCNqgZdt_OaA
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="openup_basic" briefDescription="" id="_SEztkBOJEduCNqgZdt_OaA"
				orderingGuide="" suppressed="false" presentationName="OpenUP/Basic"
				variabilityType="na">
				<Presentation
					name="openup_basic,_SEztkBOJEduCNqgZdt_OaA" briefDescription=""
					id="-nY50CawHefla4zauYddVfw" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-21T07:48:17" changeDescription=""
					version="1.0.0">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_i-BDsNogEdqfmNgIq7q3Xw
				</CategorizedElement>
				<CategorizedElement>
					_cp6ycBOGEduCNqgZdt_OaA
				</CategorizedElement>
				<CategorizedElement>
					_HEu9QBOHEduCNqgZdt_OaA
				</CategorizedElement>
				<CategorizedElement>
					_V2BQkEmbEdu0xduwSKie-w
				</CategorizedElement>
				<CategorizedElement>
					_TZIJ0O8NEdmKSqa_gSYthg
				</CategorizedElement>
				<CategorizedElement>
					_s4Z9AMWXEdqWePvIjHInwg
				</CategorizedElement>
				<CategorizedElement>
					__BZycP1UEdmek8CQTQgrOQ
				</CategorizedElement>
				<CategorizedElement>
					_0uyGoMlgEdmt3adZL5Dmdw
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="sub_processes"
				briefDescription="OpenUP/Basic is organized into four major areas of content, also known as sub-processes."
				id="_V2BQkEmbEdu0xduwSKie-w" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/concept_obj.gif"
				presentationName="Sub-processes"
				shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="new_custom_category,_V2BQkEmbEdu0xduwSKie-w"
					briefDescription="" id="-1ZoXO1IRfkXUKej4bNv8cw" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-21T08:05:33"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[&nbsp;]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_r8cVIEmbEdu0xduwSKie-w
				</CategorizedElement>
				<CategorizedElement>
					_57_ZMEmbEdu0xduwSKie-w
				</CategorizedElement>
				<CategorizedElement>
					_Aoz2gEmcEdu0xduwSKie-w
				</CategorizedElement>
				<CategorizedElement>
					_HEVvgEmcEdu0xduwSKie-w
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="collab_commun_subprocess"
				briefDescription="The collaboration layer is the foundation for OpenUP, reflecting the collaborative  nature of the process."
				id="_r8cVIEmbEdu0xduwSKie-w" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/concept_obj.gif"
				presentationName="Collaboration and Communication"
				shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="new_custom_category,_r8cVIEmbEdu0xduwSKie-w"
					briefDescription="" id="-NMF-a9hwKjzWNfHzzseDYQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-21T08:06:10"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p> The collaboration layer is the foundation for OpenUP, reflecting the collaborative 
  nature of the process. It contains all of the roles in 
  OpenUP/Basic: Stakeholder, Analyst, Developer, Architect, Tester, Project 
  Manager, and Any Role.&nbsp;Team members taking on these roles need to collaborate 
  to jointly capture and define the intent of the stakeholders, to jointly develop 
  the solution, and to jointly manage the project. </p>
<p> The foundation layer reflects and enables us to express the nature of self-organized 
  teams, where team members must broaden their perspectives of what their roles&nbsp;are 
  and where their responsibilities end. As an example, the Analyst cannot say 
  “I documented the requirements, now it is up to the Developer to implement them.” 
  The Analyst's job is not primarily to document requirements; it is to communicate 
  that the stakeholder intent is understood and reflected in a validated 
  build. Documenting requirements may help you&nbsp;achieve&nbsp;that objective, 
  but it is only one of many available tools. Other tools to use include working 
  with developers on the design, working with testers on what needs to be tested, 
  and using the build to ensure that&nbsp;it does what the stakeholders need it 
  to do. </p>
<p> To help the team to collaborate effectively, the foundational collaboration 
  layer provides you with a set of <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html" guid="_HEu9QBOHEduCNqgZdt_OaA">practices</a> 
  that have been shown to motivate<strong> 
  </strong>effective collaboration. These practices apply to work done 
  in all sub-processes.<br />
    &nbsp;
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_KkTIsMp7EdqC_NfSivunjA
				</CategorizedElement>
				<CategorizedElement>
					_TZIJ0O8NEdmKSqa_gSYthg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="intent_subprocess"
				briefDescription="The intent sub-process deals with how to channel the intent of stakeholders to the rest of the development team, to ensure that validated builds with incremental capabilities reflect stakeholder intents."
				id="_57_ZMEmbEdu0xduwSKie-w" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/concept_obj.gif"
				presentationName="Intent"
				shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="new_custom_category,_57_ZMEmbEdu0xduwSKie-w"
					briefDescription="" id="-QRnsN2e6IQlSMaRts-wFNw" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T01:33:36"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The intent sub-process deals with how to channel the intent of stakeholders to the rest of the development team, to
    ensure that validated builds with incremental capabilities reflect stakeholder intents. This is done by capturing and
    communicating the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">vision</a>&nbsp;to all team members, and by translating the vision into test cases and
    requirements of different types to allow the team to understand what capabilities needs to be delivered to address
    stakeholder intent.
</p>
<p>
    You find the most tasks for the intent sub-process in the <strong>Requirements</strong> discipline, and the task Create
    Test Cases in the <strong>Test</strong> discipline. The corresponding work products are found under
    <strong>Requirements</strong> and <strong>Test</strong> domains.
</p>
<p>
    The intent sub-process is built upon the foundational <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" guid="_r8cVIEmbEdu0xduwSKie-w">collaboration</a> layer. That layer constitutes the backbone of OpenUP in order to
    reflect the following:
</p>
<ul>
    <li>
        all roles in OpenUP are involved in intent development to ensure that as a minimum, all team members properly
        understand stakeholders’ intent.
    </li>
    <li>
        make sure that the best practices for collaborative development provided in the collaboration layer guides any work
        related to intent.
    </li>
</ul>
<p>
    The intent sub-process is written in such a way that your organization can modify it to fit your style of development
    and stakeholder collaboration, without necessarily impacting how you deal with the other sub-processes of <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" guid="_Aoz2gEmcEdu0xduwSKie-w">management</a>&nbsp;and <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" guid="_HEVvgEmcEdu0xduwSKie-w">solution</a> development .
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_ssG6MMvpEdqukPpotm3DYg
				</CategorizedElement>
				<CategorizedElement>
					_0TR2ZMlgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_0TwXgMlgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_allMQMWfEdqiT9CqkRksWQ
				</CategorizedElement>
				<CategorizedElement>
					_vUzp0MWeEdqiT9CqkRksWQ
				</CategorizedElement>
				<CategorizedElement>
					_0o9ygclgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_0pJ_xslgEdmt3adZL5Dmdw
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="management_subprocess"
				briefDescription="The Management sub-process deals with management of the project, including project planning, iteration planning, day-to-day management of the work within the iteration, and iteration assessments."
				id="_Aoz2gEmcEdu0xduwSKie-w" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/concept_obj.gif"
				presentationName="Management"
				shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="new_custom_category,_Aoz2gEmcEdu0xduwSKie-w"
					briefDescription="" id="-q8ubSlQ5miYcY1JXdj1fbQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-21T08:07:32"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p> It is important to note that the Management sub-process is built on the foundational 
  <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" guid="_r8cVIEmbEdu0xduwSKie-w">Collaboration</a> 
  layer&nbsp;to reflect the collaborative nature of management of an OpenUP project. 
  The manager should not plan an iteration in isolation, and then tell the team 
  members their assignments. Instead, the manager should be more of a coach, involving 
  the entire team in the planning process to ensure that: </p>
<ul>
    
  <li> Everybody’s knowledge is reflected in the plan </li>
    
  <li> All team members estimate their own work </li>
  <li> Each team member signs up to take on a task, rather than being told exactly 
    what to do. </li>
</ul>
<p> You will find the tasks for the Management sub-process in the <strong>Project 
  Management</strong> discipline and the corresponding work products under Project 
  Management domain. </p>
<p> The Management sub-process is written in such a way that your organization 
  can modify it to fit your style of development, without necessarily affecting 
  how you deal with the other sub-processes of&nbsp;<a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" guid="_HEVvgEmcEdu0xduwSKie-w">Solution</a> 
  and <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/intent_subprocess,_57_ZMEmbEdu0xduwSKie-w.html" guid="_57_ZMEmbEdu0xduwSKie-w">Intent</a>.<br />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_GXiogMvoEdqukPpotm3DYg
				</CategorizedElement>
				<CategorizedElement>
					_0TqQ4MlgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_QxjGYMWfEdqiT9CqkRksWQ
				</CategorizedElement>
				<CategorizedElement>
					_0pWNA8lgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_0nJNkslgEdmt3adZL5Dmdw
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="solution_subprocess"
				briefDescription="The Solution sub-process describes all aspects of creating the architecture, designing,  implementing, and testing the application."
				id="_HEVvgEmcEdu0xduwSKie-w" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/customcategories/resources/concept_obj.gif"
				presentationName="Solution"
				shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="new_custom_category,_HEVvgEmcEdu0xduwSKie-w"
					briefDescription="" id="-qwWeiX7WrSVHSluBe-J7yw" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-21T08:08:34"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p> The Solution sub-process, among others, guides how you perform the following 
  actions:</p>
<ul>
    
  <li> Determine architectural feasibility </li>
    
  <li> Define architecture </li>
    
  <li> Develop the architecture for, design, implement, and test a major change 
  </li>
  <li> Design, implement, and test a small change </li>
  <li>Implement and test a trivial change </li>
    
  <li> Test and validate builds of incrementally improved quality </li>
</ul>
<p> You find the tasks for this&nbsp;sub-process in the disciplines&nbsp;<strong>Analysis 
  and Design, Implementation, </strong>and <strong>Test</strong>, and the corresponding 
  work products under the <strong>Architecture, Development</strong>, and <strong>Test</strong> 
  domains. </p>
<p> The Solution sub-process is built upon the foundational <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" guid="_r8cVIEmbEdu0xduwSKie-w">Collaboration</a> 
  layer. This layer constitutes the backbone of OpenUP to ensure that:</p>
<ul>
    
  <li> All roles in OpenUP are involved in solution development </li>
    
  <li> <strong></strong>Validated builds are the responsibility of the entire 
    team </li>
    
  <li> <strong></strong>Best practices for collaborative development guide 
    development of the solution<strong>. </strong></li>
</ul>
<p> The Solution sub-process is written in such a way that your organization can 
  modify it to fit your style of development, without necessarily affecting how 
  you deal with the other sub-processes of <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" guid="_Aoz2gEmcEdu0xduwSKie-w">Management</a> 
  and <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/intent_subprocess,_57_ZMEmbEdu0xduwSKie-w.html" guid="_57_ZMEmbEdu0xduwSKie-w">Intent</a>. 
  <br />
    &nbsp;
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_9gocwMvoEdqukPpotm3DYg
				</CategorizedElement>
				<CategorizedElement>
					_0TX9AMlgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_0TeDoMlgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_0TkKQMlgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_xITr8MWXEdqWePvIjHInwg
				</CategorizedElement>
				<CategorizedElement>
					_A9k3UMWfEdqiT9CqkRksWQ
				</CategorizedElement>
				<CategorizedElement>
					_ou4CMMWfEdqiT9CqkRksWQ
				</CategorizedElement>
				<CategorizedElement>
					_0sx7islgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_0sluQslgEdmt3adZL5Dmdw
				</CategorizedElement>
				<CategorizedElement>
					_h2-iAfimEdmugcVr9AdHjQ
				</CategorizedElement>
				<CategorizedElement>
					_0nz79clgEdmt3adZL5Dmdw
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:Discipline"
				name="requirements"
				briefDescription="This discipline defines the minimal tasks required to elicit, analyze, specify, validate and manage the requirements for the system to be developed."
				id="_0TR2ZMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Requirements" variabilityType="na">
				<Presentation
					name="requirements,_0TR2ZMlgEdmt3adZL5Dmdw" briefDescription=""
					id="__rFCULv9EdmmUvZAZjqE3g" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-20T07:00:00" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Understand the problem to be solved
    </li>
    <li>
        Understand stakeholder needs (what users want)&nbsp;
    </li>
    <li>
        Define the requirements for the solution (what the system must do)
    </li>
    <li>
        Define the boundaries (scope) of the system
    </li>
    <li>
        Identify external interfaces for the system
    </li>
    <li>
        Identify technical constraints on the solution
    </li>
    <li>
        Provide the basis for planning iterations
    </li>
    <li>
        Provide the initial basis for estimating cost and schedule
    </li>
</ul>
<p>
    To achieve these goals, it is important to understand the definition and scope of the problem&nbsp;that we are trying
    to solve.&nbsp; <a class="elementLinkWithUserText" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholders</a>&nbsp;are identified and the problem to be solved is defined.
</p>
<p>
    Having agreed on the problem to be solved, the <a class="elementLink" href="./../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html" guid="_0Wh-sMlgEdmt3adZL5Dmdw">Requirements</a>&nbsp;for the system are elicited, organized, analyzed, validated and
    specified.
</p>
<p>
    Throughout the lifecycle, changes to the requirements are managed.
</p>
<p>
    The Requirements discipline is related to the other disciplines in the following ways:
</p>
<ul>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/analysis_and_design,_0TX9AMlgEdmt3adZL5Dmdw.html" guid="_0TX9AMlgEdmt3adZL5Dmdw">Analysis & Design</a>&nbsp;discipline gets its primary input from the
        Requirements discipline
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/test,_0TkKQMlgEdmt3adZL5Dmdw.html" guid="_0TkKQMlgEdmt3adZL5Dmdw">Test</a>&nbsp;discipline validates the system against the requirements
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/config_and_change_management,_0TwXgMlgEdmt3adZL5Dmdw.html" guid="_0TwXgMlgEdmt3adZL5Dmdw">Configuration & Change Management</a>&nbsp;discipline provides the mechanisms to
        manage changes to the requirements
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a>&nbsp;discipline plans the project and assigns
        requirements&nbsp;to each iteration by analyzing the prioritized requirements and assigning work.&nbsp;
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Task>_0fOAoMlgEdmt3adZL5Dmdw</Task>
				<Task>_0e1mIMlgEdmt3adZL5Dmdw</Task>
				<Task>_P9cMUPV_EdmdHa9MmVPgqQ</Task>
				<ReferenceWorkflow>
					_0o9ygclgEdmt3adZL5Dmdw
				</ReferenceWorkflow>
				<ReferenceWorkflow>
					_0pWNA8lgEdmt3adZL5Dmdw
				</ReferenceWorkflow>
				<ReferenceWorkflow>
					_0pJ_xslgEdmt3adZL5Dmdw
				</ReferenceWorkflow>
			</ContentCategory>
			<ContentCategory xsi:type="uma:Discipline"
				name="analysis_and_design"
				briefDescription="This discipline explains how to create a design from requirements that can be implemented by developers."
				id="_0TX9AMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Analysis &amp; Design" variabilityType="na">
				<Presentation
					name="architecture,_0TX9AMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_Bbq2MLv-EdmmUvZAZjqE3g" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-27T11:32:10" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purposes of Analysis &amp; Design are:
</p>
<ul>
    <li>
        To transform the requirements into a design of the system-to-be.
    </li>
    <li>
        To evolve a robust architecture for the system.
    </li>
    <li>
        To adapt the design to match the implementation environment.
    </li>
</ul>
<p>
    The Analysis &amp; Design discipline is related to other disciplines, as follows:
</p>
<ul>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/requirements,_0TR2ZMlgEdmt3adZL5Dmdw.html" guid="_0TR2ZMlgEdmt3adZL5Dmdw">Requirements</a> discipline provides the primary input for Analysis and Design.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/implementation,_0TeDoMlgEdmt3adZL5Dmdw.html" guid="_0TeDoMlgEdmt3adZL5Dmdw">Implementation</a> discipline implements the design.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/test,_0TkKQMlgEdmt3adZL5Dmdw.html" guid="_0TkKQMlgEdmt3adZL5Dmdw">Test</a> discipline tests system designed during Analysis and Design.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a> discipline plans the project, and each iteration.
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Task>_0f-1oMlgEdmt3adZL5Dmdw</Task>
				<Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
				<Task>_0hmmQclgEdmt3adZL5Dmdw</Task>
				<Task>_0fshwMlgEdmt3adZL5Dmdw</Task>
			</ContentCategory>
			<ContentCategory xsi:type="uma:Discipline"
				name="implementation" briefDescription=""
				id="_0TeDoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Implementation" variabilityType="na">
				<Presentation name="development,_0TeDoMlgEdmt3adZL5Dmdw"
					briefDescription="" id="_D5dHQLv-EdmmUvZAZjqE3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-14T12:56:02"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Incrementally build the system
    </li>
    <li>
        Verify that the technical units used to build the system work as specified
    </li>
</ul>
<p>
    With each iteration, the tasks in this discipline will evolve an ever more capable and ever more stable <a class="elementLink" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">Build</a>.
</p>
<p>
    When working on the system, the <a class="elementLink" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">Developer</a>&nbsp;will use the architecture and also be constrained by the
    architecture.
</p>
<p>
    This&nbsp;discipline is related to the other disciplines in the following ways:
</p>
<ul>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/requirements,_0TR2ZMlgEdmt3adZL5Dmdw.html" guid="_0TR2ZMlgEdmt3adZL5Dmdw">Requirements</a>&nbsp;discipline defines&nbsp;what will be implemented
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/analysis_and_design,_0TX9AMlgEdmt3adZL5Dmdw.html" guid="_0TX9AMlgEdmt3adZL5Dmdw">Analysis & Design</a>&nbsp;discipline organizes and constrains the
        implementation
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/test,_0TkKQMlgEdmt3adZL5Dmdw.html" guid="_0TkKQMlgEdmt3adZL5Dmdw">Test</a>&nbsp;discipline validates that system&nbsp;built meets
        the&nbsp;requirements
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/config_and_change_management,_0TwXgMlgEdmt3adZL5Dmdw.html" guid="_0TwXgMlgEdmt3adZL5Dmdw">Configuration & Change Management</a>&nbsp;discipline provides the mechanisms to
        manage changes to the system built
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a>&nbsp;discipline plans what functionality will be implemented
        in each iteration
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Task>_0iL1EMlgEdmt3adZL5Dmdw</Task>
				<Task>_0hyzgMlgEdmt3adZL5Dmdw</Task>
				<Task>_0iYCUMlgEdmt3adZL5Dmdw</Task>
			</ContentCategory>
			<ContentCategory xsi:type="uma:Discipline" name="test"
				briefDescription="This discipline defines the minimal set of tasks required to plan, implement, run and evaluate the testing of a system."
				id="_0TkKQMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Test" variabilityType="na">
				<Presentation name="test,_0TkKQMlgEdmt3adZL5Dmdw"
					briefDescription="" id="_FuQswLv-EdmmUvZAZjqE3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T02:16:25"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Find and document defects.
    </li>
    <li>
        Validate and prove the assumptions made in design and requirement specifications through concrete demonstration.
    </li>
    <li>
        Validate that the software product works as designed.
    </li>
    <li>
        Validate that the requirements are implemented appropriately.
    </li>
</ul>
<p>
    A good test effort is based on the philosophy of test early and test often. In addition, it is driven by questions such
    as:
</p>
<ul>
    <li>
        How could this software break?
    </li>
    <li>
        In what possible situations could this software fail to work predictably?
    </li>
</ul>
<p>
    Testing challenges the assumptions, risks, and uncertainty inherent in the work of other disciplines, and addresses
    those concerns using concrete demonstration and impartial evaluation.
</p>
<p>
    The Test discipline is related to the other disciplines in the following ways:
</p>
<ul>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/requirements,_0TR2ZMlgEdmt3adZL5Dmdw.html" guid="_0TR2ZMlgEdmt3adZL5Dmdw">Requirements</a> discipline captures requirements for the software product, which is
        one of the primary inputs for identifying what tests to perform.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/analysis_and_design,_0TX9AMlgEdmt3adZL5Dmdw.html" guid="_0TX9AMlgEdmt3adZL5Dmdw">Analysis and Design</a> discipline determines the appropriate design for the
        software product, which is another important input for identifying what tests to perform.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/implementation,_0TeDoMlgEdmt3adZL5Dmdw.html" guid="_0TeDoMlgEdmt3adZL5Dmdw">Implementation</a> discipline produces builds of the software product that are
        validated by the Test discipline. Within an iteration, multiple builds will be tested - typically one per test
        cycle.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a> discipline plans the project and the necessary work in each
        iteration. Described in an Iteration Plan, this artifact is an important input used when you define the correct
        evaluation mission for the test effort.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/config_and_change_management,_0TwXgMlgEdmt3adZL5Dmdw.html" guid="_0TwXgMlgEdmt3adZL5Dmdw">Configuration and Change Management</a> discipline controls changes within the
        project. The test effort verifies that each change has been completed appropriately.<br />
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Task>_0iwc0clgEdmt3adZL5Dmdw</Task>
				<Task>_0jVEkMlgEdmt3adZL5Dmdw</Task>
				<Task>_0jO98MlgEdmt3adZL5Dmdw</Task>
			</ContentCategory>
			<ContentCategory xsi:type="uma:Discipline"
				name="project_management" briefDescription=""
				id="_0TqQ4MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Project Management" variabilityType="na">
				<Presentation
					name="project_management,_0TqQ4MlgEdmt3adZL5Dmdw"
					briefDescription="" id="_GybfgLv-EdmmUvZAZjqE3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-14T01:11:49"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Keep the team focused on continually delivering tested software product for stakeholder evaluation
    </li>
    <li>
        Help prioritize the sequence of work
    </li>
    <li>
        Help create an effective working environment to maximize team productivity
    </li>
    <li>
        Keep stakeholders and the team informed on project progress
    </li>
    <li>
        Provide a framework to manage project risk and continually adapt to change
    </li>
</ul>
<p>
    Project management acts as a bridge between the stakeholders and the development team. It is important that project
    management activities add value to creating a high performance work environment where
</p>
<ul>
    <li>
        Stakeholders have confidence in the team’s ability to successfully deliver value and understand the capabilities
        and tradeoffs of the technical platform
    </li>
    <li>
        Project team members understand stakeholder intentions and confirm that understanding by continually producing a
        working software product for evaluation
    </li>
</ul>
<p>
    The <a class="elementLinkWithUserText" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">Project Manager</a> works with <a class="elementLinkWithUserText" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholders</a> to create a coarse-grained <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html" guid="_0a6vcMlgEdmt3adZL5Dmdw">Project Plan</a> based on the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">Vision</a> for the project. This project plan describes the lengths and objectives of
    the four <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/concepts/phase,__7xOEC7aEdqHMdmRzC0-2g.html" guid="__7xOEC7aEdqHMdmRzC0-2g">Phases</a> and the <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html" guid="_lam4ADkBEduxovfWMDsntw">Iterations</a> within each phase.
</p>
<p>
    At the beginning of each iteration, the project manager works with stakeholders and the development team to prioritize
    requirements, change requests, and defects in the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Work Item List</a> and allocate them to the upcoming iteration.
</p>
<p>
    The project manager then works with the development team to create a fine-grained <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/iteration_plan,_0aQBEslgEdmt3adZL5Dmdw.html" guid="_0aQBEslgEdmt3adZL5Dmdw">Iteration Plan</a> based on the objectives in the project plan and the work items
    assigned to the iteration. Team members volunteer to collaborate on allocated work items and provide the project
    manager with tasks and time estimates to deliver those work items.
</p>
<p>
    The team demonstrates they understand stakeholder intentions throughout each iteration by building a working software
    product that is demonstrated to stakeholders to affirm understanding and elicit feedback. At the end of each iteration,
    the evaluation of the final <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">Build</a> must include test results and should be captured in a <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/status_assessment,_0bA2EMlgEdmt3adZL5Dmdw.html" guid="_0bA2EMlgEdmt3adZL5Dmdw">Status Assessment</a> and communicated to all stakeholders and team members.
</p>
<p>
    The development team demonstrates continual progress to stakeholders by reporting closed-out work items in each
    iteration through the <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/reports/project_burndown,_ePrt8Dj3EduxovfWMDsntw.html" guid="_ePrt8Dj3EduxovfWMDsntw">Project Burndown</a>. The team can use <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/reports/iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA.html" guid="_uAzgkDg3Edu4E8ZdmlYjtA">Iteration Burndown</a> to demonstrate progress during an iteration.
</p>
<p>
    Project management needs to consider the uncertainties facing the project (i.e. <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html" guid="_0bsLgMlgEdmt3adZL5Dmdw">Risks</a>) and pro-actively work with stakeholders and the team to continually adapt to
    changes in business needs, system requirements, and technical capabilities.
</p>
<p>
    This discipline is related to the other disciplines in the following ways:
</p>
<ul>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/requirements,_0TR2ZMlgEdmt3adZL5Dmdw.html" guid="_0TR2ZMlgEdmt3adZL5Dmdw">Requirements</a> discipline describes stakeholder intent and expectations, which
        helps prioritization of work to be done throughout iterations
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/analysis_and_design,_0TX9AMlgEdmt3adZL5Dmdw.html" guid="_0TX9AMlgEdmt3adZL5Dmdw">Analysis &amp; Design</a> discipline describes technical approaches and tradeoffs
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/implementation,_0TeDoMlgEdmt3adZL5Dmdw.html" guid="_0TeDoMlgEdmt3adZL5Dmdw">Implementation</a> discipline builds the product
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/test,_0TkKQMlgEdmt3adZL5Dmdw.html" guid="_0TkKQMlgEdmt3adZL5Dmdw">Test</a> discipline provides objective test results of the built product
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/config_and_change_management,_0TwXgMlgEdmt3adZL5Dmdw.html" guid="_0TwXgMlgEdmt3adZL5Dmdw">Configuration and Change Management</a> discipline provides an environment to manage
        product integrity and adapt to change<br />
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Task>_0l53cMlgEdmt3adZL5Dmdw</Task>
				<Task>_0lC70MlgEdmt3adZL5Dmdw</Task>
				<Task>_0keUEMlgEdmt3adZL5Dmdw</Task>
				<Task>_8S2aICbYEdqh1LYUOGRh2A</Task>
			</ContentCategory>
			<ContentCategory xsi:type="uma:Discipline"
				name="config_and_change_management"
				briefDescription="This discipline explains how to control changes to artifacts, ensuring a synchronized evolution of the set of Work Products composing a software system."
				id="_0TwXgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Configuration &amp; Change Management"
				variabilityType="na">
				<Presentation
					name="change_management,_0TwXgMlgEdmt3adZL5Dmdw"
					briefDescription="" id="_H9TXMLv-EdmmUvZAZjqE3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T07:05:40"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Maintain a consistent set of work products as they evolve;
    </li>
    <li>
        Maintain consistent builds of the software;
    </li>
    <li>
        Provide an efficient means to adapt to changes and issues and re-plan work accordingly;
    </li>
    <li>
        Provide data for measuring progress
    </li>
</ul>
<p>
    In many organizations, the term "configuration management" implies all of these things.
</p>
<p>
    Within the context of this process, configuration management refers to the ability to maintain&nbsp;<a class="elementLink" href="./../../openup_basic/guidances/termdefinitions/version,_eX8K8ElyEducWJcS4yanqg.html" guid="_eX8K8ElyEducWJcS4yanqg">version</a>s of artifacts and consistent&nbsp;<a class="elementLink" href="./../../openup_basic/guidances/termdefinitions/configuration,__Cw30ElxEducWJcS4yanqg.html" guid="__Cw30ElxEducWJcS4yanqg">configuration</a>s of artifacts, addressing the first two objectives listed above.
    Change Management refers to the process of managing changes to configuration controlled artifacts, addressing the
    latter two objectives listed above.
</p>
<p>
    Although it is important to keep up to date versions and configurations of all work product, the primary work products
    of concern&nbsp;are the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/implementation,_0YoQcMlgEdmt3adZL5Dmdw.html" guid="_0YoQcMlgEdmt3adZL5Dmdw">Artifact: Implementation</a>&nbsp;and&nbsp;the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">Artifact: Build</a>.
</p>
<p>
    Changes are managed via the <a class="elementLinkWithType" href="./../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html" guid="_0mwzEclgEdmt3adZL5Dmdw">Task: Request Change</a>&nbsp;and subsequent prioritization and disposition of change requests via the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>.
</p>
<p>
    This discipline spans the entire lifecycle. Every other discipline relies upon the configuration and change management
    discipline to maintain a consistent, up to date, set of work products and to prioritize and track changes to those work
    products throughout the lifecycle.
</p>
<p>
    Configuration and change management is done by everyone on the development team. Because of the importance and
    pervasiveness of this discipline, configuration and change management guidance is associated with tasks and work
    products in all other disciplines.
</p>]]></MainDescription>
					<KeyConsiderations><![CDATA[<p>
    It is assumed that the project has some form of configuration management system, such as CVS, to maintain version and
    configuration information and enable collaborative development of the system. Without this, all but the most trivial of
    development will be virtually impossible.
</p>]]></KeyConsiderations>
				</Presentation>
				<Concept>_6jdvECb3Edqh1LYUOGRh2A</Concept>
				<Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
				<Concept>_0cEmAMlgEdmt3adZL5Dmdw</Concept>
				<Guideline>_fnZj0NVXEdqy9sbRhejO5Q</Guideline>
				<Guideline>_i8bUEL6cEdqti4GwqTkbsQ</Guideline>
				<Guideline>_SM4YIL6dEdqti4GwqTkbsQ</Guideline>
				<Guideline>__yQQ4L6REdqti4GwqTkbsQ</Guideline>
				<Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
				<Guideline>_0jhR0MlgEdmt3adZL5Dmdw</Guideline>
				<Task>_0mwzEclgEdmt3adZL5Dmdw</Task>
				<ReferenceWorkflow>
					_0pJ_xslgEdmt3adZL5Dmdw
				</ReferenceWorkflow>
			</ContentCategory>
			<ContentCategory xsi:type="uma:DisciplineGrouping"
				name="openup_basic_disciplines"
				briefDescription="This is the list of disciplines in OpenUP/Basic."
				id="__BZycP1UEdmek8CQTQgrOQ" orderingGuide="" suppressed="false"
				presentationName="Disciplines" variabilityType="na">
				<Presentation
					name="openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ"
					briefDescription="" id="_AYGfoP1VEdmek8CQTQgrOQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-07-25T11:44:21"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Discipline>_0TR2ZMlgEdmt3adZL5Dmdw</Discipline>
				<Discipline>_0TX9AMlgEdmt3adZL5Dmdw</Discipline>
				<Discipline>_0TeDoMlgEdmt3adZL5Dmdw</Discipline>
				<Discipline>_0TkKQMlgEdmt3adZL5Dmdw</Discipline>
				<Discipline>_0TqQ4MlgEdmt3adZL5Dmdw</Discipline>
				<Discipline>_0TwXgMlgEdmt3adZL5Dmdw</Discipline>
			</ContentCategory>
			<ContentCategory xsi:type="uma:Domain"
				name="openup_basic_wp"
				briefDescription="This is the list of work products in OpenUp/Basic organized by domain."
				id="_s4Z9AMWXEdqWePvIjHInwg" orderingGuide="" suppressed="false"
				presentationName="Work Products" variabilityType="na">
				<Presentation
					name="openup_basic_domains,_s4Z9AMWXEdqWePvIjHInwg"
					briefDescription="" id="-15BvSftWbF7VdZ_W8YycBQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-06T08:47:21"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Subdomain name="architecture"
					briefDescription="This is the list of work products related to architecture domain."
					id="_xITr8MWXEdqWePvIjHInwg" orderingGuide="" suppressed="false"
					presentationName="Architecture" variabilityType="na">
					<Presentation
						name="architecture,_xITr8MWXEdqWePvIjHInwg" briefDescription=""
						id="-9qPK9k01PN_COE9YPXpw8Q" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-04-06T08:51:46" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<WorkProduct>_PoDR0NbYEdmlO4WLYHrJaQ</WorkProduct>
					<WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
				</Subdomain>
				<Subdomain name="change_management"
					briefDescription="This is the list of work products related to change management domain."
					id="_vUzp0MWeEdqiT9CqkRksWQ" orderingGuide="" suppressed="false"
					presentationName="Change Management" variabilityType="na">
					<Presentation
						name="new_domain,_vUzp0MWeEdqiT9CqkRksWQ" briefDescription=""
						id="-X9nP8esP9nWMvx1wmMaJAA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-04-06T08:54:47" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</Subdomain>
				<Subdomain name="development"
					briefDescription="This is the list of work products related to development domain."
					id="_A9k3UMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false"
					presentationName="Development" variabilityType="na">
					<Presentation
						name="new_domain,_A9k3UMWfEdqiT9CqkRksWQ" briefDescription=""
						id="-xO3vqWsd3W98UXFsyp-wGA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-04-06T08:56:28" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<WorkProduct>_ZTGAYL3uEdqLRJZPGVbHDA</WorkProduct>
					<WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0YuXEclgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0YoQcMlgEdmt3adZL5Dmdw</WorkProduct>
				</Subdomain>
				<Subdomain name="project_management"
					briefDescription="This is the list of work products related to project management domain."
					id="_QxjGYMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false"
					presentationName="Project Management" variabilityType="na">
					<Presentation
						name="new_domain,_QxjGYMWfEdqiT9CqkRksWQ" briefDescription=""
						id="-N4r_U0LZhZ_K-8gfHON9BA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-04-06T08:58:20" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<WorkProduct>_0aQBEslgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0a6vcMlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0bA2EMlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
					<WorkProduct>_Ckay8Cc_EduIsqH1Q6ZuqA</WorkProduct>
				</Subdomain>
				<Subdomain name="requirements"
					briefDescription="This is the list of work products related to requirements domain."
					id="_allMQMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false"
					presentationName="Requirements" variabilityType="na">
					<Presentation
						name="new_domain,_allMQMWfEdqiT9CqkRksWQ" briefDescription=""
						id="-d5O4LFNaAs4YRDxfxH3CRw" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-04-06T08:59:52" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
					<WorkProduct>_0VMh8MlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
					<WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
				</Subdomain>
				<Subdomain name="test"
					briefDescription="This is the list of work products related to test domain."
					id="_ou4CMMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false"
					presentationName="Test" variabilityType="na">
					<Presentation
						name="new_domain,_ou4CMMWfEdqiT9CqkRksWQ" briefDescription=""
						id="-Mxgu9hq0upbMqZlq1xBFYw" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-04-06T09:00:58" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<WorkProduct>_0ZS-0MlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0ZlSsMlgEdmt3adZL5Dmdw</WorkProduct>
					<WorkProduct>_0ZfMEMlgEdmt3adZL5Dmdw</WorkProduct>
				</Subdomain>
			</ContentCategory>
			<ContentCategory xsi:type="uma:RoleSet"
				name="openup_basic_roles"
				briefDescription="This is the list of roles in OpenUP/Basic."
				id="_TZIJ0O8NEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
				presentationName="Roles" variabilityType="na">
				<Presentation
					name="openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg"
					briefDescription="" id="_Tb5J8O8NEdmKSqa_gSYthg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-21T11:08:47"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
				<Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
				<Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
				<Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
				<Role>_0dsWoMlgEdmt3adZL5Dmdw</Role>
				<Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
				<Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType"
				name="assessment"
				briefDescription="These work products result from the analysis or evaluation of some particular aspect of the project, organization, business, or solution being developed. They are often used to determine the health of different aspects of the project or the organization."
				id="_2VBNIDz6Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Assessment" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_2VBNIDz6Edq03rqPoNVoKg"
					briefDescription="" id="-5S6ney_fFdEHm49XznPRiA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:38:35"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_0bA2EMlgEdmt3adZL5Dmdw</WorkProduct>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType"
				name="concept"
				briefDescription="These work products present an overview of key ideas or basic background information. They ensure that everyone on a project has a common understanding of these items."
				id="_8XKVwDz6Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Concept" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_8XKVwDz6Edq03rqPoNVoKg"
					briefDescription="" id="-Nl-rJ_6aaAG2jpJyGm_wcg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:39:12"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_PoDR0NbYEdmlO4WLYHrJaQ</WorkProduct>
				<WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType"
				name="infrastructure"
				briefDescription="These work products provide the required tools and technical environment to setup the required development infrastructure for a project."
				id="_EL6rgDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Infrastructure" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_EL6rgDz7Edq03rqPoNVoKg"
					briefDescription="" id="-CKZiRxRx_TZhMbquLd4Sqw" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:40:04"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType" name="model"
				briefDescription="These work products are a special kind of specification that are an abstract representation or simulation of a &quot;system&quot; that provides a complete description of the system from a particular perspective. Models are often used to gain a better understanding of how the system works or to document design decisions for the actual implementation. Models are often made up of several different kinds of parts, these parts are categorized as Model Elements."
				id="_MQbUgDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Model" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_MQbUgDz7Edq03rqPoNVoKg"
					briefDescription="" id="-ARfZUsgYE1XrKQlDgr9mEQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:40:58"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType"
				name="model_element"
				briefDescription="These work products are the individual parts that make-up a Model."
				id="_SxUOoDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Model Element" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_SxUOoDz7Edq03rqPoNVoKg"
					briefDescription="" id="-cW3aVzDjHhqkVayoItUQqw" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:41:44"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_0VMh8MlgEdmt3adZL5Dmdw</WorkProduct>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType" name="plan"
				briefDescription="These work products provide a description of the means of achieving an objective. A successful project may include many different types of plans."
				id="_ZR7b8Dz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Plan" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_ZR7b8Dz7Edq03rqPoNVoKg"
					briefDescription="" id="-vpMAMS8Cz-z9DQQhxbjjLA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:42:22"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_0aQBEslgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_0a6vcMlgEdmt3adZL5Dmdw</WorkProduct>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType"
				name="project_data"
				briefDescription="These work products identify the information that is used to manage the project. Collected information may either be kept as permanent records or used solely on an interim basis at a particular point in the project."
				id="_hOaxYDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Project Data" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_hOaxYDz7Edq03rqPoNVoKg"
					briefDescription="" id="-DBPx56p4GCNFpRTT8uOmiQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:43:18"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
				<WorkProduct>_0ZlSsMlgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_Ckay8Cc_EduIsqH1Q6ZuqA</WorkProduct>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType"
				name="solution"
				briefDescription="These work products consist of those that are part of the overall solution or product, or that contribute directly to it."
				id="_mC_6sDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Solution" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_mC_6sDz7Edq03rqPoNVoKg"
					briefDescription="" id="-sIh01vzZACgxRrG_sv7DVw" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:43:49"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    <font face="Arial" size="2">Many work products contribute to the overall solution or product.&nbsp; Tests and test data
    is needed to validate the solution.&nbsp; User support materials of all sorts are needed in the final product.&nbsp;
    Source code and other implementation elements are required to build the final product.&nbsp; These work products,
    including those that ship with the product, are categorized as Solution.</font>
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_0YuXEclgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_0YoQcMlgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_0ZfMEMlgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
			</ContentCategory>
			<ContentCategory xsi:type="uma:WorkProductType"
				name="specification"
				briefDescription="These work products define the interfaces between different parts of the project, especially between different domains. They define exactly what something is or what it must do. For example, the Architecture shows how system requirements are mapped into design."
				id="_tJJeADz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false"
				presentationName="Specification" variabilityType="na">
				<Presentation
					name="new_work_product_kind,_tJJeADz7Edq03rqPoNVoKg"
					briefDescription="" id="-C5ih3s1Vn_9qQbjm85-GYg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T11:44:42"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<WorkProduct>_0ZS-0MlgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
				<WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
				<WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
			</ContentCategory>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ContentPackage"
			name="collaboration" briefDescription="Collaboration sub-process."
			id="_0UCrYclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
			global="false">
			<MethodPackage xsi:type="uma:ContentPackage"
				name="core_principles" briefDescription=""
				id="_OGGKkMpyEdqC_NfSivunjA" orderingGuide="" suppressed="false"
				global="false">
				<ContentElement xsi:type="uma:Concept"
					name="core_principle_collaborate"
					briefDescription="Develop collaborative practices that foster a healthy team environment. Good collaborative practices align the interests of project participants and help them develop a shared understanding of the project."
					id="_KkTIsMp7EdqC_NfSivunjA" orderingGuide="" suppressed="false"
					presentationName="Collaborate to align interests and share understanding"
					variabilityType="na">
					<Presentation
						name="core_principle_collaborate,_KkTIsMp7EdqC_NfSivunjA"
						briefDescription="" id="-IXfkG-XfnoEo0xgux482Kw" orderingGuide=""
						suppressed="false" authors="Steve Adolph"
						changeDate="2006-09-28T01:35:17"
						changeDescription="Initial Version |Removed metaphoric photo. Removed &quot;Don't go dark&quot; collaborative practice.|Removed metaphoric photo. Removed &quot;Don't go dark&quot; collaborative practice. Removed open_up from page name.|Added &quot;organize around the architecture practice&quot;"
						version="0.03">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Software is created by people with different interests and skills who must work together to create software
    effectively.
</p>
<p>
    Therefore, develop practices that foster a healthy team environment. A healthy team environment enables effective
    collaboration, which aligns the interests of project participants (development team, quality assurance, product
    stakeholders, customers) and helps project participants develop a shared understanding of the project.
</p>
<h3 style="MARGIN: 12pt 0in 3pt">
    Practices
</h3>
<p style="MARGIN: 12pt 0in 3pt">
    The next sections describe the practices associated with this principle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Maintain a common understanding
</h4>
<p>
    Project participants require a common understanding of a project to cooperate effectively. Otherwise, disorder sets in,
    because the team members cannot align their understanding and interests and will work with different purposes.
</p>
<p>
    Be proactive communicating and sharing information with project participants and do not assume that everyone will just
    find what they need to know or that each person has the same understanding of the project as everyone else. Use work
    products, such as the Vision, Work Items List, and Requirements to align the understanding between the stakeholders and
    developers. Use the architecture to focus and align the interests of the developers. At the end of each iteration, get
    agreement on whether the iteration goals have been reached, and, if not, what actions must be taken.
</p>
<h4 style="MARGIN: auto 0in">
    Foster a high-trust environment
</h4>
<p>
    People who do not feel safe will not communicate their ideas, take the initiative, or admit their ignorance. In these
    low-trust work environments, activities must be laboriously planned in detailed, carefully supervised, and extensively
    audited. A team working in a low-trust environment may not be able to keep up with rapid change.
</p>
<p>
    Therefore, take actions that foster a high-trust environment:
</p>
<ul>
    <li>
        <p>
            <strong>Manage by intent.</strong> Create an environment where teams manage themselves, and managers serve as
            mentors to teams to help them complete their objectives.
        </p>
    </li>
    <li>
        <p>
            <strong>Tear down the walls.</strong> Work to remove both the physical and mental barriers that inhibit
            development of a common understanding among project participants.
        </p>
    </li>
    <li>
        <p>
            <strong>Walk a mile (or 1.6 kilometers) in someone else's shoes.</strong> Respect and try to understand the
            perspectives of others before criticizing their ideas or responding to their criticism.
        </p>
    </li>
    <li>
        <p>
            <strong>Respond to conversations with relevance.</strong> People, especially technical workers, often respond
            with argument or disagreement, which leads to rivalry and the establishment of a pecking order in which only a
            few people contribute to the discussion. Develop and encourage behavior that values curiosity and relevance
            over argument and disagreement.
        </p>
    </li>
    <li>
        <p>
            <strong>Always look to yourself first for the source of communication problems.</strong> Understand that
            everyone has a perspective that is largely invisible to the individual (although it is often obvious to
            everyone else). Develop the habit of identifying the assumptions and prejudices within yourself that lead to
            argument or lack of communication. Learn to overcome these in the moment of the conversation. This takes
            practice. There are times when others may be intractable, but often the problem can be addressed by wrestling
            with your own perspective.
        </p>
    </li>
    <li>
        <p>
            <strong>Understand the constraints of the workplace culture.</strong> Some organizations operate in a way that
            allows people to admit mistakes, ask questions, and experiment. Some organizations limit these expressions, but
            they may change, with time and effort. Some organizations have no tolerance for error, and workers put
            themselves in danger by admitting mistakes or experimenting. Understand your environment and protect yourself
            accordingly. Understand that low-trust organizations have more problems in achieving their goals and provide a
            less satisfying environment.
        </p>
    </li>
</ul>
<h4 style="MARGIN: auto 0in">
    Share responsibility
</h4>
<p>
    There may be disadvantages for individuals when they work alone. Communication with the team can become sporadic, and
    then stop. People may get into trouble and not ask for help, or not realize that the team is in trouble and needs their
    help. Their understanding of the project may become misaligned with the rest of the team. In the worse situations,
    trust breaks down as individuals see the team working at different purposes to their interests.
</p>
<p>
    Therefore, while individuals have primary responsibility for their work products, responsibility for work products is
    shared. Nothing is someone else's responsibility. This may mean either taking up slack and working with someone who is
    lagging for some reason or asking for help. Experienced staff should be extra-vigilant and watch over less-experienced
    staff, encouraging them to ask for help if necessary.
</p>
<h4 style="MARGIN: auto 0in">
    Learn continuously
</h4>
<p>
    Not only is software development a fast-developing field where technical skills rapidly become obsolete, it is also an
    empirical process, where software is developed in a manner that sometimes resembles trial and error. Furthermore,
    software is developed by teams of people who must work together to achieve results.
</p>
<p>
    Therefore, continuously develop both your technical and interpersonal skills. Learn from the examples of your
    colleagues. Take the opportunity to be both a student of your colleagues, as well as a teacher to them. Always increase
    your personal ability to overcome your own antagonism toward other team members.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Organize around the architecture
</h4>
<br />
<p class="MsoNormal" style="MARGIN: 0in 0in 0pt">
    As projects grow in size, communication between team members becomes increasingly complex.<span     style="mso-spacerun: yes">&nbsp;</span>While all team members understand the overall system, they can focus primarily
    on the one or more subsystems they are responsible for. Organizing around the architecture also helps with
    communication by providing the team with a common vocabulary and shared mental model of the system<strong>.</strong>
    Communication between team members becomes increasingly complex. Therefore, organize the team around the architecture
    and the vocabulary and shared mental model of the system. However, be watchful that individuals and teams organized
    this way do not form a so-called <em>silo mentality</em>, where they focus strictly on their subsystems and become
    ignorant of the other subsystems.
</p>
<p>
    An architecture that reflects the organization’s structure is not evidence that the team has successfully organized
    around the architecture. If organizations and teams are not organized around the architecture, then the architecture
    will naturally conform to the organization, as a result of political and cultural influences. In the end, the
    architecture and the organization will almost always be a reflection of each other. The goal is to guide team
    organization from the needs of the architecture as much as possible.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="core_principle_evolve"
					briefDescription="Divide the project up into short, time-boxed iterations to demonstrate incremental value and obtain early and continuous feedback."
					id="_GXiogMvoEdqukPpotm3DYg" orderingGuide="" suppressed="false"
					presentationName="Evolve to continuously obtain feedback and improve"
					variabilityType="na">
					<Presentation
						name="core_principle_evolve,_GXiogMvoEdqukPpotm3DYg"
						briefDescription="" id="-aMD1wQVJLzzlMARfHBdOBQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-28T01:35:31"
						changeDescription="removed OpenUP from page name."
						version="0.02">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    It is usually not possible to know all stakeholders' needs, be aware of all project risks, comprehend all project
    technologies, or know how to work with your colleagues. Even if it were possible to know all of these things, they are
    likely to change over the life of the project. Therefore, divide the project into short, time-boxed iterations to
    demonstrate incremental value and to get early and continuous feedback.<span style="mso-spacerun: yes">&nbsp;</span>
</p>
<p>
    The intention behind this principle is to continuously get feedback and to improve both the product and the process of
    the project team. When you provide structure and create a mindset for continuous feedback and improvement, changes are
    accommodated more easily, feedback is captured early and often, high-priority risks are confronted early in the
    project. By constantly identifying and attacking risks, there is more confidence in project progress and quality.
</p>
<p>
    Not only does the product evolve, but the team also finds better ways to work together and get involved with
    stakeholders.<span style="mso-spacerun: yes">&nbsp;</span> The process followed by the team can be adjusted accordingly
    to leverage lessons learned and adjust project pace and needs.
</p>
<h3 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Practices
</h3>
<p style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    The next sections describe the practices associated with this principle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Develop your project in iterations
</h4>
<p>
    Developing a system in a single, linear pass is difficult, because it makes it expensive to incorporate changes and new
    knowledge. Worse, it can delay the discovery and mitigation of risks, because development efforts are scheduled later
    in the lifecycle.
</p>
<p>
    Therefore, divide your project into a series of time-boxed iterations, and plan your project iteratively. This
    iterative strategy enables you to incrementally deliver capabilities (such as an executable, usable subset of
    implemented and tested requirements) that can be assessed by stakeholders at the end of each iteration. This provides
    rapid and timely feedback loops so that issues can be addressed and improvements made at a lower cost. Also, this is
    accomplished while you still have sufficient budget and time left to do so, and you have not gone so far ahead that
    major rework is required. Iterative development enables teams to continuously improve software throughout the
    development <a href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" guid="_0uyGoMlgEdmt3adZL5Dmdw">lifecycle</a>.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Focus iterations on meeting the next management milestone
</h4>
<p>
    Without a focus to bring closure to important project issues, such as stakeholder concurrence regarding scope and
    proving the proposed architecture, a project can appear to make progress while risks and unresolved issues pile up.
</p>
<p>
    Therefore, divide the project into phases (such as Inception, Elaboration, Construction, and Transition), with each
    phase having a clearly visible management milestone. The focus of each iteration within a phase is on achieving that
    milestone. <span style="mso-spacerun: yes">&nbsp;</span>
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Manage risks
</h4>
<p>
    Deferring difficult and risky issues until later in a project significantly increases the risk of project failure. Such
    procrastination may lead to investing in the wrong technologies, a bad design, or a set of requirements that may not
    address stakeholder needs.
</p>
<p>
    Therefore, attack <a href="./../../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html" guid="_0bsLgMlgEdmt3adZL5Dmdw">risks</a> early, or they will attack you. Continuously identify and prioritize risks,
    and then devise strategies to mitigate them. Determine the focus of iterations based on risks. For example,
    architecturally significant risks should be addressed early in the project, no later than the end of Elaboration phase,
    when the architecture has been proven and baselined.
</p>
<p>
    At the beginning of each iteration, the entire team should consider what risks they are facing, and update the risk
    list. Make it each team member’s and stakeholder’s responsibility to have the courage to speak up and openly discuss
    risks, as well as to have the courage not to criticize the people who do speak up, even though the risk may point to a
    flaw in their area of responsibility. For each risk, articulate a plan for tracking and mitigating the risk.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Embrace and manage change
</h4>
<p>
    Change is inevitable, and while change presents opportunities to enhance stakeholder value, unconstrained change will
    result in a bloated, deficient system and unmet stakeholder needs. Furthermore, the later in the development cycle a
    change is made, the more the change is likely to cost.
</p>
<p>
    Therefore, both embrace and manage change. Embracing change helps you to build a system that addresses stakeholder
    needs, and managing change allows you to reduce costs and improve predictability of those changes. Changes made early
    in the project can usually be made with limited cost. As you progress in your project, changes can become increasingly
    costly.
</p>
<p>
    To satisfy customer needs, you typically need to introduce changes to the project, but the customer must be made aware
    of the impact that those changes have on the project cost and schedule. Understand the impact of a change in the
    current phase, and isolate team members from disruptive changes during the current iteration. Change requests are
    reviewed and prioritized during the current iteration, but are not acted upon until assigned to a future iteration.
</p>
<p>
    If necessary, document the changes. For informal projects, a discussion with stakeholders may be enough.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Measure progress objectively
</h4>
<p>
    If you do not objectively know how your project is progressing, you do not really know if it is failing or succeeding.
    Uncertainty and change make a software project’s progress difficult to measure objectively, and people have a most
    amazing ability to believe all is well in the face of catastrophe.
</p>
<p>
    Therefore, get a clear picture of project status by objectively measuring progress. The best measure of progress is the
    delivery of working software, which is something that you do by taking an evolutionary approach.<span     style="mso-spacerun: yes">&nbsp;</span>You can also define a set of objective <a href="./../../../openup_basic/guidances/concepts/metrics,_0mYYkMlgEdmt3adZL5Dmdw.html" guid="_0mYYkMlgEdmt3adZL5Dmdw">metrics</a> to collect during an iteration (for example, requirements that were
    implemented and validated, number of defects issued compared with number fixed) and review them as part of the <a href="./../../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html" guid="_0l53cMlgEdmt3adZL5Dmdw"><span     style="COLOR: windowtext">iteration assessment</span></a>. Do not rely on single metrics. Rather, use a combination of
    metrics and look for trends.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Continuously re-evaluate what you do
</h4>
<p>
    People make mistakes during a project. If we chose to hide those mistakes, then we risk repeating the same mistakes. In
    addition, such repressed social dynamic issues can poison the team.
</p>
<p>
    Therefore, on a regular basis, ask questions and verify assumptions about the project. Regularly meet with the team
    to&nbsp;track status and identify risks and issues. This can be done daily when the team gathers to share the status of
    individual responsibilities and identify and address issues. At the end of iterations, <a href="./../../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html" guid="_0l53cMlgEdmt3adZL5Dmdw"><span     style="COLOR: windowtext">assess the status</span></a> of what has been done and look for areas of improvement that can
    be addressed in the next iteration. Have a retrospective review at the end of the project and capture lessons learned
    to run future projects in a more efficient way.
</p>
<p>
    If we always challenge what we do and seek new, innovative ways to develop software, we improve how we work. This leads
    to improved project results.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="core_principle_focus"
					briefDescription="Articulate essential technical decisions through a growing architecture."
					id="_9gocwMvoEdqukPpotm3DYg" orderingGuide="" suppressed="false"
					presentationName="Focus on articulating the architecture"
					variabilityType="na">
					<Presentation
						name="core_principle_focus,_9gocwMvoEdqukPpotm3DYg"
						briefDescription="" id="-HTMJFV29MTZkKWqnIo01Gg" orderingGuide=""
						suppressed="false" authors="Steve Adolph"
						changeDate="2006-09-28T01:35:45"
						changeDescription="Added first draft of content."
						version="0.02">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Without an architectural foundation, a system will evolve in an inefficient and haphazard way. Such a system often
    proves difficult to evolve, reuse, or integrate without substantial rework. It is also difficult to organize the team
    or communicate ideas without the common technical focus that the architecture provides.
</p>
<p>
    Therefore, use the architecture as a focal point for developers to align their interests and ideas by articulating the
    essential technical decisions through the growing architecture.
</p>
<h3>
    Practices
</h3>
<p>
    The next sections describe the practices associated with this principle.
</p>
<h4>
    Create the architecture for what you know today
</h4>
<p>
    As Albert Einstein said, make everything as simple as possible but no simpler. Software projects are
    resource-constrained, and the desire of developers to create elegant solutions may lead to a system of greater
    complexity than the stakeholder requires. Efforts to future-proof a system in a turbulent or uncertain environment will
    likely lead to code bloat , thus increasing overall cost with little actual benefit to show for it.
</p>
<p>
    Therefore, create architectures that address the stakeholder’s real needs, and provide appropriate flexibility and
    speed for the requirements as they are known today. Avoid the desire, no matter how well intentioned, to speculate on
    future requirements and thereby over-engineer the architecture: if you have the skill to architect something today,
    then clearly you must also have the skill to architect it tomorrow when you actually need to.
</p>
<h4>
    Cope with complexity by raising the level of abstraction
</h4>
<p>
    Software is complex, and people have a limited capacity for coping with complexity. As a system gets larger, it becomes
    difficult for the team to develop a common understanding of the system, because it is hard to see the bigger picture.
</p>
<p>
    Therefore, use models to raise the level of abstraction to focus on important high-level issues, such as relationships
    and patterns, rather than getting bogged down in details. Modeling raises the level of abstraction and allows the
    system to be more easily understood from different perspectives.
</p>
<h4>
    Let the problem drive the solution
</h4>
<p>
    The architecture may become difficult to maintain and adapt to new stakeholder needs when technology, rather than the
    problem, drives the solution.
</p>
<p>
    Therefore, let the needs of the stakeholders guide the architecture, instead.
</p>
<h4>
    Organize the architecture into loosely coupled, highly cohesive components
</h4>
<p>
    Tight coupling between components makes a system fragile and difficult to understand. Software is expensive to create,
    so if existing components can be reused, that may reduce effort required to create a system.
</p>
<p>
    Therefore, organize the architecture of the system into components that to maximize cohesion and minimize coupling.
    This improves comprehension, increases flexibility, and increases opportunities for re-use.
</p>
<h4>
    Reuse existing assets
</h4>
<p>
    It is wasteful to build what you can simply reuse, download, or even buy.
</p>
<p>
    Therefore, make every effort to reuse existing assets. Developers are often reluctant to reuse assets, because those
    assets do not exactly meet their needs or those assets are of poor quality. Be prepared to balance the savings you can
    realize using an existing asset, even if the asset requires distorting the architecture or relaxing a constraint.
</p>
<h4>
    Leverage the architecture as a collaborative tool
</h4>
<p>
    Lack of a common understanding by developers about a system leads to indecision and contrary opinions among developers
    and can quickly paralyze the project. Developers may have different mental models of the system and work at cross
    purposes to each other.
</p>
<p>
    Therefore, create and evolve the system architecture with the intention of using it to align the developer’s competing
    mental models of the system. A good architecture facilitates collaboration by providing a common vocabulary for all
    discussions regarding the system under development.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="core_principle_balance"
					briefDescription="Develop a solution that maximizes stakeholder benefits and complies with constraints  placed on the project."
					id="_ssG6MMvpEdqukPpotm3DYg" orderingGuide="" suppressed="false"
					presentationName="Balance competing priorities to maximize stakeholder value."
					variabilityType="na">
					<Presentation
						name="core_principle_balance,_ssG6MMvpEdqukPpotm3DYg"
						briefDescription="" id="-I4IbR1GW6IFBCdq9SiMUsw" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-28T01:34:53"
						changeDescription="Removed metaphoric photo Removed open_up from page name."
						version="0.02">
						<MainDescription><![CDATA[<h3 style="MARGIN: 12pt 0in 3pt">
    Introduction
</h3>
<p style="MARGIN: 12pt 0in 3pt">
    Systems are rarely all things to all people. Often, attempts to make them so are wasteful and result in bloated
    systems.
</p>
<p>
    Therefore, project participants and stakeholders must collaborate to develop a solution that maximizes stakeholder
    benefits and complies with constraints placed on the project. Achieving balance is a dynamic process because as both
    the stakeholders and project participants learn more about the system, their priorities and constraints change.
</p>
<p>
    To be successful, stakeholders and the project participants must converge on a clear understanding and agreement of
    these three factors:
</p>
<ul>
    <li>
        Problem to be solved
    </li>
    <li>
        Constraints places on the development team (cost, schedule, resources, regulations)
    </li>
    <li>
        Constraints placed on the solution
    </li>
</ul>
<p>
    Collectively, these three items represent the requirements for the development of the system. The challenge for all
    project participants is creating a solution that maximizes value delivered to the stakeholders, subject to the
    constraints. Balance is about making the critical cost-benefit trade-offs between desired features and the subsequent
    design decisions that define the a<span>rchitecture of the system.</span>
</p>
<p>
    Discovering the balance point is challenging, elusive, and ongoing, because the balance point is dynamic. As the system
    evolves, stakeholder needs change, new opportunities appear, risks are resolved, new risks appear, and the development
    team discovers new realities about the system. Change happens throughout the development cycle. Therefore, stakeholders
    and developers must be prepared to re-evaluate commitments, reset expectations, and adjust plans accordingly as the
    system evolves.
</p>
<h3 style="MARGIN: 12pt 0in 3pt">
    Practices
</h3>
<p style="MARGIN: 12pt 0in 3pt">
    The next sections describe the practices associated with this principle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Know your audience
</h4>
<p>
    You cannot know how to make effective trade-offs if you do not know who the stakeholders are and what they really want.
</p>
<p>
    Therefore, know your stakeholders. Better yet, work closely with them to ensure that you know their needs. Start by
    identifying all stakeholders, and then maintain open and frequent communication and collaboration between them and the
    development team.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Separate the problem from the solution
</h4>
<p>
    Too often, we run headlong into a solution without understanding the problem. After all, we are taught how to solve
    problems, not how to define problems, so that's easier. However, this limits our understanding of the problem, imposes
    artificial constraints,&nbsp;and makes it difficult to balance trade-offs, or to even know what the trade-offs are.
</p>
<p>
    Therefore, make sure that you understand the problem before you define the solution. By clearly separating the problem
    (what the customer needs) from the solution (what the system must do), it is easier to maintain the proper focus and
    easier to accommodate alternate ways of solving the problem.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Create a shared understanding of the domain
</h4>
<p>
    Domain experts often have limited technical expertise; developers, architects and testers often have limited domain
    expertise; and reviewers and other stakeholders often have limited time to commit to the project and learn the problem
    domain. As a result, people often have an inconsistent or poor understanding of the problem domain, which causes
    communication problems and increases the likelihood of delivering poor value to the stakeholders.
</p>
<p>
    Therefore, enhance and share all parties’ understandings of the domain. A concise and shared understanding of the
    problem domain enhances communication and project effectiveness. Start by defining the problem in the Vision document.
    As your understanding increases, capture key domain concepts and terminology in the Glossary to ensure a consistent
    shared use of the language of the domain.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Use scenarios and use cases to capture requirements
</h4>
<p>
    Many companies still document requirements as a list of declarative statements, which are sometimes called the ”shall
    statements.” These lists are often difficult for stakeholders to understand, because they require the end user to read
    through and mentally translate the list into a visualization of how the requirements will interact with the system. .
</p>
<p>
    Therefore, use scenarios and use cases to capture functional requirements in a form that is easy for stakeholders to
    understand. Nonfunctional requirements, such as performance, stability, or usability requirements, are important and
    can be documented in the Supporting Requirements, using traditional techniques.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Establish and maintain agreement on priorities
</h4>
<p>
    Making poor decisions in deciding what to develop next can result in wasted effort, delivering capabilities that are
    never used, or identifying problems late in the project that result in delays and even project failure.
</p>
<p>
    Therefore, prioritize requirements for implementation by regularly working with the stakeholders during product
    evolution. Make choices that deliver value and reduce risks, while building a system that can evolve.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Make the trade-offs to maximize value
</h4>
<p>
    Cost-benefit trade-offs cannot be made independent of the architecture. Requirements establish the benefits of the
    system to the stakeholder, while architecture establishes the cost. The cost of a benefit may influence the
    stakeholder's perceived value of the benefit.
</p>
<p>
    Therefore, work with the stakeholders and developers to prioritize requirements and develop candidate architectures to
    implement those solutions. Use the candidate architectures to evaluate the cost of the benefits. Candidate solutions
    are considered at a high level when determining architectural feasibility. Different architectural perspectives can
    result in different assessment of cost versus benefit. The&nbsp;candidate architecture&nbsp;that provides the most
    coverage at the lowest cost is selected for further development.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Manage scope
</h4>
<p>
    Change is inevitable. Although change presents opportunities to enhance stakeholder value, unconstrained change will
    result in a bloated, deficient system and unmet stakeholder needs.
</p>
<p>
    Therefore, manage change while maintaining the agreements with the stakeholders. Modern processes always manage change,
    continually adapting to changes in the environment and stakeholder needs, assessing the impact of changes, making
    trade-offs, and re-prioritizing work. Stakeholder and developer expectations must be realistic and aligned throughout
    the development lifecycle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Know when to stop
</h4>
<p>
    Over-engineering a system not only wastes resources but also leads to an overly complex system.
</p>
<p>
    Therefore, stop developing the system when the desired quality is achieved. Remember that “Quality is conformance to
    the requirements” <a href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[CRO79]</a>. This is what gives a sense of closure to the practice. Separate the problem
    from the solution, ensuring that the solution does, indeed, solve the problem. After the critical requirements are
    implemented and validated, the system is ready for stakeholder acceptance.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ContentPackage"
				name="uc_modeling"
				briefDescription="Elements specific to UC modeling."
				id="_L79ggDR5EdutE_HNDTJk5Q" orderingGuide="" suppressed="false"
				global="false">
				<ContentElement xsi:type="uma:Artifact" name="uc_model"
					briefDescription="" id="_W2SgEDR5EdutE_HNDTJk5Q" orderingGuide=""
					suppressed="false" presentationName="Use Case Model"
					variabilityType="na" />
			</MethodPackage>
			<ContentElement xsi:type="uma:Role" name="any_role"
				briefDescription="Anyone on a team can fill this role of performing general tasks."
				id="_0dsWoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Any Role" variabilityType="na">
				<Presentation xsi:type="uma:RoleDescription"
					name="any_role,_0dsWoMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_NqqcUqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-11T08:34:17" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    This role allows anyone on a team to perform general tasks:
</p>
<ul>
    <li>
        Access artifacts in the configuration control system for development and maintenance
    </li>
    <li>
        Submit change requests for the project
    </li>
    <li>
        Participate in assessments and reviews
    </li>
    <li>
        Volunteer to work on a particular iteration
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<AssignmentApproaches></AssignmentApproaches>
					<Skills></Skills>
					<Synonyms></Synonyms>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="references"
				briefDescription="Additional references that may be useful, including books, method plug-ins, and commercial methodology products."
				id="_9ToeIB83Edqsvps02rpOOg" orderingGuide="" suppressed="false"
				presentationName="References" variabilityType="na">
				<Presentation name="references,_9ToeIB83Edqsvps02rpOOg"
					briefDescription="" id="-aCI9T-9TIe8D35yXBU6qvg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-27T01:05:35"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ADO03</a> </TD>
<TD colSpan=2>Adolph, Bramble, Cockburn, and Pols <EM>Patterns for Effective Use Cases</EM>, Addison Wesley, 2003. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ADO04</a> </TD>
<TD colSpan=2>Adolph, Bramble, Cockburn, and Pols <EM>Tutorial 17: Patterns for Writing Effective Use Cases</EM>, presented at the 19th Annual Conference on Object-Oriented Programming, Systems, Languages and Applications, 2004.</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALE77</a> </TD>
<TD colSpan=2>Alexander, C. <EM>A Pattern Language</EM>, Oxford University Press, 1977 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALE79</a> </TD>
<TD colSpan=2>Alexander, C., <EM>A Timeless Way of Building</EM>, Oxford University Press, 1979 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALL02</a> </TD>
<TD colSpan=2>Allamaraju, S. <EM>Architecture Paradox</EM>, <a href="http://www.sei.cmu.edu/architecture/essays.html">http://www.sei.cmu.edu/architecture/essays.html</a>. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALU03</a> </TD>
<TD colSpan=2>Alur, D., Crupi, J., Malks, D., <EM>Core J2EE Patterns: Best Practices and Design Strategies</EM>, Prentice Hall/Sun Press, 2001. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">BOE88</a> </TD>
<TD colSpan=2>Boehm, B., Papaccio, C. <EM>Understanding and Controlling Software Cost</EM>, IEEE Trans. on Software Engineering, Oct. 1988. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">BOE95</a> </TD>
<TD colSpan=2>Boehm, B. <EM>Anchoring the Software Process</EM>, <a href="http://sunset.usc.edu/publications/TECHRPTS/1995/usccse95-507/ASP.pdf">http://sunset.usc.edu/publications/TECHRPTS/1995/usccse95-507/ASP.pdf</a> </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">COH05</a>&nbsp;</TD>
<TD colSpan=2>Cohn, M. <EM>Agile Estimation and Planning</EM>, Addison Wesley Longman, 2005 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">BOO05</a> </TD>
<TD colSpan=2>Booch, G., Rumbaugh, J., Jacobson, I.<EM>The Unified Modeling Language User Guide</EM>, Addison-Wesley Professional, 2005</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">BUS96</a> </TD>
<TD colSpan=2>Buschmann, F., Meunier, R., Rohnert, H.,Sommerlad, P., Stal, M., <EM>Pattern-Oriented Software Architecture -- A System of Patterns</EM>, Wiley, 1996. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">COP95</a> </TD>
<TD colSpan=2>Coplien, J., Schmidt, D., <EM>Pattern Languages of Program Design</EM>,Addison-Wesley Professional, 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">COP95</a> </TD>
<TD colSpan=2>Coplien, J., Schmidt, D., <EM>Pattern Languages of Program Design</EM>,Addison-Wesley Professional, 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">CRO79</a> </TD>
<TD colSpan=2>Crosby, Philip. <EM>Quality is Free: The Art of Making Quality Certain</EM>, McGraw-Hill, 1979. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">GAM95</a> </TD>
<TD colSpan=2>Gamma, E., Helm, R., Johnson, R., Vlissides, J., <EM>Design Patterns: Elements of Reusable Object-Oriented Software</EM>, Addison-Wesley Professional; 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">GAB98</a> </TD>
<TD colSpan=2>Gabriel, Richard P., <EM>Patterns of Software: Tales from the Software Community</EM>, Oxford University Press, 1998. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">HIC03</a> </TD>
<TD colSpan=2>Hickey A., Davis, A. <EM>Elicitation Technique Selection: How Do the Experts Do It?</EM>, International Conference on Requirements Engineering (RE03), Los Alamitos, California: IEEE Computer Society Press, September 2003. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">HUL05</a> </TD>
<TD colSpan=2>Hull, E., Jackson, K. and&nbsp;Dick, J. <EM>Requirements Engineering</EM>, Second Edition. Springer, 2005. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ICS03</a> </TD>
<TD colSpan=2>Industry Canada Strategis <EM>Steps to Competitiveness - Glossary</EM><BR><a href="http://strategis.ic.gc.ca/epic/internet/instco-levc.nsf/en/h_qw00037e.html" target="">http://strategis.ic.gc.ca/epic/internet/instco-levc.nsf/en/h_qw00037e.html</a> </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KAZ00</a> </TD>
<TD colSpan=2>Kazman, R., Carriere, S. J., Woods, S. G.&nbsp;<a href="http://www.sei.cmu.edu/staff/rkazman/annals-scenario.pdf">Toward a Discipline of Scenario-Based Architectural Engineering</a>, <a href="http://manta.cs.vt.edu./ase/">Annals of Software Engineering</a>, Vol. 9, 2000, 5-33. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KAZ04</a> </TD>
<TD colSpan=2>Kazman, R., Kruchten, P., Nord, R., Tomayko, J.&nbsp;<EM>Integrating Software-Architecture-Centric Methods into the Rational Unified Process</EM>, CMU-SEI Technical Reports, 2004. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KRO03</a> </TD>
<TD colSpan=2>Kroll, P. and&nbsp;Kruchten, P. <EM>The Rational Unified Process Made Easy</EM>, Addison Wesley, 2003. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%">KRO05 </TD>
<TD colSpan=2>Kroll, P. and&nbsp;MacIsaac, B. <EM>Agility and Discipline Made Easy</EM>, Addison Wesley, 2005. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KRU95</a> </TD>
<TD colSpan=2>Kruchten, Phillipe B.,&nbsp; <EM>The 4+1 View Model of Architecture</EM>, IEEE Software, vol. 12, no. 6, pp 42-50, November 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">MAR03</a>&nbsp;</TD>
<TD colSpan=2>Marick, B., <EM>Exploration Through Example</EM>, <a href="http://www.testing.com/cgi-bin/blog/2003/08/21#agile-testing-project-1">http://www.testing.com/cgi-bin/blog/2003/08/21#agile-testing-project-1</a></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">NBG01</a> </TD>
<TD colSpan=2>Eric J. Naiburg and Robert A. Maksimchuk. <EM>UML for Database Design</EM>, New York, NY: Addison Wesley, 2001</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">RUP06</a> </TD>
<TD colSpan=2>IBM Rational 2006. <EM>The Rational Unified Process.</EM> </TD></TR>
<TR>
<TD vAlign=top width="12%"></TD>
<TD width="10%"></TD>
<TD style="PADDING-BOTTOM: 10px" width="78%">A commercial methodology, also based on the Eclipse Process Framework, and advanced guidance on topics such as business modeling, portfolio management, asset-based development, real-time design, user experience, and so on. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">OOP96</a> </TD>
<TD colSpan=2>The 1996 ACM Conference on Object-Oriented Programs, Systems, Languages and Applications (OOPSLA), <EM>The Origins of Pattern Theory, the Future of the Theory, And The Generation of a Living World.</EM></TD></TR>
<TR>
<TD vAlign=top width="12%"></TD>
<TD width="10%"></TD>
<TD style="PADDING-BOTTOM: 10px" width="78%">See <a href="http://www.patternlanguage.com/archive/ieee/ieeetext.htm" target="">http://www.patternlanguage.com/archive/ieee/ieeetext.htm</a></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">SCH04</a> </TD>
<TD colSpan=2>Schwaber, K. <EM>Agile Project Management with Scrum.</EM> Microsoft Press 2004. </TD></TR>
<TR>
<TD vAlign=top width="12%"></TD>
<TD width="10%"></TD>
<TD style="PADDING-BOTTOM: 10px" width="78%">
<P>An excellent reference by one of the co-inventors of the Scrum project management method. </P></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0 &gt; <table>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">SEI99</a> </TD>
<TD colSpan=2>SEI, 1999. <EM>Software Risk Evaluation (SRE) Method Description, v2.0.</EM> <BR><a href="http://www.sei.cmu.edu/pub/documents/99.reports/pdf/99tr029-body.pdf#search=%22software%20risk%20evaluation%22">http://www.sei.cmu.edu/pub/documents/99.reports/pdf/99tr029-body.pdf#search=%22software%20risk%20evaluation%22</a> </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">TEL06</a> </TD>
<TD colSpan=2>Telelogic, 2006. <EM>Get It Right the First Time: Writing Better Requirements.</EM> </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">UML05</a> </TD>
<TD colSpan=2>OMG, 2005. <EM>Unified Modeling Language 2.0: Superstructure.</EM> <BR><a href="http://www.omg.org/docs/formal/05-07-04.pdf" target="">http://www.omg.org/docs/formal/05-07-04.pdf</a> </TD></TR></TBODY>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">WIB04</a> </TD>
<TD colSpan=2>Wiborg-Weber, D., Vignaud, J. L. <EM>A Framework for Managing Component Based Development</EM>, Telelogic Whitepaper, 2004 <BR><a href="http://www.telelogic.com/download/index.cfm?id=4423" target="">http://www.telelogic.com/download/index.cfm?id=4423</a></TD></TR></TBODY>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">WIKP-MVC</a> </TD>
<TD colSpan=2>Wikipedia <EM>Model-view-controller</EM> <BR><a href="http://en.wikipedia.org/wiki/Model-view-controller" target="">http://en.wikipedia.org/wiki/Model-view-controller</a> </TD></TR></TBODY></TABLE>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Role" name="stakeholder"
				briefDescription="This role represents interest groups whose needs must be satisfied by the project. It is a role that may be played by anyone who is (or potentially will be) materially affected by the outcome of the project."
				id="_dTa6gMAYEdqX-s4mWhkyqQ" orderingGuide="" suppressed="false"
				presentationName="Stakeholder" variabilityType="na" />
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="intro_to_openup_basic" briefDescription=""
				id="_i-BDsNogEdqfmNgIq7q3Xw" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/guidances/supportingmaterials/resources/mic.gif"
				presentationName="Introduction to OpenUP/Basic"
				shapeicon="openup_basic/guidances/supportingmaterials/resources/icon_introL.gif"
				variabilityType="na">
				<Presentation
					name="intro_to_openup_basic,_i-BDsNogEdqfmNgIq7q3Xw"
					briefDescription="" id="-XR2Rbg25yN80p1exWC4MHg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-21T07:40:39"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<table>
    <tbody>
        <tr>
            <td>
                <table width="100%" border="0">
                    <tbody>
                        <tr>
                            <td width="58%">
                                <div align="center">
                                    <table width="589" align="center" border="0">
                                        <tbody>
                                            <tr>
                                                <td width="96">
                                                    <div align="center">
                                                        <img height="48" alt="" src="openup_basic/guidances/supportingmaterials/resources/GetStarted_48.gif"                                                         width="48" usemap="#Map" border="0" />
                                                    </div>
                                                </td>
                                                <td width="95">
                                                    <div align="center">
                                                        <img height="48" alt="" src="openup_basic/guidances/supportingmaterials/resources/CorePrinciples_48.gif"                                                         width="48" usemap="#Map2" border="0" />
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <img height="48" alt="" src="openup_basic/guidances/supportingmaterials/resources/Roles_48.gif" width="48"                                                         usemap="#Map3" border="0" />
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <img height="48" alt="" src="openup_basic/guidances/supportingmaterials/resources/WorkProducts_48.gif"                                                         width="48" usemap="#Map4" border="0" />
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <img height="48" alt="" src="openup_basic/guidances/supportingmaterials/resources/Disciplines_48.gif"                                                         width="48" usemap="#Map5" border="0" />
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <img height="48" alt="" src="openup_basic/guidances/supportingmaterials/resources/LifeCycle_48.gif"                                                         width="48" usemap="#Map6" border="0" />
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr valign="top" align="middle">
                                                <td width="96">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/customcategories/getting_started,_cp6ycBOGEduCNqgZdt_OaA.html" guid="_cp6ycBOGEduCNqgZdt_OaA">Getting Started</a>
                                                    </div>
                                                </td>
                                                <td width="95">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html" guid="_HEu9QBOHEduCNqgZdt_OaA">Core Principles</a>
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html" guid="_TZIJ0O8NEdmKSqa_gSYthg">Roles</a>
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html" guid="_s4Z9AMWXEdqWePvIjHInwg">Work Products</a>
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html" guid="__BZycP1UEdmek8CQTQgrOQ">Disciplines</a>
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" guid="_0uyGoMlgEdmt3adZL5Dmdw">Lifecycle</a>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    &nbsp;
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                
        <p> OpenUP/Basic is organized into four major areas of content, also known 
          as sub-processes. </p>
                <br />
            </td>
        </tr>
        <tr>
            <td>
                <p align="center">
                    <img height="350" alt="Four major areas upon which the OpenUP/Basic content is organized"                     src="openup_basic/guidances/supportingmaterials/resources/OpenUp1_350.jpg" width="350" usemap="#Map7" border="0" /> <map id="Map7" name="Map7">
                        <area shape="RECT" alt="Stakeholder" coords="144,5,207,62"                         href="./../../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html"                         guid="_dTa6gMAYEdqX-s4mWhkyqQ" />
                        <area shape="POLY" alt="Tester" coords="336,242,310,287,254,256,278,209"                         href="./../../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html"                         guid="_0ZM4MclgEdmt3adZL5Dmdw" />
                        <area shape="RECT" alt="Developer" coords="148,282,201,347"                         href="./../../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html"                         guid="_0YDosMlgEdmt3adZL5Dmd" />
                        <area shape="POLY" alt="Architect" coords="66,199,14,232,40,283,96,249"                         href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html"                         guid="_0X9iEMlgEdmt3adZL5Dmdw" />
                        <area shape="POLY" alt="Project Manager" coords="11,118,68,146,99,91,50,52"                         href="./../../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html"                         guid="_0a0o0MlgEdmt3adZL5Dmdw" />
                        <area shape="POLY" alt="Analyst" coords="258,99,312,66,338,114,284,145"                         href="./../../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html"                         guid="_0VxJsMlgEdmt3adZL5Dmdw" />
                        <area shape="CIRCLE" alt="Communication and Collaboration" coords="176,176,47"                         href="./../../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" />
                        <area shape="POLY" alt="Management" coords="85,219,70,163,115,89,169,72,169,117,124,144,120,197"                         href="./../../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" />
                        <area shape="POLY" alt="Intent" coords="181,116,223,143,229,196,264,219,283,160,245,94,181,70"                         href="./../../../openup_basic/customcategories/intent_subprocess,_57_ZMEmbEdu0xduwSKie-w.html" />
                        <area shape="POLY" alt="Solution" coords="129,211,176,235,221,210,257,231,214,271,133,272,94,232"                         href="./../../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" />
                    </map><br />
                    &nbsp;
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p align="left">
                    OpenUP/Basic is an iterative software development process with the following characteristics:
                </p>
                <div align="left">
                    <ul>
                        
            <li> <strong>Minimal: </strong>Only fundamental process content is 
              included </li>
            <li> <strong>Complete: </strong>It can be manifested as an entire 
              process to build a system </li>
            <li> <strong>Extensible: </strong>It can be used as a foundation&nbsp;to 
              add or tailor process content </li>
                    </ul>
                </div>
            </td>
        </tr>
    </tbody>
</table>
<p>
    <map id="Map" name="Map">
        <area shape="RECT" coords="0,1,47,47"         href="./../../../openup_basic/customcategories/getting_started,_cp6ycBOGEduCNqgZdt_OaA.html" />
    </map><map id="Map2" name="Map2">
        <area shape="RECT" coords="0,0,48,47"         href="./../../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html" />
    </map><map id="Map3" name="Map3">
        <area shape="RECT" coords="0,0,48,48"         href="./../../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html" />
    </map><map id="Map4" name="Map4">
        <area shape="RECT" coords="0,1,48,48"         href="./../../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html" />
    </map><map id="Map5" name="Map5">
        <area shape="RECT" coords="0,0,47,48"         href="./../../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html" />
    </map><map id="Map6" name="Map6">
        <area shape="RECT" coords="0,0,47,48"         href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" />
    </map>
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Roadmap"
				name="openup_basic_roadmap"
				briefDescription="This roadmap presents an overview of OpenUP/Basic, its purpose and lifecycle."
				id="_vEruwN-rEdqiM_wFaqLjNg" orderingGuide="" suppressed="false"
				presentationName="OpenUP/Basic Roadmap" variabilityType="na">
				<Presentation name="new_roadmap,_vEruwN-rEdqiM_wFaqLjNg"
					briefDescription="" id="-At_b3UIzbgdmtJsb2Ymfhg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-12T08:00:16"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p> OpenUP/Basic is an iterative software development process that is minimal, 
  complete, and extensible. It is governed by four core <a class="elementLinkWithUserText" href="./../../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html" guid="_HEu9QBOHEduCNqgZdt_OaA">principles</a>: 
</p>
<ul>
    <li>
        Balance competing priorities to maximize stakeholder value.
    </li>
    <li>
        Collaborate to align interests and share understanding
    </li>
    <li>
        Evolve to continuously obtain feedback and improve
    </li>
    <li>
        Focus on articulating the architecture
    </li>
</ul>
<p> <a class="elementLinkWithUserText" href="./../../../base_concepts/guidances/termdefinitions/role,_yUefQNnmEdmO6L4XMImrsA.html" guid="_yUefQNnmEdmO6L4XMImrsA">Roles</a>&nbsp;perform 
  <a class="elementLinkWithUserText" href="./../../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html" guid="_x459ktnmEdmO6L4XMImrsA">tasks</a> 
  that consume and produce <a class="elementLinkWithUserText" href="./../../../base_concepts/guidances/termdefinitions/artifact,_x7cUM9nmEdmO6L4XMImrsA.html" guid="_x7cUM9nmEdmO6L4XMImrsA">artifacts</a>. 
  OpenUP/Basic describes the minimal set of&nbsp;roles, tasks, and artifacts&nbsp;involved 
  in software development: </p>
<ul>
    
  <li> <a class="elementLinkWithUserText" href="./../../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html" guid="_TZIJ0O8NEdmKSqa_gSYthg">Roles</a> 
  </li>
    <li>
        <a class="elementLinkWithUserText" href="./../../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html" guid="__BZycP1UEdmek8CQTQgrOQ">Tasks</a> (organized by disciplines)
    </li>
    <li>
        <a class="elementLinkWithUserText" href="./../../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html" guid="_s4Z9AMWXEdqWePvIjHInwg">Artifacts</a> (organized by domains)&nbsp;
    </li>
</ul>
<h4> Software development&nbsp;lifecycle </h4>
<p> OpenUP/Basic is an iterative process&nbsp;distributed throughout&nbsp;four 
  <a class="elementLinkWithUserText" href="./../../../base_concepts/guidances/concepts/phase,__7xOEC7aEdqHMdmRzC0-2g.html" guid="__7xOEC7aEdqHMdmRzC0-2g">phases</a>: 
  Inception, Elaboration, Construction, and Transition. Each phase formally ends 
  at a major <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html" guid="_HNxbwMBJEdqSgKaj2SZBmg">milestone</a>&nbsp;where 
  phase objectives are met. Phases are further divided into one or more&nbsp;<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html" guid="_lam4ADkBEduxovfWMDsntw">iterations</a>, 
  where stable, working versions of the software 
  are&nbsp;developed and released. </p>
<p> The following diagram depicts the OpenUP/Basic <a class="elementLinkWithUserText" href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" guid="_0uyGoMlgEdmt3adZL5Dmdw">lifecycle</a>.</p>
<p align="center"> <img height="192" alt="Figure 1: Diagram of the OpenUP/Basic Lifecycle" src="openup_basic/guidances/roadmaps/resources/openup-basic_lifecycle.jpg" width="667" usemap="#Map"     border="0" /> 
</p>
<p align="center">Figure 1: The OpenUP/Basic lifecycle</p>
<h3>Organization of content</h3>
<p>
    The content is organized around four major areas:
</p>
<ul>
    <li>
        Collaboration and Communication
    </li>
    <li>
        Intent
    </li>
    <li>
        Management
    </li>
    <li>
        Solution
    </li>
</ul>
<h3 align="center"> <img height="504" alt="Figure 2: Diagram of four major areas upon which OpenUP/Basic content is organized" src="openup_basic/guidances/roadmaps/resources/OpenUp2_504.jpg"     width="504" /></h3>
<p align="center">Figure 2: Four areas of content organization for OpenUP/Basic</p>
<p> 
  <map id="Map" name="Map">
    <area shape="RECT" coords="116,7,175,25"         href="./../../../openup_basic/guidances/concepts/inception_phase,_0hmKgBOMEduCNqgZdt_OaA.html"         guid="_0hmKgBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="255,11,327,27"         href="./../../../openup_basic/guidances/concepts/elaboration_phase,_2plxwBOMEduCNqgZdt_OaA.html"         guid="_2plxwBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="395,11,476,27"         href="./../../../openup_basic/guidances/concepts/construction_phase,_48EKsBOMEduCNqgZdt_OaA.html"         guid="_48EKsBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="554,10,619,27"         href="./../../../openup_basic/guidances/concepts/transition_phase,__ca5UBOMEduCNqgZdt_OaA.html"         guid="__ca5UBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="39,98,100,162"         href="./../../../openup_basic/deliveryprocesses/inception_phase_iteration,_xupMvxOKEduCNqgZdt_OaA.html"         guid="_xupMvxOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="188,99,250,168"         href="./../../../openup_basic/deliveryprocesses/elaboration_phase_iteration,_0Spa4BOKEduCNqgZdt_OaA.html"         guid="_0Spa4BOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="332,100,397,165"         href="./../../../openup_basic/deliveryprocesses/construction_phase_iteration,_3CqrAROKEduCNqgZdt_OaA.html"         guid="_3CqrAROKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="480,98,541,167"         href="./../../../openup_basic/deliveryprocesses/transition_phase_iteration,_467NIhOKEduCNqgZdt_OaA.html"         guid="_467NIhOKEduCNqgZdt_OaA" />
  </map></h3>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="about_openup_basic" briefDescription=""
				id="_8tSNMPGYEdqiDINUyockoA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/guidances/supportingmaterials/resources/about.gif"
				presentationName="About OpenUP/Basic" variabilityType="na">
				<Presentation
					name="new_supporting_material,_8tSNMPGYEdqiDINUyockoA"
					briefDescription="" id="-WFD3nKccpkueaG15cHT-fA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T01:25:47"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<h3>
    <a id="version" name="version">Version Information</a>
</h3>
<p>
    OpenUP/Basic Plug-in Version 0.9<br />
    Based on: Base Concepts Plug-in Version: 0.9
</p>
<h3>
    Legal Statement
</h3>
<p class="node">
    See <a href="openup_basic/guidances/supportingmaterials/resources/copyrite.htm">Intellectual Property Notices</a>.
</p>
<h3>
    Browser Support
</h3>
<p>
    <b>Note 1:</b> OpenUP/Basic does not currently support Netscape Navigator 6.x.
</p>
<p>
    <b>Note 2:</b> Some versions of Microsoft Internet Explorer 4.x and Netscape Navigator 4.x may not be able to display
    all pages of OpenUP/Basic.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Guideline"
				name="using_openup_basic"
				briefDescription="This guideline explains the various usage scenarios of this Web site."
				id="_NOHy0BOGEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/guidances/guidelines/resources/compass.gif"
				presentationName="Using OpenUP/Basic"
				shapeicon="openup_basic/guidances/guidelines/resources/compassL.gif"
				variabilityType="na" />
			<ContentElement xsi:type="uma:Concept"
				name="inception_phase"
				briefDescription="First of the four phases in the project lifecycle, it is about understanding the  project scope and objectives and getting enough information to confirm that the  project should proceed - or convince you that it should not."
				id="_0hmKgBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				presentationName="Inception Phase" variabilityType="na">
				<Presentation name=",_0hmKgBOMEduCNqgZdt_OaA"
					briefDescription="" id="-GRJW_KNOJoEQF3r6lmBrEw" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T01:29:14"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose&nbsp;in this phase is to achieve concurrence among all stakeholders on the lifecycle objectives for the
    project.
</p>
<p>
    When&nbsp;trying to understand the project scope and objectives, as well as the feasibility of the intended solution,
    there are four objectives for the Inception phase <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ol>
    <li>
        <p>
            <strong>Understand what to build.</strong> Determine the <a class="elementLinkWithUserText" href="./../../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">Vision</a>, the scope of the system, and its boundaries. Identify who is
            interested in this system and why (see <a class="elementLinkWithUserText" href="./../../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholders</a>).
        </p>
    </li>
    <li>
        <p>
            <strong>Identify key system functionality.</strong> Decide which requirements are most critical.
        </p>
    </li>
    <li>
        <p>
            <strong>Determine at least one possible solution.</strong> Identify at least one candidate architecture and its
            feasibility.
        </p>
    </li>
    <li>
        <p>
            <strong>Understand</strong> the cost, schedule, and risks associated with the project.
        </p>
    </li>
</ol>
<p>
    The following table summarizes the&nbsp;Inception phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <strong>Inception phase objectives and activities</strong>
</p>
<table cellspacing="1" cellpadding="0" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="295">
                <b>Phase objectives</b> 
            </td>
            <td class="Normal" valign="top" width="295">
                <b>Activities that address objectives</b>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Understand what to build
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../manage_requirements,_0okw8clgEdmt3adZL5Dmdw.html" guid="_0okw8clgEdmt3adZL5Dmdw">Manage Requirements</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Identify key system functionality
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../initiate_project,_0oSdE8lgEdmt3adZL5Dmdw.html" guid="_0oSdE8lgEdmt3adZL5Dmdw">Initiate Project</a><br />
                <a class="elementLinkWithUserText" href="./../../../manage_requirements,_0okw8clgEdmt3adZL5Dmdw.html" guid="_0okw8clgEdmt3adZL5Dmdw">Manage Requirements</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Determine at least one possible solution
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../determine_architectural_feasibility,_0oreoclgEdmt3adZL5Dmdw.html" guid="_0oreoclgEdmt3adZL5Dmdw">Determine Architectural Feasibility</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Understand the cost, schedule, and risks associated with the project
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../initiate_project,_0oSdE8lgEdmt3adZL5Dmdw.html" guid="_0oSdE8lgEdmt3adZL5Dmdw">Initiate Project</a><br />
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a> 
            </td>
        </tr>
    </tbody>
</table>
<br />
<h4>
    Key considerations
</h4>
<p>
    Projects may have one or more iterations in the Inception phase. Among reasons for multiple iterations in Inception,
    you find:
</p>
<ul>
    <li>
        Project is large, and it is&nbsp;hard to define its scope.
    </li>
    <li>
        Unprecedented system.
    </li>
    <li>
        Too many stakeholders with competing needs and complex relationships.
    </li>
    <li>
        Major technical risks demand the creation of a prototype or proof of concept.
    </li>
</ul>
<br />]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="elaboration_phase"
				briefDescription="Second of four phases in the project lifecycle, when architecturally significant  risks are addressed."
				id="_2plxwBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				presentationName="Elaboration Phase" variabilityType="na">
				<Presentation name=",_2plxwBOMEduCNqgZdt_OaA"
					briefDescription="" id="-F-eWIBzxEXE1jygbN3nrrQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T01:28:27"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose of this phase is to establish the baseline of the architecture of the system and provide a stable basis for
    the bulk of the&nbsp;development effort in the next phase.
</p>
<p>
    There are objectives for the Elaboration phase that help you address risks associated with requirements, architecture,
    costs, and schedule <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ul>
    <li>
        <p>
            <strong>Get a more detailed understanding of the requirements.</strong> Having a good understanding of the
            majority of requirements allows you to create a more detailed plan and to get buy-in from stakeholders. Be sure
            to gain an in-depth understanding of the most critical requirements to be validated by&nbsp;the architecture.
        </p>
    </li>
    <li>
        <p>
            <strong>Design, implement, validate, and establish the baseline for the architecture.</strong> Design,
            implement, and test a skeleton structure of the system. Although the functionality is not complete yet, most of
            the interfaces between the building blocks are implemented and tested. This is referred to <strong>an
            executable architecture</strong>.
        </p>
    </li>
    <li>
        <p>
            <strong>Mitigate essential risks, and produce accurate schedule and cost estimates.</strong> Many technical
            risks are addressed as a result of detailing the requirements and of designing, implementing, and testing the
            architecture. Refine and detail the high-level project plan.
        </p>
    </li>
</ul>
<p>
    The following table summarizes the&nbsp;Elaboration phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <strong>Elaboration phase objectives and activities</strong>
</p>
<table cellspacing="0" cellpadding="0" width="648" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="300">
                <p style="TEXT-ALIGN: justify">
                    <b>Phase objectives</b>
                </p>
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <b>Activities that address objectives</b>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Get a more detailed understanding of the requirements
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_requirements,_0ruyoclgEdmt3adZL5Dmdw.html" guid="_0ruyoclgEdmt3adZL5Dmdw">Manage Requirements</a> <br />
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Design, implement, validate, and baseline an architecture
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <a class="elementLinkWithUserText" href="./../../../define_architecture,_0rcewclgEdmt3adZL5Dmdw.html" guid="_0rcewclgEdmt3adZL5Dmdw">Define the Architecture</a><br />
                    <a class="elementLinkWithUserText" href="./../../../develop_requirement_within_context,_WrXvwPinEdmugcVr9AdHjQ.html" guid="_WrXvwPinEdmugcVr9AdHjQ">Develop Solution (for requirement)(within context)</a><br />
                    <a class="elementLinkWithUserText" href="./../../../validate_build,_0rilYclgEdmt3adZL5Dmdw.html" guid="_0rilYclgEdmt3adZL5Dmdw">Validate Build</a>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Mitigate essential risks, and produce accurate schedule and cost estimates
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a> <br />
            </td>
        </tr>
    </tbody>
</table>
<br />
<h4>
    Key considerations
</h4>
<p>
    The number of iterations in the Elaboration phase is dependent on, but not limited to, factors such as green-field
    development versus maintenance cycle, unprecedented system versus well-known technology and architecture, and so on.
</p>
<p>
    Typically, on the first iteration, you should design, implement, and test a small number of critical scenarios to
    identify what type of architecture and architectural mechanisms you need, so you can mitigate the most crucial risks.
    You also detail high-risk requirements that have to be addressed early in the project. You test enough to validate that
    the architectural risks are mitigated.
</p>
<p>
    On the following iterations, you fix whatever was not right from the previous iteration. You design, implement, and
    test the remaining architecturally significant scenarios, ensuring that you check all major areas of the system
    (architectural coverage), so potential hidden risks arise as early as possible. <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>
</p>
<p>
    <br />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="construction_phase"
				briefDescription="Third of the four phases in the project lifecycle, Construction focuses on design,  implementation, and testing of functionalities to develop a complete system."
				id="_48EKsBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				presentationName="Construction Phase" variabilityType="na">
				<Presentation name=",_48EKsBOMEduCNqgZdt_OaA"
					briefDescription="" id="-bbpT_BdDRrv6waNI365Qhg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T01:27:58"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose in this phase is to complete the development of the system based upon the baselined architecture.
</p>
<p>
    There are objectives for the Construction phase that help us to&nbsp;have cost-efficient development of a complete
    product - an operational version of your system - that can be deployed&nbsp;in the user community&nbsp;<a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ol>
    <li>
        Iteratively develop a complete product that is ready to transition to its user community. Describe remaining
        requirements, fill in design details, complete the implementation and test the software. Release the first
        operational version (beta) of the system and determine if users are ready for the application to be deployed.
    </li>
    <li>
        Minimize development costs and achieve some degree of parallelism. Optimize resources and leverage development
        parallelism between developers or teams of developers, by for example, assigning components that can be developed
        independently of one another.
    </li>
</ol>
<p>
    The following table summarizes the&nbsp;Construction phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <br />
    <strong>Construction phase objectives and activities</strong>
</p>
<table cellspacing="0" cellpadding="0" width="648" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="300">
                <p style="TEXT-ALIGN: justify">
                    <b>Phase objectives</b>
                </p>
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <b>Activities that address objectives</b>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Iteratively develop a complete product that is ready to transition to the user community<br />
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <a class="elementLinkWithUserText" href="./../../../manage_requirements,_eE5nEUbpEduLBN1xMBngqw.html" guid="_eE5nEUbpEduLBN1xMBngqw">Manage Requirements</a><br />
                    <a class="elementLinkWithUserText" href="./../../../develop_solution,_rk8PMUbqEdu_9u69oWmeLA.html" guid="_rk8PMUbqEdu_9u69oWmeLA">Develop Solution (for requirement)(within context)</a><br />
                    <a class="elementLinkWithUserText" href="./../../../validate_build,_y-3IretQEdqc1LGhiSPqRg.html" guid="_y-3IretQEdqc1LGhiSPqRg">Validate Build</a>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Minimize development costs and achieve some degree of parallelism<br />
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a><br />
                    <a class="elementLinkWithUserText" href="./../../../develop_solution,_rk8PMUbqEdu_9u69oWmeLA.html" guid="_rk8PMUbqEdu_9u69oWmeLA">Develop Solution (for requirement)(within context)</a><br />
                    <a class="elementLinkWithUserText" href="./../../../validate_build,_y-3IretQEdqc1LGhiSPqRg.html" guid="_y-3IretQEdqc1LGhiSPqRg">Validate Build</a>
                </p>
            </td>
        </tr>
    </tbody>
</table>
<br />
<h4>
    Key considerations
</h4>
<p>
    Typically, the Construction phase has more iterations (two to four) than the other phases, depending on the types of
    projects:
</p>
<ul>
    <li>
        Simple project: One iteration to build the product (to a beta release)
    </li>
    <li>
        More substantial project: One iteration to expose a partial system and one to mature it to beta testing
    </li>
    <li>
        Large project: Three or more iterations, given the size of the project (number of requirements to implement for a
        beta release)
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="transition_phase"
				briefDescription="Fourth and final phase in the project lifecycle."
				id="__ca5UBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
				presentationName="Transition Phase" variabilityType="na">
				<Presentation name=",__ca5UBOMEduCNqgZdt_OaA"
					briefDescription="" id="-FrUmsKsGW4bnNmb9uaNOkg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T01:29:45"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p>
    The purpose in this phase is to ensure that the software is ready for delivery to users.
</p>
<p>
    There are objectives for the Transition phase that help you to&nbsp;fine-tune functionality, performance, and overall
    quality of the beta product from the end of&nbsp;the previous phase <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ol>
    <li>
        <p>
            <strong>Beta test to validate that user expectations are met.</strong> This typically requires some fine-tuning
            activities, such as bug-fixing and making enhancements for performance and usability.
        </p>
    </li>
    <li>
        <p>
            <strong>Achieve stakeholder concurrence that deployment is complete.</strong> This may involve various levels
            of tests for product acceptance, including formal and informal tests and beta tests.
        </p>
    </li>
    <li>
        <p>
            <strong>Improve future project performance through lessons learned.</strong> Document lessons learned and
            improve the process and tool environment for the project.
        </p>
    </li>
</ol>
<p>
    The following table summarizes the&nbsp;Transition phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <strong>Transition phase objectives and activities</strong>
</p>
<table cellspacing="0" cellpadding="0" width="648" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="300">
                <p style="TEXT-ALIGN: justify">
                    <b>Phase objectives</b>
                </p>
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <b>Activities that address objectives</b>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300" height="62">
                Beta test to validate that user expectations are met
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../ongoing_tasks,_0qxwYclgEdmt3adZL5Dmdw.html" guid="_0qxwYclgEdmt3adZL5Dmdw">Ongoing Tasks</a><br />
                <a class="elementLinkWithUserText" href="./../../../develop_requirement_within_context,_0DMlYPinEdmugcVr9AdHjQ.html" guid="_0DMlYPinEdmugcVr9AdHjQ">Develop Solution (for requirement)(within context)</a><br />
                <a class="elementLinkWithUserText" href="./../../../validate_build,_0qrpwslgEdmt3adZL5Dmdw.html" guid="_0qrpwslgEdmt3adZL5Dmdw">Validate Build</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Achieve stakeholder concurrence that deployment is complete
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a><br />
                <a class="elementLinkWithUserText" href="./../../../validate_build,_0qrpwslgEdmt3adZL5Dmdw.html" guid="_0qrpwslgEdmt3adZL5Dmdw">Validate Build</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Improve future project performance through lessons learned
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a> 
            </td>
        </tr>
    </tbody>
</table>
<h4>
    <br />
    Key considerations<br />
</h4>
<p>
    The Transition phase can include running old and new systems in parallel, migrating data, training users, and adjusting
    business processes.
</p>
<p>
    The number of iterations in the Transition phase varies from one iteration for a simple system requiring primarily
    minor bug fixing, to many iterations for a complex system, involving addition of features and performing activities to
    make the business transition from using the old system to using the new system.
</p>
<p>
    When the Transition phase objectives are met, the project is in position to be closed.&nbsp;For some products, the end
    of the current project lifecycle may coincide with the beginning of the next lifecycle, leading to the next generation
    of the same product.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="delivery_process_graph" briefDescription=""
				id="_Pt_fYBjoEduxUfEVCtmW4Q" orderingGuide="" suppressed="false"
				presentationName="Delivery Process Graph" variabilityType="na">
				<Presentation
					name="new_supporting_material,_Pt_fYBjoEduxUfEVCtmW4Q"
					briefDescription="" id="-cy0DcnEk7uJJ1OOH3_E6rg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-07-21T08:39:59"
					changeDescription="" version="">
					<MainDescription><![CDATA[<img height="192" alt="OpenUP/Basic Lifecycle" src="openup_basic/guidances/supportingmaterials/resources/openup-basic_lifecycle.jpg" width="667" usemap="#Map"
border="0" /> <map id="Map" name="Map">
    <area shape="RECT" coords="116,7,175,25"
    href="./../../../openup_basic/guidances/concepts/inception_phase,_0hmKgBOMEduCNqgZdt_OaA.html"
    guid="_0hmKgBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="255,11,327,27"
    href="./../../../openup_basic/guidances/concepts/elaboration_phase,_2plxwBOMEduCNqgZdt_OaA.html"
    guid="_2plxwBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="395,11,476,27"
    href="./../../../openup_basic/guidances/concepts/construction_phase,_48EKsBOMEduCNqgZdt_OaA.html"
    guid="_48EKsBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="554,10,619,27"
    href="./../../../openup_basic/guidances/concepts/transition_phase,__ca5UBOMEduCNqgZdt_OaA.html"
    guid="__ca5UBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="39,98,100,162"
    href="./../../../openup_basic/deliveryprocesses/inception_phase_iteration,_xupMvxOKEduCNqgZdt_OaA.html"
    guid="_xupMvxOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="188,99,250,168"
    href="./../../../openup_basic/deliveryprocesses/elaboration_phase_iteration,_0Spa4BOKEduCNqgZdt_OaA.html"
    guid="_0Spa4BOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="332,100,397,165"
    href="./../../../openup_basic/deliveryprocesses/construction_phase_iteration,_3CqrAROKEduCNqgZdt_OaA.html"
    guid="_3CqrAROKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="480,98,541,167"
    href="./../../../openup_basic/deliveryprocesses/transition_phase_iteration,_467NIhOKEduCNqgZdt_OaA.html"
    guid="_467NIhOKEduCNqgZdt_OaA" />
</map>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="openup_copyright"
				briefDescription="OpenUP Copyright Information"
				id="_UaGfECcTEduSX6N2jUafGA" orderingGuide="" suppressed="false"
				nodeicon="openup_basic/guidances/supportingmaterials/resources/CRsym_obj.gif"
				presentationName="OpenUP Copyright"
				shapeicon="openup_basic/guidances/supportingmaterials/resources/CRsym_obj.gif"
				variabilityType="na">
				<Presentation
					name="new_supporting_material,_UaGfECcTEduSX6N2jUafGA"
					briefDescription="" id="-RNyaB6jxqoopm9fJU8k9vg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-31T01:34:52"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<p> Copyright &copy; 1987, 2006 IBM Corp. All Rights Reserved.<br />
  Copyright &copy; 2006 Telelogic AB. All Rights Reserved.<br />
  Copyright &copy; 2006 Armstrong Process Group, Inc. All Rights Reserved </p>
<p> And others. All rights reserved </p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Role" name="analyst"
				briefDescription="The person in this role represents customer and end-user concerns by gathering input from stakeholders to understand the problem to be solved and by capturing and setting priorities for requirements."
				id="_0VxJsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Analyst" variabilityType="na">
				<Presentation xsi:type="uma:RoleDescription"
					name="analyst,_0VxJsMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_Nx8icKYdEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-14T02:44:48" changeDescription=""
					version="1.0.0">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<AssignmentApproaches>
						&lt;p>&#xD; This role can be assigned in the
						following ways:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
						&lt;li>&#xD; One staff member performs this role
						exclusively. This commonly adopted approach is
						suitable for complex&#xD; requirements that are
						difficult to gather.&#xD; &lt;/li>&#xD;
						&lt;li>&#xD; One staff member performs both this
						role and the &lt;a class=&quot;elementLink&quot;
						href=&quot;./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html&quot;
						guid=&quot;_0ZM4MclgEdmt3adZL5Dmdw&quot;>Tester&lt;/a>&#xD;
						role. This is a good option for smaller or
						resource&lt;font
						color=&quot;#ff0000&quot;>-&lt;/font>constrained
						test teams.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
						A&amp;nbsp;customer representative performs
						this&amp;nbsp;role. This provides continuous
						feedback and customer involvement&#xD; with the
						development team.&#xD; &lt;/li>&#xD; &lt;/ul>
					</AssignmentApproaches>
					<Skills>
						&lt;p> An analyst needs the following knowledge,
						skills, &#xD; and abilities: &lt;/p>&#xD;
						&lt;ul>&#xD; &lt;li> Expertise in identifying
						and understanding problems and
						opportunities&lt;/li>&#xD; &lt;li>
						Ability&amp;nbsp;to articulate the needs that
						are associated with the key problem &#xD; to be
						solved or opportunity to be
						realized&lt;/li>&#xD; &lt;li> Ability to
						facilitate workshops&lt;/li>&#xD; &lt;li> Good
						communication skills, verbally and in
						writing&lt;/li>&#xD; &lt;li> Knowledge of the
						business and technology domains or the ability
						to quickly &#xD; absorb and understand such
						information &lt;/li>&#xD; &lt;li> Ability to
						collaborate effectively with other team
						members&lt;/li>&#xD; &lt;/ul>
					</Skills>
					<Synonyms></Synonyms>
				</Presentation>
				<ResponsibleFor>_0VGbUMlgEdmt3adZL5Dmdw</ResponsibleFor>
				<ResponsibleFor>_0WVxcMlgEdmt3adZL5Dmdw</ResponsibleFor>
				<ResponsibleFor>_BVh9cL-CEdqb7N6KIeDL8Q</ResponsibleFor>
				<ResponsibleFor>_Wn7HcNcEEdqz_d2XWoVt6Q</ResponsibleFor>
				<ResponsibleFor>_0VMh8MlgEdmt3adZL5Dmdw</ResponsibleFor>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact"
				name="supporting_requirements"
				briefDescription="This artifact captures system-wide requirements not captured in scenarios or use cases, including requirements on quality attributes and global functional requirements."
				id="_BVh9cL-CEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
				presentationName="Supporting Requirements" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q"
					briefDescription="" id="-_dNuyh-0q5vpCiIiLfbj6w" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-13T11:56:29"
					changeDescription="" version="" externalId="">
					<MainDescription><![CDATA[<p> Supporting Requirements and Use Cases, together, define the system requirements. 
  Use Cases describe the behavioral requirements for the system, and Supporting 
  Requirements describe system-wide requirements that are 
  not captured in Use Case Specifications. Making this distinction simplifies 
  maintenance. </p>
<p> Supporting Requirements may be categorized according to the FURPS+ model (Functionality, 
  Usability, Reliability, Performance, Supportability + Constraints). For more 
  information on this classification, see <a class="elementLinkWithType" href="./../../openup_basic/guidances/concepts/supporting_requirements,_VXZ5wO0IEdqHTdbLTmC5IQ.html" guid="_VXZ5wO0IEdqHTdbLTmC5IQ">Concept: 
  Supporting Requirements</a>.</p>
<p>The figure that follows illustrates 
  the relationship among  the Supporting Requirements, 
  Use Case Specifications, and Actors. </p>
<p>
    &nbsp;<img height="400" alt="" src="openup_basic/workproducts/resources/supporting_reguirements2.gif" width="600" />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving>
						&lt;p> The goal of&amp;nbsp;this&amp;nbsp;work
						product is&amp;nbsp;to make sure that all types
						&#xD; of requirements are covered, which reduces
						the risk of not considering some &#xD; important
						facet of the system.&amp;nbsp;FURPS+
						requirements are system-wide, and &#xD;
						they&amp;nbsp;influence the Architectural
						Mechanisms that you will create, thus &#xD;
						guiding development of the system's foundation.
						&#xD; These requirements are frequently the
						major cost item, &#xD; because they determine
						architectural choices.&lt;strong> &#xD;
						&lt;/strong>&lt;/p>&#xD; &lt;p> Furthermore, if
						you do not capture system-wide requirements in a
						central location, &#xD; but repeat them
						throughout the Use Cases, the result will &#xD;
						be more maintenance and more chance for error.
						&lt;/p>
					</ImpactOfNotHaving>
					<Purpose></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions>
						&lt;p> This work product does not imply using
						only one &#xD; document to capture all
						requirement types. To manage the communication
						of the &#xD; information, it makes more sense to
						separate the information into separate documents
						&#xD; or to use the Work Items List.&lt;strong>
						&lt;/strong>&lt;/p>&#xD; &lt;p
						align=&quot;left&quot;> The following are
						recommendation and options for representing
						&#xD; the Supporting Requirements:&lt;/p>&#xD;
						&lt;h4> Option: Use the Work Items
						List&lt;/h4>&#xD; &lt;p> Consider capturing
						Supporting Requirements in the &lt;a
						class=&quot;elementLinkWithType&quot;
						href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
						guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
						&#xD; Work Items List&lt;/a>, which you can use
						for prioritizing and managing requirements.
						&#xD; If Stakeholders are comfortable with it,
						or with accessing a report automatically &#xD;
						generated from it, then you do not need a
						separate document. &lt;/p>&#xD; &lt;h4>&#xD;
						Option: Include as Part of the Vision
						Document&#xD; &lt;/h4>&#xD; &lt;p> Consider
						including some types of Supporting Requirements
						in &lt;a class=&quot;elementLinkWithType&quot;
						href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;
						guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Artifact:
						&#xD; Vision&lt;/a>. To keep the Vision stable,
						follow this option for the requirements &#xD;
						types that need less refinement, such as Product
						Qualities, Documentation, or &#xD; Compliance.
						&lt;/p>
					</RepresentationOptions>
				</Presentation>
				<Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact" name="use_case"
				briefDescription="This artifact captures the sequence of actions a system performs that yields an observable result of value to those interacting with the system."
				id="_0VGbUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Use Case" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="use_case,_0VGbUMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_zHZW8qYSEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-13T11:58:40" changeDescription=""
					version="" externalId="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving></ImpactOfNotHaving>
					<Purpose><![CDATA[<p> The primary purpose of the Use Case is to capture the required system behavior 
  from the perspective of the end user, to achieve one or more goals. Different 
  users benefit in different ways, of course: </p>
<ul>
  <li> <strong>Customers</strong> use them to describe, or at least to approve, 
    the description of the system's behavior. </li>
  <li><strong> Potential users</strong> use them to understand the system's behavior. 
  </li>
  <li><strong> Architects </strong>use them to identify architecturally significant 
    functionality. </li>
  <li><strong> Developers </strong>use them<strong> </strong> to understand the 
    required system behavior so they can identify classes from the Use Cases' 
    flow of events. </li>
  <li><strong> Testers</strong> use them as a basis for identifying a subset of 
    the required Test Cases. </li>
  <li> <strong>M</strong><b>anagers</b> use them<b> </b> to plan and assess the 
    work for each iteration. </li>
  <li><strong> Technical writers </strong>use them 
    to understand the sequence of system behavior 
    that they need to describe in the documentation. </li>
</ul>]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions>
						&lt;p> Decide the extent to which you will
						elaborate on Use &#xD; Cases: &lt;/p>&#xD;
						&lt;ul>&#xD; &#xD; &lt;li> Describe only major
						flows? &lt;/li>&#xD; &#xD; &lt;li> Describe only
						the most important Use Cases? &lt;/li>&#xD;
						&#xD; &lt;li>Fully describe preconditions and
						post-conditions? &lt;/li>&#xD; &#xD; &lt;li>
						Describe scenarios first, and then raise the
						level of abstraction by describing &#xD; Use
						Case flows? &lt;/li>&#xD; &lt;/ul>
					</RepresentationOptions>
				</Presentation>
				<Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact" name="vision"
				briefDescription="This artifact contains the definition of the stakeholders' view of the product to be developed, specified in terms of the stakeholders' key needs and features. It contains an outline of the envisioned core requirements for the system."
				id="_0WVxcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Vision" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="vision,_0WVxcMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_zHTQUKYSEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-28T07:33:58" changeDescription=""
					version="1.0.0" externalId="">
					<MainDescription><![CDATA[This artifact&nbsp;provides a complete vision for the software system under development 
and supports the contract between the customer  and 
the development organization.<span style="mso-spacerun: yes"> </span> Every project 
needs a source for capturing all Stakeholders' expectations.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving>
						If this artifact is not used, there is a high
						risk that Stakeholders and the development &#xD;
						team will have different
						expectations.&amp;nbsp;This could lead to
						cancellation of &#xD; the project.
					</ImpactOfNotHaving>
					<Purpose><![CDATA[<p> This artifact&nbsp;provides a high-level, sometimes contractual, basis for 
  the more detailed technical requirements that are visible to the Stakeholders. 
  It captures the essence of the system by describing high-level 
  requirements and design constraints that give the reader an overview of the 
  system from a behavioral requirements perspective. It serves 
  as input for the project-approval process, 
  communicates the fundamental "what and why" for the project, and provides 
  a plan against which all future decisions should be validated. </p>]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline>
						This artifact&amp;nbsp;is written from the
						customers' perspective, focusing on the
						essential features of the system and&#xD;
						acceptable levels of quality. The artifact
						should include a description of what &lt;a
						class=&quot;elementLinkWithUserText&quot;
						href=&quot;./../../openup_basic/guidances/termdefinitions/feature,_PgYREAeYEduWycDgioo5rg.html&quot;
						guid=&quot;_PgYREAeYEduWycDgioo5rg&quot;>features&lt;/a>&amp;nbsp;will
						be included, as well as those considered but not
						included. It should&#xD; also specify
						operational capacities (volumes, response times,
						accuracies), user profiles (who will be using
						the system),&#xD; and interoperational
						interfaces with entities beyond the system
						boundary, where applicable.
					</BriefOutline>
					<RepresentationOptions>
						Tailor this artifact as necessary for your
						project's needs. It is generally good &#xD;
						practice to keep this artifact brief so you can
						release &#xD; it to Stakeholders as soon as
						possible, and to make it easy for Stakeholders
						to &#xD; read and understand. You can &#xD;
						accomplish this by including only the most
						important Stakeholder requests &#xD; and
						features and avoiding details of requirements.
						&#xD; You can describe details in the other
						requirement &#xD; artifacts.
					</RepresentationOptions>
				</Presentation>
				<Checklist>_0WoFUMlgEdmt3adZL5Dmdw</Checklist>
				<Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact"
				name="work_items_list"
				briefDescription="This artifact contains a list of all scheduled work to be done within the project, as well as proposed work that may affect the product in this or future projects. Each Work Item may contain references to information relevant to carry out the work described within the work item."
				id="_rGNWsCbSEdqh1LYUOGRh2A" orderingGuide="" suppressed="false"
				presentationName="Work Items List" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="work_items_list,_rGNWsCbSEdqh1LYUOGRh2A" briefDescription=""
					id="-buxz4BVToq97bSxaqyjySg" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-01T10:55:05" changeDescription=""
					version="1.0.0" externalId="">
					<MainDescription><![CDATA[<p>
    This artifact provides a focal point for the entire team:
</p>
<ul>
    <li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects
    </li>
    <li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risks list
        is however prioritized separately.
    </li>
    <li>
        It provides one place to go to for the development team to understand what needs to be done, get references to
        material required to carry out the work, and one place to go to report progress made.
    </li>
</ul>
<p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as “Support Financial
    Planning” for a personal finance application. Work Items are analyzed, and broken down into smaller Work Items so they
    can assigned to an iteration, such as a use case scenario “Calculate Net Worth”. Further breakdown may be required to
    identify suitable tasks to be assigned to developers, such as “Develop UI for Calculate Net Worth”. This means that
    Work Items often have parent / child relationships.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving></ImpactOfNotHaving>
					<Purpose><![CDATA[To collect all requests for work that will potentially be taken on within the project, so work can be prioritized, effort
estimated and progress tracked.]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions>
						&lt;h3>&#xD; As a spreadsheet or database&#xD;
						&lt;/h3>&#xD; &lt;p>&#xD; The Work Items List
						can be captured as a separate artifact,
						represented by a spreadsheet or database table,
						see &lt;a class=&quot;elementLinkWithType&quot;
						href=&quot;./../../openup_basic/guidances/examples/work_items_list,_nHomIDgzEdu4E8ZdmlYjtA.html&quot;
						guid=&quot;_nHomIDgzEdu4E8ZdmlYjtA&quot;>Example:
						Work Items List&lt;/a>.&#xD; &lt;/p>&#xD;
						&lt;h3>&#xD; In specific tools&#xD;
						&lt;/h3>&#xD; &lt;p>&#xD; Project Management,
						Requirements Management and Change Request tools
						are an option to capture the list of work to
						be&#xD; done.&#xD; &lt;/p>&#xD; &lt;h3>&#xD;
						Subset As part of the Iteration Plan&#xD;
						&lt;/h3>&#xD; &lt;p>&#xD; The &lt;a
						class=&quot;elementLinkWithType&quot;
						href=&quot;./../../openup_basic/workproducts/iteration_plan,_0aQBEslgEdmt3adZL5Dmdw.html&quot;
						guid=&quot;_0aQBEslgEdmt3adZL5Dmdw&quot;>Artifact:
						Iteration Plan&lt;/a> typically references Work
						Items that are assigned to that&#xD; iteration.
						If the team is capturing the Iteration Plan on a
						Whiteboard for example, the team may choose to
						reference&#xD; high-level work items in the Work
						Items List that are assigned to the iteration,
						and maintain low-level child work&#xD; items
						used to track day-to-day work only within an
						iteration plan.&lt;br />&#xD; &lt;/p>
					</RepresentationOptions>
				</Presentation>
				<Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
				<Template>_QwUJYDg0Edu4E8ZdmlYjtA</Template>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact"
				name="iteration_plan"
				briefDescription="A fine-grained plan describing the objectives, work assignments, and evaluation criteria for the iteration."
				id="_0aQBEslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Iteration Plan" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="iteration_plan,_0aQBEslgEdmt3adZL5Dmdw" briefDescription=""
					id="_BcBR8KX5EdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-01T10:47:45" changeDescription=""
					version="" externalId="">
					<MainDescription><![CDATA[<p>
    The main objectives of the iteration plan is to provide the team with one central place for information regarding
    iteration objectives, detailed plan with task assignments, and evaluation results. This artifcat also helps the team to
    monitor the progress of the iteration.
</p>
<p>
    The task assignments for an iteration is a subset of all tasks on the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>, therefore the iteration plan ideally references those
    work items.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving></ImpactOfNotHaving>
					<Purpose><![CDATA[<p>
    Communicate the objectives, task assignment, and evaluation criteria for a given iteration.
</p>]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions>
						&lt;p>&#xD; The level of detail/formality of the
						plan must be adapted to what you need to
						successfully meet these objectives.The&#xD; plan
						could, for example, be captured&#xD;
						&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD; on a
						whiteboard listing the objectives, task
						assignments and evaluation criteria,&#xD;
						&lt;/li>&#xD; &lt;li>&#xD; as a 1-page document
						listing the objectives and evaluation criteria
						of the iteration, as well as referencing
						the&#xD; Work Items List for assignments for
						that iteration, or&#xD; &lt;/li>&#xD;
						&lt;li>&#xD; a more complex document, supported
						by a Gantt or Pert chart in a project planning
						tool.&#xD; &lt;/li>&#xD; &lt;/ul>
					</RepresentationOptions>
				</Presentation>
				<Concept>_lam4ADkBEduxovfWMDsntw</Concept>
				<Template>_0dBoQMlgEdmt3adZL5Dmdw</Template>
			</ContentElement>
			<ContentElement xsi:type="uma:Guideline"
				name="work_items_list"
				briefDescription="This guideline explains the lifecycle of work items, and how the Work Items List is used."
				id="_7vEXEMA4EdqSgKaj2SZBmg" orderingGuide="" suppressed="false"
				presentationName="Work Items List" variabilityType="na">
				<Presentation
					name="work_items_list,_7vEXEMA4EdqSgKaj2SZBmg" briefDescription=""
					id="-G1Oxlk6F0R09vClqy1EzOw" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-08-31T10:22:12" changeDescription=""
					version="">
					<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>&nbsp;captures all scheduled work to be done within the
    project, as well as proposed work that may affect the product. Some of the Work Items may be implemented in this
    project, some of them may be implemented in a future project, and some of them may never be implemented.
</p>
<p>
    Some of the work items may still be poorly defined, representing a big chunk of work requiring potentially several
    staff months of effort. As the priority of these work items increase, they are typically decomposed into smaller work
    items that represent specific and well-defined tasks that may take hours or days to address. In other cases, specific
    and well-defined work items are created directly, representing for example a defect to be addressed, see Figure 1.
</p>
<br />
<img height="369" alt="The higher priority, the more well-defined the work item should be. Top priority work items are addressed in next iteration. Work items can be added, removed and reprioritized at any time."  src="openup_basic/guidances/guidelines/resources/wil_overview.bmp" width="600" /><br />
<br />
<p>
    <strong><em>Figure 1. Work Items List provides one prioritized list of scheduled and proposed work.</em></strong>
</p>
<p>
    A Work Item may represent work associated with a defect, enhancement request, use case, scenario, user story,
    supporting requirement, or anything else that captures a potential requirement or improvement to your system. A Work
    Item may reference any type of requirement, defect, enhancement request, or other useful information guiding you in
    what needs to be done.
</p>
<p>
    A big advantage with the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>&nbsp;is that it enables you to prioritize only one list
    containing all the things that may need to be addressed, whether the work item represent a work related to a
    requirement, enhancement, or defect. The one exception is that we separately prioritize the risk list.
</p>
<p>
    Nothing in the project will get done if not represented or mapped to a Work Item. This means that all requirements,
    defects and change requests have to at some stage be mapped to a work item. Also, a developer will not take on work
    that is not represented in a Work Item. Only Work Items needs to be prioritized. This also means that tracking Work
    Items are a primary means of understanding status of the project.
</p>
<p>
    There are two major types of Work Items:
</p>
<ul>
    <li>
        <strong>Un-scheduled Work Items:</strong> These Work Items have not yet been assigned to an iteration, and there is
        no detailed effort estimate for the Work Item yet.
    </li>
    <li>
        <strong>Scheduled Work Items:</strong> These Work Items are assigned to an iteration, and typically have an
        additional set of attributes filled in, such as detailed effort estimates.
    </li>
</ul>
<h3>
    Un-scheduled Work Items
</h3>
<p>
    Most Work Items are initially un-scheduled, meaning that it has not yet been decided whether to do them, and when to do
    them. Unscheduled Work Items should always represent something meaningful to deliver to stakeholders, such a scenario
    to be detailed, designed, implemented and tested. You may consider capturing the following data for such Work Items:
</p>
<ul>
    <li>
        Name
    </li>
    <li>
        Description
    </li>
    <li>
        Priority
    </li>
    <li>
        Size estimate, such as a point estimate, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html" guid="_CGHskBEdEdqY7JB6N6CW2w">Guideline: Agile Estimation</a>.
    </li>
    <li>
        State, such as New, Assigned, Resolved, Verified, Closed, see Work Items States below
    </li>
    <li>
        Links to other reference material, such as requirements or detailed specifications of what needs to be done
    </li>
</ul>
<h3>
    Scheduled Work Items
</h3>
<p>
    Once a Work Item has been assigned to an iteration, it becomes scheduled. Note that we only assign Work Items to the
    current or next iteration. There is no point in assigning Work Items to a specific future iteration, since we cannot
    predict what a meaningful schedule will be more than an iteration in advance, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/iteration_planning,_0auiMMlgEdmt3adZL5Dmdw.html" guid="_0auiMMlgEdmt3adZL5Dmdw">Guideline: Iteration Planning</a>.
</p>
<p>
    The following additional attributes are useful for Scheduled Work Items:
</p>
<ul>
    <li>
        Target iteration
    </li>
    <li>
        Responsible team member
    </li>
    <li>
        Effort estimate left, such as actual hours of work, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html" guid="_CGHskBEdEdqY7JB6N6CW2w">Guideline: Agile Estimation</a>.
    </li>
    <li>
        Hours worked
    </li>
</ul>
<p>
    This provides the information required to plan and manage an iteration. We can plan iterations by understanding effort
    involved and we can do <a class="elementLinkWithType" href="./../../../openup_basic/guidances/reports/iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA.html" guid="_uAzgkDg3Edu4E8ZdmlYjtA">Report: Iteration Burndown</a> by tracking how much work is left.
</p>
<h3>
    Work Items States
</h3>
<p>
    We have found the following states to be useful to track Work Items:
</p>
<ul>
    <li>
        New: Work Item has been created, but not yet assigned to a team member.
    </li>
    <li>
        Assigned: A team member has been identified as responsible for the Work Item.
    </li>
    <li>
        Resolved: The team member responsible for the work items has implemented and tested the Work Item.
    </li>
    <li>
        Verified: The Work Item has been independently tested.
    </li>
    <li>
        Closed: The Work Item is no longer active.
    </li>
</ul>
<p>
    You may choose another set of states, based on your needs.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact" name="glossary"
				briefDescription="This artifact defines important terms used by the project. It defines the meaning of all relevant terms to the system being built. These terms are the foundation for all requirements specifications."
				id="_Wn7HcNcEEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false"
				presentationName="Glossary" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="glossary,_Wn7HcNcEEdqz_d2XWoVt6Q" briefDescription=""
					id="-iOn7_gfX_iELWRNGJ2JKPQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-13T11:58:14" changeDescription=""
					version="" externalId="">
					<MainDescription><![CDATA[<p> The Glossary helps you avoid a great deal of miscommunication by providing 
  two essential resources: </p>
<ul>
    
  <li> A central location to look for terms and abbreviations that are new to 
    development team members</li>
  <li> Definitions of terms that are used in specific ways within the domain</li>
</ul>
<p> Definitions for the Glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with Stakeholders and domain experts. 
</p>]]></MainDescription>
					<KeyConsiderations><![CDATA[<p> In some projects that do not involve business 
  or domain modeling, the Glossary is the primary artifact for 
  capturing information about the project's business domain. </p>]]></KeyConsiderations>
					<ImpactOfNotHaving>
						Misunderstandings about the meanings of data
						items account for many failed projects. &#xD;
						Some of them become obvious only in the late
						stages of system testing and can &#xD; be
						extremely expensive to correct.
					</ImpactOfNotHaving>
					<Purpose><![CDATA[The goal is for  the Glossary to provide a common 
vocabulary agreed upon by all Stakeholders. It can 
help people from different functional groups reach a mutual 
understanding of the&nbsp;system. 
<!--StartFragment -->
The goal is not to record all possible terms, but only those 
that are unclear, ambiguous, or require elaboration.]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions>
						&lt;p> The Glossary is a simple listing of
						domain terms and their definitions. You &#xD;
						can publish this list on a Wiki site to simplify
						access and maintenance. &lt;/p>
					</RepresentationOptions>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="supporting_requirements"
				briefDescription="This concept describes the supporting requirements"
				id="_VXZ5wO0IEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
				presentationName="Supporting Requirements" variabilityType="na">
				<Presentation
					name="supporting_requirements_1,_VXZ5wO0IEdqHTdbLTmC5IQ"
					briefDescription="" id="-3SXuKijeVOZalgLPgWRyFA" orderingGuide=""
					suppressed="false" authors="Chris Sibbald"
					changeDate="2006-09-21T08:42:15" changeDescription=""
					version="0.2">
					<MainDescription><![CDATA[<h3>
    Supporting Requirements Categories
</h3>
<p>
    Supporting requirements are categorized according to the FURPS+ model (Functionality, Usability, Reliability,
    Performance, Supportability + constraints). Constraints&nbsp;include design, implementation, interfaces, physical
    constraints, and business rules. A description of each of these types of requirements follows.
</p>
<p>
    Supporting requirements and Use Cases, together, define the requirements of the system. These requirements support the
    features listed in the Vision statement. Each requirement should&nbsp;support at least one feature, and each feature
    should be supported by at least one to requirement.
</p>
<p>
    In general, <strong>functional</strong> requirements describe behavior and are captured in&nbsp;Use Cases (see&nbsp;<a class="elementLinkWithType" href="./../../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html" guid="_0VGbUMlgEdmt3adZL5Dmdw">Artifact: Use Case</a>). <strong>Nonfunctional</strong> requirements are captured in the
    <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html" guid="_BVh9cL-CEdqb7N6KIeDL8Q">Artifact: Supporting Requirements</a>. However, nonfunctional requirements that are
    closely associated with a particular Use Case are often captured within the Use Case itself to simplify communication
    and maintenance.&nbsp; Similarly, there are global, or system-wide, functional requirements that are often captured
    among the supporting requirements for the same reasons.&nbsp;
</p>
<h4>
    Functionality requirements
</h4>
<p>
    Functionality requirements include all the overarching, system wide functional requirements. These functional
    requirements represent the main system features that are familiar within the business domain or technically oriented
    requirements such as auditing, licensing, localization, mail, online help, printing, reporting, security, system
    management, or workflow.
</p>
<h4>
    Usability requirements
</h4>
<p>
    Usability requirements include requirements based on human factors and user interface issues such as accessibility,
    interface aesthetics, and consistency within the user interface.
</p>
<h4>
    Reliability requirements
</h4>
<p>
    Reliability requirements include aspects such as availability, accuracy, predictability, frequency of failure or
    recoverability of the system from shut-down failure.
</p>
<h4>
    Performance requirements
</h4>
<p>
    Performance requirements address concerns such as throughput of information through the system, system response time
    and resource usage.
</p>
<h4>
    Supportability requirements
</h4>
<p>
    Supportability requirements include requirements such as compatibility and the abilities to test, adapt, maintain,
    configure, install, scale, localize, and so on.
</p>
<h4>
    + Constraints
</h4>
<p>
    The <strong>+</strong> of the FURPS+ acronym allows you to specify constraints, such as design, implementation,
    interfaces, physical constraints, and business rules:
</p>
<ul>
    <li>
        <strong>Design constraints</strong> limit the design and state requirements on the approach that should be taken in
        developing the system.
    </li>
    <li>
        <strong>Implementation constraints</strong> put limits on coding or construction (required standards, languages,
        tools, or platform)
    </li>
    <li>
        <strong>Interface constraints</strong> are requirements to interact with external systems, describing protocols or
        the nature of the information that is passed across that interface.
    </li>
    <li>
        <strong>Physical constraints</strong> affect the hardware or packaging housing the system (shape, size, and
        weight).
    </li>
    <li>
        <strong>Business rules</strong> are policies or decisions that govern how the business operates. They may constrain
        the steps described in the Use Case flow.
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="use_case"
				briefDescription="A use case describes what the system must do to provide value to the stakeholders."
				id="_KudM0NcJEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false"
				presentationName="Use Case" variabilityType="na">
				<Presentation name="use_case,_KudM0NcJEdqz_d2XWoVt6Q"
					briefDescription="" id="-BQLZ5GRUNrMdU6XeZAfe9Q" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-06-29T09:31:22"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A use case instance defines a sequence of actions performed by the system that yields an observable result of value to
    a particular actor.
</p>
<h3>
    <a id="Explanation" name="Explanation">Explanation</a>
</h3>
<p>
    There are several key words in this definition:
</p>
<ul>
    <li>
        <b>"use case instance"</b> The sequence referred to in the definition is really a specific flow of events through
        the system, or an instance. Many flows of events are possible, and many may be very similar. To make a use-case
        understandable, you should group similar flows of events into one use case. Identifying and describing a use case
        really means identifying and describing a group of related flows of events.
    </li>
    <li>
        <strong>"actions"</strong> An action is a computational or algorithmic procedure. It is invoked either when the
        actor provides a signal to the system or when the system gets a time event. An action may imply signal
        transmissions to either the invoking actor or other actors. An action is atomic, which means it is performed either
        entirely or not at all.
    </li>
    <li>
        <b>"performed by the system"</b> This means that the system provides the use case. An actor communicates with a
        use-case instance of the system.
    </li>
    <li>
        <b>"an observable result of value"</b> You can put a value on a successfully performed use case. A use case should
        make sure that an actor can perform a task that has an identifiable value. This is very important in determining
        the correct level or granularity for a use case. Correct level refers to achieving use cases that are not too
        small.&nbsp;&nbsp;
    </li>
    <li>
        <b>"a&nbsp;particular actor"</b> The actor is key to finding the correct use case, especially because the actor
        helps you avoid use cases that are too large. As an example, consider a visual modeling tool. There are really two
        actors to this application: a developer - someone who develops systems using the tool as support; and a system
        administrator - someone who manages the tool. Each of these actors has his own demands on the system, and will
        therefore require his own set of use cases.
    </li>
</ul>
<p>
    The functionality of a system is defined by different use cases, each of which represents a specific goal (observable
    result of value) for a particular actor. The description of a use case defines what happens in the system when the use
    case is performed.
</p>
<p class="picturecenter" align="center">
    <img height="173" alt="Diagram described in caption." src="openup_basic/guidances/concepts/resources/im_uc.gif" width="325" />
</p>
<p class="picturetext">
    In an automated teller machine the client can, for instance, withdraw money from an account, transfer money to an
    account, or check the balance of an account. These correspond to specific goals that the actor has in using the system.
</p>
<p>
    Each use case has a task of its own to perform. The collected use cases constitute all the possible ways of using the
    system. You should be able to&nbsp;determine the goal&nbsp;of a use-case task simply by observing its name.
</p>
<h3>
    <a id="How to Find Use Cases" name="How to Find Use Cases">How to Find Use Cases</a>
</h3>
<p>
    See the&nbsp;<a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html"
    guid="_eyL0wCu-EdqSxKAVa9kmvA">Guideline: Find and Outline Actors and Use Cases</a>&nbsp;for guidance on finding Actors
    and Use Cases.
</p>
<h3>
    <a id="How a Use Case Evolves" name="How a Use Case Evolves">How a Use Case Evolves</a>
</h3>
<p>
    See the <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html"
    guid="_4BJ_YCxSEdqjsdw1QLH_6Q">Guideline: Detail Use Cases and Scenarios</a>&nbsp;for guidance on evolving use cases.
</p>
<h3>
    <a id="Are All Use Cases Described in Detail?" name="Are All Use Cases Described in Detail?">Are All Use Cases
    Described in Detail?</a>
</h3>
<p>
    There will often be use cases in your model that are so simple that they do not need a detailed description of the flow
    of events, a step-by-step outline is quite enough. The criteria for making this decision is that you don't see
    disagreement among user kind of readers on what the use case means, and that designers and testers are comfortable with
    the level of detail provided by the step-by-step format. Examples are use cases that describe simple entry or retrieval
    of some data from the system.
</p>
<p>
    For more information on possible formats and level of detail captured for each use case see <a
    class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/use_case_formats,_qq0GMAXkEduj_7BEUj1JfQ.html"
    guid="_qq0GMAXkEduj_7BEUj1JfQ">Guideline: Use Case Formats</a>.
</p>
<h3>
    <a id="XE_use_case__scope_of_a_use_case" name="XE_use_case__scope_of_a_use_case"></a><a id="The Scope of a Use Case"
    name="The Scope of a Use Case">The Scope of a Use Case</a>
</h3>
<p>
    It is often hard to decide if a set of user-system interactions, or dialog, is one or several use cases. Consider the
    use of a recycling machine. The customer inserts deposit items, such as cans, bottles, and crates, into the recycling
    machine. When she has inserted all her deposit items, she presses a button, and a receipt is printed. She can then
    exchange this receipt for money.
</p>
<p>
    Is it one use case to insert a deposit item, and another use case to require the receipt? Or is it all one use case?
    There are two actions, but one without the other is of little value to the customer. Rather, it is the complete dialog
    with all the insertions, and getting the receipt, that is of value for the customer (and makes sense to her). Thus, the
    complete dialog, from inserting the first deposit item, to pressing the button and getting the receipt, is a complete
    case of use, a use case.
</p>
<p>
    Additionally, you want to keep the two actions together, to be able to review them at the same time, modify them
    together, test them together, write manuals for them and in general manage them as a unit. This becomes very obvious in
    larger systems.
</p>
<h3>
    <a id="How Use Cases Are Realized" name="How Use Cases Are Realized">How Use Cases Are Realized</a>
</h3>
<p>
    A use case describes what happens in the system when an actor interacts with the system to execute the use case. The
    use case does not define how the system internally performs its tasks in terms of collaborating objects. This is left
    for the use-case realizations to show.
</p>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    In the telephone example, the use case would indicate - among other things - that the system issues a signal when the
    receiver is lifted and that the system then receives digits, finds the receiving party, rings his telephone, connects
    the call, transmits speech, and so on.
</p>
<p>
    In an executing system, an instance of a use case does not correspond to any particular object in the implementation
    model (for example, an instance of a class in the code). Instead, it corresponds to a specific flow of events that is
    invoked by an actor and executed as a sequence of events among a set of objects. In other words, instances of use cases
    correspond to communicating instances of implemented objects. We call this the realization of the use case. Often, the
    same objects participate in realizations of more than one use case. For example, both the use cases Deposit and
    Withdrawal in a banking system may use a certain account object in their realization. This does not mean that the two
    use cases communicate, only that they use the same object in their realization.
</p>
<p>
    You can view a flow of events as consisting of several subflows, which taken together yield the total flow of events.
    You can reuse the description of a subflow in other use cases' flow of events. Subflows in the description of one use
    case's flow of events may be common to those of other use cases. In the design you should have the same objects perform
    this common behavior for all the relevant use cases; that is, only one set of objects should perform this behavior, no
    matter which use case is executing.
</p>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    In an automated teller machine system the initial subflow is the same in the flow of events of the use cases Withdraw
    Money and Check Balance. The flow of events of both use cases start by checking the identity of the card and the
    client's personal access code.
</p>
<h3>
    <a id="A Use-Case has Many Possible Instances" name="A Use-Case has Many Possible Instances">A Use Case has Many
    Possible Instances</a>
</h3>
<p>
    A use-case instance can follow an almost unlimited, but enumerable, number of paths. These paths represent the choices
    open to the use-case instance in the description of its flow of events. The path chosen depends on events. Types of
    events include:
</p>
<ul>
    <li>
        Input from an actor. For example, an actor can decide, from several options, what to do next.
    </li>
</ul>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    In the use case Recycle Items in the Recycling-Machine System the Customer always has two options: hand in still
    another deposit item or get the receipt of returned items.
</p>
<ul>
    <li>
        A check of values or types of an internal object or attribute. For example, the flow of events may differ if a
        value is greater or less than a certain value.
    </li>
</ul>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    In the use case Withdraw Money in an automated teller machine system, the flow of events will differ if the Client asks
    for more money than he has in his account. Thus, the use-case instance will follow different paths.
</p>
<h3>
    <a id="Concurrency of Use Case Instances" name="Concurrency of Use Case Instances">Concurrency of Use-Case
    Instances</a>
</h3>
<p>
    Instances of several use cases and several instances of the same use case work concurrently if the system permits it.
    In use-case modeling, you can assume that instances of use cases can be active concurrently without conflict. The
    design model is expected to solve this problem, because use-case modeling does not describe how things work. One way to
    view this is to assume that only one use-case instance is active at a time and that executing this instance is an
    atomic action. In use-case modeling, the "interpreting machine" is considered infinitely fast, so that serialization of
    use case instances is not a problem.
</p>
<h3>
    <a id="Name" name="Name">Name</a>
</h3>
<p>
    Each use case should have a name that indicates what is achieved by its interaction with the actor(s). The name may
    have to be several words to be understood. No two use cases can have the same name.
</p>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    These are examples of variations of the name for the use case Recycle Items in the Recycling Machine example:
</p>
<ul>
    <li>
        Receive Deposit Items
    </li>
    <li>
        Receiving Deposit Items
    </li>
    <li>
        Return Deposit Items
    </li>
    <li>
        Deposit Items
    </li>
</ul>
<h3>
    <a id="Brief Description" name="Brief Description">Brief Description</a>
</h3>
<p>
    The brief description of the use case should reflect its purpose. As you write the description, refer to the actors
    involved in the use case, the glossary and, if you need to, define new concepts.
</p>
<h5>
    Example:
</h5>
<p class="example">
    Following are sample brief descriptions of the use cases Recycle Items and Add New Bottle Type in the Recycling-Machine
    System:
</p>
<p class="example">
    <b>Recycle Items</b>: The user uses this machine to automatically have all the return items (bottles, cans, and crates)
    counted, and receives a receipt. The receipt is to be cashed at a cash register (machine).
</p>
<p class="example">
    <b>Add New Bottle Type</b>: New kinds of bottles can be added to the machine by starting it in 'learning mode' and
    inserting 5 samples just like when returning items. In this way, the machine can measure the bottles and learn to
    identify them. The manager specifies the refund value for the new bottle type.
</p>
<h3>
    <a id="XE_use_case__flow_of_events" name="XE_use_case__flow_of_events"></a><a id="XE_flow_of_events__guidelines_for"
    name="XE_flow_of_events__guidelines_for"></a><a id="Flow of Events - Contents" name="Flow of Events - Contents">Flow of
    Events - Contents</a>
</h3>
<p>
    The <b>Flow of Events</b> of a use case contains the most important information derived from use-case modeling work. It
    should describe the use case's flow of events clearly enough for an outsider to easily understand it. Remember the flow
    of events should present what the system does, not how the system is design to perform the required behavior.
</p>
<p>
    Guidelines for the contents of the flow of events are:
</p>
<ul>
    <li>
        Describe how the use case starts and ends.
    </li>
    <li>
        Describe what data is exchanged between the actor and the use case.
    </li>
    <li>
        Do not describe the details of the user interface, unless it is necessary to understand the behavior of the system.
        For example, it is often good to use a limited set of web-specific terminology when it is known beforehand that the
        application is going to be web-based. Otherwise, your run the risk that the use-case text is being perceived as too
        abstract. Words to include in your terminology could be "navigate", "browse", "hyperlink" "page", "submit", and
        "browser". However, it is not advisable to include references to "frames" or "web pages" in such a way that you are
        making assumptions about the boundaries between them - this is a critical design decision.&nbsp;
    </li>
    <li>
        Describe the flow of events, not only the functionality. To enforce this, start every action with "When the actor
        ... ".
    </li>
    <li>
        Describe only the events that belong to the use case, and not what happens in other use cases or outside of the
        system.
    </li>
    <li>
        Avoid vague terminology.
    </li>
    <li>
        Detail the flow of events-all "whats" should be answered. Remember that test designers are to use this text to
        identify test cases.
    </li>
</ul>
<p>
    If you have used certain terms in other use cases, be sure to use the exact same terms in this use case, and that their
    intended meaning is the same. To manage common terms, put them in a glossary.
</p>
<h3>
    <a id="Flow of Events - Structure" name="Flow of Events - Structure">Flow of Events - Structure</a>
</h3>
<p>
    The two main parts of the flow of events are <b>basic flow of events</b> and <a
    id="XE_flow_of_events__alternative_flow" name="XE_flow_of_events__alternative_flow"></a><b>alternative flows of
    events</b>. The basic flow of events should cover what "normally" happens when the use case is performed. The
    alternative flows of events cover behavior of optional or exceptional character in relation to the normal behavior, and
    also variations of the normal behavior. You can think of the alternative flows of events as "detours" from the basic
    flow of events, some of which will return to the basic flow of events and some of which will end the execution of the
    use case.
</p>
<p align="center">
    <img height="212" alt="Diagram described in caption." src="openup_basic/guidances/concepts/resources/ucstrct.gif" width="231" />
</p>
<p class="picturetext">
    The typical structure of the flow of events. The straight arrow represents the basic flow of events, and the curves
    represent alternative paths in relation to the normal. Some alternative paths return to the basic flow of events;
    whereas others end the use case.
</p>
<p>
    Both the basic flow of events and the alternative flows events should be further structured into steps or subflows. In
    doing this, your main goal should be readability of the text (see also the section Flow of Events - Style below). A
    rule of thumb is that a subflow should be a segment of behavior within the use case that has a clear purpose, and is
    "atomic" in the sense that you do either all or none of the actions described. You may need to have several levels of
    subflows, but if you can you should avoid it since it makes the text more complex and harder to understand.
</p>
<p>
    This type of written text, structured into consecutive subsections, will by its nature imply to the reader that there
    is a sequence between the subflows. To avoid misunderstandings, you should always point out whether the order of the
    subflows is fixed or not. Considerations of this kind are often related to:
</p>
<ul>
    <li>
        Business rules. For example, the user has to be authorized before the system can make certain data available.
    </li>
    <li>
        User-interface design. For example, the system should not enforce a certain sequence of behavior that may be
        intuitive to some but not to other users.
    </li>
</ul>
<p>
    To clarify where an alternative flow of events fits in the structure, you need to describe the following for each
    "detour" to the basic flow of events:
</p>
<ul>
    <li>
        Where in the basic flow of events the alternative behavior can be inserted.
    </li>
    <li>
        The condition that needs to be fulfilled for the alternative behavior to start.
    </li>
    <li>
        How and where the basic flow of events is resumed, or how the use case ends.
    </li>
</ul>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    This is an alternative subflow in the use case Return Items in the Recycling-Machine System.
</p>
<p class="example">
    <b>2.1. Bottle Stuck</b>
</p>
<p class="example">
    If in section 1.5, Insert Deposit Items, a bottle gets stuck in the gate, the sensors around the gate and the measuring
    gate will detect this problem. The conveyer belt is stopped and the machine issues an alarm to call for the operator.
    The machine will wait for the operator to indicate that the problem has been fixed. The machine then continues in
    section 1.9 of the basic flow.
</p>
<p>
    In the example above, the alternative flow of events is inserted at a specific location in the basic flow of events.
    There are also alternative flow of events that can be inserted at more than one location, some can even be inserted at
    any location in the basic flow of events.
</p>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    This is an alternative subflow in the use case Return Items in the Recycling-Machine System.
</p>
<p class="example">
    <b>2.2. Front Panel is Removed</b>
</p>
<p class="example">
    If somebody removes the front panel to the Recycling machine, the can compression is deactivated. It will not be
    possible to start the can compression with the front panel off. The removal will also activate an alarm to the
    operator. When the front panel is closed again, the machine resumes operation from the location in the basic flow of
    events at which it was stopped.
</p>
<p>
    It might be tempting, if the alternative flow of events is very simple, to just describe it in the basic flow of events
    section (using some informal "if-then-else" construct). This should be avoided. Too many alternatives will make the
    normal behavior difficult to see. Also, including alternative paths in the basic flow of events section will make the
    text more "pseudo-code like" and harder to read.
</p>
<p>
    In general, extracting parts of the flow of events and describing these parts separately, can increase the readability
    of the basic flow of events and improve the structure of the use case and the use-case model. You can model extracted
    parts as:
</p>
<ul>
    <li>
        An alternative flow of events within the base use case if it is a simple variant, option, or exception to the basic
        flow of events.
    </li>
    <li>
        As an explicit inclusion in the base use case, if it is something that you wish to encapsulate so that it can be
        reused by other use cases.
    </li>
    <li>
        As an implicit inclusion in the base use case, if the basic flow of events of the base use case is complete, that
        is, has a defined beginning and end. The nature of the extending flow should be such that you prefer to conceal it
        in the description of the base use case to render it less complex.
    </li>
    <li>
        A subflow in the basic flow of events, possibly as another option, if none of the above alternatives applies. For
        example, in a Maintain Employee Information use case, there may be separate subflows for adding, deleting and
        modifying employee information.
    </li>
</ul>
<h3>
    <a id="Flow of Events - Style" name="Flow of Events - Style">Flow of Events - Style</a>
</h3>
<p>
    You can describe use cases in many styles. As an example we show the basic flow of events of the use case Administer
    Order described in three different styles, varying primarily in how formal they are. The first style, shown in example
    1 below, is recommended, because it is easy to understand, and the order in which things happen is clearly evident. The
    text is divided into numbered and named subsections. Numbers are there to make it easy to refer to a subsection. Names
    of subsections will let the reader get a quick overview of the flow of events by browsing through the text reading only
    the headers.
</p>
<p>
    In example 2 below, the description of the flow of events fails to clarify the order in which things happen. If you
    write in this style, you and others might miss important things that concern the system.
</p>
<p>
    Example 3 below shows a yet another style, which can be useful if you find it difficult to express the sequence of
    events clearly. This pseudo-code style is more precise, but the text is hard to read and absorb for a non-technical
    person, especially if you want to grasp the flow of events quickly.
</p>
<h5>
    <a id="Example 1:" name="Example 1:">Example 1:</a>
</h5>
<div align="center">
    <table
    style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"
     cellspacing="0" bordercolordark="#808080" cellpadding="4" width="85%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <td width="100%">
                    <b>1.1. Start of Use Case</b> 
                    <p>
                        This use case starts when the actor Operator tells the system to create a measurement order. The
                        system will then retrieve all Network Element actors, their measurement objects and corresponding
                        measurement functions that are available to this particular Operator. Available Network Elements
                        are those that are in operation, and that the Operator has the authority to access. The
                        availability of measurement functions depends on what has been set up for a particular type of
                        measurement object.
                    </p>
                    <p>
                        <b>1.2. Configure Measurement Order</b>
                    </p>
                    <p>
                        The system allows the actor Operator to select which Network Elements to measure and then shows
                        which measurement objects are available for the selected Network Elements. The system allows the
                        Operator to select from the measurement objects, and then select which measurement functions to set
                        up for each measurement object.
                    </p>
                    <p>
                        The system allows the Operator to enter a textual comment on the measurement order.
                    </p>
                    <p>
                        The Operator tells the system to complete the measurement order. The system will respond by
                        generating a unique name for the measurement order and setting up default values for when, how
                        often, and for how long the measurement should be made. The default values are unique to each
                        Operator. The system then allows the Operator to edit these default values.
                    </p>
                    <p>
                        <b>1.3. Initialize Order</b>
                    </p>
                    <p>
                        The Operator tells the system to initialize the measurement order. The system will then record the
                        identity of the creating Operator, the date of creation, and the "Scheduled" status of the
                        measurement order.
                    </p>
                    <p>
                        <b>1.4. Use Case Ends</b>
                    </p>
                    <p>
                        The system confirms initialization of the measurement order to the Operator, and the measurement
                        order is made available for other actors to view.
                    </p>
                </td>
            </tr>
        </tbody>
    </table>
    <br />
</div>
<p class="picturetext" align="center">
    Describing a use case: In this style, the text is easy to read and the flow of events is easy to follow. Aim for this
    style in your descriptions.
</p>
<h5>
    <a id="Example 2:" name="Example 2:">Example 2:</a>
</h5>
<div align="center">
    <table
    style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"
     cellspacing="0" bordercolordark="#808080" cellpadding="4" width="85%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <td width="100%">
                    Orderers can create Orders to collect measurement data from the Network Elements. 
                    <p>
                        The system will assign the Order a unique name as well as default values that indicate the length
                        and time of the measurement and also how often it is to be repeated. The Orderer will be able to
                        edit these values.
                    </p>
                    <p>
                        The Orderer must further specify which measurement function, network element and measurements
                        objects are applicable. The Orderer can also add a personal comment to the order.
                    </p>
                    <p>
                        When the necessary information had been defined, a new Order is created and initialized with the
                        defined attributes, the name of the creator, and the date of creation. The status of the order will
                        be set to "scheduled". (Possible values for the status are: Scheduled, Executing, Completed,
                        Canceled, and Erroneous.)
                    </p>
                    <p>
                        The user interface is then notified that a new Order has been created and receives a reference to
                        the new Order so that it can be displayed.
                    </p>
                </td>
            </tr>
        </tbody>
    </table>
    <br />
</div>
<p class="picturetext">
    Describing a use case: This style is readable, but there is no clear flow of events.
</p>
<h5>
    <a id="Example 3:" name="Example 3:">Example 3:</a>
</h5>
<div align="center">
    <table
    style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"
     cellspacing="0" bordercolordark="#808080" cellpadding="4" width="65%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <td width="100%">
<pre>
<font size="2"><small>'Administrate order' (User identity) 
REPEAT
    &lt;='Show administer order menu'     IF (=&gt; 'Creating an Order' (Measurement function,
network element, measurement object)) THEN
    The system finds a unique name, default values for when and
how long the measurement should be executed. 
&lt;= 'Show order' (Default attributes) REPEAT     =&gt; 'Edit order' (Attribute to change, New value of attribute)
    &lt;= 'Update screen' (New attributes) UNTIL (All attributes are defined) REPEAT     IF (=&gt; 'Edit order' (Attribute to change, New value of  attribute))
THEN &lt;= 'Update screen' (New attributes) ELSIF (=&gt; 'Save order' (Order identity, Attributes)) THEN
    The order is created and initialized in the system with
    the defined attributes, the name of the creator,
    date of creation and the status 'scheduled'.
    &lt;= 'New order created' (The order) ENDIF UNTIL (=&gt; 'Quit') 
    ENDIF 
UNTIL 'Quit administer order'</small>
</font>
</pre>
                </td>
            </tr>
        </tbody>
    </table>
    <br />
</div>
<p class="picturetext">
    Describing a use case: Here the writer has chosen a formal style using pseudocode. This style makes it hard to quickly
    grasp the process steps, but can be useful if the flow of events is difficult to capture precisely.
</p>
<h3>
    <a id="XE_flow_of_events__examples_of" name="XE_flow_of_events__examples_of"></a><a id="Flow of Events - Example"
    name="Flow of Events - Example">Flow of Events - Example</a>
</h3>
<p>
    The complete description of the flow of events of the use case Administer Order, including its alternative flows, could
    look as follows:
</p>
<p>
    <b>1. Basic Flow of Events</b>
</p>
<p>
    <b>1.1. Start of Use Case</b>
</p>
<p>
    This use case starts when the actor Operator tells the system to create a measurement order. The system will then
    retrieve all Network Element actors, their measurement objects and corresponding measurement functions that are
    available to this particular Operator. Available Network Elements are those that are in operation, and that the
    Operator has the authority to access. The availability of measurement functions depends on what has been set up for a
    particular type of measurement object.
</p>
<p>
    <b>1.2. Configure Measurement Order</b>
</p>
<p>
    The system allows the actor Operator to select which Network Elements to measure and then shows which measurement
    objects are available for the selected Network Elements. The system allows the Operator to select from these
    measurement objects, and then select which measurement functions to set up for each measurement object.
</p>
<p>
    The system allows the Operator to enter a textual comment on the measurement order.
</p>
<p>
    The Operator tells the system to complete the measurement order. The system will respond by generating a unique name
    for the measurement order and setting up default values for when, how often, and for how long the measurement should be
    made. The default values are unique to each Operator. The system then allows the Operator to edit these default values.
</p>
<p>
    <b>1.3. Initialize Order</b>
</p>
<p>
    The Operator tells the system to initialize the measurement order. The system will then record the identity of the
    creating Operator, the date of creation, and the "Scheduled" status of the measurement order.
</p>
<p>
    <b>1.4. Use Case Ends</b>
</p>
<p>
    The system confirms initialization of the measurement order to the Operator, and the measurement order is made
    available for other actors to view.
</p>
<p>
    <b>2. Alternative Flows of Events</b>
</p>
<p>
    <b>2.1. No Network Elements Available</b>
</p>
<p>
    If in 1.1, Start of Use Case, it turns out that no Network Elements are available to measure for this Operator, the
    system will inform the Operator. The use case then ends.
</p>
<p>
    <b>2.2. No Measurement Functions Available</b>
</p>
<p>
    If in 1.2, Configure Measurement Order, no measurement functions are available for the selected Network Elements, the
    system will inform the Operator and allow the Operator to select other Network elements.
</p>
<p>
    <b>2.3. Cancel Measurement Order</b>
</p>
<p>
    The system will allow the Operator to cancel all actions at any point during the execution of the use case. The system
    will then return to the state it was in before the use case was started, and end the use case.
</p>
<h3>
    <a id="Special Requirements" name="Special Requirements">Special Requirements</a>
</h3>
<p>
    In the Special Requirements of a use case, you describe all the requirements on the use case that are not covered by
    the flow of events. These are non-functional requirements that will influence the design model. See also the discussion
    on non-functional requirements in <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html"
    guid="_0Wh-sMlgEdmt3adZL5Dmdw">Concept: Requirements</a>. You could organize these requirements in categories such as
    Usability, Reliability, Performance, and Substitutability, but normally there are so few of them that such grouping is
    not particularly value-adding.
</p>
<h5>
    Example:
</h5>
<p class="example">
    In the Recycling-Machine System, a special requirement of the Return Deposit Items use case could be:
</p>
<p class="example">
    The machine has to be able to recognize deposit items with a reliability of more than 95 percent.
</p>
<h3>
    <a id="XE_postcondition__guidelines_for" name="XE_postcondition__guidelines_for"></a><a
    id="XE_precondition__guidelines_for" name="XE_precondition__guidelines_for"></a><a
    id="preconditions and Postconditions" name="preconditions and Postconditions">Preconditions and Postconditions</a>
</h3>
<p>
    It can be useful to use the notion of <b>precondition</b> and <b>postcondition</b> to clarify how the flow of events
    starts and ends. However, only use it if it is perceived as adding value by the audience of the use case.
</p>
<p align="center">
    <img height="278" alt="Diagram described in caption." src="openup_basic/guidances/concepts/resources/ucprepst.gif" width="344" />
</p>
<p class="picturetext">
    A precondition is the state of the system and its surroundings that is required before the use case can be started. A
    postcondition is the states the system can be in after the use case has ended.
</p>
<p>
    Consider the following:
</p>
<ul>
    <li>
        The states described by pre- or postconditions should be states that the user can observe. "The user has logged on
        to the system" or "The user has opened the document" are examples of observable states.
    </li>
    <li>
        A precondition is a constraint on when a use case can start. It is not the event that starts the use case.
    </li>
    <li>
        A precondition for a use case is not a precondition for only one subflow, although you can define preconditions and
        postconditions at the subflow level.
    </li>
    <li>
        A postcondition for a use case should be true regardless of which alternative flows were executed; it should not be
        true only for the main flow. If something could fail, you would cover that in the postcondition by saying "The
        action is completed, or if something failed, the action is not performed", rather than just "The action is
        completed".
    </li>
    <li>
        When you use postconditions together with extend-relationships, you should take care that the extending use case
        does not introduce a subflow that violates the postcondition in the base use case.
    </li>
    <li>
        Postconditions can be a powerful tool for describing use cases. You first define what the use case is supposed to
        achieve - the postcondition. You can then describe how to reach this condition - the flow of events needed.
    </li>
</ul>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    A precondition for the use case Cash Withdrawal in the ATM machine: The customer has a personally-issued card that fits
    in the card reader, has been issued a PIN number, and is registered with the banking system.
</p>
<p class="example">
    A postcondition for the use case Cash Withdrawal in the ATM machine: At the end of the use case, all account and
    transaction logs are balanced, communication with the banking system is reinitialized and the customer has been
    returned his card.
</p>
<h3>
    <a id="Extension Points" name="Extension Points">Extension Points</a>
</h3>
<p>
    An <b>extension point</b> opens up the use case to the possibility of an extension. It has a name, and a list of
    references to one or more locations within the flow of events of the use case. An extension point may reference a
    single location between two behavior steps within the use case. It may also reference a set of discrete locations.
</p>
<p>
    To use named extension points will help you separate the specification of the behavior of the extending use case from
    the internal details of the base use case. The base use case can be modified or rearranged, as long as the names of the
    extension points remain the same it will not affect the extending use case. At the same time, you are not loading down
    the text describing the flow of events of the base use case with details of where behavior might be extended into it.
</p>
<p class="exampleheading">
    Example:
</p>
<p class="example">
    In a phone system, the use case Place Call can be extended by the abstract use case Show Caller Identity. This is an
    optional service, often referred to as "Caller ID", that may or may not have been requested by the receiving party. A
    description of the extension point in the use case Place Call could look as follows:
</p>
<p class="example">
    <b>Name</b>: Show Identity
</p>
<p class="example">
    <b>Location</b>: After section 1.9 Ring Receiving Party's Telephone.
</p>
<h3>
    <a id="Use-Case Diagrams" name="Use-Case Diagrams">Use-Case Diagrams</a>
</h3>
<p>
    You may choose to illustrate how a use case relates to actors and other use cases in a use-case diagram (in unusual
    cases, more than one diagram), owned by the use case. This is useful if the use case is involved with many actors, or
    has relationships to many other use cases. A diagram of this kind is of "local" character, since it shows the use-case
    model from the perspective of one use case only and is not intended to explain any general facts about the whole
    use-case model. Refer to&nbsp;<a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/uc_model,_0VAUsMlgEdmt3adZL5Dmdw.html"
    guid="_0VAUsMlgEdmt3adZL5Dmdw">Guideline: Use-Case Model</a> for more information.<br />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Checklist"
				name="good_requirements"
				briefDescription="This checklist provides guidance on assessing the quality of requirements."
				id="_jxn9EO0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
				presentationName="Qualities of Good Requirements"
				variabilityType="na">
				<Presentation
					name="good_requirements_1,_jxn9EO0HEdqHTdbLTmC5IQ"
					briefDescription="" id="-2o1pXjHpSEPN_rohLce5jA" orderingGuide=""
					suppressed="false" authors="Chris Sibbald"
					changeDate="2006-04-10T05:07:04"
					changeDescription="Added checklist for good requirements in accordance with Feb. 23, 2006 minutes of RM SIG."
					version="0.1">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Section name="Correct" briefDescription=""
						id="_jxuDsu0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
						sectionName="" variabilityType="na">
						<Description>
							Does the requirement correctly specify a
							true need, desire, or obligation?
						</Description>
					</Section>
					<Section name="Complete" briefDescription=""
						id="_jxuDs-0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
						sectionName="" variabilityType="na">
						<Description>
							Is the requirement stated as a complete
							sentence?
						</Description>
					</Section>
					<Section name="Clear" briefDescription=""
						id="_jxuDse0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
						sectionName="" variabilityType="na">
						<Description>
							Is the requirement unambiguous and not
							confusing?
						</Description>
					</Section>
					<Section name="Consistent" briefDescription=""
						id="_jxuDt-0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
						sectionName="" variabilityType="na">
						<Description>
							Is the requirement in conflict with other
							requirements?
						</Description>
					</Section>
					<Section name="Verifiable" briefDescription=""
						id="_jxuDte0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
						sectionName="" variabilityType="na">
						<Description>
							Can we determine whether the system
							satisfies the requirement?
						</Description>
					</Section>
					<Section name="Traceable" briefDescription=""
						id="_jxuDtu0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
						sectionName="" variabilityType="na">
						<Description>
							Is the requirement uniquely identified?
						</Description>
					</Section>
					<Section name="Feasible" briefDescription=""
						id="_jxuDtO0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
						sectionName="" variabilityType="na">
						<Description>
							Can the requirement be satisfied within cost
							and on schedule?
						</Description>
					</Section>
					<Section name="Design Independent"
						briefDescription="" id="_jxuDsO0HEdqHTdbLTmC5IQ" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Are all requirements that impose constraints
							on the design, limiting design
							options,&amp;nbsp;justified?
						</Description>
					</Section>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Checklist" name="vision"
				briefDescription="This check list provides questions to verify that the Vision is described in a consistent and complete manner."
				id="_0WoFUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Vision" variabilityType="na">
				<Presentation name="vision,_0WoFUMlgEdmt3adZL5Dmdw"
					briefDescription="" id="_qktWQMM0EdmSIPI87WLu3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-07-07T10:30:32"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Section
						name="Have you fully explored what the problem behind the problem is"
						briefDescription="" id="_VwoioAeiEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Make sure that you have found the root cause
							of the Stakeholder's problem or need. Often,
							Stakeholders define solutions&#xD; rather
							than stating the problem that they are
							experiencing, and they may not have
							identified the problem correctly or the&#xD;
							correct solution for it.
						</Description>
					</Section>
					<Section
						name="Is the problem statement correctly formulated"
						briefDescription="" id="_dBs8gAeiEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Make sure that you have agreement on the
							problem to be solved.
						</Description>
					</Section>
					<Section
						name="Is the list of Stakeholders complete and correct"
						briefDescription="" id="_jGUxYAeiEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Make sure you didn't miss any Stakeholders.
							If you did, you probably do &#xD; not yet
							have all of the perspectives that you need
							&#xD; to consider.
						</Description>
					</Section>
					<Section
						name="Does everyone agree on the definition of the system boundaries?"
						briefDescription="" id="_s-be8AeiEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Define what is&lt;strong> in &lt;/strong>and
							what is &lt;strong>out &lt;/strong>of system
							&#xD; boundaries. This is a &lt;strong>
							&lt;/strong>critical step in defining the
							scope of &#xD; work.
						</Description>
					</Section>
					<Section
						name="Have you sufficiently explored constraints to put on the system?"
						briefDescription="" id="_z1uG4AeiEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Don't forget about the non-functional
							requirements and constraints. These are
							&#xD; often the largest cost of development.
						</Description>
					</Section>
					<Section
						name="Have you covered all kinds of constraints, including political, economic, and  environmental?"
						briefDescription="" id="_7KzeEAeiEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							&lt;p> These non-technical constraints often
							lead to problems &#xD; later.&lt;/p>
						</Description>
					</Section>
					<Section
						name="Have all key features of the system been identified and defined?"
						briefDescription="" id="_DymaUAejEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Do a completeness check, comparing the
							features with the problem statement, to
							&#xD; make sure that you didn't miss a
							critical feature.
						</Description>
					</Section>
					<Section
						name="Will the features solve the problems that are identified?"
						briefDescription="" id="_LRX5AAejEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Are all the features really
							necessary?&amp;nbsp; Perhaps you can reduce
							the scope.
						</Description>
					</Section>
					<Section
						name="Are the features consistent with constraints that you've identified?"
						briefDescription="" id="_UGRdIAejEduWycDgioo5rg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							&lt;p> Check that conflicting requirements
							do not exist. If you find conflicts, resolve
							&#xD; them now. &lt;/p>
						</Description>
					</Section>
					<Section
						name="Can someone who is not familiar with the project understand what you hope the  project will achieve by reading the Vision document?"
						briefDescription="" id="_5y4uAAhUEduRe8TeoBmuGg" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							The purpose of the Vision document is to
							describe &#xD; the objectives of the project
							in terms that non-technical people, who are
							not &#xD; closely involved with the project,
							can understand.
						</Description>
					</Section>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact" name="actor"
				briefDescription="This artifact represents a set of roles interacting with a system. An instance can be an individual or an external system."
				id="_0VMh8MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Actor" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="actor,_0VMh8MlgEdmt3adZL5Dmdw" briefDescription=""
					id="_NptaEKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-13T11:57:21" changeDescription=""
					version="" externalId="">
					<MainDescription><![CDATA[<p> To fully understand the system's purpose, you must know who the system is 
  for, that is: Who will use the system? Actors represent different types of users. 
  An actor is anyone or anything that exchanges data with the system. 
  Therefore, an actor can be a user, external hardware, or another system. 
</p>
<p> The difference between an actor and an individual system user is that an actor 
  represents a particular class of users, rather than an actual user. Several 
  users can play the same role, which means that 
  they can be the same, single actor. In that case, 
  each individual user constitutes an instance of the actor. </p>
<p>
    <img height="322" alt="" src="openup_basic/workproducts/resources/md_acto2.gif" width="396" />
</p>
<p> As an illustration, Ivar and Mark are operators 
  of a recycling machine. When they are using the machine, each is represented 
  by an instance of the actor called Operator. </p>
<p> However, in some situations, only one person plays the role modeled by an 
  actor. For example, there may be only one individual in 
  the role of system administrator for a rather small system. </p>
<p> The same user can also act as several actors (that is, the same person can 
  take on different roles). </p>
<p>
    <img height="139" alt="" src="openup_basic/workproducts/resources/md_acto3.gif" width="367" />
</p>
<p> Charlie uses the Depot-Handling System primarily as Depot Manager, but sometimes 
  he also uses the Depot-Handling System as an ordinary Depot Staff member. </p>
<p> For each Actor identified, document<strong> </strong>the 
  name and brief description. </p>
<p> It is also necessary to capture the Use Cases that this Actor initiates and 
  those in which the Actor plays a secondary role. </p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving>
						If you do not use this artifact, important
						Stakeholder perspectives may not be &#xD; taken
						into account. This will&amp;nbsp;result in a
						solution that does not meet all &#xD; users'
						needs. It will be very difficult, if not
						impossible,&amp;nbsp;to assess the &#xD;
						completeness of the set of Use Cases without the
						context provided by the associated &#xD; Actors.
					</ImpactOfNotHaving>
					<Purpose><![CDATA[<p> Different Stakeholders use this artifact for different purposes: </p>
<ul>
  <li> <b>Analysts</b> use this artifact to define the system boundaries, identify 
    external interfaces,&nbsp;and describe Use Cases interactions with Actors. 
  </li>
  <li> <b>Developers</b> use this artifact to capture characteristics of human 
    Actors when they are creating the user interface and to realize Use Cases 
    (in terms of objects) and their interaction with Actors. </li>
</ul>]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions>
						&lt;p> If your project is using a Use Case
						model, there is no need for a separate &#xD;
						representation for Actors other than in the Use
						Case model and in the Use Case &#xD;
						specification. &lt;/p>
					</RepresentationOptions>
				</Presentation>
				<Checklist>_0VrDEMlgEdmt3adZL5Dmdw</Checklist>
			</ContentElement>
			<ContentElement xsi:type="uma:Checklist" name="actor"
				briefDescription="This check list provides questions to help ensure that all actors, and only valid actors, have been identified and described correctly."
				id="_0VrDEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Actor" variabilityType="na">
				<Presentation name="actor,_0VrDEMlgEdmt3adZL5Dmdw"
					briefDescription="" id="_KEldgMM1EdmSIPI87WLu3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-07-07T10:18:05"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Section name="Have you found all the actors"
						briefDescription="" id="_ytiigAYQEdubLa3RRn5f4A" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Have you accounted for all roles in the
							systems environment?&amp;nbsp; See &lt;a
							class=&quot;elementLinkWithType&quot;
							href=&quot;./../../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html&quot;
							guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Guideline:
							Find and Outline Actors and Use
							Cases&lt;/a>&amp;nbsp;for some questions
							that may help&#xD; identify actors.
						</Description>
					</Section>
					<Section
						name="Is each actor involved with at least one use case"
						briefDescription="" id="_AcjQMAYREdubLa3RRn5f4A" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							If you cannot identify a use case associated
							with a given actor perhaps the actor should
							be removed, or perhaps you are&#xD; missing
							a use case.
						</Description>
					</Section>
					<Section
						name="Can you identify at least two people, or external systems, that would play the role of a particular actor"
						briefDescription="" id="_P3mo8AYREdubLa3RRn5f4A" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							If you cannot, check if the role that the
							actor represents is part of another
							actor.&amp;nbsp; If that is the case, you
							should&#xD; merge the actors.
						</Description>
					</Section>
					<Section
						name="Will a particular actor use the system in several completely different ways"
						briefDescription="" id="_b640oAYREdubLa3RRn5f4A" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							&lt;p>&#xD; If true, you should probably
							have more than one actor.&#xD; &lt;/p>
						</Description>
					</Section>
					<Section
						name="Does the actor have several completely different purposes for using the system"
						briefDescription="" id="_iOHtQAYREdubLa3RRn5f4A" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							If true, there may be more than one actor.
						</Description>
					</Section>
					<Section
						name="Have you considered maintenance and administrative roles"
						briefDescription="" id="_ptfB0AYREdubLa3RRn5f4A" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							It is common to focus on the daily users of
							the system, and forget about administrative
							and maintenance roles such as&#xD; setting
							up user accounts, managing access rights,
							performing backups, etc.&amp;nbsp; Ensure
							you have captured these actors.
						</Description>
					</Section>
					<Section
						name="Does each actor have a clear description of its role"
						briefDescription="" id="_2i_UoAYREdubLa3RRn5f4A" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							Each actor should have a short description
							of the role and the main goal the actor has
							in using the system.
						</Description>
					</Section>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Role" name="tester"
				briefDescription="This role is responsible for the core activities of the test effort. Those activities  include identifying, defining, implementing, and conducting the necessary tests,  as well as logging the outcomes of the testing and analyzing the results."
				id="_0ZM4MclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Tester" variabilityType="na">
				<Presentation xsi:type="uma:RoleDescription"
					name="tester,_0ZM4MclgEdmt3adZL5Dmdw" briefDescription=""
					id="_NqYIcKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-26T10:51:28" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<p>
    This role is primarily responsible for the following&nbsp;tasks:
</p>
<ul>
    <li>
        Identify the tests&nbsp;that need to&nbsp;be performed
    </li>
    <li>
        Identify the most appropriate implementation approach for a given test
    </li>
    <li>
        Implement individual tests
    </li>
    <li>
        Set up and execute the tests
    </li>
    <li>
        Log outcomes and verify that the tests have been run
    </li>
    <li>
        Analyze and recover from execution errors
    </li>
    <li>
        Communicate test results to the team
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<AssignmentApproaches>
						&lt;p>&#xD; This role can be assigned in the
						following ways:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
						&lt;li>&#xD; Assign one or more testing staff
						members to perform this role. This is a fairly
						standard approach and is&#xD; particularly
						suitable for small teams, as well as for teams
						of any size where the team is made up of an
						experienced&#xD; group of testers of relatively
						equal skill levels.&#xD; &lt;/li>&#xD;
						&lt;li>&#xD; Assign one or more testing staff
						members to perform only this role.&amp;nbsp;This
						works well in large teams. It is also&#xD;
						useful to separate responsibilities when some of
						the testing staff has more test automation
						experience than other&#xD; team members.&#xD;
						&lt;/li>&#xD; &lt;li>&#xD; Assign one or more
						team members that is already playing another
						role in the project to be responsible for
						the&#xD; testing of some part of the system’s
						capabilities.&amp;nbsp;The team member will have
						to have the appropriate test&#xD; skills&#xD;
						&lt;/li>&#xD; &lt;/ul>
					</AssignmentApproaches>
					<Skills>
						&lt;p>&#xD; A person&amp;nbsp;filling
						the&amp;nbsp;this role should have the following
						skills:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
						&lt;li>&#xD; Knowledge of testing approaches and
						techniques&#xD; &lt;/li>&#xD; &lt;li>&#xD;
						Diagnostic and problem-solving skills&#xD;
						&lt;/li>&#xD; &lt;li>&#xD; Knowledge of the
						system or application being tested
						(desirable)&#xD; &lt;/li>&#xD; &lt;li>&#xD;
						Knowledge of networking and system architecture
						(desirable)&#xD; &lt;/li>&#xD; &lt;/ul>&#xD;
						&lt;p>&#xD; Where automated testing is required,
						consider requiring these additional
						qualifications:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
						&lt;li>&#xD; Training in the appropriate use of
						test automation tools&#xD; &lt;/li>&#xD;
						&lt;li>&#xD; Experience using test automation
						tools&#xD; &lt;/li>&#xD; &lt;li>&#xD;
						Programming skills&#xD; &lt;/li>&#xD;
						&lt;li>&#xD; Debugging and diagnostic
						skills&#xD; &lt;/li>&#xD; &lt;/ul>&#xD;
						&lt;p>&#xD; &lt;strong>Note:&lt;/strong>
						Specific skill requirements vary depending on
						the type of testing that you are conducting.
						For&#xD; example, the skills needed to
						successfully use system load testing automation
						tools are different from those needed for&#xD;
						the automation of system functional
						testing.&#xD; &lt;/p>
					</Skills>
					<Synonyms></Synonyms>
				</Presentation>
				<ResponsibleFor>_0ZS-0MlgEdmt3adZL5Dmdw</ResponsibleFor>
				<ResponsibleFor>_0ZlSsMlgEdmt3adZL5Dmdw</ResponsibleFor>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact" name="test_case"
				briefDescription="This artifact is the specification of a set of test inputs, execution conditions, and expected results, identified for the purpose of making an evaluation of some particular aspect of a scenario."
				id="_0ZS-0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Test Case" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="test_case,_0ZS-0MlgEdmt3adZL5Dmdw" briefDescription=""
					id="_NqYIdKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-21T01:57:14" changeDescription=""
					version="1.0.0" externalId="">
					<MainDescription><![CDATA[<p>
    A test case specifies the conditions which need to be validated to enable an assessment of some particular aspects of
    the system under test.&nbsp; A test case is more formal than a test idea and usually takes the form of a
    specification.&nbsp;In less formal environments, test cases can be created by identifying a unique ID, name, associated
    test data, and expected results.&nbsp;For an example of this type of test case, see&nbsp;<a class="elementLinkWithType" href="./../../openup_basic/guidances/templates/test_case,_0dT8IMlgEdmt3adZL5Dmdw.html" guid="_0dT8IMlgEdmt3adZL5Dmdw">Template: Test Case</a>.
</p>
<p>
    Test cases may be derived from&nbsp;many&nbsp;sources but will usually include a subset of both the requirements (such
    as use cases, performance characteristics, reliability concerns) and other types of quality attributes.&nbsp; For more
    information on types of tests and their relationship to quality test attributes, see&nbsp;<a class="elementLinkWithType" href="./../../openup_basic/guidances/concepts/types_of_test,_0aJ6cMlgEdmt3adZL5Dmdw.html" guid="_0aJ6cMlgEdmt3adZL5Dmdw">Concept: Types of Test</a>.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving></ImpactOfNotHaving>
					<Purpose><![CDATA[<p>
    The purpose of this artifact is to:
</p>
<ul>
    <li>
        provide a way to capture test inputs, conditions, and expected results for a system
    </li>
    <li>
        systematically identify aspects of the software to test
    </li>
    <li>
        specify whether an expected result has been reached based on verification of a system requirement, set of
        requirements, or scenario
    </li>
</ul>]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions></RepresentationOptions>
				</Presentation>
				<Checklist>_0Zxf8MlgEdmt3adZL5Dmdw</Checklist>
				<Template>_0dT8IMlgEdmt3adZL5Dmdw</Template>
			</ContentElement>
			<ContentElement xsi:type="uma:Artifact" name="test_log"
				briefDescription="This artifact collects raw output captured during a unique execution of one or more tests for a single test cycle run."
				id="_0ZlSsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Test Log" variabilityType="na">
				<Presentation xsi:type="uma:ArtifactDescription"
					name="test_log,_0ZlSsMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_NqePEKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-07-10T11:18:59" changeDescription=""
					version="" externalId="">
					<MainDescription><![CDATA[The Test Log provides a detailed, typically time-based record that serves both as verification that a set of tests were
executed, and provides information relating to the success of those tests.&nbsp; The focus is typically on the provision of
an accurate audit trail, enabling post-execution diagnosis of failures to be undertaken.&nbsp; This raw data will
subsequently be analyzed to help determine the results of some aspect of the test effort.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<ImpactOfNotHaving></ImpactOfNotHaving>
					<Purpose><![CDATA[<ul>
    <li>
        To provide verification that a set of tests was executed
    </li>
    <li>
        To provide information relating to the success of those tests
    </li>
</ul>]]></Purpose>
					<ReasonsForNotNeeding></ReasonsForNotNeeding>
					<BriefOutline></BriefOutline>
					<RepresentationOptions></RepresentationOptions>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Checklist" name="test_case"
				briefDescription="This checklist provides questions to verify that test cases are created in a consistent and complete manner."
				id="_0Zxf8MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Test Case" variabilityType="na">
				<Presentation name="test_case,_0Zxf8MlgEdmt3adZL5Dmdw"
					briefDescription="" id="_kwHAgMPbEdmbOvqy4O0adg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-07-07T10:45:15"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Section
						name="Each test has a name, description, statement of test objective, and conditions or prerequisites that apply to the test case"
						briefDescription="" id="_Hv2n0BBbEduXULqRagzBHA" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description></Description>
					</Section>
					<Section
						name="Each test case clearly state the expected result(s) and the actual result(s)"
						briefDescription="" id="_qOu20BBbEduXULqRagzBHA" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description></Description>
					</Section>
					<Section
						name="Each test case contains a concrete description on how to evaluate the test case outcome"
						briefDescription="" id="_sXKi8BBbEduXULqRagzBHA" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description></Description>
					</Section>
					<Section
						name="Does the test case have a unique identifier"
						briefDescription="" id="_uf-pkBBbEduXULqRagzBHA" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description></Description>
					</Section>
					<Section
						name="Does the test case address the functionality to be tested either in the form of a requirement or use case"
						briefDescription="" id="_wbfUABBbEduXULqRagzBHA" orderingGuide=""
						suppressed="false" sectionName="" variabilityType="na">
						<Description>
							In some cases, it is useful to think of
							generating several test cases for each
							requirement, a positive test case to
							test&#xD; for expected behavior and usually
							several negative test cases to test for
							abnormal behavior.
						</Description>
					</Section>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Role" name="developer"
				briefDescription="The person in this role is responsible for developing a part of the system, including designing it to fit into the architecture, possibly prototyping the user-interface, and then implementing, unit-testing, and integrating the components that are part of the solution."
				id="_0YDosMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Developer" variabilityType="na">
				<Presentation xsi:type="uma:RoleDescription"
					name="developer,_0YDosMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_NqL7MqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-11T08:34:23" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<AssignmentApproaches>
						&lt;p>&#xD; Even in the smallest team, multiple
						individuals should be working together to create
						the technical solution.&#xD; &lt;/p>&#xD;
						&lt;p>&#xD; A person performing this role can
						have specialized skills in a particular
						technical area, but should also have a
						broad&#xD; understanding of all the technologies
						involved to be able to work with other technical
						team members.&#xD; &lt;/p>
					</AssignmentApproaches>
					<Skills>
						&lt;p>&#xD; A person in this role needs the
						abilities necessary to perform well in these
						tasks:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
						&lt;li>&#xD; Define and create technical
						solutions in the project's technology&#xD;
						&lt;/li>&#xD; &lt;li>&#xD; Identify and build
						test cases that cover required behavior of the
						technical components&#xD; &lt;/li>&#xD;
						&lt;li>&#xD; Communicate designs in a way that
						other team members understand&#xD; &lt;/li>&#xD;
						&lt;/ul>
					</Skills>
					<Synonyms></Synonyms>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Role" name="architect"
				briefDescription="This role is responsible for designing the software architecture, which includes making the key technical decisions that constrain the overall design and implementation of the project."
				id="_0X9iEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Architect" variabilityType="na">
				<Presentation xsi:type="uma:RoleDescription"
					name="architect,_0X9iEMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_Y6tLEKbXEdm9d-ircVOUCA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-28T08:17:34" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<p>
    This role leads or coordinates the technical design of the system and has overall responsibility for managing the major
    technical decisions that the architecture manifests. This typically includes identifying and documenting the
    architecturally significant aspects of the system, including requirements, design, implementation, and deployment
    views.
</p>
<p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
</p>
<p>
    This role is closely involved in organizing the team around the architecture by working closely with the&nbsp;<a class="elementLink" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">Project Manager</a>&nbsp;in staffing and planning the project.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<AssignmentApproaches>
						&lt;p>&#xD; This person in this role should be
						engaged in the project from start to
						finish.&#xD; &lt;/p>&#xD; &lt;p>&#xD; For
						smaller projects, a single person may act as
						both architect and &lt;a
						class=&quot;elementLink&quot;
						href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot;
						guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Project
						Manager&lt;/a>. However, if possible, it is
						better to have these roles performed by
						different people to ensure that time&#xD;
						pressure in one role doesn't cause neglect of
						the other role. If you adopt this separate-role
						approach, both&#xD; individuals must make sure
						that they work together closely.&#xD;
						&lt;/p>&#xD; &lt;p>&#xD; If the project is large
						enough to warrant an architectural team, the
						goal is to have a good mix of talents that
						covers&#xD; a broad spectrum of experience and
						share a common understanding of software
						engineering process. The architectural team&#xD;
						does not need to be a committee of
						representatives from various teams, domains, or
						contractors. Software architecture&#xD; is a
						full-time function, with staff permanently
						dedicated to it.&#xD; &lt;/p>
					</AssignmentApproaches>
					<Skills>
						&lt;p> Architects must be well-rounded people
						&#xD; with maturity, vision, and a depth of
						experience &#xD; that allows for grasping issues
						quickly and making educated, critical judgments
						&#xD; in the absence of complete information.
						More specifically, the person must possess &#xD;
						this combination of qualifications: &lt;/p>&#xD;
						&lt;ul>&#xD; &#xD; &lt;li> &lt;b>Experience
						&lt;/b>&lt;strong>in both problem and software
						engineering domains&lt;/strong>, &#xD; with
						evidence of a thorough understanding of the
						requirements to solve the &#xD; problem and
						active participation in software development. If
						there is a team, &#xD; this experience can be
						represented &#xD; by different team members, but
						at least one person must be &#xD; able to
						provide the overall vision for &#xD; the
						project. &lt;/li>&#xD; &lt;li> &lt;b>Leadership
						ability &lt;/b>to motivate and maintain momentum
						for the technical &#xD; effort across the
						various teams and to make critical decisions
						under pressure, &#xD; plus make those decisions
						stick. To be effective, this role must have the
						authority &#xD; to make technical decisions.
						&lt;/li>&#xD; &lt;li> &lt;b>Excellent
						communication&lt;/b> &lt;strong>skills
						&lt;/strong>to earn trust, persuade, &#xD;
						motivate, and mentor.This role cannot lead &#xD;
						by decree, but only by the consent of the rest
						of the project team. &#xD; To be effective,
						this&amp;nbsp;person must earn the respect of
						the team members, &#xD; the &lt;a
						class=&quot;elementLink&quot;
						href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot;
						guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Project
						&#xD; Manager&lt;/a>, the customer, and the user
						community, as well as the management &#xD; team.
						&lt;/li>&#xD; &lt;li> &lt;b>Goal-oriented and
						proactive&lt;/b>
						&lt;strong>orientation&lt;/strong> with a &#xD;
						relentless focus on results.&amp;nbsp;This
						person is the technical driving force &#xD;
						behind the project, not a visionary or dreamer.
						The career of a successful &#xD; architect is a
						long series of sub-optimal decisions made in
						uncertainty and &#xD; under pressure. Only those
						who can focus on doing what needs to be done
						will &#xD; be successful.&lt;/li>&#xD;
						&lt;/ul>&#xD; &lt;p> From an expertise
						standpoint, this role also needs to show both
						design and &#xD; implementation abilities.
						However, from the design perspective, the
						effective &#xD; architect typically exhibits
						these traits: &lt;/p>&#xD; &lt;ul>&#xD; &#xD;
						&lt;li>Tends to be a generalist, rather than a
						specialist, who &#xD; knows many technologies at
						a high level rather than a few technologies at
						&#xD; the detail level &lt;/li>&#xD; &lt;li>
						Makes the broader technical decisions, &#xD;
						thereby demonstrating broad knowledge and
						experience, as well as communication &#xD; and
						leadership skills&lt;/li>&#xD; &lt;/ul>&#xD;
						&lt;blockquote dir=&quot;ltr&quot;
						style=&quot;MARGIN-RIGHT: 0px&quot;> &#xD;
						&lt;p> &quot;The ideal architect should be a
						person of letters, a mathematician, familiar
						&#xD; with historical studies, a diligent
						student of philosophy, acquainted with &#xD;
						music, not ignorant of medicine, learned in the
						responses of jurisconsults, &#xD; familiar with
						astronomy and astronomical calculations.&quot;
						&amp;#8212; Vitruvius, &#xD; circa 25 BC
						&lt;/p>&#xD; &lt;/blockquote>
					</Skills>
					<Synonyms></Synonyms>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Role" name="project_manager"
				briefDescription="Leads the planning of the project, coordinates interactions with the stakeholders, and keeps the project team focused on meeting the project objectives."
				id="_0a0o0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Project Manager" variabilityType="na">
				<Presentation xsi:type="uma:RoleDescription"
					name="project_manager,_0a0o0MlgEdmt3adZL5Dmdw" briefDescription=""
					id="_Fdq-8KX4EdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-09-22T08:49:58" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<p>
    This role:
</p>
<ul>
    <li>
        Applies management knowledge, skills, tools and techniques to a broad range of tasks in order to deliver&nbsp;the
        desired&nbsp;result for a particular project in a timely fashion.
    </li>
    <li>
        Is accountable for the outcome of the project and the acceptance of the product by the customer.
    </li>
    <li>
        Responsible for the evaluation of project's risks, and controling these risks through mitigation strategies.&nbsp;
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<AssignmentApproaches>
						&lt;p>&#xD; This role is often played by a
						single person. This role is difficult to share
						with others, but might not consume all of&#xD; a
						person’s availability.&#xD; &lt;/p>&#xD; &lt;br
						/>&#xD; &lt;br />
					</AssignmentApproaches>
					<Skills>
						&lt;p>&#xD; A person performing this role needs
						the following skills:&#xD; &lt;/p>&#xD;
						&lt;ul>&#xD; &lt;li>&#xD; Good in presentation,
						facilitation, communication, and
						negotiation.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
						Leadership and team building capabilities.&#xD;
						&lt;/li>&#xD; &lt;li>&#xD; Thorough experience
						in the software development lifecycle&amp;nbsp;
						to teach, guide and support it.&#xD;
						&lt;/li>&#xD; &lt;li>&#xD; Proficient in
						conflict resolution and problem solving
						techniques.&#xD; &lt;/li>&#xD; &lt;/ul>
					</Skills>
					<Synonyms></Synonyms>
				</Presentation>
				<ResponsibleFor>_0aQBEslgEdmt3adZL5Dmdw</ResponsibleFor>
				<ResponsibleFor>_rGNWsCbSEdqh1LYUOGRh2A</ResponsibleFor>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="iteration"
				briefDescription="An iteration is a set period of time within a project in which you produce a stable, executable version of the product, together with any other supporting documentation, install scripts, or similar, necessary to use this release. Also referred to as a cycle or a timebox."
				id="_lam4ADkBEduxovfWMDsntw" orderingGuide="" suppressed="false"
				presentationName="Iteration" variabilityType="na">
				<Presentation name="new_concept,_lam4ADkBEduxovfWMDsntw"
					briefDescription="" id="-vi8wxwxVZLY0SMPFxZjD7A" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-31T05:04:08"
					changeDescription="" version="">
					<MainDescription><![CDATA[<H3>What is an Iteration </H3>
<P>An iteration is a set period of time within a project in which you produce a stable, executable version of the product, together with any other supporting documentation, install scripts, or similar, necessary to use this release. The executable is demonstrable, allowing the team to demonstrate true progress to stakeholders, get feedback on how they are doing so that they can improve their understanding of what needs to be done, and how to do it, Each iteration builds upon the results of previous iteration, and will produce a product increment one step closer to the final product. Iteration are timeboxed, meaning the schedule for an iteration should be regarded as fixed, and the scope of the iteration's content actively managed to meet that schedule. </P>
<P>At each iteration, artifacts are updated. It is said that this is a bit like "growing" software. Instead of developing artifacts one after another, in a pipeline fashion, they are evolving across the cycle, although at different rates. </P>
<P>Iterative development is very disciplined: the iteration length is fixed; the objectives of iterations are carefully planned; the evaluation criteria are established when each iteration is planned; and the tasks and responsibilities of participants are well defined. Additionally, objective measures of progress are captured. Some reworking takes place from one iteration to the next, but this too is done in a structured fashion. </P>
<P>Each iteration should address the most critical risks, and implement the highest-priority Work Items. This ensures that each iteration adds maximum stakeholder value, while reducing uncertainty. Iterative development is typically combined with frequent or continuous integration: as unit-tested components become available, they are integrated, then a build is produced and subjected to integration testing. In this way, the capability of the integrated software grows as the iteration proceeds, towards the goals set when the iteration was planned. Regular builds, such as daily or more frequent builds, let you break down the integration and test issues and spread them across the development cycle. These issues have often been the downfall of large projects because all problems were discovered at once during the single massive integration step, which occurred very late in the cycle, and where a single problem halts the whole team. </P>
<H3>What Problem Do Iterations Address? </H3>
<P>Today’s software applications are too complex to allow you to sequentially define the requirements, come up with an architecture and design, do an implementation, carry out testing, and get it all right. Whether you use waterfall or iterative development approaches, your initial requirements, architecture, design, and code will be suboptimal. With waterfall development, you typically do not get meaningful feedback on what improvements can be made until it is so late in the project that it is too costly to make them. By contrast, dividing the project into a series of time-boxed iterations allows you to deliver capabilities that can be assessed by stakeholders at the end of each iteration. This approach provides rapid and timely feedback loops enabling issues to be addressed and improvements made at a lower cost while budget and time still allow, and before the project has gone so far ahead that major rework is required. </P>
<H3>Iteration Length </H3>
<P>Iterations are typically 4 weeks long, although some teams will work with iterations as short as a week or as long as six weeks. For factors driving iteration length, see Table X. </P>
<P><STRONG><EM>Table X. Factors Impacting Iteration Length.</EM></STRONG><BR>&nbsp;<BR></P>
<TABLE style="WIDTH: 547px; HEIGHT: 356px" cellSpacing=2 cellPadding=2 width=547 border=1>
<TBODY>
<TR>
<TH scope=col>Factors leading to reduced iteration length&nbsp; </TH>
<TH scope=col>Factors leading to increased iteration length </TH></TR>
<TR>
<TD>Small teams&nbsp; </TD>
<TD>Large teams </TD></TR>
<TR>
<TD>Collocated teams&nbsp; </TD>
<TD>Distributed teams </TD></TR>
<TR>
<TD>Strong configuration management system&nbsp; </TD>
<TD>Poor configuration management system </TD></TR>
<TR>
<TD>Dedicated, full-time resources </TD>
<TD>Matrixed or part-time resources </TD></TR>
<TR>
<TD>Automated testing </TD>
<TD>Lack of automated testing </TD></TR>
<TR>
<TD>Integrated tool environment&nbsp; </TD>
<TD>Absence of good automation and tool integration </TD></TR>
<TR>
<TD>Team experienced with iterative development </TD>
<TD>Team inexperienced with iterative development </TD></TR>
<TR>
<TD>Fast decision making </TD>
<TD>Policies and bureaucracy preventing fast decision making </TD></TR>
<TR>
<TD>Unclear requirements </TD>
<TD>Well-understood requirements </TD></TR>
<TR>
<TD>Unclear or brittle architecture </TD>
<TD>Well-defined and stable architecture </TD></TR>
<TR>
<TD>New and poorly understood technology </TD>
<TD>Well-understood technology </TD></TR></TBODY></TABLE><BR><BR>
<H3>Why Iterate? </H3>
<P>The iterative approach has proved itself superior to the waterfall approach for a number of reasons: </P>
<UL>
<LI>You are more likely to build an application that addresses user needs. Early specification of requirements often leads to unused features. The Standish Group has researched thousands of application development projects and has found that more than 45 percent of features are never used, while another 19 percent are used rarely&nbsp; (see Figure 2.3). In other words, typically more than half of the development effort is wasted on developing nonessential capabilities. To avoid this problem, you need to involve the customer in the development project and use an iterative approach that allows you to implement and validate the capabilities deemed most essential in each iteration. This approach allows not only early validation of key capabilities but also addition of new capabilities late in the project. 
<LI>Integration is not one “big bang” at the end of a project. Leaving integration to the end results in time- and budget-consuming rework. To avoid this, an iterative approach breaks a project down into smaller iterations, each evolving executable code that is continuously integrated to enable rapid feedback and minimize later revision. 
<LI>Risks are usually discovered or addressed during early iterations. With the iterative approach, risks are more likely to be identified and addressed in early iterations. As an example, if there is a risk that a stakeholder will not be happy with the functionality you are developing, iterative development will encourage you to&nbsp; implement the most essential capabilities partially and demonstrate them to key stakeholders to make sure that you are on the right track. 
<LI>Your ability to work effectively is fine-tuned. During early iterations, team members are walking through all lifecycle activities, from requirements capture and test definition to development, implementation, and testing. Consequently, they can make sure they have the tools, skills, organizational structure, and so on to work effectively. 
<LI>Management has a way of making tactical changes to the product. Management can make changes to the product along the way—to compete with other new products, for example. Iterative development allows you to evolve partial implementations of the end product quickly and use these for quick release of a reduced-scope product to counter a competitor's move. 
<LI>Reuse is facilitated. It is easier to identify common parts as they are being partially designed or implemented in iterations than to recognize them at the beginning. Discussions and reviews of the design in early iterations allow team members to spot potential opportunities for reuse and then develop a mature common code for these opportunities in subsequent iterations. 
<LI>Defects can be found and corrected over several iterations. This capability results in a robust architecture and a high-quality application. Flaws are detected in early iterations, rather than during a massive testing phase at the end. Performance bottlenecks are discovered while they can still be addressed instead of creating panic on the eve of delivery. 
<LI>Project personnel are better used. Many organizations match their use of a waterfall approach with a pipeline organization: the analysts send the completed requirements to designers, who send a completed design to programmers, who send components to integrators, who send a system to testers. These many handoffs are sources of errors and misunderstandings and make people feel less responsible for the final product. An iterative process encourages widening the scope of expertise of the team members, allowing them to play many roles and thus enabling a project manager to make better use of the available staff and simultaneously remove problematic handoffs. 
<LI>Team members learn along the way. The project members have several opportunities within a development cycle to learn from their mistakes and improve their skills from one iteration to another. More training opportunities can be discovered as a result of assessing the earlier iterations. 
<LI>The development process itself is improved and refined along the way. The end of iteration assessment not only looks at the project status from a product or scheduling perspective but also analyzes what can be improved in the next iteration in both the organization and the process.&nbsp; One technique for doing so is to hold a retrospective. </LI></UL>
<br/><SPAN class=E1><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'MS Mincho'; mso-ansi-language: EN-US; mso-fareast-language: JA; mso-bidi-language: AR-SA"><?xml:namespace prefix = v ns = "urn:schemas-microsoft-com:vml" /><v:shapetype id=_x0000_t75 stroked="f" filled="f" path="m@4@5l@4@11@9@11@9@5xe" o:preferrelative="t" o:spt="75" coordsize="21600,21600"><STRONG> <IMG height=307 alt="45 percent of featues implemented are never ever used" src="openup_basic/guidances/concepts/resources/iteration_1.GIF" width=489></STRONG></v:shapetype></SPAN></SPAN><BR>&nbsp; 
<P><STRONG><EM>Figure 2.3. Most Features Implemented Are Never or Rarely Used.<BR></EM></STRONG><EM>An amazing 45 percent of features implemented are never used, while another 19 percent are used only rarely. If features never used were not implemented in the first place, development time would be cut in about half. Further, since productivity is typically measured in the form of lines of code or functionality delivered, this improvement would not register as a productivity increase using standard productivity measures.<BR></EM>&nbsp; </P>
<H3>Iteration and Phases </H3>
<P>The purpose of iterations is to produce an executable which can be assessed so you can get feedback and make course corrections. This executable brings you one step closer to the final product. Phases provide a focus for a team on meeting a certain management objective. OpenUP has four phases, each ending with answering a specific question: </P>
<UL>
<LI><STRONG>Inception</STRONG>—Do we agree on the problem we are trying to solve? 
<LI><STRONG>Elaboration</STRONG>—Do we agree on the overall solution, and do we understand risks, costs and schedule parameters reasonably well? 
<LI><STRONG>Construction</STRONG>—Do we agree that we have a system that addresses key stakeholder needs? 
<LI><STRONG>Transition</STRONG>—Do we agree that we can release the system and end the project? </LI></UL>
<P>Within each phase, you may have one or several iterations, where the iterations aim at producing the results required to answer these questions. As an example, to answer the question for Elaboration, we typically need to implement and test some key aspects of the system so that we understand what architecture we need, what Commercial Off-The-Shelf (COTS) components we may need, what key risks we face and how to address them, the effectiveness of the team, and so on. These needs will steer how we prioritize what is to be done in an Elaboration iteration. </P>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="risk"
				briefDescription="A risk is whatever may stand in the way to success, and is currently unknown or uncertain. Usually, a risk is qualified by the probability of occurrence and the impact in the project, if it occurs."
				id="_0bsLgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Risk" variabilityType="na">
				<Presentation name="risk,_0bsLgMlgEdmt3adZL5Dmdw"
					briefDescription="" id="_u6enMMM1EdmSIPI87WLu3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-30T10:17:28"
					changeDescription="" version="">
					<MainDescription><![CDATA[<h3>
    What is a Risk?
</h3>
<p>
    In well managed projects, many decisions are driven by risks, or more exactly by risk mitigation. You are trying to
    mitigate or tackle the most critical risks as earlier as possible in the project. In order to achieve this you need to
    get a good grip on the risks the project is faced with, and have clear strategies on how to mitigate or deal with them.
</p>
<p>
    In everyday life a risk is an exposure to loss or injury; a factor, thing, element, or course involving uncertain
    danger.&nbsp;Similarly, in&nbsp;software development a risk is something that can compromise the success of a project.
    Examples of potential sources of risk in software development are listed below (see [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">SEI99</a>] for more details):
</p>
<ul>
    <li>
        Requirements
    </li>
    <li>
        Design
    </li>
    <li>
        Development process
    </li>
    <li>
        Work environment
    </li>
    <li>
        Resources
    </li>
    <li>
        Contract
    </li>
    <li>
        Project interdependencies
    </li>
    <li>
        etc.
    </li>
</ul>
<p>
    Risks can be seen as opportunities. If there are benefits associated to an opportunity, then certain degrees of risk
    must be taken&nbsp;for a&nbsp;project to be&nbsp;successful [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">SEI99</a>].
</p>
<h3>
    Risk Attributes
</h3>
<p>
    You can record as much information as you like or need about your risks, you will find below a list of common risk
    attributes.
</p>
<ul>
    <li>
        <strong>Risk Description:</strong> A description of the risk detailing the impact for the project if this risk
        becomes a problem (i.e. it becomes a reality).
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Type:</strong> Used to classify the risk as:
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            <li>
                <strong>Direct risk</strong>: a risk that the project has a large degree of control over.
            </li>
            <li>
                <strong>Indirect risk</strong>: a risk with little or no project control.
            </li>
        </ul>
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Probability</strong> (of occurence): how many chances do we have that this risk will become
        a&nbsp;problem or an issue, This is usually represented as a scale of values (for example: High, Medium, Low).
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Impact</strong> (level): if this risk become an problem what will be the impact&nbsp;on
        the&nbsp;project. This is not the actual description of the impact but the level of impact. As the risk
        probability, it is usually represented as a scale.&nbsp;This&nbsp;attribute is&nbsp;also sometimes called the
        <strong>severity</strong> of the risk.
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Magnitude</strong>: To be able to rank and to define which ones need to be mitigate first,&nbsp;the
        <strong>Risk Probability&nbsp;</strong> and <strong>Risk Impact</strong> attributes are often combined in a
        single&nbsp;<strong>Risk</strong> <strong>Magnitude</strong> indicator represented as a scale similar to the
        combined attributes.
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ContentPackage" name="templates"
			briefDescription="" id="_0cQzQMlgEdmt3adZL5Dmdw" orderingGuide=""
			suppressed="false" global="false">
			<ContentElement xsi:type="uma:Template" name="vision"
				briefDescription="This is the informal template suggested for representing the Vision document."
				id="_0cW54MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Vision" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="vision,_0cW54MlgEdmt3adZL5Dmdw" briefDescription=""
					id="_LxX6AMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-05-09T08:32:25" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/vision.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template"
				name="uc_specification"
				briefDescription="This is the informal template suggested for representing a use case specification."
				id="_0cpNwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Use-Case Specification" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="uc_specification,_0cpNwMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_OaB-UMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-05-09T08:32:09" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/uc_specification.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template" name="project_plan"
				briefDescription="This is the informal template for representing the project plan."
				id="_0c7hoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Project Plan" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="project_plan,_0c7hoMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_XjOXcMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-05-09T02:03:04" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/project_plan.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template"
				name="iteration_plan"
				briefDescription="This is the informal template suggested for an iteration plan."
				id="_0dBoQMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Iteration Plan" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="iteration_plan,_0dBoQMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_Z_bUIMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-05-09T01:49:33" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/iteration_plan.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template"
				name="software_arch_document"
				briefDescription="This is the informal template suggested for representing architecture."
				id="_0dN1gMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Software Architecture Document"
				variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="software_arch_document,_0dN1gMlgEdmt3adZL5Dmdw"
					briefDescription="" id="_fJPGkMM2EdmSIPI87WLu3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-05-09T07:50:14"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/software_arch_document.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template" name="test_case"
				briefDescription="This is the informal template suggested for representing test cases."
				id="_0dT8IMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="Test Case" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="test_case,_0dT8IMlgEdmt3adZL5Dmdw" briefDescription=""
					id="_j2pQ4MM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-05-09T07:58:06" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/test_case.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template"
				name="supporting_requirements_spec"
				briefDescription="This is the template suggested for specifying requirements and constraints in accordance with the FURPS+ classification."
				id="_ItYXcNa9Edqrw4BYKyYKiA" orderingGuide="" suppressed="false"
				presentationName="Supporting Requirements Specification"
				variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="new_template,_ItYXcNa9Edqrw4BYKyYKiA" briefDescription=""
					id="-FsyxZy4tyX8k5CxT5Jww_w" orderingGuide="" suppressed="false"
					authors="Ana Paula Valente Pereira (apereira@whatever.pt) and Chris Sibbald"
					changeDate="2006-08-17T06:24:20" changeDescription=""
					version="0.4">
					<MainDescription><![CDATA[This template provides a starting point for capturing&nbsp;supporting requirement in a consistent manner and to provide a
useful checklist when determining the types of requirements that may apply.&nbsp; It is not expected that one would
complete&nbsp;every section of this template in all circumstances.&nbsp; Tailor as you see fit for your particular
circumstances.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/supporting_req_spec.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template" name="architecture"
				briefDescription="Templates for representing the architecture work product."
				id="__JXkoCk8EduLGM8dfVsrKg" orderingGuide="" suppressed="false"
				presentationName="Architecture" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name=",__JXkoCk8EduLGM8dfVsrKg" briefDescription=""
					id="-1Lm8-0FY-QIC56u5t2SC9w" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-08-11T04:27:13" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    Here are some examples for representing the architecture. Architecture can be represented in a variety of ways,
    according to the needs of the project team. See <a class="elementLink"
    href="./../../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html"
    guid="_0XAf0MlgEdmt3adZL5Dmdw">Architecture</a>&nbsp;for more information.
</p>
<p>
    Feel free to use one or more of these examples or create your own.
</p>
<p>
    The <a class="elementLink" href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html"
    guid="_0X9iEMlgEdmt3adZL5Dmdw">Architect</a> should decide what views are useful for describing the system under
    consideration.&nbsp;
</p>
<p>
    Consider one or more&nbsp;relevant views of the architecture and document each one using the provided template for the
    architectural view. If needed, document information that applies to more than one view using the template provided for
    the Software Architecture Document to get an integrated representation of the architecture instead of just snapshots
    taken from different angles.
</p>
<p>
    The structuring of the documents must support the needs of the intended audience. For example, instead of a document
    for the implementation view developers may find more useful alternative forms for the project directory structure like
    the template provided for the project startup kit.
</p>
<p>
    Keep documentation up-to-date but to an essential minimum. During elaboration decisions are reconsidered frequently so
    constant revision of the documentation is an unnecessary expense.&nbsp; Determine points in the development process
    when documentation should be updated.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/sw_architecture_doc_tpl.dot|openup_basic/guidances/templates/resources/project_startup_kit.zip|openup_basic/guidances/templates/resources/sw_architecture_view_tpl.dot|openup_basic/guidances/templates/resources/software_arch_document.dot
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template" name="risk_list"
				briefDescription="A list or table containing risk attributes. As it is usual to rank risks by priority, spreadsheets may be an alternative to capture risks"
				id="_MIUO0C8FEduzydamRseoUw" orderingGuide="" suppressed="false"
				presentationName="Risk List" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="new_template,_MIUO0C8FEduzydamRseoUw" briefDescription=""
					id="-OugFZJszm73z0_KSwRXZPw" orderingGuide="" suppressed="false"
					authors="" changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/risk_list.xls
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template"
				name="work_items_list"
				briefDescription="This is a spreadsheet suggested for representing a work items list. Alternative templates would be usage of a specific tool or database with similar information."
				id="_QwUJYDg0Edu4E8ZdmlYjtA" orderingGuide="" suppressed="false"
				presentationName="Work Items List" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="work_items_list,_QwUJYDg0Edu4E8ZdmlYjtA" briefDescription=""
					id="-mPA7vone29k1OvF_1rACjg" orderingGuide="" suppressed="false"
					authors="" changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/work_items_list.xls
					</Attachment>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Template"
				name="status_assessment"
				briefDescription="This is the informal template suggested for capturing and communicating the results of iteration assessments."
				id="_1awLIEp2Edup0IY9DKDPkg" orderingGuide="" suppressed="false"
				presentationName="Status Assessment" variabilityType="na">
				<Presentation xsi:type="uma:GuidanceDescription"
					name="new_template,_1awLIEp2Edup0IY9DKDPkg" briefDescription=""
					id="-2uQACndDBzBhJC1sCmk5UA" orderingGuide="" suppressed="false"
					authors="" changeDescription="" version="1.0.0">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Attachment>
						openup_basic/guidances/templates/resources/status_assessment.dot
					</Attachment>
				</Presentation>
			</ContentElement>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ContentPackage" name="intent"
			briefDescription="Intent sub-process." id="_3E1NwDPBEduyTOpiJx8z_g"
			orderingGuide="" suppressed="false" global="false">
			<MethodPackage xsi:type="uma:ContentPackage"
				name="change_management" briefDescription=""
				id="_0b4YwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				global="false">
				<ContentElement xsi:type="uma:Concept" name="workspace"
					briefDescription="Workspace refers to storage areas where developers can implement and test code  in accordance with the project's adopted standards in relative isolation from  other developers."
					id="_0cEmAMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Workspace" variabilityType="na">
					<Presentation
						name="workspace,_0cEmAMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_Dfmk8MPiEdmbOvqy4O0adg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-21T09:22:51" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p align="left">
    On small teams, shared workspaces may work fine, but you must coordinate activities between team members to avoid
    conflicts.
</p>
<p align="left">
    A better approach is for each developer to have a reasonably private area for the development and testing of their work
    products. This workspace should be insulated&nbsp;so that destabilizing or conflicting changes made by others do not
    interfere with&nbsp;progress. However, it should&nbsp;not be isolated to the extent that&nbsp;the developer's work is
    unavailable to the team.
</p>
<p align="left">
    In addition, insulated&nbsp;workspaces can be created for each test phase, such as integration testing and system
    testing. This approach to workspaces provides several benefits <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[WIB04]</a>:
</p>
<ul>
    <li>
        <p>
            Developers can develop, test, and debug software changes without being affected by others team
            members'&nbsp;changes until they are ready. When ready, developers can update their insulated environments to
            test the latest changes from other developers.
        </p>
    </li>
    <li>
        <p>
            With separate workspaces for integration and system testing, a team could use a methodology that ensures
            changes have passed integration testing before other developers get them, thereby minimizing the time spent
            solving integration problems.&nbsp; For example, if two team members check in incompatible changes without
            realizing it, and both changes are immediately available to everyone on the team, all team members&nbsp;might
            waste time trying to resolve the broken build. Conversely, if both changes must pass integration testing before
            being distributed to others, the problem could be found and fixed by one person with minimal disruption to the
            team.
        </p>
    </li>
    <li>
        <p>
            By setting up an integration area to collect and build the latest changes, the team can integrate early and
            often. That is a well-known best practice for reducing overall cost and time to deliver software projects.
        </p>
    </li>
    <li>
        <p>
            The system test area, which is used for preparing releases, is insulated from developers' ongoing changes and
            contains only configurations that have passed integration testing. This lets you control the content of the
            release while still enabling developers to continue working.
        </p>
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="request_change"
					briefDescription="Capture and record change requests."
					id="_0mwzEclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Request Change" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="submit_change_request,_0mwzEclgEdmt3adZL5Dmdw"
						briefDescription="" id="_Nr0S4KeqEdmKDbQuyzCoqQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2005-07-07T11:57:19"
						changeDescription="" version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section
							name="Gather change request information" briefDescription=""
							id="_qEkewKuoEdmEGLSmmpF1Sg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p> Gather the information required
								to describe the change request. This
								should &#xD; include a description of
								the requested change, the reason for the
								change (defect &#xD; or enhancement),
								the&amp;nbsp;artifact&amp;nbsp;affected,
								&#xD; including&amp;nbsp;the version,
								and&amp;nbsp;the priority &#xD; of the
								change. If possible,&amp;nbsp;provide an
								estimate of the effort required &#xD; to
								implement the change. &lt;/p>
							</Description>
						</Section>
						<Section name="Update the Work Item List"
							briefDescription="" id="_r2aP0KuoEdmEGLSmmpF1Sg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Update the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../basic_unified_process/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
								&#xD; Work Items
								List&lt;/a>&amp;nbsp;to&amp;nbsp;document
								the information &#xD; that you gathered
								in the previous step.
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose></Purpose>
					</Presentation>
					<Concept>_6jdvECb3Edqh1LYUOGRh2A</Concept>
					<Guideline>_fnZj0NVXEdqy9sbRhejO5Q</Guideline>
					<PerformedBy>_0dsWoMlgEdmt3adZL5Dmdw</PerformedBy>
					<Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
					<OptionalInput>
						_rGNWsCbSEdqh1LYUOGRh2A
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="change_requests"
					briefDescription="A change request is a general term for any request to change a work product."
					id="_6jdvECb3Edqh1LYUOGRh2A" orderingGuide="" suppressed="false"
					presentationName="Change Requests" variabilityType="na">
					<Presentation
						name="change_requests,_6jdvECb3Edqh1LYUOGRh2A" briefDescription=""
						id="-BsXK3ZGMm-mUT0KnkdoYBg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-04-26T11:36:40" changeDescription=""
						version="">
						<MainDescription><![CDATA[<p> A change request represents any request to change a work product. This includes 
  items commonly called defect reports, enhancement requests, requirements change 
  request, and Stakeholder change requests. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="change_requests"
					briefDescription="This guideline describes the type of information that is typically captured on a change request. This information is used to prioritize and scope the work required to implement the change and to monitor progress."
					id="_fnZj0NVXEdqy9sbRhejO5Q" orderingGuide="" suppressed="false"
					presentationName="Change Requests" variabilityType="na">
					<Presentation
						name="new_guideline,_fnZj0NVXEdqy9sbRhejO5Q" briefDescription=""
						id="-w7sImtXWkf4HDXdUWjRsUg" orderingGuide="" suppressed="false"
						authors="Chris Sibbald" changeDate="2006-09-20T08:17:45"
						changeDescription="Moved content from previous concept:change request to this guideline and updated in accordance with discussion from April 18, 2006 telecon."
						version="0.2">
						<MainDescription><![CDATA[<p>
    Change requests typically have a lifecycle. They are raised,&nbsp;reviewed, accepted or rejected, implemented, verified
    and closed. These states define the status of the change request at a particular point in time and represent critical
    information for tracking progress. Other sets of states are possible.
</p>
<p>
    During review of a change request, the goal&nbsp;is to assess the&nbsp;technical, cost, and schedule impact
    of&nbsp;implementing the change.&nbsp; The technical impact&nbsp;assessment includes&nbsp;the determination of
    which&nbsp;work products&nbsp;are affected and an estimate of the level of effort required to change and verify all
    affected artifacts. This information becomes the basis of the cost and schedule impact assessments and, ultimately,
    whether the change request will be accepted or rejected.
</p>
<p>
    If accepted, the implementation and verification of the change request will be assigned to an iteration in the same
    manner as any other work item.
</p>
<p>
    The&nbsp;current process uses the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a> to capture, prioritize, and track the change requests
    using the attributed defined for that artifact.
</p>
<br />
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:TermDefinition"
					name="configuration" briefDescription=""
					id="__Cw30ElxEducWJcS4yanqg" orderingGuide="" suppressed="false"
					presentationName="configuration" variabilityType="na">
					<Presentation name=",__Cw30ElxEducWJcS4yanqg"
						briefDescription="" id="-VPoMu7qzVX9grE4-nB3kMw" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-21T03:07:10"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[The performance, functional, and physical attributes of an existing or planned product, or a combination of products.]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:TermDefinition"
					name="version" briefDescription="" id="_eX8K8ElyEducWJcS4yanqg"
					orderingGuide="" suppressed="false" presentationName="version"
					variabilityType="na">
					<Presentation name=",_eX8K8ElyEducWJcS4yanqg"
						briefDescription="" id="-4iL0UEFR2Fg7oWkh1TymIg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-21T03:10:30"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[A variant of some artifact; later versions of an artifact typically expand upon earlier versions.]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ContentPackage"
				name="requirements" briefDescription="" id="_0UCrYslgEdmt3adZL5Dmdw"
				orderingGuide="" suppressed="false" global="false">
				<MethodPackage xsi:type="uma:ContentPackage"
					name="uc_modeling"
					briefDescription="This package contains elements specific to Use-Case Modeling technique."
					id="_FtSMYAFjEduDPKiaP0pu-Q" orderingGuide="" suppressed="false"
					global="false">
					<ContentElement xsi:type="uma:Artifact"
						name="rm_uc_model"
						briefDescription="This artifact captures a model of the system's intended functions and its environment, and serves as a contract between the customer and the developers."
						id="_0UCrZclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName=""
						variabilityBasedOnElement="_W2SgEDR5EdutE_HNDTJk5Q"
						variabilityType="contributes">
						<Presentation xsi:type="uma:ArtifactDescription"
							name="uc_model,_0UCrZclgEdmt3adZL5Dmdw" briefDescription=""
							id="_zHZW9KYSEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
							authors="" changeDate="2006-09-14T03:33:31" changeDescription=""
							version="1.0.0" externalId="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<ImpactOfNotHaving></ImpactOfNotHaving>
							<Purpose><![CDATA[<p> The Use-Case model is useful when you consider it along 
  with its related artifacts: <a class="elementLinkWithType"
    href="./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html" guid="_0VGbUMlgEdmt3adZL5Dmdw">Artifact: 
  Use Case</a> and <a class="elementLinkWithType"
    href="./../../openup_basic/workproducts/actor,_0VMh8MlgEdmt3adZL5Dmdw.html" guid="_0VMh8MlgEdmt3adZL5Dmdw">Artifact: 
  Actor</a>. </p>
<p> In general,&nbsp;a Use-Case model&nbsp;presents an overview of the system; 
  therefore, it provides a basis for an agreement 
  between customers and the project team regarding the 
  intended functionality for the system. It also helps to guide 
   the various tasks in the software development lifecycle. </p>]]></Purpose>
							<ReasonsForNotNeeding></ReasonsForNotNeeding>
							<BriefOutline></BriefOutline>
							<RepresentationOptions>
								&lt;p>&#xD; Tailor this artifact to
								support the project team's
								needs.&amp;nbsp;Projects may not include
								the Use-Case model as one of&#xD; the
								work products being
								created.&amp;nbsp;Identifying actors and
								use cases, then describing the use-cases
								and scenarios&#xD;
								are&amp;nbsp;recommended tasks
								though.&amp;nbsp;&#xD; &lt;/p>&#xD;
								&lt;br />&#xD; &lt;br />
							</RepresentationOptions>
						</Presentation>
						<Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
						<Checklist>_0U6OEMlgEdmt3adZL5Dmdw</Checklist>
						<Guideline>_0VAUsMlgEdmt3adZL5Dmdw</Guideline>
						<ContainedArtifact name="actor_ucm"
							briefDescription="" id="_PilysAFlEduDPKiaP0pu-Q" orderingGuide=""
							suppressed="false" presentationName=""
							variabilityBasedOnElement="_0VMh8MlgEdmt3adZL5Dmdw"
							variabilityType="contributes" />
						<ContainedArtifact name="use_case_ucm"
							briefDescription="" id="_SBnZ4AFlEduDPKiaP0pu-Q" orderingGuide=""
							suppressed="false" presentationName=""
							variabilityBasedOnElement="_0VGbUMlgEdmt3adZL5Dmdw"
							variabilityType="contributes" />
					</ContentElement>
					<ContentElement xsi:type="uma:Task"
						name="find_and_outline_requirements_ucm" briefDescription=""
						id="_txpV0AFmEduDPKiaP0pu-Q"
						orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quot;?> &lt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quot;>   &lt;orderInfos name=&quot;sections&quot; timestamp=&quot;1150923424568&quot;>     &lt;gUIDs>_ckG-cCY-EdqNHcQ-rAojXw&lt;/gUIDs>     &lt;gUIDs>_GAr3IOz3Edq2wJOsmRwmhg&lt;/gUIDs>     &lt;gUIDs>_fDbgkCY-EdqNHcQ-rAojXw&lt;/gUIDs>     &lt;gUIDs>_XRKgkAFoEduDPKiaP0pu-Q&lt;/gUIDs>     &lt;gUIDs>_0WhHsN-eEdqiM_wFaqLjNg&lt;/gUIDs>   &lt;/orderInfos> &lt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollection> "
						suppressed="false" presentationName=""
						variabilityBasedOnElement="_P9cMUPV_EdmdHa9MmVPgqQ"
						variabilityType="contributes">
						<Presentation xsi:type="uma:TaskDescription"
							name=",_txpV0AFmEduDPKiaP0pu-Q" briefDescription=""
							id="-Yt8TXGkE1rwydXR34apsrg" orderingGuide="" suppressed="false"
							authors="" changeDescription="" version="1.0.0">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Section
								name="Capture Use Case and Actors in a Use-Case Model"
								briefDescription="" id="_XRKgkAFoEduDPKiaP0pu-Q"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									&lt;p>&#xD; While capturing
									requirements, it may be useful to
									identify and capture the &lt;a
									class=&quot;elementLinkWithUserText&quot;
									href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
									guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use&#xD;
									Case&lt;/a>s and &lt;a
									class=&quot;elementLinkWithUserText&quot;
									href=&quot;./../../openup_basic/workproducts/actor,_0VMh8MlgEdmt3adZL5Dmdw.html&quot;
									guid=&quot;_0VMh8MlgEdmt3adZL5Dmdw&quot;>Actor&lt;/a>s&amp;nbsp;in
									a &lt;a
									class=&quot;elementLinkWithUserText&quot;
									href=&quot;./../../openup_basic/workproducts/rm_uc_model,_0UCrZclgEdmt3adZL5Dmdw.html&quot;
									guid=&quot;_0UCrZclgEdmt3adZL5Dmdw&quot;>Use-Case
									Model&lt;/a>. That can help people
									better understand the proposed
									system&#xD; functionality and
									its&amp;nbsp;surroundings. See &lt;a
									class=&quot;elementLinkWithType&quot;
									href=&quot;./../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html&quot;
									guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Guideline:
									Find and Outline Actors and Use
									Cases&lt;/a>&amp;nbsp;for more
									details.&#xD; &lt;/p>
								</Description>
							</Section>
							<Alternatives></Alternatives>
							<Purpose></Purpose>
						</Presentation>
						<Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
						<Output>_0UCrZclgEdmt3adZL5Dmdw</Output>
					</ContentElement>
					<ContentElement xsi:type="uma:Task"
						name="detail_requirements_ucm" briefDescription=""
						id="_7_3vEAFmEduDPKiaP0pu-Q"
						orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quot;?> &lt;org.eclipse.epf.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:org.eclipse.epf.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quot;>   &lt;orderInfos name=&quot;sections&quot; timestamp=&quot;1158683054424&quot;>     &lt;gUIDs>_vWeHMCxSEdqjsdw1QLH_6Q&lt;/gUIDs>     &lt;gUIDs>_B47VwCxTEdqjsdw1QLH_6Q&lt;/gUIDs>     &lt;gUIDs>_2389cOz2Edq2wJOsmRwmhg&lt;/gUIDs>     &lt;gUIDs>_w2JYgEf6EduISP1GQDlvVQ&lt;/gUIDs>     &lt;gUIDs>_BYbboN-bEdqiM_wFaqLjNg&lt;/gUIDs>   &lt;/orderInfos> &lt;/org.eclipse.epf.uma.edit.tng.util.model:OrderInfoCollection> "
						suppressed="false" presentationName=""
						variabilityBasedOnElement="_0e1mIMlgEdmt3adZL5Dmdw"
						variabilityType="contributes">
						<Presentation xsi:type="uma:TaskDescription"
							name="detail_requirements_ucm,_7_3vEAFmEduDPKiaP0pu-Q"
							briefDescription="" id="-_mfd9ziTwQV_5LE80jJw4g" orderingGuide=""
							suppressed="false" authors="" changeDescription=""
							version="1.0.0">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Section name="Update Use-Case Model"
								briefDescription="" id="_w2JYgEf6EduISP1GQDlvVQ"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									Based on your work update the &lt;a
									class=&quot;elementLink&quot;
									href=&quot;./../../openup_basic/workproducts/uc_model,_W2SgEDR5EdutE_HNDTJk5Q.html&quot;
									guid=&quot;_W2SgEDR5EdutE_HNDTJk5Q&quot;>Use
									Case Model&lt;/a>.&amp;nbsp; Add,
									remove or update &lt;a
									class=&quot;elementLink&quot;
									href=&quot;./../../openup_basic/workproducts/actor,_0VMh8MlgEdmt3adZL5Dmdw.html&quot;
									guid=&quot;_0VMh8MlgEdmt3adZL5Dmdw&quot;>Actor&lt;/a>s
									and&#xD; &lt;a
									class=&quot;elementLink&quot;
									href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
									guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use
									Case&lt;/a>s as required.&amp;nbsp;
									For more information on creating and
									structuring your use&#xD; case model
									see &lt;a
									class=&quot;elementLinkWithType&quot;
									href=&quot;./../../openup_basic/guidances/guidelines/uc_model,_0VAUsMlgEdmt3adZL5Dmdw.html&quot;
									guid=&quot;_0VAUsMlgEdmt3adZL5Dmdw&quot;>Guideline:
									Use-Case Model&lt;/a>.&amp;nbsp; For
									assistance in assessing the quality
									of your use&#xD; case model see
									&lt;a
									class=&quot;elementLinkWithType&quot;
									href=&quot;./../../openup_basic/guidances/checklists/uc_model,_0U6OEMlgEdmt3adZL5Dmdw.html&quot;
									guid=&quot;_0U6OEMlgEdmt3adZL5Dmdw&quot;>Checklist:
									Use-Case Model&lt;/a>.
								</Description>
							</Section>
							<Alternatives></Alternatives>
							<Purpose></Purpose>
						</Presentation>
						<Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
						<MandatoryInput>
							_0UCrZclgEdmt3adZL5Dmdw
						</MandatoryInput>
						<Output>_0UCrZclgEdmt3adZL5Dmdw</Output>
					</ContentElement>
					<ContentElement xsi:type="uma:Checklist"
						name="uc_model"
						briefDescription="This checklist provides questions to verify that the Use-Case Model is described in a consistent and complete manner."
						id="_0U6OEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Use-Case Model" variabilityType="na">
						<Presentation
							name="uc_model,_0U6OEMlgEdmt3adZL5Dmdw" briefDescription=""
							id="_MqODAMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
							authors="" changeDate="2005-07-07T08:50:06" changeDescription=""
							version="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Section
								name="Is the introduction clear, concise and complete"
								briefDescription="" id="_EgFQkAeREduWycDgioo5rg"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									The Introduction section provides a
									clear, concise and complete overview
									of the purpose and functionality of
									the system.
								</Description>
							</Section>
							<Section
								name="Is it easy to understand what the system does by reviewing the model"
								briefDescription="" id="_rLdVMAeREduWycDgioo5rg"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									&lt;ul>&#xD; &lt;li>&#xD; There are
									no long chains of include and extend
									relationships, such as when an
									included use case is extended,
									or&#xD; when an extended use case
									includes other use cases.&amp;nbsp;
									These can obscure
									comprehensibility.&#xD;
									&lt;/li>&#xD; &lt;/ul>&#xD;
									&lt;ul>&#xD; &lt;li>&#xD; There are
									minimal cross-dependencies where an
									included, extending, or specialized
									use case must know about the&#xD;
									structure and content of other
									included, extending or specialized
									use cases.&#xD; &lt;/li>&#xD;
									&lt;/ul>
								</Description>
							</Section>
							<Section
								name="Have all use cases have been identified"
								briefDescription="" id="__kgR8AeREduWycDgioo5rg"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									&lt;ul>&#xD; &lt;li>&#xD; The use
									cases identified collectively
									account for all required behavior of
									the system.&#xD; &lt;/li>&#xD;
									&lt;li>&#xD; All features identified
									in the Vision document for this
									iteration have been addressed by at
									least one use case.&#xD;
									&lt;/li>&#xD; &lt;li>&#xD; All
									non-functional requirements that
									must be satisfied by a specific use
									cases have been captured in those
									use&#xD; cases&#xD; &lt;/li>&#xD;
									&lt;li>&#xD; The use-case model
									contains no superfluous behavior
									(gold-platting).&#xD; &lt;/li>&#xD;
									&lt;/ul>
								</Description>
							</Section>
							<Section
								name="Are all relationships between use cases required"
								briefDescription="" id="_KowpkAeSEduWycDgioo5rg"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									There is a justification for all
									include-, extend- and generalization
									relationships&lt;br />
								</Description>
							</Section>
							<Section
								name="Are use case packages used appropriately"
								briefDescription="" id="_jyHeMAeTEduWycDgioo5rg"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									&lt;ul>&#xD; &lt;li>&#xD;
									Cross-package dependencies have been
									reduced or eliminated to prevent
									model ownership conflicts&#xD;
									&lt;/li>&#xD; &lt;li>&#xD; Packaging
									is intuitive and makes the model
									easier to read&#xD; &lt;/li>&#xD;
									&lt;/ul>
								</Description>
							</Section>
							<Section
								name="Do all model elements have appropriate names"
								briefDescription="" id="_i-S-ADeKEdu6VLD0YaVLog"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									&lt;p>&#xD; Each use case should
									have a name that indicates what is
									achieved by its interaction with the
									actor(s).&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; No two use cases can
									have the same name.&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Each actor
									has a name that effectively
									describes the role.&#xD; &lt;/p>
								</Description>
							</Section>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Guideline"
						name="uc_model"
						briefDescription="This guideline provides guidance on how to ensure consistency of the use-case  model and how to document it."
						id="_0VAUsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Use-Case Model" variabilityType="na">
						<Presentation
							name="uc_model,_0VAUsMlgEdmt3adZL5Dmdw" briefDescription=""
							id="_AGvpcMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
							authors="" changeDate="2006-09-27T09:03:04" changeDescription=""
							version="1.0.0">
							<MainDescription><![CDATA[<h3>
    <a id="How the Use-Case Model Evolves" name="How the Use-Case Model Evolves">How the Use-Case Model Evolves</a>
</h3>
<p>
    Use the requirements of&nbsp;stakeholders and potential users as vital information to help you find both the actors and
    use cases. As you discover them, briefly describe the use cases and the actors. Before you describe the use cases in
    detail, the use-case model should be reviewed by the stakeholders to verify that you have found all of the use cases
    and actors and that, together, they can provide what the&nbsp;stakeholder wants. For more information on finding actors
    and use cases see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html" guid="_eyL0wCu-EdqSxKAVa9kmvA">Guideline: Find and Outline Actors and Use Cases</a>.
</p>
<p>
    When you have found the actors and use cases, describe the flow of events for each use case in detail. These
    descriptions show how the system interacts with the actors and what the system does in each case. In an iterative
    development environment, you will select particular scenarios of the use cases, or parts of a scenario, to be detailed
    in each iteration. For more information on detailing use cases and scenarios, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html" guid="_4BJ_YCxSEdqjsdw1QLH_6Q">Guideline: Detail Use Cases and Scenarios</a>.
</p>
<p>
    Finally, the completed use-case model (including the descriptions of use cases) is reviewed, and the developers
    and&nbsp;stakeholders&nbsp;use it to agree on what the system should do.
</p>
<h3>
    <a id="Avoiding Functional Decomposition" name="Avoiding Functional Decomposition">Avoiding Functional
    Decomposition</a>
</h3>
<p>
    It is not uncommon that the use-case model degenerates into a functional decomposition of the system. To avoid this,
    watch for the following symptoms:
</p>
<ul>
    <li>
        <strong>Small</strong> use cases, meaning that the description of the flow of events is only one or a few
        sentences.
    </li>
    <li>
        <strong>Many</strong> use cases, meaning that the number of use cases is some multiple of a hundred, rather than a
        multiple of ten.
    </li>
    <li>
        Use-case names that are constructions such as "do this operation on this particular data" or "do this function with
        this particular data". For example, "Enter Personal Identification Number in an ATM machine" should not be modeled
        as a separate use case for the ATM machine, because no one would use the system to do just this. A use case is a
        complete flow of events that results in something of value to an actor.
    </li>
</ul>
<p>
    To avoid functional decomposition, make sure that the use-case model helps answer these kinds of questions:
</p>
<ul>
    <li>
        What is the context of the system?
    </li>
    <li>
        Why are you building this system?
    </li>
    <li>
        What does the user want the system to do?
    </li>
    <li>
        How&nbsp;do the users benefit from the system?
    </li>
</ul>
<h3>
    <a id="Non-Functional Requirements" name="Non-Functional Requirements">Nonfunctional Requirements</a>
</h3>
<p>
    It is quite easy to see that use cases are a very good way of capturing functional requirements on a system. But what
    about the nonfunctional requirements? What are they, and where are they captured?
</p>
<p>
    Usability, reliability, performance, and supportability requirements are often categorized as nonfunctional
    requirements (also see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q.html" guid="_wr24gNcGEdqz_d2XWoVt6Q">Guideline: Supporting Requirements</a>). They often specify statutory&nbsp;or regulatory
    requirements that you must comply with, by law. They can specify design constraints, such as the operating system used,
    the platform environment, interface requirements, business rules, or any application standards that apply. In general,
    you can say that any requirement that does not allow for more than one design option should be regarded as a design
    constraint.
</p>
<p>
    Many nonfunctional requirements apply to an individual use case and are captured within the flow of events of that use
    case or as a special requirement of that use case (see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html" guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a>).
</p>
<p class="exampleheading">
    <strong>Example</strong>
</p>
<p class="example">
    In&nbsp;a recycling machine system, a nonfunctional requirement specific to the Return Deposit Items use case could be:
</p>
<blockquote>
    <p class="example">
        The machine must be able to recognize deposit items with a reliability of more than 95%.
    </p>
</blockquote>
<p>
    Often, the nonfunctional requirements apply to the whole system. Such requirements are captured in the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html" guid="_BVh9cL-CEdqb7N6KIeDL8Q">Artifact: Supporting Requirements</a>.
</p>
<p class="exampleheading">
    <strong>Example</strong>
</p>
<p class="example">
    In the recycling machine system, a nonfunctional requirement that applies to the whole system could be:
</p>
<blockquote>
    <p class="example">
        The machine will allow only one user at a time.
    </p>
</blockquote>
<h3>
    <a id="Structuring the Use-Case Model" name="Structuring the Use-Case Model">Structuring the Use-Case Model</a>
</h3>
<p>
    There are three main reasons for structuring the use-case model:
</p>
<ul>
    <li>
        To make the use cases easier to understand.
    </li>
    <li>
        To partition common behavior described within many use cases
    </li>
    <li>
        To make the use-case model easier to maintain.
    </li>
</ul>
<p>
    Structuring is not the first thing you do, however. There is no point in structuring the use cases until you know a bit
    more about their behavior than a one-sentence description. You should at least have established a step-by-step outline
    for the flow of events of the use case to make sure that your decisions are based on an accurate understanding of the
    behavior.
</p>
<p>
    To structure the use cases, you use three kinds of relationships. You will use these relationships to factor out pieces
    of use cases that can be reused in other use cases, or that are specializations or options for the use case. The use
    case that represents the modification is called the <b>addition use case</b>. The use case that is modified is called
    the <b>base use case</b>.
</p>
<ul>
    <li>
        If there is a part of a base use case that represents only the result of a function that the use case depends on,
        not the method used to produce the result, you can factor that part out to an addition use case. The addition is
        <strong>explicitly</strong> inserted in the base use case, using the <em>include
        relationship</em><strong>.</strong> For more information on the <em>include relationship</em>, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case_model,_2jyfUAhVEduRe8TeoBmuGg.html" guid="_2jyfUAhVEduRe8TeoBmuGg">Concept: Use-Case Model</a>.
    </li>
    <li>
        If there is a part of a base use case that is optional, or it is not necessary to understand the primary purpose of
        the use case, you can factor that part out to an addition use case to simplify the structure of the base use case.
        The addition is <strong>implicitly</strong> inserted in the base use case, using the <em>extend</em>
        relationship.&nbsp;For more information on the <em>extend relationship</em>, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case_model,_2jyfUAhVEduRe8TeoBmuGg.html" guid="_2jyfUAhVEduRe8TeoBmuGg">Concept: Use-Case Model</a>.
    </li>
    <li>
        If there are use cases that have commonalities in behavior and structure, as well as similarities in purpose, their
        common parts can be factored out to a base use case (parent) that is inherited by addition use cases (children).
        The child use cases can insert new behavior and modify existing behavior in the structure they inherit from the
        parent use case.&nbsp;For more information on&nbsp;<em>use case generalization</em>, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case_model,_2jyfUAhVEduRe8TeoBmuGg.html" guid="_2jyfUAhVEduRe8TeoBmuGg">Concept: Use-Case Model</a>.
    </li>
</ul>
<p>
    You can use <em>actor generalization</em>&nbsp;to show how actors are specializations of one another. For more
    information on <em>actor generalization</em>, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case_model,_2jyfUAhVEduRe8TeoBmuGg.html" guid="_2jyfUAhVEduRe8TeoBmuGg">Concept: Use-Case Model</a>.
</p>
<p class="exampleheading">
    <strong>Example</strong>
</p>
<p class="example">
    Consider part of the use-case model for an order management system.
</p>
<p class="example">
    It is useful to separate an ordinary Customer from an Internet Customer, because they have slightly different
    properties. However, given that Internet Customer does exhibit all properties of a Customer, you can say that Internet
    Customer is a specialization of Customer, which you indicate with an actor generalization.
</p>
<p class="example">
    The concrete use cases in this diagram are Telephone Order (initiated by the Customer actor) and Internet Order
    (initiated by Internet Customer). These use cases are both variations of the more general Place Order use case, which
    in this example is abstract. The Request Catalog use case represents an optional segment of behavior that is not part
    of the primary purpose of Place Order. It has been factored out to an abstract use case to simplify the Place Order use
    case. The Supply Customer Data use case represents a segment of behavior that was also factored out, because it is a
    separate function, and only the result affects the Place Order use case. The Supply Customer Data use case can also be
    reused in other use cases. Both Request Catalog and Supply Customer Data are abstract in this example. Figure 1 is a
    use-case diagram that shows part of the use-case model for an order management system.
</p>
<p class="example" align="center">
    <img height="366"     alt="Figure 1 . As a use-case diagram that shows part of the use-case model for an order management system. "     src="openup_basic/guidances/guidelines/resources/ucmex2.gif" width="354" />
</p>
<p class="example" align="center">
    Figure 1. Use-case diagram of an order management system
</p>
<p class="picturetext">
    The following table shows a more detailed comparison of the three different use-case relationships:
</p>
Table 1: Comparison of different use-case relationships<br />
<br />
<table style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"  cellspacing="0" bordercolordark="#808080" cellpadding="4" width="85%" bordercolorlight="#808080" border="1">
    <tbody>
        <tr>
            <th width="20%">
                Question
            </th>
            <th width="20%">
                Extend
            </th>
            <th width="27%">
                Include
            </th>
            <th width="33%">
                Generalization
            </th>
        </tr>
        <tr>
            <td width="20%">
                What is the direction of the relationship?
            </td>
            <td width="20%">
                The addition use case references the base use case.
            </td>
            <td width="27%">
                The base use case references the addition use case.
            </td>
            <td width="33%">
                The addition use case (child) references the base use case (parent).
            </td>
        </tr>
        <tr>
            <td width="20%">
                Does the relationship have multiplicity?
            </td>
            <td width="20%">
                Yes, on the addition side.
            </td>
            <td width="27%">
                No. If you want to include the same segment of behavior more than once, that needs to be stated in the base
                use case.
            </td>
            <td width="33%">
                No.
            </td>
        </tr>
        <tr>
            <td width="20%">
                Does the relationship have a condition?
            </td>
            <td width="20%">
                Yes.
            </td>
            <td width="27%">
                No. If you want to express a condition on the inclusion. you need to say that explicitly in the base use
                case.
            </td>
            <td width="33%">
                No.
            </td>
        </tr>
        <tr>
            <td width="20%">
                Is the addition use case abstract?
            </td>
            <td width="20%">
                Often yes, but not necessarily.
            </td>
            <td width="27%">
                Yes.
            </td>
            <td width="33%">
                Often no, but it can be.
            </td>
        </tr>
        <tr>
            <td width="20%">
                Is the base use case modified by the addition?
            </td>
            <td width="20%">
                The extension implicitly modifies the behavior of the base use case.
            </td>
            <td width="27%">
                The inclusion explicitly modifies the effect of the base use case.
            </td>
            <td width="33%">
                If the base use case (parent) is instantiated, it is unaffected by the child. To get the effects of the
                addition, the addition use case (child) must be instantiated.
            </td>
        </tr>
        <tr>
            <td width="20%">
                Does the base use case have to be complete and meaningful?
            </td>
            <td width="20%">
                Yes.
            </td>
            <td width="27%">
                Together with the additions, yes.
            </td>
            <td width="33%">
                If it is abstract, no.
            </td>
        </tr>
        <tr>
            <td width="20%">
                Does the addition use case have to be complete and meaningful?
            </td>
            <td width="20%">
                No.
            </td>
            <td width="27%">
                No.
            </td>
            <td width="33%">
                Together with the base use case (parent), yes.
            </td>
        </tr>
        <tr>
            <td width="20%">
                Can the addition use case access attributes of the base use case?
            </td>
            <td width="20%">
                Yes.
            </td>
            <td width="27%">
                No. The inclusion is encapsulated, and recognizes only itself.
            </td>
            <td width="33%">
                Yes, by the normal mechanisms of inheritance.
            </td>
        </tr>
        <tr>
            <td width="20%">
                Can the base use case access attributes of the addition use case?
            </td>
            <td width="20%">
                No. The base use case must be well-formed in the absence of the addition.
            </td>
            <td width="27%">
                No. The base use case knows only about the effect of the addition. The addition is encapsulated.
            </td>
            <td width="33%">
                No. The base use case (parent) must, in this sense, be well-formed, in the absence of the addition (child).
            </td>
        </tr>
    </tbody>
</table>
<br />
<p>
    Another aspect of organizing the use-case model for easier understanding is grouping the use cases into packages. The
    use-case model can be organized as a hierarchy of use-case packages. For more information on use-case packages, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case_model,_2jyfUAhVEduRe8TeoBmuGg.html" guid="_2jyfUAhVEduRe8TeoBmuGg">Concept: Use-Case Model</a>.
</p>
<p>
    Figure 2 shows the use-case model hierarchy. Arrows indicate possible ownership.
</p>
<p align="center">
    <img height="235" alt="Figure 2. Diagram showing use-case hierarchy, with arrows indicating possible ownership"     src="openup_basic/guidances/guidelines/resources/md_ucmo6.gif" width="181" />&nbsp;
</p>
<p align="center">
    Figure 2. Use-case hierarchy
</p>
<h3>
    <a id="Use Cases Are Always Related to Actors" name="Use Cases Are Always Related to Actors">Relationship Between Use
    Cases and Actors</a>
</h3>
<p>
    Running each use case includes communication with one or more actors. A use-case instance is always started by an actor
    asking the system to do something. This implies that every use case should have communicates-associations with actors.
    The reason for this rule is to enforce that the system provides only the functionality that users need and nothing
    else. Having use cases that no one requests is an indication that something is wrong in the use-case model or in the
    requirements.
</p>
<p>
    However, there are some exceptions to this rule:
</p>
<ul>
    <li>
        If a use case is abstract (cannot be instantiated), its behavior may not include interaction with any actor. In
        that case, there will not be any communication-associations to actors from that abstract use case.
    </li>
    <li>
        A child use case in a generalization-relationship does not need to have an actor associated with it if the parent
        use case describes all actor communication.
    </li>
    <li>
        A base use case in an include-relationship does not need to have an actor associated with it if the inclusion use
        case describes all actor communication.
    </li>
    <li>
        A use case may be initiated according to a schedule (for example, once a week or once a day), which means that the
        system clock is the initiator. The system clock is internal to the system; therefore, the use case is not initiated
        by an actor but by an internal system event. If no other actor interaction occurs in the use case, it will not have
        any associations to actors. However, for clarity, you can use <strong>time</strong> as an actor to show how the use
        case is initiated in your use-case diagrams.
    </li>
</ul>
<h3>
    <a id="The Survey Description" name="The Survey Description">The Survey Description</a>
</h3>
<p>
    The survey description of the use-case model should:
</p>
<ul>
    <li>
        State the primary use cases of the system (the reason the system is being built).
    </li>
    <li>
        Summarize important technical facts about the system.
    </li>
    <li>
        Delimit things that the system is not supposed to do.
    </li>
    <li>
        Summarize the system's environment, such as target platforms and existing software.
    </li>
    <li>
        Describe any sequences in which use cases are normally performed in the system.
    </li>
    <li>
        Specify functionality not handled by the use-case model.
    </li>
</ul>
<p class="exampleheading">
    <strong>Example</strong>
</p>
<p class="example">
    Following is a sample survey description of the recycling machine's use-case model:
</p>
<blockquote>
    <p class="example">
        This model contains three actors and three use cases. The primary use case is <strong>Recycle Items</strong>, which
        represents the main purpose of the recycling machine.
    </p>
    <p class="example">
        These are the supporting use cases:
    </p>
    <ul>
        <li>
            <strong>Print Daily Report</strong>, which allows an operator to get a report on how many items have been
            recycled.
        </li>
        <li>
            A<strong>dminister Deposit Item</strong>, which allows an operator to change a refund value for a type of
            deposit item or to add new deposit item types.
        </li>
    </ul>
</blockquote>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Concept"
						name="use_case_model"
						briefDescription="This artifact is a model of the system's intended functions and its surroundings, and serves as a contract between the customer and the project team."
						id="_2jyfUAhVEduRe8TeoBmuGg" orderingGuide="" suppressed="false"
						presentationName="Use-Case Model" variabilityType="na">
						<Presentation
							name="new_concept,_2jyfUAhVEduRe8TeoBmuGg" briefDescription=""
							id="-yEWkrWZ3VUcjZPhq6bvScg" orderingGuide="" suppressed="false"
							authors="" changeDate="2006-08-29T07:04:02" changeDescription=""
							version="">
							<MainDescription><![CDATA[<h3>
    Explanation
</h3>
<p>
    A use-case model is a model of the system use cases and actors and the relationships between them. In addition, the
    use-case model may contain packages that are used to structure the model to simplify analysis, communications,
    navigation, development, maintenance and planning.
</p>
<p>
    Much of the use-case model is in fact textual, with the text captured in the&nbsp;<a class="elementLink" href="./../../../openup_basic/guidances/templates/uc_specification,_0cpNwMlgEdmt3adZL5Dmdw.html" guid="_0cpNwMlgEdmt3adZL5Dmdw">Use-Case Specification</a>s that are associated with each use-case model element.
    However, the addition of UML diagrams (and the underlying model) provides a graphical representation of the structure
    and relationships between the use cases and actors. This graphical representaiton acts as a kind of “Table of Contents”
    or navigation map to the information; simplifying communications, analysis and navigation of the information.
</p>
<p>
    The use-case model serves as a unifying thread throughout system development. It is used to capture functional
    requirements and as the basis for design, iteration planning, and testing.
</p>
<p>
    The use-case model contains, as a minimum, the following model elements:
</p>
<h4>
    Actor
</h4>
<p>
    A model element representing the actors. Properties include the actors name and brief description. See <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/actor,_0VMh8MlgEdmt3adZL5Dmdw.html" guid="_0VMh8MlgEdmt3adZL5Dmdw">Artifact: Actor</a> for more information.
</p>
<h4>
    Use Case
</h4>
<p>
    A model element representing a use case. Properties include the use case name and use case specification. See <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html" guid="_0VGbUMlgEdmt3adZL5Dmdw">Artifact: Use Case</a> and <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html" guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a> for more information. A use case may be abstract (cannot be
    instantiated) or concrete (will be instantiated).
</p>
<h4>
    Associations
</h4>
<p>
    Associations are used to describe the relationships between actors and the use cases they participate in. This is
    commonly known as “communicates-associations”.
</p>
<p>
    The use-case model may also contain the following model elements:
</p>
<h4>
    Subject
</h4>
<p>
    A model element that represents the boundary of the system of interest.
</p>
<h4>
    Use-Case Package
</h4>
<p>
    A model element used to structure the use case model to simplify analysis, communications, navigation, and planning.
</p>
<h4>
    Generalizations
</h4>
<p>
    Generalization between actors and between use cases are possible in order to support re-use of common properties.
</p>
<h4>
    Dependencies
</h4>
<p>
    A number of dependency types between use cases are defined in UML. In particular, &lt;&lt;extend&gt;&gt; and
    &lt;&lt;include&gt;&gt;.
</p>
<p>
    &lt;&lt;extend&gt;&gt; is used to include optional behavior from an extending use case in an extended use case.
</p>
<p>
    &lt;&lt;include&gt;&gt; is used to include common behavior from an included use case into a base use case in order to
    support re-use of common behavior.
</p>
<h3>
    Use-Case Diagram
</h3>
<p>
    The diagram below shows a part of a use-case model for the Recycling-Machine System.
</p>
<p>
    <img height="213" alt="" src="openup_basic/guidances/concepts/resources/md_ucmo2.gif" width="421" />
</p>
<p>
    This diagram shows two actors (Customer and Operator), three use cases (Print Daily Report, Administer Deposit Item,
    and Recycle Items) and the associations between the performing actors and the use cases.
</p>
<p>
    There are many ways to model a system, each of which may serve a different purpose. However, the most important purpose
    of a use-case model is to communicate the system's behavior to the customer or user. Consequently, the model must be
    easy to understand.
</p>
<p>
    The users and any other system that may interact with the system are the actors. Because they represent system users,
    actors help delimit the system and give a clearer picture of what it is supposed to do. Use cases are developed on the
    basis of the actors' needs. This ensures that the system will turn out to be what the users expected.
</p>
<h3>
    Structuring the Use-Case Model
</h3>
<p>
    There are three main reasons for structuring the use-case model:
</p>
<ul>
    <li>
        To make the use cases easier to understand.
    </li>
    <li>
        To partition out common behavior described within many use cases.
    </li>
    <li>
        To make the use-case model easier to maintain.
    </li>
</ul>
<p>
    Structuring is, however, not the first thing you do. There is no point in structuring the use cases until you know a
    bit more about their behavior, beyond a one sentence brief description. You should at least have established a
    step-by-step outline to the flow of events of the use case, to make sure that your decisions are based on an accurate
    enough understanding of the behavior.
</p>
<h4>
    Use-Case Package
</h4>
<p>
    A model structured into smaller units is easier to understand. It is easier to show relationships among the model's
    main parts if you can express them in terms of packages. If there are many use cases or actors, you can use use-case
    packages to further structure the use-case model. A use-case package contains a number of actors, use cases, their
    relationships, and other packages; thus, you can have multiple levels of use-case packages (packages within packages).
</p>
<p>
    You can partition a use-case model into use-case packages for many reasons:
</p>
<ul>
    <li>
        You can use use-case packages to reflect order, configuration, or delivery units in the finished system.
    </li>
    <li>
        Allocation of resources and the competence of different development teams may require that the project be divided
        among different groups at different sites. Some use-case packages are suitable for a group, and some for one
        person, which makes packages a naturally efficient way to proceed with development. You must be sure, however, to
        define distinct responsibilities for each package so that development can be performed in parallel.
    </li>
    <li>
        You can use use-case packages to structure the use-case model in a way that reflects the user types. Many changes
        to&nbsp;requirements originate from users. Use-case packages ensure that changes from a particular user type will
        affect only the parts of the system that correspond to that user type.
    </li>
    <li>
        In some applications, certain information should be accessible to only a few people. Use-case packages let you
        preserve secrecy in areas where it is needed.
    </li>
</ul>
<h4>
    Concrete and Abstract Use Cases
</h4>
<p>
    There is a distinction between concrete and abstract use cases. A <strong>concrete</strong> use case is initiated by an
    actor and constitutes a complete flow of events. "Complete" means that an instance of the use case performs the entire
    operation called for by the actor.
</p>
<p>
    An <strong>abstract</strong> use case is never instantiated in itself. Abstract use cases are included, extend or
    generalize other use cases. When a concrete use case is initiated, an instance of the use case is created. This
    instance also exhibits the behavior specified by its associated abstract use cases. Thus, no separate instances are
    created from abstract use cases.
</p>
<p>
    The distinction between the two is important, because it is concrete use cases the actors will "see" and initiate in
    the system.
</p>
<p>
    You indicate that a use case is abstract by writing its name in italics.
</p>
<p>
    In the example below, the abstract use case Create Task is included in the use case Register Order. When Register Order
    is initiated, an instance of Register Order is created that, apart from following Register Order's flow of events, also
    follows the flow of events described in the included use case, Create Task. Create Task is never performed by itself,
    always as a part of Register Order (or any other use cases in which it is included). Create Task is therefore an
    abstract use case.
</p>
<p>
    <img height="165" alt="" src="openup_basic/guidances/concepts/resources/ucmex3.gif" width="213" />
</p>
<h4>
    Actor Generalization
</h4>
<p>
    Several actors can play the same role in a particular use case. Thus, as shown in the example below, a Teller and an
    Accountant, both of whom check the balance of an account, are seen as the same external entity by the use case that
    does the checking. The shared role is modeled as an actor, Balance Supervisor, inherited by the two original actors.
    This relationship is shown with actor-generalizations.
</p>
<p>
    <img height="236" alt="" src="openup_basic/guidances/concepts/resources/md_actg2.gif" width="274" />
</p>
<p>
    The actors Teller and Accountant inherit all the properties of a Balance Supervisor. Thus, both these actors can act as
    Balance Supervisors.
</p>
<p>
    A user can play several roles in relation to the system, which means that the user may, in fact, correspond to several
    actors. To make the model clearer, you can represent the user by one actor that generalizes several actors. Each
    inherited actor represents one of the user's roles relative to the system.
</p>
<h4>
    Use-Case Generalization
</h4>
<p>
    A parent use case may be specialized into one or more child use cases that represent more specific forms of the parent.
    Neither parent nor child is necessarily abstract, although the parent in most cases is abstract. A child inherits all
    structure, behavior, and relationships of the parent. Children of the same parent are all specializations of the
    parent. This is generalization as applicable to use cases.
</p>
<p>
    Generalization is used when you find two or more use cases that have commonalities in behavior, structure, and purpose.
    When this happens, you can describe the shared parts in a new, often abstract, use case that is then specialized by
    child use cases.
</p>
<p>
    In the example below, the use cases Telephone Order and Internet Order share a lot in structure and behavior. A general
    use case Place Order is defined where that structure and common behavior is defined. The abstract use case Place Order
    need not be complete in itself, but it provides a general behavioral framework that the child use cases can then make
    complete.
</p>
<p>
    <img height="301" alt="" src="openup_basic/guidances/concepts/resources/ucgen1.gif" width="259" />
</p>
<p>
    The parent use case is not always abstract.
</p>
<h4>
    Include relationships between use cases
</h4>
<p>
    The include-relationship connects a base use case to an inclusion use case. The inclusion use case is always abstract.
    It describes a behavior segment that is inserted into a use case instance that is executing the base use case. The base
    use case has control of the relationship to the inclusion and can depend on the result of performing the inclusion, but
    neither the base nor the inclusion may access each other's attributes. The inclusion is in this sense encapsulated, and
    represents behavior that can be reused in different base use cases.
</p>
<p>
    You can use the include-relationship to:
</p>
<ul>
    <li>
        Factor out behavior from the base use case that is not necessary for the understanding of the primary purpose of
        the use case, only the result of it is important.
    </li>
    <li>
        Factor out behavior that is in common for two or more use cases.
    </li>
</ul>
<p>
    In the example below, the use cases Withdraw Cash, Deposit Cash, and Transfer Funds all need to include how the
    customer is identified to the system. This behavior can be extracted to a new inclusion use case called Identify
    Customer, which the three base use cases include. The base use cases are independent of the method used for
    identification, and it is therefore encapsulated in the inclusion use case. From the perspective of the base use cases,
    it does not matter whether the method for identification is to read a magnetic bank card, or perform a retinal scan.
    They only depend on the result of Identify Customer, which is the identity of the customer. And vice versa, from the
    perspective of the Identify Customer use case, it does not matter how the base use cases use the customer identity or
    what has happened in them before the inclusion is executed - the method for identification is still exactly the same.
</p>
<p>
    <img height="150" alt="" src="openup_basic/guidances/concepts/resources/include1.gif" width="289" />&nbsp;
</p>
<p>
    A base use case may have multiple inclusions. One inclusion use case may be included in several base use cases. This
    does not indicate any relationship between the base use cases. You may even have multiple include-relationships between
    the same inclusion use case and base use case, provided the inclusion is inserted at different locations of the base
    use case. The include-relationship defines what the location is. All additions may be nested, which means that an
    inclusion use case may serve as the base use case for another inclusion.
</p>
<p>
    Since the inclusion use case is abstract, it does not need to have an actor associated with it. A
    communication-association to an actor is only needed if the behavior in the inclusion explicitly involves interaction
    with an actor.
</p>
<h4>
    Extend relationship between use cases
</h4>
<p>
    The extend-relationship connects an extension use case to a base use case. You define where in the base to insert the
    extension by referring to extension points in the base use case. The extension use case is often abstract, but does not
    have to be.
</p>
<p>
    You can use the extensions for several purposes:
</p>
<ul>
    <li>
        To show that a part of a use case is optional, or potentially optional, system behavior. In this way, you separate
        optional behavior from mandatory behavior in your model.
    </li>
    <li>
        To show that a subflow is executed only under certain (sometimes exceptional) conditions, such as triggering an
        alarm.
    </li>
    <li>
        To show that there may be a set of behavior segments of which one or several may be inserted at an extension point
        in a base use case. The behavior segments that are inserted (and the order in which they are inserted) will depend
        on the interaction with the actors during the execution of the base use case.
    </li>
</ul>
<p>
    The extension is conditional, which means its execution is dependent on what has happened while executing the base use
    case. The base use case does not control the conditions for the execution of the extension - the conditions are
    described within the extend-relationship. The extension use case may access and modify attributes of the base use case.
    The base use case, however, cannot see the extensions and may not access their attributes.
</p>
<p>
    The base use case is implicitly modified by the extensions. You can also say that the base use case defines a modular
    framework into which extensions can be added, but the base does not have any visibility of the specific extensions.
</p>
<p>
    The base use case should be complete in and of itself, meaning that it should be understandable and meaningful without
    any references to the extensions. However, the base use case is not independent of the extensions, since it cannot be
    executed without the possibility of following the extensions.
</p>
<p>
    In the example below, the primary service provided to the users is represented by the use case Place Call. Examples of
    optional services are:
</p>
<ul>
    <li>
        To be able to add a third party to a call (Place Conference Call).
    </li>
    <li>
        To allow the receiving party to see the identity of the caller (Show Caller Identity).
    </li>
</ul>
<p>
    We can represent the behaviors needed for these optional services as extension use cases to the base use case Place
    Call. This is a correct use of the extend-relationship: since Place Call is meaningful in itself, you do not need to
    read the descriptions of the extension use cases to understand the primary purpose of the base use case, and the
    extensions use cases have optional character.
</p>
<p>
    <img height="186" alt="" src="openup_basic/guidances/concepts/resources/extend1.gif" width="300" />
</p>
<p>
    If both the base use case and the "base plus extension" use case must be explicitly instantiable, or if you want the
    addition to modify behavior in the base use case, you should use use-case-generalization instead.
</p>
<p>
    The extension use case can consist of one or more insertion segments, each of which may have alternative paths built
    into it. These insertion segments incrementally modify the behavior of the base use case. Each insertion segment in an
    extension use case can be inserted at a separate location in the base use case. This means that the extend-relationship
    has a list of references to extension points, equal in number to the number of insertion segments in the extension use
    case. Each extension point must be defined in the base use case.
</p>
<p>
    One base use case may be involved in several extend-relationships, which means a use case instance can follow more than
    one extension during its lifetime. One extension use case may extend into several base use cases, but this does not
    imply any dependency between the base use cases. There may even be multiple extend-relationships between the same
    extension use case and base use case, provided the extension is inserted at different locations in the base. This means
    the different extend-relationships need to refer to different extension points in the base use case. An extension use
    case may itself be the base in an extend-, include-, or generalization-relationship. For example, this means extension
    use cases can extend other extension use cases in a nested manner.
</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Role"
						name="ucm_analyst" briefDescription=""
						id="_MO9vkDPKEdudA-StyUUwnw" orderingGuide="" suppressed="false"
						presentationName=""
						variabilityBasedOnElement="_0VxJsMlgEdmt3adZL5Dmdw"
						variabilityType="contributes">
						<ResponsibleFor>
							_0UCrZclgEdmt3adZL5Dmdw
						</ResponsibleFor>
					</ContentElement>
				</MethodPackage>
				<ContentElement xsi:type="uma:Concept"
					name="requirements"
					briefDescription="This page provides formal and informal definitions of a requirement and explains how the concept is related to the process."
					id="_0Wh-sMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Requirements" variabilityType="na">
					<Presentation
						name="requirements,_0Wh-sMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_eUfzwMMyEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-21T05:18:41" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p>
    A formal definition of a requirement,&nbsp;taken from&nbsp;&nbsp;<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[ICS03]</a>, is:
</p>
<p>
    <em>"A formal statement of: (1) An attribute to be possessed by the product or a function to be performed by the
    product. (2) the performance standard for the attribute or function. (3) the measuring process to be used in verifying
    that the standard has been met."</em>
</p>
<p>
    Informally,&nbsp;requirements&nbsp;are the project team's to-do list.
</p>
<p align="left">
    Requirements define what is needed and focus the project team. They are the primary method used to communicate the
    goals of the project to everyone on the team.
</p>
<div class="O" v:shape="_x0000_s1026">
    <div style="mso-line-spacing: '100 30 0'">
        Requirements define:
    </div>
</div>
<ul>
    <li>
        What the users want
    </li>
    <li>
        What the system must include to satisfy the user and business needs
    </li>
    <li>
        How one will demonstrate that the requirements have been satisfied&nbsp;
    </li>
</ul>
<p align="left">
    Requirements are the basis for capturing and communicating needs, managing expectations, prioritizing and assigning
    work, verifying and validating the system (acceptance), and managing the scope of the project.
</p>
<p align="left">
    Requirements may take different forms, including Use Cases and Scenarios, unstructured text, structured text, or a
    combination, and they may be stated at different levels of abstraction. At the highest level of abstraction,&nbsp;<a class="elementLink" href="./../../../openup_basic/guidances/termdefinitions/feature,_PgYREAeYEduWycDgioo5rg.html" guid="_PgYREAeYEduWycDgioo5rg">Feature</a>s define the services that the system must provide to solve the customer's
    problem. These are captured as structured or unstructured text in the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">Artifact: Vision</a>. At the next level of abstraction, Use Cases define the
    functionality that the system must provide to&nbsp;deliver the required features. These are captured&nbsp;as Use Cases
    (see <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html" guid="_0VGbUMlgEdmt3adZL5Dmdw">Artifact: Use Case</a>)&nbsp;that describe the sequence of actions performed by the
    system to yield an observable result of value.
</p>
<p>
    A system must perform according to the behavior that Use Cases specify. However, there are system requirements that do
    not represent a specific behavior:
</p>
<ul>
    <li>
        Legal and regulatory requirements, as well as application standards
    </li>
    <li>
        Quality attributes of the system to be built, including usability, reliability, performance, and supportability
        requirements
    </li>
    <li>
        Interface requirements to be able to communicate with external systems
    </li>
    <li>
        Design constraints, such as those for operating systems and environments and for compatibility with other software
    </li>
</ul>
<p>
    These quality requirements are often referred to as <strong>nonfunctional</strong> requirements, but this should not be
    interpreted as requirements with no function.
</p>
<p>
    Quality requirements that apply to the system as a whole are captured as structured text in <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html" guid="_BVh9cL-CEdqb7N6KIeDL8Q">Artifact: Supporting Requirements</a>.&nbsp; Quality requirements that are closely
    associated with a particular Use Case are often captured in the Use Case itself to simplify review, understanding, and
    maintenance.
</p>
<p>
    Finally, <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/test_case,_0ZS-0MlgEdmt3adZL5Dmdw.html" guid="_0ZS-0MlgEdmt3adZL5Dmdw">Artifact: Test Case</a>&nbsp;may be considered a form of requirement stating how the
    system will be verified.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Task" name="define_vision"
					briefDescription="Define the vision for the future system. Describe the problem and features based  on Stakeholder requests."
					id="_0fOAoMlgEdmt3adZL5Dmdw"
					orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quotlt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quotlt;orderInfos name=&quot;sections&quot; timestamp=&quot;1115151259496&quotlt;gUIDs>_sa5F4LwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_tvzDULwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_vGg-oLwPEdm6DujQZORGLQ&lt;/gUIDs>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    &lt;gUIDs>_z7ZC4LwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_u0DWcKhXEdmsY5hhGsDstg&lt;/gUIDslt;gUIDs>_yl_-EKhXEdmsY5hhGsDstg&lt;/gUIDslt;gUIDs>_zQUfoKuHEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_1LVn0LwPEdm6DujQZORGLQ&lt;/gUIDs>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    &lt;gUIDs>_2VixILwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_yq-j4LwPEdm6DujQZORGLQ&lt;/gUIDslt;/orderInfoslt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollection
					suppressed="false" presentationName="Define Vision"
					variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="define_vision,_0fOAoMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_5rJ78Lj3Edmy88CC3LfB_w" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-06-29T09:00:31" changeDescription=""
						version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Identify Stakeholders"
							briefDescription="" id="_tvzDULwPEdm6DujQZORGLQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p class=&quot;MsoNormal&quot;
								style=&quot;MARGIN: 0in 0in 0pt&quot;>
								Identify the decision-makers, &#xD;
								customers, potential users, partners,
								domain experts, industry analysts and
								&#xD; other interested parties (see
								&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../basic_unified_process/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role:
								&#xD; Stakeholder&lt;/a>). Develop
								profiles of potential (or actual) users
								of the system &#xD; that map to the
								roles of human actors of the system that
								you are developing. &#xD; Document the
								initial information on key users and
								their environment in the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../basic_unified_process/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Work
								&#xD; Product: Vision&lt;/a>.&lt;/p>
							</Description>
						</Section>
						<Section
							name="Gain agreement on the problem to solve" briefDescription=""
							id="_sa5F4LwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								Avoid rushing into defining the
								solution. First, gain agreement on the
								definition of the problem by asking the
								stakeholders&#xD; what they see as the
								problem. Then search for root causes, or
								the “problem behind the problem.”&#xD;
								Use&amp;nbsp;techniques&amp;nbsp;like
								the ones&amp;nbsp;described
								in&amp;nbsp;&lt;a
								class=&quot;elementlinkwithtype&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw.html&quot;
								guid=&quot;_OnoNQNSAEdmLhZ9H5Plxyw&quot;>Guideline:
								Requirements Gathering
								Techniques&lt;/a>. Formulate the problem
								statement, and then&#xD; fill in the
								corresponding section from
								&amp;nbsp;&lt;a
								class=&quot;elementlinkwithtype&quot;
								href=&quot;./../../openup_basic/guidances/templates/vision,_0cW54MlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0cW54MlgEdmt3adZL5Dmdw&quot;>Template:
								Vision&lt;/a>. The purpose of this is to
								help you distinguish solutions and
								answers&#xD; from problems and
								questions.&lt;br />&#xD; &lt;br />
							</Description>
						</Section>
						<Section name="Capture a common vocabulary"
							briefDescription="" id="_rliOAOz2Edq2wJOsmRwmhg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Every project has its own specialized
								terminology that everyone on the team
								must understand well to communicate
								effectively&#xD; with stakeholders. Work
								with stakeholders to&amp;nbsp;create a
								glossary that defines acronyms,
								abbreviations,
								and&amp;nbsp;relevant&#xD; business and
								technical terms. Work with stakeholder
								to continually expand and refine
								the&amp;nbsp;glossary throughout
								the&#xD; project life cycle.
							</Description>
						</Section>
						<Section name="Gather stakeholder requests"
							briefDescription="" id="_vGg-oLwPEdm6DujQZORGLQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Use the most appropriate
								method to gather information, such as
								the ones in &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw.html&quot;
								guid=&quot;_OnoNQNSAEdmLhZ9H5Plxyw&quot;>Guideline:
								Requirements Gathering
								Techniques&lt;/a>. Each one is
								applicable in a particular&#xD;
								situation or type of stakeholders.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; If you can meet
								stakeholders in person, then you can
								conduct an interview or a brainstorming
								session. If you don't have&#xD; direct
								access to stakeholders, or if there are
								many individuals in many locations, then
								you can use a questionnaire. If&#xD;
								constructed carefully and conducted
								online, questionnaires can also more
								easily provide statistical data that
								reflects&#xD; what stakeholders really
								need.&#xD; &lt;/p>&#xD; &lt;p>&#xD; For
								more information, see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html&quot;
								guid=&quot;_P9cMUPV_EdmdHa9MmVPgqQ&quot;>Task:
								Find and Outline
								Requirements&lt;/a>.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Define the system boundaries"
							briefDescription="" id="_z7ZC4LwPEdm6DujQZORGLQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Find and define the line
								that divides the solution and the real
								world that surrounds the solution.
								Identify interfaces,&#xD; as well as
								input and output information exchanged
								with users, machines, or systems.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section
							name="Identify constraints on the system" briefDescription=""
							id="_1LVn0LwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p> Consider the various sources of
								constraints that can impact &#xD; the
								design or the project itself:
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>
								Political&lt;/li>&#xD; &lt;li>Economic
								&#xD; (budget, licensing)&lt;/li>&#xD;
								&lt;li>Environmental &#xD; (regulatory
								constraints, legal,
								standards)&lt;/li>&#xD; &lt;li>Technical
								&#xD; (platforms,
								technology)&lt;/li>&#xD;
								&lt;li>Feasibility &#xD; (schedule,
								resources allocation, outsourcing)
								&lt;/li>&#xD; &lt;li>System &#xD;
								(solutions compatibility, support of
								operating systems and
								environments).&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Define features of the system"
							briefDescription="" id="_2VixILwPEdm6DujQZORGLQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Work with stakeholders to
								capture&amp;nbsp;a
								list&amp;nbsp;of&amp;nbsp;&lt;a
								class=&quot;elementlinkwithusertext&quot;
								href=&quot;./../../openup_basic/guidances/termdefinitions/feature,_PgYREAeYEduWycDgioo5rg.html&quot;
								guid=&quot;_PgYREAeYEduWycDgioo5rg&quot;>features&lt;/a>
								that stakeholders want in the system,
								briefly describing them and giving&#xD;
								attributes to help define their general
								status and priority in the project.
							</Description>
						</Section>
						<Section name="Achieve concurrence"
							briefDescription="" id="_AhjmAL-GEdqb7N6KIeDL8Q" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Conduct a review&amp;nbsp;of the project
								vision with relevant Stakeholders and
								the development team to ensure
								agreement, assess&#xD; quality, and
								identify required changes.
								See&amp;nbsp;&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_E-dPIL-GEdqb7N6KIeDL8Q&quot;>Guideline:
								Effective Requirement Reviews&lt;/a> for
								more information.
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[The solution is proposed for a problem that everybody agrees on.&nbsp;Stakeholders 
express their problems, needs, and potential features for the system to be, so 
the project team can better understand what has to be done.]]></Purpose>
					</Presentation>
					<Concept>_0Wh-sMlgEdmt3adZL5Dmdw</Concept>
					<Checklist>_0WoFUMlgEdmt3adZL5Dmdw</Checklist>
					<Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
					<Guideline>_OnoNQNSAEdmLhZ9H5Plxyw</Guideline>
					<Guideline>_E-dPIL-GEdqb7N6KIeDL8Q</Guideline>
					<PerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</PerformedBy>
					<Output>_0WVxcMlgEdmt3adZL5Dmdw</Output>
					<Output>_Wn7HcNcEEdqz_d2XWoVt6Q</Output>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0a0o0MlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="find_and_outline_requirements"
					briefDescription="This task describes how to capture the requirements for the system."
					id="_P9cMUPV_EdmdHa9MmVPgqQ" orderingGuide="" suppressed="false"
					presentationName="Find and Outline Requirements"
					variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ"
						briefDescription="" id="_P9iS8PV_EdmdHa9MmVPgqQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-19T04:48:23"
						changeDescription="" version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations><![CDATA[Close collaboration with stakeholders on this task is critical for the success of project.]]></KeyConsiderations>
						<Section name="Gather information"
							briefDescription="" id="_ckG-cCY-EdqNHcQ-rAojXw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Be prepared by gathering and
								reviewing information related to the
								problem domain, problem statement,
								business&#xD; environment and key
								stakeholders.&amp;nbsp; Most of this
								information should be available in the
								&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Artifact:
								Vision&lt;/a>.&amp;nbsp;&amp;nbsp;You
								can use various techniques to make
								gathering&#xD; requirements easier.
								Face-to-face meetings with stakeholders
								is the most effective way to understand
								stakeholder needs&#xD; and to gather and
								validate requirements, but
								you&amp;nbsp;must prepare in order
								for&amp;nbsp;these meetings to run
								efficiently.&#xD; See &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw.html&quot;
								guid=&quot;_OnoNQNSAEdmLhZ9H5Plxyw&quot;>Guideline:
								Requirements Gathering
								Techniques&lt;/a>&amp;nbsp;for more
								information.&amp;nbsp;&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Identify and capture domain terms" briefDescription=""
							id="_GAr3IOz3Edq2wJOsmRwmhg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								Work closely with stakeholder to make
								sure that ambiguous or domain-specific
								terms are clearly defined in
								the&amp;nbsp;&lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html&quot;
								guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a>
								and that you use these terms
								consistently.
							</Description>
						</Section>
						<Section name="Capture requirements"
							briefDescription="" id="_fDbgkCY-EdqNHcQ-rAojXw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Identify the types of requirements
								relevant to your system (see &lt;a
								class=&quot;elementlinkwithtype&quot;
								href=&quot;./../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0Wh-sMlgEdmt3adZL5Dmdw&quot;>Concept:
								Requirements&lt;/a>). &#xD; &lt;p>&#xD;
								Work with stakeholders to identify and
								capture&amp;nbsp;the actors and Use
								Cases. See &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html&quot;
								guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Guideline:
								Find and Outline Actors and Use
								Cases&lt;/a>&amp;nbsp;for more
								information.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Work with stakeholders to
								identify and capture&amp;nbsp;the other
								types of requirements
								relevant&amp;nbsp;to your system.
								See&#xD; &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q.html&quot;
								guid=&quot;_wr24gNcGEdqz_d2XWoVt6Q&quot;>Guideline:
								Supporting
								Requirements&lt;/a>&amp;nbsp;for more
								information.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Achieve concurrence"
							briefDescription="" id="_0WhHsN-eEdqiM_wFaqLjNg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Conduct a review&amp;nbsp;of
								the&amp;nbsp;requirements with relevant
								&lt;a
								class=&quot;elementLinkWithUserText&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholders&lt;/a>&#xD;
								and the development team to ensure
								consistency with the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>,&#xD;
								assess quality, and identify any
								required changes.
								See&amp;nbsp;&amp;nbsp;&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_E-dPIL-GEdqb7N6KIeDL8Q&quot;>Guideline:
								Effective Requirement
								Reviews&lt;/a>&amp;nbsp;for more
								information.
							</Description>
						</Section>
						<Section name="Update the Work Items  List"
							briefDescription="" id="_Mgb9IC4DEduBP8F-6-95NQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Capture references to the requirements
								in the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
								Work Items List&lt;/a>, so that you can
								prioritize the work.
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[The purpose of this task is to understand Stakeholder needs and communicate these 
needs to the development team.]]></Purpose>
					</Presentation>
					<Concept>_0Wh-sMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
					<Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
					<Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
					<Checklist>_Vael8CGMEdu3VKXZx45D3A</Checklist>
					<Guideline>_OnoNQNSAEdmLhZ9H5Plxyw</Guideline>
					<Guideline>_eyL0wCu-EdqSxKAVa9kmvA</Guideline>
					<Guideline>_wr24gNcGEdqz_d2XWoVt6Q</Guideline>
					<Guideline>_E-dPIL-GEdqb7N6KIeDL8Q</Guideline>
					<Guideline>_1AOsMO0JEdqHTdbLTmC5IQ</Guideline>
					<Guideline>_6jXzYNcKEdqz_d2XWoVt6Q</Guideline>
					<PerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_Wn7HcNcEEdqz_d2XWoVt6Q
					</MandatoryInput>
					<MandatoryInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
					<Output>_BVh9cL-CEdqb7N6KIeDL8Q</Output>
					<Output>_Wn7HcNcEEdqz_d2XWoVt6Q</Output>
					<Output>_0VMh8MlgEdmt3adZL5Dmdw</Output>
					<Output>_0VGbUMlgEdmt3adZL5Dmdw</Output>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0YDosMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0ZM4MclgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="req_gathering_techniques"
					briefDescription="This guideline describes various techniques for gathering requirements."
					id="_OnoNQNSAEdmLhZ9H5Plxyw" orderingGuide="" suppressed="false"
					presentationName="Requirements Gathering Techniques"
					variabilityType="na">
					<Presentation
						name="req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw"
						briefDescription="" id="_On0agNSAEdmLhZ9H5Plxyw" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-22T04:27:44"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<h3>
    Sources of Requirements
</h3>
<p>
    Good requirements start with good sources. Finding those quality sources is an important task and, fortunately, one
    that&nbsp;takes few&nbsp;resources. Examples of sources of requirements include:
</p>
<ul>
    <li>
        Customers
    </li>
    <li>
        Users
    </li>
    <li>
        Administrators and maintenance&nbsp;staff
    </li>
    <li>
        Partners
    </li>
    <li>
        Domain Experts
    </li>
    <li>
        Industry Analysts
    </li>
    <li>
        Information about competitors&nbsp;
    </li>
</ul>
<h3>
    Requirements Gathering Techniques
</h3>
<p>
    After you have identified these sources, there are a number of techniques that may be used to gather requirements. The
    following will describe the various techniques, followed by a brief discussion of when to use each technique.
</p>
<p>
    To get the requirements down on paper, you&nbsp;can to do one or more of the following:
</p>
<ul>
    <li>
        Conduct a brainstorming session
    </li>
    <li>
        Interview users
    </li>
    <li>
        Send questionnaires
    </li>
    <li>
        Work in the target environment
    </li>
    <li>
        Study analogous systems
    </li>
    <li>
        Examine suggestions and problem reports
    </li>
    <li>
        Talk to support teams
    </li>
    <li>
        Study improvements made by users
    </li>
    <li>
        Look at unintended uses
    </li>
    <li>
        Conduct workshops
    </li>
    <li>
        Demonstrate prototypes to stakeholders
    </li>
</ul>
<p>
    The best idea is to get the requirements down quickly and then to encourage the users to correct and improve them. Put
    in those corrections, and repeat the cycle. Do it now, keep it small, and correct it at once. Start off with the best
    structure you can devise, but expect to keep on correcting it throughout the process.&nbsp; Success tips: Do it now,
    keep it small, and correct it immediately.
</p>
<h4>
    Conduct a brainstorming session
</h4>
<p>
    Brainstorming is a short group session where everyone is allowed to say whatever they feel is important to the topic of
    discussion. After that, a facilitator leads the group in organizing and prioritizing the results.&nbsp; The following
    basic rules for brainstorming&nbsp;ensures better results:
</p>
<ul>
    <li>
        Start out by clearly stating the objective of the brainstorming session.
    </li>
    <li>
        Generate as may ideas as possible.
    </li>
    <li>
        Let your imagination soar.
    </li>
    <li>
        Do not allow criticism or debate while you are gathering information.
    </li>
    <li>
        Once information is gathered,&nbsp;reshape and combine ideas.
    </li>
</ul>
<h4>
    Interview users
</h4>
<p>
    Face-to-face contact with users through individual interviewing is the primary source of requirements and an important
    way you gather and validate their requirements. Remember that it is not the only possible technique, and that you can
    conduct interviews many different ways. Develop a repertoire of styles to&nbsp;fit different situations. Unless you use
    the system yourself, you will need to make an effort to understand and experience the user's problem to describe it
    clearly and correctly.
</p>
<h4>
    Send Questionnaires
</h4>
<p>
    If face-to-face meetings are possible, they are always preferable, because they provide a better means of uncovering
    the problem behind the problem. Sometimes, though,&nbsp;face-to-face meetings with stakeholders are not feasible (when
    developing products for the consumer market, for example). In those situations, consider using questionnaires.&nbsp;
    Send a set of questions, possibly with multiple choice responses, to the relevant stakeholders, and ask them to
    complete it and return it to you.&nbsp; Success&nbsp;tips: Keep it short and given them a deadline.&nbsp;
</p>
<p>
    This technique has the advantage of providing a lot of information for statistical analysis. However, the questions
    must be well designed to be clear and to avoid so-called "leading questions", which bias the responses.&nbsp;
</p>
<h4>
    Work in the target environment
</h4>
<p>
    Experience the work of the users for yourself. Working with users helps you understand problems that have resisted
    previous solutions. Familiar systems developed in this way inevitably include tools for programmers, such as
    interactive editors and compilers, as the developers naturally have both the expertise in the subject area, and the
    desire to solve their own problems. It would be good to see the same dedication devoted to solving problems in other
    areas too. Where the work cannot easily be experienced in this way, it may still be possible to do a bit more than just
    sit quietly and observe. Users can give you a commentary on what they are doing, what the problems are, and what they
    would like to have to make the work easier.
</p>
<h4>
    Study analogous systems
</h4>
<p>
    The starting point for many projects is often a similar or an existing system. Sometimes, comparable products and
    systems contain working versions of good ideas for solving user problems. You can save the time lost in reinventing the
    wheel by looking at systems already on the market, whether they are systems installed at the user's site or products
    made by rival organizations. Even if they are trying to solve slightly different problems, they often&nbsp;provide
    valuable clues as to what you need to do.
</p>
<p>
    Listen when a customer asks why a product couldn't do something that the customer wants, and keep a list of these
    suggestions. Later, use it to start discussions with other users. You should be able to obtain some requirements
    directly this way. If not, capture and store suggestions for future use.
</p>
<p>
    You can describe to users selected features of other products. Explain that the system is designed for&nbsp;another
    purpose&nbsp;but contains an interesting feature, and you wonder it or something similar&nbsp;would help them.
    Sometimes these systems are described in documents, such as a contract from another organization or a report written
    for management. Often, these documents were never intended as formal requirements, and were written merely to
    communicate a stream-of-consciousness idea. Define a process of going from disorganized to organized information.
</p>
<p>
    Such a process might involve the following activities:
</p>
<ul>
    <li>
        Read the document from end to end (several times) to comprehend what the customer wants and what actually has been
        written.
    </li>
    <li>
        Classify all of the types of information in the document. (user, system requirements, design elements, plans,
        background material, irrelevant detail)
    </li>
    <li>
        Mark up the original text to separate out such requirements.
    </li>
    <li>
        Find a good structure for each of the different types of information such as: a scenario for the user requirements,
        functional breakdown for the system requirements, and architecture for the design.
    </li>
    <li>
        Organize the information to show gaps and overlaps. Feel free to add missing elements, but confirm these decisions
        with the users.
    </li>
    <li>
        Create traceability links between these information elements to show the designers exactly what the users want.
    </li>
    <li>
        Convince the customer to accept the new information as the basis for the contract.
    </li>
</ul>
<h4>
    Examine suggestions and problem reports
</h4>
<p>
    Requirements can come from change suggestions and user problems. A direct road to finding requirements is to look at
    suggestions and problems as first described. Most organizations have a form for reporting system problems or software
    defects. You can ask to look through the reports (and there will probably be many). Sort them into groups so you can
    identify the key areas that are troubling users. Ask users some questions about these areas to clarify the users'
    actual needs.
</p>
<h4>
    Talk to support teams
</h4>
<p>
    Most large sales organizations have a help desk that keeps a log of problems and fixes, and support engineers who do
    the fixing. Many organizations have similar facilities to support their own operations. Talking to the help desk staff
    and the support engineers may give you good leads into the requirements, and save you time. Also talk to the training
    team and installation teams about what users find to be&nbsp;difficult.
</p>
<h4>
    Study improvements made by users
</h4>
<p>
    This is an excellent source of requirements. Users of a standard company spreadsheet may have added a few fields, or
    related different sheets together, or drawn a graph, that exactly meets their individual needs. You need only ask: Why
    did you add that? Their answers help you&nbsp;get to the heart of the actual requirement. This applies also to hardware
    and non-computer devices. For example, a lathe operator may have manufactured a special clamp, or an arm that prevents
    movement of the tool beyond a certain point. Any such modification points to something wrong with the existing product,
    which makes it&nbsp;a valid&nbsp;requirement for the new version.
</p>
<h4>
    Look at unintended uses
</h4>
<p>
    People often use things for purposes for which they were not designed.&nbsp; This is&nbsp;a good way to get new ideas
    and to think of innovations. For example, an observant product manager noticed that an engineer was staying in the
    office late to use an advanced computer-aided design system to design a new kitchen layout for his home. Inexpensive
    commercial products are now widely available for home use.
</p>
<h4>
    Conduct workshops
</h4>
<p>
    Workshops can rapidly pull together a good set of requirements. In two to five days, you can create a set of
    requirements, and then review and improve them. If everyone in a workshop tries to estimate the cost and value of each
    requirement, the document becomes much more useful and cost-effective.
</p>
<p>
    Workshops are quicker and better at discovering requirements than other techniques, such as sending questionnaires. You
    are bringing the right collection of people together, and getting them to correct and improve on their requirements
    document.
</p>
<p>
    A workshop is inherently expensive because of the number of people involved, but it saves a large amount of time. If
    you can define the product right the first time and cut three months off the requirements gathering, the savings could
    be enormous. The workshop has to be thoroughly organized to take advantage of people's time.
</p>
<p>
    Choose a quiet location for the workshop so that people are not disturbed by day-to-day business. Mobile phones should
    be discouraged; arrange to take messages externally. Take advantage of informal interactions by choosing a site so that
    people don't go home at night or go out separately. The example&nbsp;in Figure 1&nbsp;shows the logic of a requirements
    workshop. Note that the workshop provides the environment in which to apply other requirements-gathering techniques
    such as brainstorming.
</p>
<p>
    <img height="381" alt="" src="./resources/Workshop%20Activity%20Diagram.GIF" width="542" />
</p>
<p>
    <strong>Figure 1: Conducting Workshops</strong>
</p>
<h4>
    Demonstrate prototypes to stakeholders
</h4>
<p>
    Prototypes allow us to immediately see some aspects of the system. Showing users a simple prototype can
    provoke&nbsp;them into giving good requirements information or changing their mind about existing requirements. The
    techniques described here help you gather ideas for requirements. Prototypes and models are an excellent way of
    presenting ideas to users. They can illustrate how an approach might work, or give users a glimpse of what they might
    be able to do. More requirements are likely to emerge when users see what you are suggesting.
</p>
<p>
    A presentation can use a sequence of slides, storyboard, an artist's impression, or even an animation to give users a
    vision of the possibilities. When prototyping software, make a mock-up of the user interface screens, emphasizing that
    there is no code and that the system has not been designed or even specified yet (fair warning: there are dangers here
    for the unwary).
</p>
<p>
    This prototyping aims to get users to express (missing) requirements. You are not trying to sell users an idea or
    product, you are finding out what they actually want. Seeing a prototype, which invariably is wrong in some ways and
    right in others, is a powerful stimulus to users to start saying what they want. They may point out plenty of problems
    with the prototype! This is excellent,&nbsp;because each problem leads to a new requirement.
</p>
<h3>
    Which Technique to Apply?
</h3>
<p>
    Which technique to apply depends on a number of factors, such as:
</p>
<ul>
    <li>
        Availability and location of stakeholders
    </li>
    <li>
        Development team knowledge of the problem domain
    </li>
    <li>
        Customers' and users' knowledge of the problem domain
    </li>
    <li>
        Customers' and users' knowledge of the development process and methods
    </li>
</ul>
<p>
    If the stakeholders are not co-located or readily available, for example in the case of a product being developed for
    mass market,&nbsp;techniques such as brainstorming, interviews and workshops that require face-to-face contact with the
    stakeholders may be difficult or impossible.
</p>
<p>
    If the stakeholders are available for face-to-face meetings, this is a much better situation and almost all of the
    techniques described, or combination of them, may be applied. In this case, the domain and development experience of
    oth the stakeholders and the development team are critical factors in selecting the appropriate technique.
</p>
<p>
    Figure 2, adapted from <a class="" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[HIC03]</a>, provides a framework for determining the appropriate techniques. It
    defines four main categories of customer or user experience and development team experience: "Fuzzy problem",
    "Selling/Teaching", "Catch up", and "Mature".
</p>
<p>
    <img height="470" alt="" src="./resources/Which%20Req%20Gathering%20Technique.gif" width="514" />
</p>
<p>
    <strong>Figure 2: Selection of Techniques</strong>
</p>
<p>
    There is no "right answer", but these guidelines may help you decide which method to use:
</p>
<ul>
    <li>
        Catch-up: Interviews, work in target environment
    </li>
    <li>
        Fuzzy: Brainstorming, workshops
    </li>
    <li>
        Mature: Questionnaires, workshops, prototypes
    </li>
    <li>
        Selling/Teaching: prototypes
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="detail_requirements"
					briefDescription="This task describes how to detail one or more requirements for the system."
					id="_0e1mIMlgEdmt3adZL5Dmdw"
					orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quotlt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quotlt;orderInfos name=&quot;sections&quot; timestamp=&quot;1113334493908&quotlt;gUIDs>_yqm4kKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_zg2kEKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_1GGDkKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_35vP4KuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_5mtIAKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_7g3HkKuJEdmhFZtkg1nakg&lt;/gUIDslt;/orderInfoslt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollection
					suppressed="false" presentationName="Detail Requirements"
					variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="detail_requirements,_0e1mIMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_Nqwi8KeqEdmKDbQuyzCoqQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-19T05:26:31"
						changeDescription="" version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Detail Use Cases and Scenarios"
							briefDescription="" id="_vWeHMCxSEdqjsdw1QLH_6Q" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Some &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use
								Case&lt;/a>s and Scenarios may need to
								be described in more detail to validate
								our&#xD; understanding of the
								requirement and to permit software
								development to begin. This does not
								imply that all&amp;nbsp;use&#xD; cases
								and scenarios&amp;nbsp;will be detailed
								prior to commencing
								implementation.&amp;nbsp;&amp;nbsp;Work
								with stakeholders to&#xD; detail only
								those that are prioritized for
								implementation in the next iteration or
								two (see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
								Work Items List&lt;/a>), or those that
								are deemed architecturally
								significant&#xD; (see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/architecturally_significant_requirements,_HrZGIA4MEduibvKwrGxWxA.html&quot;
								guid=&quot;_HrZGIA4MEduibvKwrGxWxA&quot;>Concept:
								Architecturally Significant
								Requirements&lt;/a>.)&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; The level of detail captured
								will vary depending upon the needs of
								the project and the complexity of the
								use&#xD; case.&amp;nbsp; For a
								discussion of the different levels of
								detail that may be applicable see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/use_case_formats,_qq0GMAXkEduj_7BEUj1JfQ.html&quot;
								guid=&quot;_qq0GMAXkEduj_7BEUj1JfQ&quot;>Guideline:
								Use Case Formats&lt;/a>.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Capture the use
								case&amp;nbsp;details in &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Artifact:
								Use Case&lt;/a>.&amp;nbsp; For
								additional information on detailing use
								cases and scenarios, see&amp;nbsp;&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html&quot;
								guid=&quot;_4BJ_YCxSEdqjsdw1QLH_6Q&quot;>Guideline:
								Detail Use Cases and
								Scenarios&lt;/a>.&amp;nbsp; For
								assistance in assessing the&#xD; quality
								of your use cases see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/checklists/use_case,_0kNwINk1Edq2Q8qZoWbvGA.html&quot;
								guid=&quot;_0kNwINk1Edq2Q8qZoWbvGA&quot;>Checklist:
								Use Case&lt;/a>.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Detail supporting requirements"
							briefDescription="" id="_B47VwCxTEdqjsdw1QLH_6Q" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Some&amp;nbsp;&lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting
								Requirements&lt;/a> may need to be
								clarified or described in more detail,
								new&#xD; requirements&amp;nbsp;may have
								been discovered as we detailed the use
								cases and scenarios, and new
								requirements may have&#xD; been
								submitted as &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html&quot;
								guid=&quot;_6jdvECb3Edqh1LYUOGRh2A&quot;>Change
								Requests&lt;/a>.&amp;nbsp;Work with
								stakeholders to capture, refine and
								validate those&#xD; requirements that
								will have an impact on near term work
								(see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
								Work Items List&lt;/a>) or are deemed
								architecturally significant (see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/architecturally_significant_requirements,_HrZGIA4MEduibvKwrGxWxA.html&quot;
								guid=&quot;_HrZGIA4MEduibvKwrGxWxA&quot;>Concept:
								Architecturally Significant
								Requirements&lt;/a>).&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Capture these requirements
								in&amp;nbsp;the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Artifact:
								Supporting
								Requirements&lt;/a>.&amp;nbsp; For
								additional guidance on detailing&#xD;
								supporting requirements see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q.html&quot;
								guid=&quot;_wr24gNcGEdqz_d2XWoVt6Q&quot;>Guideline:
								Supporting
								Requirements&lt;/a>.&amp;nbsp; For
								assistance in assessing the quality
								of&#xD; your supporting requirements see
								&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/checklists/supporting_requirements,_Vael8CGMEdu3VKXZx45D3A.html&quot;
								guid=&quot;_Vael8CGMEdu3VKXZx45D3A&quot;>Checklist:
								Supporting Requirements&lt;/a>.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Detail glossary terms"
							briefDescription="" id="_2389cOz2Edq2wJOsmRwmhg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Review the use case&amp;nbsp;flow of
								events. If information is exchanged, be
								specific about what is passed back
								and&#xD; forth.&amp;nbsp; Work with
								stakeholders to ensure that you define
								newly discovered domain terms, or
								ambiguous&#xD; terms&amp;nbsp;properly
								in the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html&quot;
								guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a>.&#xD;
								If your understanding of the domain has
								improved,&amp;nbsp;refine existing
								glossary terms.
							</Description>
						</Section>
						<Section name="Achieve concurrence"
							briefDescription="" id="_BYbboN-bEdqiM_wFaqLjNg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Conduct a review&amp;nbsp;of
								the&amp;nbsp;requirements (&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Artifact:
								Use Case&lt;/a> and &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Artifact:
								Supporting
								Requirements&lt;/a>)&amp;nbsp;with
								relevant&amp;nbsp;&lt;a
								class=&quot;elementLinkWithUserText&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholders&lt;/a>
								and the development team to ensure
								consistency with the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>,
								assess quality, and identify required
								changes. See&amp;nbsp;&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_E-dPIL-GEdqb7N6KIeDL8Q&quot;>Guideline:
								Effective Requirement
								Reviews&lt;/a>&amp;nbsp;for more
								information.
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p>
    The purpose of this task is to describe one or more requirements&nbsp;in sufficient detail to validate our
    understanding of the requirement(s), to ensure concurrence with stakeholders, and to permit software
    development&nbsp;to begin.
</p>]]></Purpose>
					</Presentation>
					<Concept>_0Wh-sMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
					<Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
					<Concept>_VQ268O0KEdqHTdbLTmC5IQ</Concept>
					<Concept>_eYtQQO0KEdqHTdbLTmC5IQ</Concept>
					<Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
					<Checklist>_Vael8CGMEdu3VKXZx45D3A</Checklist>
					<Checklist>_0kNwINk1Edq2Q8qZoWbvGA</Checklist>
					<Guideline>_4BJ_YCxSEdqjsdw1QLH_6Q</Guideline>
					<Guideline>_E-dPIL-GEdqb7N6KIeDL8Q</Guideline>
					<Guideline>_1AOsMO0JEdqHTdbLTmC5IQ</Guideline>
					<Guideline>_6jXzYNcKEdqz_d2XWoVt6Q</Guideline>
					<Guideline>_qq0GMAXkEduj_7BEUj1JfQ</Guideline>
					<PerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_BVh9cL-CEdqb7N6KIeDL8Q
					</MandatoryInput>
					<MandatoryInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_Wn7HcNcEEdqz_d2XWoVt6Q
					</MandatoryInput>
					<MandatoryInput>
						_0VGbUMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_BVh9cL-CEdqb7N6KIeDL8Q</Output>
					<Output>_Wn7HcNcEEdqz_d2XWoVt6Q</Output>
					<Output>_0VGbUMlgEdmt3adZL5Dmdw</Output>
					<Output>_0VMh8MlgEdmt3adZL5Dmdw</Output>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0YDosMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0ZM4MclgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="find_and_outline_actors_and_ucs"
					briefDescription="This guideline describes how to find and outline actors and use cases."
					id="_eyL0wCu-EdqSxKAVa9kmvA" orderingGuide="" suppressed="false"
					presentationName="Find and Outline Actors and Use Cases"
					variabilityType="na">
					<Presentation
						name="find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA"
						briefDescription="" id="-Rcm_MlViENAvFFyIe9V3dQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-22T04:10:56"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<h4>
    Finding actors
</h4>
<p>
    Find the external entities with which the system under development must interact. Candidates include groups of users
    who will require help from the system to perform their tasks and execute the system's primary or secondary functions,
    as well as external hardware, software, and other systems.
</p>
<p>
    Define each candidate actor by naming it and writing a brief description. Includes the actor's area of responsibility
    and the goals that the actor will attempt to accomplish when using the system. Eliminate actor candidates who do not
    have any goals.
</p>
<p>
    These questions are useful in identifying actors:
</p>
<ul>
    <li>
        Who will supply, use, or remove information from the system?
    </li>
    <li>
        Who will use the system?
    </li>
    <li>
        Who is interested in a certain feature or service provided by the system?
    </li>
    <li>
        Who will support and maintain the system?
    </li>
    <li>
        What are the system's external resources?
    </li>
    <li>
        What other systems will need to interact with the system under development?
    </li>
</ul>
<p>
    Review the list of stakeholders that you captured in the Vision statement. Not all stakeholders will be actors
    (meaning, they will not all interact directly with the system under development), but this list of stakeholders is a
    useful for identifying candidates for actors.
</p>
Finding use cases 
<p>
    The best way to find use cases is to consider what each actor requires of the system. For each actor, human or not,
    ask:
</p>
<ul>
    <li>
        What are the goals that the actor will attempt to accomplish with the system?
    </li>
    <li>
        What are the primary tasks that the actor wants the system to perform?
    </li>
    <li>
        Will the actor create, store, change, remove, or read data in the system?
    </li>
    <li>
        Will the actor need to inform the system about sudden external changes?
    </li>
    <li>
        Does the actor need to be informed about certain occurrences, such as unavailability of a network resource,&nbsp;in
        the system?
    </li>
    <li>
        Will the actor perform a system startup or shutdown?
    </li>
</ul>
<p>
    Understanding how&nbsp;the target&nbsp;organization works and how this information system might be incorporated into
    existing operations gives an idea of system's surroundings. That information may reveal other use case candidates.
</p>
<p>
    Give a unique name and brief description that clearly describe the goals for each use case. If the candidate use case
    does not have goals, ask yourself why it exists, and then either identify a goal or eliminate the use case.
</p>
<p>
    Without going into details, write a first draft of the flow of events of the use cases identified as being of high
    priority. Initially, write a simple step-by-step description of the basic flow of the use case. The step-by-step
    description is a simple ordered list of interactions between the actor and the system. For example, the description of
    the basic flow of the Withdraw Cash use case of an automated teller machine (ATM) would be something like this:
</p>
<ol>
    <li>
        The&nbsp;customer inserts a bank card.
    </li>
    <li>
        The system validates the card and prompts the person to enter a personal identification number (PIN).
    </li>
    <li>
        The customer&nbsp;enters a PIN.
    </li>
    <li>
        The system validates the PIN and prompts the customer to select an action.
    </li>
    <li>
        The customer selects Withdraw Cash.
    </li>
    <li>
        The system prompts the customer to choose which account.
    </li>
    <li>
        The customer selects the checking account.
    </li>
    <li>
        The system prompts for an amount.
    </li>
    <li>
        The customer enters the amount to withdraw.
    </li>
    <li>
        The system validates the amount (assuming sufficient funds), and then issues cash and receipt.
    </li>
    <li>
        The customer takes the cash and receipt, and then retrieves the bank card.
    </li>
    <li>
        The use case ends.
    </li>
</ol>
<p>
    As you create this step-by-step description of the basic flow of events, you may discover alternative and exceptional
    flows. For example, what happens if the customer enters an invalid PIN? Record the name and a brief description of each
    alternate flow that you identified.
</p>
<h4>
    Representing relationships between actors and use cases
</h4>
<p>
    The relationship between actors and use cases should be captured, or documented&nbsp; There are several ways to do
    this. If you are using a use-case model on the project, you can create use-case diagrams to show how&nbsp;actors and
    use cases&nbsp;relate to each other.&nbsp; Refer to&nbsp;<a class="" href="./../../../openup_basic/guidances/guidelines/uc_model,_0VAUsMlgEdmt3adZL5Dmdw.html" guid="_0VAUsMlgEdmt3adZL5Dmdw">Guideline: Use-Case Model</a>&nbsp;for more information.
</p>
<p>
    If you are not using a use-case model for the project, make sure that each use case identifies the associated primary
    and secondary actors.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="detail_ucs_and_scenarios"
					briefDescription="This guideline provides help&lt;strong> &lt;/strong>on  detailing use cases and scenarios."
					id="_4BJ_YCxSEdqjsdw1QLH_6Q" orderingGuide="" suppressed="false"
					presentationName="Detail Use Cases and Scenarios"
					variabilityType="na">
					<Presentation
						name="detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q"
						briefDescription="" id="-78ko4CuOJERKJF9ZvwMUBQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-20T08:31:25"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<h4>
    Most efficient way to write use cases
</h4>
<p>
    Because use cases model requirements, they are highly dynamic by nature. The more we examine a requirement, the more we
    learn, and the more things change. To further complicate the issue, changes to one use case can lead to changes in
    others. Therefore, we want a flexible, highly efficient method for writing use cases that eliminates unnecessary work
    and rewriting.
</p>
<p>
    An iterative, breadth-first approach, in which the use case is continuously evaluated before adding detail, is an
    effective way to write use cases. This breadth-first approach involves two aspects: writing the set of use cases and
    writing individual use cases.
</p>
<p>
    <strong>Writing sets of use cases:</strong> Use cases exist in sets, and the relationships between the various use
    cases and Actors is important. As you learn more about the Actors, you also learn more about the system's boundaries
    and transactions. Likewise, as you learn more about the system's transactions, you learns more about its Actors.
    Therefore, it is more efficient to write several use cases simultaneously than to write them sequentially. This way,
    you can identify and understand the effects of the various use cases upon each other as you write them, rather than as
    afterthoughts that require rewriting or elimination of previous work.
</p>
<p>
    <strong>Writing individual use cases.</strong> Similarly, it makes sense to write each individual use case iteratively.
    Starting with the main scenario, you can then identify various alternative and error flows that the use case might
    follow, then evaluate, rearrange or eliminate them, and then add the details of the surviving scenarios.
</p>
<p>
    The level of detail that you capture depends on a number of factors. See <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/use_case_formats,_qq0GMAXkEduj_7BEUj1JfQ.html" guid="_qq0GMAXkEduj_7BEUj1JfQ">Guideline: Use Case Formats</a> for guidance on selecting the correct format for your
    use cases.
</p>
<h4>
    Detail the flow of events of the main scenario
</h4>
<p>
    As a starting point, use the step-by-step description of the main scenario that you created during <a class="elementLinkWithType" href="./../../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html" guid="_P9cMUPV_EdmdHa9MmVPgqQ">Task: Find and Outline Requirements</a>. Then, gradually add details to this scenario,
    describing <strong>what</strong> the use case does, <strong>not how</strong> to solve problems internal to the system.
</p>
<p>
    A flow of events description explores:
</p>
<ul>
    <li>
        How and when the use case starts
    </li>
    <li>
        When the use case interacts with the Actors, and what data they exchange
    </li>
    <li>
        When the use case uses data stored in the system or stores data in the system
    </li>
    <li>
        How and when the use case ends
    </li>
</ul>
<p>
    It does not describe:
</p>
<ul>
    <li>
        The GUI
    </li>
    <li>
        Technical details of hardware or software
    </li>
    <li>
        Design issues
    </li>
</ul>
<h4>
    Identify alternate flows
</h4>
<p>
    A use case consists of a number of scenarios, each representing specific instances of the use case that correspond to
    specific inputs from the Actor or to specific conditions in the environment. Each scenario describes alternate ways
    that the system provides a behavior, or it may describe failure or exception cases.
</p>
<p>
    As you detail the main scenario, identify alternate flows by asking these questions:
</p>
<ul>
    <li>
        Are there different options available, depending on input from the Actor? (for example, if the Actor enters an
        invalid PIN number while accessing an ATM)
    </li>
    <li>
        What business rules may come into play? (for instance, the Actor requests more money from the ATM than is available
        in her account)
    </li>
    <li>
        What could go wrong? (such as no network connection available when required to perform a transaction)
    </li>
</ul>
<p>
    It is best to develop these scenarios iteratively, as well. Begin by identifying them. Examine each possible scenario
    to determine whether it is relevant, that it can actually happen, and that it is distinct from other scenarios.
    Eliminate redundant or unnecessary scenarios, and then start elaborating on the more important ones.
</p>
<h4>
    Structure the use case
</h4>
<p>
    It is useful to structure the use case according to scenarios. This helps both to simplify communication and
    maintenance and to permit the use cases to be implemented iteratively.
</p>
<p>
    In addition to structuring the use cases according to scenarios, it is often useful to structure the scenarios
    themselves into sub-flows. This provides an additional level of granularity for planning work and tracking progress.
    Unless a sub-flow involves only a minor part of the complete flow of events (which can be described in the body of the
    text), it is recommended that you describe each sub-flow in a separate section to the Flow of Events section. Sub-flows
    that should be in a separate section include these examples:
</p>
<ul>
    <li>
        Sub-flows that occupy a large segment of a given flow of events.
    </li>
    <li>
        Exceptional and alternate flows of events. This helps the use case's basic flow of events to stand out more
        clearly.
    </li>
    <li>
        Any sub-flow that can be executed at several intervals in the same flow of events.
    </li>
</ul>
<p>
    For more information, see the "Flow of Events - Structure"&nbsp;section in <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html" guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a>.
</p>
<h4>
    Describe special requirements
</h4>
<p>
    You should also capture any requirements that are related to the use case, but are not taken into consideration in the
    flow of events of the use case. Such requirements are likely to be nonfunctional.
</p>
<p>
    Typically, nonfunctional requirements that refer to a specific use case are captured in the special requirements
    section of the use case. For more information, see the "Special Requirements" section in <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html" guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a>.
</p>
<p>
    If there are nonfunctional requirements that apply to more than one use case, capture these in the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html" guid="_BVh9cL-CEdqb7N6KIeDL8Q">Artifact: Supporting Requirements</a>. For more information on supporting requirements
    see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/supporting_requirements,_VXZ5wO0IEdqHTdbLTmC5IQ.html" guid="_VXZ5wO0IEdqHTdbLTmC5IQ">Concept: Supporting Requirements</a>.<br />
</p>
<h4>
    Describe preconditions and postconditions
</h4>
<p>
    A <strong>precondition</strong> on a use case explains the state that the system must be in for the use case to be able
    to start. Be careful in describing the system state. Avoid describing the detail of other, incidental activities that
    may already have taken place.
</p>
<p>
    A <strong>postcondition</strong> on a use case lists possible states that the system can be in at the end of the use
    case execution. The system must be in one of those states. A postcondition also states actions that the system performs
    at the end of the use case, regardless of what occurred in the use case.
</p>
<p>
    Neither preconditions nor postconditions should be used to create a sequence of use cases. As a general rule, there
    should never be a case where you have to first perform one use case and then another to have a meaningful flow of
    events. If that is the case, correct the problem by reviewing the use cases. For more information, see the
    "Preconditions" and "Postconditions" sections in <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html" guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a>.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
					<Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
					<Guideline>_qq0GMAXkEduj_7BEUj1JfQ</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="effective_req_reviews"
					briefDescription="This guideline discusses how to conduct reviews with relevant stakeholders to  ensure agreement, assess quality, and identify changes required."
					id="_E-dPIL-GEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
					presentationName="Effective Requirement Reviews"
					variabilityType="na">
					<Presentation
						name="achieving_concurrence,_E-dPIL-GEdqb7N6KIeDL8Q"
						briefDescription="" id="-pNA0DbSdSoUqnjQIiOeHcQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-22T03:09:40"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    The cost of correcting errors increases exponentially throughout the development lifecycle <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[BOE88]</a>. Therefore, it is important to discover problems early enough to solve them
    quickly and inexpensively.
</p>
<p>
    Requirements reviews are intended to discover problems with the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html" guid="_0Wh-sMlgEdmt3adZL5Dmdw">Requirements</a>&nbsp;before you spend significant time and work in implementing the
    wrong thing. This is not to say that you must have a complete set of requirements before implementation, but be sure to
    review, internally and with stakeholders, those that are selected for implementation in the early iterations and those
    that will have a broad impact on the system (often called <a class="elementLink" href="./../../../openup_basic/guidances/concepts/architecturally_significant_requirements,_HrZGIA4MEduibvKwrGxWxA.html" guid="_HrZGIA4MEduibvKwrGxWxA">Architecturally Significant Requirements</a>) to ensure everyone's concurrence before
    investing significant effort in implementation.
</p>
<h4>
    Informal reviews
</h4>
<p>
    Requirements reviews can be informal, such as simply showing draft requirements to your colleagues or demonstrating a
    prototype.
</p>
<p>
    These informal reviews are excellent for getting the structure of the requirements correct and removing obvious
    mistakes. By keeping the review team small, it is easier to make rapid progress. However, informal reviews can miss
    important perspectives&nbsp;of&nbsp;critical stakeholders.
</p>
<h4>
    Formal reviews
</h4>
<p>
    Requirement reviews can be formal meetings. Start with careful preparation, so that you receive and organize comments
    before the meeting. The meeting itself should produce decisions on all review items. After the meeting, you must pursue
    the review actions to completion. If these actions involve a substantial amount of work or require a change to an
    artifact that is under configuration control, consider submitting <a class="elementLink" href="./../../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html" guid="_6jdvECb3Edqh1LYUOGRh2A">Change Requests</a> to prioritize and track the work. See&nbsp;<a class="elementLinkWithType" href="./../../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html" guid="_0mwzEclgEdmt3adZL5Dmdw">Task: Request Change</a>&nbsp;and the associated&nbsp;<a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/change_requests,_fnZj0NVXEdqy9sbRhejO5Q.html" guid="_fnZj0NVXEdqy9sbRhejO5Q">Guideline: Change Requests</a>&nbsp;for more information on change requests.
</p>
<p>
    Formal reviews are more wide-ranging and expensive. They provide for more balanced reviews from multiple
    perspectives.&nbsp; However, formal reviews involve more people, which makes them more difficult to coordinate (thus
    the need for formality) and expensive in terms of work hours.
</p>
<h4>
    Two-tier reviews
</h4>
<p>
    One technique to get the best of both worlds is to use staged, or "two-tier", reviews&nbsp;<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[ADO03]</a>. The&nbsp;first tier is informal and performed by a smaller team, possibly
    many times. The second&nbsp;tier is more formal and performed by the complete group, perhaps only once.
</p>
<p>
    <strong>First-tier review:</strong> The authors of the requirements and the development team&nbsp;review the
    requirements during the first-tier reviews to ensure that they are&nbsp;unambiguous, complete&nbsp;and
    consistent.&nbsp; It is important to include testers and developers to ensure that the requirements are verifiable and
    feasible.&nbsp;These reviews&nbsp;determine whether the requirements are ready for the larger community to
    review.&nbsp; First-tier reviews may be informal, formal, or a combination of the two.
</p>
<p>
    <strong>Second-tier review:</strong> Involve the larger group during the higher-tier review to get more minds working
    on the problem and to achieve concurrence that the requirements are suitable for implementation and validation.&nbsp;
    It is best to have one formal requirement review at the Lifecycle Objective (LCO) milestone and, optionally, one at the
    Lifecycle Architecture (LCA) milestone if significant changes have occurred that introduce unacceptable risk.
</p>
<p>
    At both stages, these two resources will be helpful: <a class="elementLinkWithType" href="./../../../openup_basic/guidances/checklists/good_requirements,_jxn9EO0HEdqHTdbLTmC5IQ.html" guid="_jxn9EO0HEdqHTdbLTmC5IQ">Checklist: Qualities of Good Requirements</a>&nbsp;and <a class="elementLinkWithType" href="./../../../openup_basic/guidances/checklists/use_case,_0kNwINk1Edq2Q8qZoWbvGA.html" guid="_0kNwINk1Edq2Q8qZoWbvGA">Checklist: Use Case</a>
</p>
<p>
    Tiered reviews offer several benefits:
</p>
<ol>
    <li>
        Eliminate the noise caused by minor edits during the first-tier reviews, allowing subsequent reviews to focus on
        functionality
    </li>
    <li>
        Provide a professional look to the requirements, presenting both the requirements and their authors in the best
        possible light
    </li>
    <li>
        Safeguard the time of stakeholders who are reviewing the requirements, thus preventing "review burnout", or
        diminished effectiveness from overload and stress
    </li>
    <li>
        Provide the best opportunity for full, effective reviews.
    </li>
</ol>
<h4>
    Golden rules of reviewing
</h4>
<p>
    Follow these golden&nbsp;rules of reviewing <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a>:
</p>
<ol>
    <li>
        <strong>Encourage criticism:</strong> Remember that people are improving the requirements, not criticizing you.
        Even the harshest criticism often contains a grain of truth. Adopt the attitude that every suggestion is a gift.
    </li>
    <li>
        <strong>Choose your best reviewers:</strong> A few specific people make the best reviewers, time and again.
        Cultivate them.
    </li>
    <li>
        <strong>Allow adequate time:</strong> It's not over until you have agreed upon and made the corrections.<br />
        &nbsp;
    </li>
</ol>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="supporting_requirements"
					briefDescription="This guideline explains how to develop and use the supporting requirements specification."
					id="_wr24gNcGEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false"
					presentationName="Supporting Requirements" variabilityType="na">
					<Presentation
						name="supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q"
						briefDescription="" id="-BdYFG4-dbPBGFzF9z6KGPA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-27T08:49:36"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    There is a finite set of requirements to consider when it comes to gathering system-wide requirements, qualities, or
    constraints. Many of them are unfamiliar to stakeholders; therefore, they may find it difficult to answer questions
    related to topics such as availability, performance, scalability, or localization. You can use this guideline and the
    associated checklist <a class="elementLinkWithType" href="./../../../openup_basic/guidances/checklists/supporting_requirements,_Vael8CGMEdu3VKXZx45D3A.html" guid="_Vael8CGMEdu3VKXZx45D3A">Checklist: Supporting Requirements</a>&nbsp;when speaking to stakeholders to ensure that
    all topics are discussed. Make sure that stakeholders understand the costs of their selections and do not end up
    wanting everything that is on the list.
</p>
<h3>
    Functionality
</h3>
<ul>
    <li>
        <p>
            <strong>Auditing:</strong> Is there a need to track who used the system and when they used it? State
            requirements for providing audit trails when running the system.
        </p>
    </li>
    <li>
        <p>
            <strong>Authentication:</strong> Will access to the system be controlled? State requirements for
            authentication.
        </p>
    </li>
    <li>
        <p>
            <strong>Licensing:</strong> Will the system or parts of the system be licensed? If open-source software has
            been used in the system, have all open-source agreements been respected? State requirements for acquiring,
            installing, tracking, and monitoring licenses.
        </p>
    </li>
    <li>
        <p>
            <strong>Printing:</strong> Will printing capability be required? State requirements for printing.
        </p>
    </li>
    <li>
        <p>
            <strong>Reporting:</strong> Is reporting capability required? State requirements for reporting.
        </p>
    </li>
    <li>
        <p>
            <strong>Scheduling:</strong> Will certain system actions need to be scheduled? State requirements for
            scheduling capability.
        </p>
    </li>
    <li>
        <p>
            <strong>Security:</strong> Will elements of the system or system data need to be secure? State requirements to
            protect access to certain resources or information.
        </p>
    </li>
</ul>
<h3>
    Usability
</h3>
<p>
    Usability requirements are critical to the success of any system. Unfortunately, usability requirements are often the
    most poorly specified requirements. Consider this common requirement: The system shall be easy to use. This doesn't
    help much, because it cannot be verified.
</p>
<p>
    While capturing usability requirements, it is a good idea to identify issues and concerns first, and then refine these
    into verifiable requirements later (see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/writing_good_requirements,_6jXzYNcKEdqz_d2XWoVt6Q.html" guid="_6jXzYNcKEdqz_d2XWoVt6Q">Guideline: Writing Good Requirements</a>). According to a traditional definition,
    usability consists of five factors:
</p>
<ul>
    <li>
        <p>
            <strong>Ease of learning:</strong> A user with a specified level of experience must be able to learn how to use
            the system in a specified amount of time.
        </p>
    </li>
    <li>
        <p>
            <strong>Task efficiency:</strong> A user should be able to complete a specified task in a specified time (or
            number of mouse clicks).
        </p>
    </li>
    <li>
        <p>
            <strong>Ease of remembering:</strong> A user should be able to remember how to accomplish specified tasks after
            not using the system for a specified period of time.
        </p>
    </li>
    <li>
        <p>
            <strong>Understandability:</strong> A user must be able to understand system prompts and messages and what the
            system does.
        </p>
    </li>
    <li>
        <p>
            <strong>Subjective satisfaction:</strong> A specified percentage of the user community must express
            satisfaction with using the system.
        </p>
    </li>
</ul>
<p>
    You may want to use the following method to identify and specify usability requirements:
</p>
<div style="MARGIN-LEFT: 2em">
    <ol>
        <li>
            Identify the key usability issues by looking at critical tasks, user profiles, system goals, and previous
            usability problems.
        </li>
        <li>
            Choose the appropriate style to express the requirements: 
            <ul>
                <li>
                    <strong>Performance style:</strong> Specify how fast users can learn various tasks and how fast they
                    can perform the tasks after training.
                </li>
                <li>
                    <strong>Defect style:</strong> Rather than measuring task times, identify usability defects and
                    specifies how frequently they may occur.
                </li>
                <li>
                    <strong>Guideline style:</strong> Specify the general appearance and response time of the user
                    interface by reference to an accepted and well-defined standard
                </li>
            </ul>
        </li>
        <li>
            Write the actual requirements, including performance criteria (see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/writing_good_requirements,_6jXzYNcKEdqz_d2XWoVt6Q.html" guid="_6jXzYNcKEdqz_d2XWoVt6Q">Guideline: Writing Good Requirements</a>&nbsp;for more information).
        </li>
    </ol>
</div>
<h3>
    Reliability
</h3>
<p>
    Reliability includes the system's ability to continue running under stress and adverse conditions. In the case of an
    application, reliability relates to the amount of time that the software is available and running as opposed to time
    unavailable. Specify reliability acceptance levels, as well as how they will be measured and evaluated. Describe
    reliability criteria in measurable terms. This is usually expressed as the allowable time between failures or the total
    allowable failure rate. Other important reliability considerations include:
</p>
<ul>
    <li>
        <p>
            <strong>Accuracy:</strong> Specify requirements for the precision (resolution) and the accuracy (by some known
            standard) that is required in any calculation performed or in system output.
        </p>
    </li>
    <li>
        <p>
            <strong>Availability:</strong> Specify requirements for the percentage of time the system is available for use,
            hours of use, maintenance access, and degraded-mode operations. Availability is typically specified in terms of
            the Mean Time Between Failures (MTBF).
        </p>
    </li>
    <li>
        <p>
            <strong>Recoverability:</strong> Specify requirements for recovery from failure. This is typically specified in
            terms of the Mean Time to Repair (MTTR).
        </p>
    </li>
    <li>
        <p>
            <strong>Frequency and severity of failures:</strong> Specify the maximum defect rate (typically expressed as
            defects/KSLOC or defects/function-point) and severity of failures. Severity&nbsp;may be categorized in terms of
            <strong>minor</strong>, <strong>significant</strong>, and <strong>critical</strong> defects. The requirements
            must define each of these terms unambiguously. For example, a <strong>critical</strong> defect could be defined
            as one that results in loss of data or complete inability to use certain functionality of the system.
        </p>
    </li>
</ul>
<h3>
    Performance
</h3>
<ul>
    <li>
        <p>
            <strong>Response times:</strong> Specify the amount of time available for the system to complete specified
            tasks and transactions (average, maximum). Use units of measurement. <em>Examples:</em>
        </p>
        <ul>
            <li>
                Any interface between a user and the system shall have a maximum response time of 2 seconds.
            </li>
            <li>
                The product shall download the new status parameters within 5 minutes of a change.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Throughput:</strong> Specify the capacity of the system to support a given flow of information (for
        example, transactions per second).<br />
    </li>
    <li>
        <strong>Capacity:</strong> Specify on the volumes that the product must be able to deal with and the numbers of
        data stored by the product. Make sure that the requirement description is quantified, and thus can be tested. Use
        unit of measurement such as: the number of customers or transactions the system can accommodate, resource usage
        (memory, disk, . . . ) or degradation modes (what is the acceptable mode of operation when the system has been
        degraded in some manner) <em>Examples:</em> 
        <ul>
            <li>
                The product shall cater for 300 simultaneous users within the period from 9:00 AM to 11 AM.
            </li>
            <li>
                Maximum loading at other periods will be 150.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Start-up:</strong> The time for the system to start up.<br />
    </li>
    <li>
        <strong>Shut-down:</strong> The time for the system to shut down.
    </li>
</ul>
<h3>
    Supportability
</h3>
<ul>
    <li>
        <p>
            <strong>Adaptability:</strong> Are there any special requirements regarding adaptation of the software
            (including upgrading)? List requirements for the ease with which the system is adapted to new environments.
        </p>
    </li>
    <li>
        <p>
            <strong>Compatibility:</strong> Are there any requirements regarding this system and its compatibility with
            previous versions of this system or legacy systems that provide the same capability?
        </p>
    </li>
    <li>
        <p>
            <strong>Configurability:</strong> Will the product be configured after it has been deployed? In what way will
            the system be configured?
        </p>
    </li>
    <li>
        <p>
            <strong>Installation:</strong> State any special requirements regarding system installation
        </p>
    </li>
    <li>
        <strong>Level of Support:</strong> What is the level of support that the product requires? This is often done using
        a Help desk. If there are to be people who provide support for the product, is that support considered part of what
        you are providing to the customer? Are there any requirements for that support? You might also build support into
        the product itself, in which case this is the place to write those requirements. Consider the level of support that
        you anticipate providing and what forms it might take.<br />
    </li>
    <li>
        <strong>Maintainability:</strong> Are there any special requirements regarding system maintenance? What are the
        requirements for the intended release cycle for the product and the form that the release will take? Quantify the
        time necessary to make specified changes to the product. There may also be special requirements for
        maintainability, such as&nbsp;a requirement that&nbsp;the product must be able to be maintained by its end-users or
        developers who are not your development team. This has an effect on the way that the product is developed, and
        there may be additional requirements for documentation or training. Describe the type of maintenance and the amount
        of effort required. <em>Examples:</em><br />
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            <li>
                A new weather station must be able to be added to the system overnight.
            </li>
            <li>
                The maintenance releases will be offered to end-users once a year.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Scalability:</strong> What volumes of users and data will the system support? This specifies the expected
        increases in size that the product must be able to handle As businesses grow (or are expected to grow), the
        software products must increase their capacities to cope with the new volumes. This may be expressed as a profile
        over time.<br />
    </li>
    <li>
        <strong>Testability:</strong> Are there any special requirements regarding the testability of the system?
    </li>
</ul>
<h3>
    Constraints (+)
</h3>
<ul>
    <li>
        <p>
            <strong>Design constraints:</strong> Are there any design decisions that have been mandated that the product
            must adhered to?
        </p>
    </li>
    <li>
        <p>
            <strong>Third-party components:</strong> Specify any mandated legacy, COTS, or open-source components to be
            used with the system.
        </p>
    </li>
    <li>
        <p>
            <strong>Implementation languages:</strong> Specify requirements on the implementation languages to be used
        </p>
    </li>
    <li>
        <p>
            <strong>Platform support:</strong> Specify requirements on the platforms that the system will support
        </p>
    </li>
    <li>
        <p>
            <strong>Resource limits:</strong> Specify requirements on the use of system resources, such as memory and hard
            disk space
        </p>
    </li>
    <li>
        <p>
            <strong>Physical Constraints:</strong> Specify requirements on the shape, size, and weight of the resulting
            hardware to house the system
        </p>
    </li>
</ul>
<h3>
    Interface Requirements (+)
</h3>
<p>
    Describe both the user interface and interfaces with external systems.
</p>
<h4>
    User interface
</h4>
<p>
    Describe requirements related to user interfaces that are to be implemented by the software. The intention of this
    section is to state the requirements, but not to describe the user interface itself, because interface design may
    overlap the requirements-gathering process. This is particularly true if you are using prototyping as part of your
    requirements gathering process. As you develop prototypes, it is important to capture the requirements that relate to
    the look and feel of the user interface. In other words, be sure that you understand your client’s intentions for the
    product’s look and feel. Record these as requirements, rather than merely using a prototype for approval.
</p>
<ul>
    <li>
        <p>
            <strong>Look and feel:</strong> A description of the aesthetic appearance and layout of the interface. Your
            client may have given you particular demands, such as style, colors, degree of interaction, and so on. This
            section captures the requirements for the interface, rather than the design for the interface. The motivation
            is to capture the expectations, the constraints, and the client’s demands for the interface before designing
            it. <em>Examples:</em>
        </p>
        <ul>
            <li>
                The product shall have the same layout as the district maps from the engineering department.
            </li>
            <li>
                The product shall use the company color.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Layout and navigation requirements:</strong> Specify requirements on major screen areas and how they should
        be grouped together.<br />
    </li>
    <li>
        <strong>Consistency:</strong> Consistency in the user interface enables users to predict what will happen. This
        section states requirements on the use of mechanisms to be employed in the user interface. This applies both within
        the system, and with other systems and can be applied at different levels: navigation controls, screen areas sizes
        and shapes, placements for entering / presenting data, terminology<br />
    </li>
    <li>
        <strong>User personalization and customization requirements:</strong> Requirements on content that should
        automatically displayed to users or available based on user attributes. Sometimes users allowed to customize the
        content displayed or to personalize displayed content.
    </li>
</ul>
<h4>
    Interfaces to external systems or devices
</h4>
<ul>
    <li>
        <p>
            <strong>Software interfaces:</strong> Are there any external systems with which this system must interface? Are
            there any constraints on the nature of the interface between this system and any external system, such as the
            format of data passed between these systems? Do they use any particular protocol? Describe software interfaces
            with other components. These may be purchased components, components reused from another application, or
            components being developed for subsystems outside of the scope of the system under consideration, but with
            which this it must interact. For each system, consider both provided and required interfaces.
        </p>
    </li>
    <li>
        <p>
            <strong>Hardware interfaces:</strong> Define any hardware interfaces that are to be supported by the software,
            including logical structure, physical addresses, expected behavior, and so on.
        </p>
    </li>
    <li>
        <p>
            <strong>Communications interfaces:</strong> Describe any communications interfaces to other systems or devices,
            such as local area networks (LANs), remote serial devices, and so on.
        </p>
    </li>
</ul>
<h3>
    Business Rules (+)
</h3>
<p>
    Besides technical requirements, also consider the particular business domain in which the system needs to fit.
</p>
<p>
    Business rules or policies that the system must conform to may constrain system functionality. Business rules are
    referred to by system use cases and can be in the form of decision tables, computation rules, decision trees,
    algorithms, and so forth. Describing the rules in the flows of the use cases usually clutters the use-case
    specifications. Therefore, they are normally captured in separate artifacts or as annexes related to the use-case
    specifications. In many cases, a business rule applies to more then one use case. Shared business rules should be
    stored in a single repository, such as a supporting requirements document.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:TermDefinition"
					name="requirement" briefDescription="" id="_feKVQLULEdqI644ssJaKYg"
					orderingGuide="" suppressed="false" presentationName="Requirement"
					variabilityType="na">
					<Presentation
						name="new_term_definition,_feKVQLULEdqI644ssJaKYg"
						briefDescription="" id="-0sCBiohjw_wBDKk0WEeDJQ" orderingGuide=""
						suppressed="false" authors="Chris Sibbald"
						changeDate="2006-09-21T04:42:59"
						changeDescription="Added term definition for &quot;requirement&quot;."
						version="0.2">
						<MainDescription><![CDATA[<p>
    A formal statement of: (1) An attribute to be possessed by the product or a function to be performed by the product.
    (2) the performance standard for the attribute or function. (3) the measuring process to be used in verifying that the
    standard has been met. <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[ICS03]</a>
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="writing_good_requirements"
					briefDescription="This guideline describes ways of writing good requirements."
					id="_6jXzYNcKEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false"
					presentationName="Writing Good Requirements"
					variabilityType="na">
					<Presentation
						name="new_guideline,_6jXzYNcKEdqz_d2XWoVt6Q" briefDescription=""
						id="-AJQLv2ldVv5KN9eUbdQe_g" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-05-02T12:33:21" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<P>To write a good requirement, 
  you must write it<strong> </strong>as a complete sentence, with a subject 
  and a predicate (usually a verb). The subject&nbsp;is 
  an Actor, a stakeholder, the system under development, or a design entity that 
  is related to the requirement. The predicate specifies a condition, action, 
  or intended result that is done for, by, with, or to the subject.</P>
<P>Consistent use of the verb <strong>to be </strong>solidifies 
  the link between the subject and the predicate.<strong> 
  </strong>Thus, you can analyze a requirement from 
  a grammatical point of view. </P>
<P>Beware of lists, bullets, and words such as <strong>all</strong>, <strong>every</strong>. 
  and <strong>some</strong>.  For example:<strong> </strong></P>
<blockquote> 
  <p>The order entry clerk must<strong> </strong>be 
    able to complete 10 customer orders in less than two hours.</p>
</blockquote>
<P>This requirement has a subject (the order entry clerk, who<strong> 
  </strong>is an Actor), a specific and measurable 
   end state (10 customer orders completed), and a performance criterion 
  (in less than two hours).</P>
<P>Follow these simple guidelines<strong> </strong> 
  in writing any requirement. For consistency, these examples 
  are all in the context of an aircraft. [[WAS: is used throughout.]] <a class=elementlinkwithusertext href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a> 
</P>
<ul>
  <li>Define one requirement at a time. 
    <blockquote> 
      <p>The pilot shall be able to control the aircraft's angle of climb with 
        one hand.</p>
    </blockquote>
  </li>
</ul>
<blockquote> 
  <blockquote> 
    <p> The pilot shall be able to feel the angle of climb from the climb control.</p>
  </blockquote>
</blockquote>
<ul>
  <li>Avoid conjunctions (and, or) that make multiple requirements. </li>
</ul>
<blockquote> 
  <blockquote> 
    <p>The navigator shall be able to view the aircraft's position relative to 
      the route's radio beacons. </p>
    <p>The navigator shall be able to view the aircraft's position as 
      estimated by inertial guidance.</p>
  </blockquote>
</blockquote>
<ul>
  <li>Avoid let-out clauses or words that imply options 
    or exceptions (unless, except, if necessary, but). </li>
  <blockquote> 
    <p>The design  shall provide a rear-facing seat 
      for each cabin crew member.</p>
  </blockquote>
  <li>Use simple, direct sentences. </li>
</ul>
<ul>
  <blockquote> 
    <p>The pilot shall be able to see<strong> </strong>the 
      airspeed indicator.</p>
  </blockquote>
  <li>Use a limited (500-word) vocabulary, especially if your audience is international. 
    <blockquote> 
      <p>The airline shall be able to convert the 
        aircraft from business to holiday charter use in less than 12 hours </p>
    </blockquote>
  </li>
  <blockquote> 
    <p><strong>Note: </strong>There is no need to use words such 
      as <strong> reconfigured. </strong></p>
  </blockquote>
  <li>Identify the type of user who needs each requirement. 
  </li>
</ul>
<ul>
  <blockquote> 
    <p>The navigator shall be able to...</p>
  </blockquote>
  <li>Focus on stating what result you will provide<strong> 
    </strong> for that type of user. </li>
</ul>
<ul>
  <blockquote> 
    <p>...view storm clouds by radar...</p>
  </blockquote>
  <li>Define verifiable criteria 
    <blockquote> 
      <p> ...at least 100 miles ahead.</p>
    </blockquote>
  </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Checklist" name="use_case"
					briefDescription="This checklist provides questions to verify that use cases are described in a consistent and complete manner."
					id="_0kNwINk1Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false"
					presentationName="Use Case" variabilityType="replaces">
					<Presentation
						name="use_case,_0Vk8cMlgEdmt3adZL5Dmdw" briefDescription=""
						id="-T2IeqdOunweffIDgL-aM0w" orderingGuide="" suppressed="false"
						authors="Paul Bramble" changeDate="2006-05-01T07:13:56"
						changeDescription="" version="0.1">
						<Copyright>_uuunoPsDEdmyhNQr5STrZQ</Copyright>
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="General" briefDescription=""
							id="_663wMNk1Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Is the Use Case associated
								with one or more goals?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is the Use Case
								associated with one or more actors?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is the
								intiating actor identified?&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Name" briefDescription=""
							id="__xHtcNk1Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Does the Use Case have a
								name?&#xD; &lt;/p>&#xD; &lt;p>&#xD; Is
								the name a verb + noun phrase (for
								example, Withdraw Cash)?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Does the name
								accurately describe the purpose of the
								Use Case?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Is the name &quot;actor
								independent&quot;?&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Pre-Conditions"
							briefDescription="" id="_Qys_INk2Edq2Q8qZoWbvGA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Does each pre-condition
								represent a tangible action by the
								system (for example, the Withdraw Cash
								use case for an&#xD; automated teller
								machine has a precondition that the user
								has an account)?&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Post-Conditions"
							briefDescription="" id="_dnLXMNk2Edq2Q8qZoWbvGA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; If &quot;Minimal
								Guarantees&quot; are present, do they
								always happen when the use case
								completes, regardless of success?
								(A&#xD; Minimal Guarantee
								represents&amp;nbsp;a
								condition&amp;nbsp;that will be true
								when the use case ends, regardless of
								how it&#xD; terminates.)&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; If
								&quot;Success Guarantees&quot; are
								present, do they always happen when the
								use case completes successfully? (A
								Success&#xD; Guarantee represents a
								condition that will be true when the use
								case ends successfully, regardless of
								which path it&#xD; takes.)&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Basic Flow" briefDescription=""
							id="_q3qV0Nk2Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Is the triggering event
								clearly described?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does the flow have a
								definite ending?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does&amp;nbsp;each step in
								the scenario contain&amp;nbsp;the same
								level of abstraction?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each scenario contain a
								reasonable number of steps?&amp;nbsp; If
								it contains less than three, or more
								than nine,&#xD; investigate whether the
								level of detail is correct or if the use
								case is a candidate for
								refactoring.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each step in the
								scenario describe something that can
								actually happen and that the system can
								reasonably detect?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each step
								make&amp;nbsp;progress towards the
								goal?&#xD; &lt;/p>&#xD; &lt;p>&#xD; Does
								each step describe how the step helps
								the actor achieve their goal?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is each step
								technology independent? Is it free of
								technical details, and design
								decisions?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Are the steps correctly numbered?&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Alternative Flow"
							briefDescription="" id="_Yk8W8Nk3Edq2Q8qZoWbvGA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Does&amp;nbsp;each step in
								the scenario contain&amp;nbsp;the same
								level of abstraction?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each scenario contain a
								reasonable number of steps?&amp;nbsp; If
								it contains less than three, or more
								than nine,&#xD; investigate whether the
								level of detail is correct or if the use
								case is a candidate for
								refactoring.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each step in the
								scenario describe something that can
								actually happen and that the system can
								reasonably detect?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each step
								make&amp;nbsp;progress towards the
								goal?&#xD; &lt;/p>&#xD; &lt;p>&#xD; Does
								each step describe how the step helps
								the actor achieve their goal?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is each step
								technology independent? Is it free of
								technical details, design decisions and
								GUI details?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Are the steps correctly
								numbered?&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Error Flow" briefDescription=""
							id="_tc_j4Nk3Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Does&amp;nbsp;each step in
								the scenario contain&amp;nbsp;the same
								level of abstraction?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each scenario contain a
								reasonable number of steps?&amp;nbsp; If
								it contains less than three, or more
								than nine,&#xD; investigate whether the
								level of detail is correct or if the use
								case is a candidate for
								refactoring.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each step in the
								scenario describe something that can
								actually happen and that the system can
								reasonably detect?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does each step
								make&amp;nbsp;progress towards the
								goal?&#xD; &lt;/p>&#xD; &lt;p>&#xD; Does
								each step describe how the step helps
								the actor achieve their goal?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is each step
								technology independent? Is it free of
								technical details, design decisions and
								GUI details?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Are the steps correctly
								numbered?&#xD; &lt;/p>
							</Description>
						</Section>
					</Presentation>
					<Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="requirement_pitfalls"
					briefDescription="This guideline describes common pitfalls to avoid in defining and writing requirements. In some cases these are the inverse of the guidelines for writing good requirements, however, by showing examples of what NOT to do makes the explanation of what TO DO clearer."
					id="_1AOsMO0JEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
					presentationName="Requirement Pitfalls" variabilityType="na">
					<Presentation
						name="requirement_pitfalls_1,_1AOsMO0JEdqHTdbLTmC5IQ"
						briefDescription="" id="-Q72-dNdHnZ93aRXAB_d34A" orderingGuide=""
						suppressed="false" authors="Chris Sibbald"
						changeDate="2006-09-27T07:14:43" changeDescription=""
						version="0.2">
						<MainDescription><![CDATA[<p>
    Explanations and examples follow for each of the following common pitfalls to avoid in defining and writing
    requirements (for more information, see <a class="" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a>):
</p>
<ul>
    <li>
        Avoid ambiguity
    </li>
    <li>
        Don't make multiple requirements
    </li>
    <li>
        Never use let-out or escape words
    </li>
    <li>
        Don't ramble
    </li>
    <li>
        Resist designing the system
    </li>
    <li>
        Avoid mixing different kinds of requirements
    </li>
    <li>
        Do not speculate
    </li>
    <li>
        Do not use vague, undefined terms
    </li>
    <li>
        Do not express possibilities
    </li>
    <li>
        Avoid wishful thinking
    </li>
</ul>
<h4>
    Avoid ambiguity
</h4>
<p>
    Avoidance of ambiguity is one of the subtlest and most difficult issues in writing requirements. Try to write as
    clearly and explicitly as possible. Be specific. Remember, though, that if you carry this too far, the text becomes
    dull and unreadable, which makes it difficult for other people to review. Although this guideline emphasizes
    structured, written expression of requirements, informal text, diagrams, conversations, and phone calls are excellent
    ways of removing ambiguity.
</p>
<p>
    Some constructions (such as the use of or and unless in requirements) allow different groups of readers to understand
    different things from the same wording. Developers could use this technique deliberately, so as to postpone, until too
    late, any possibility of the customer's asking for what was truly wanted. This is dangerous and could easily backfire.
</p>
<p>
    The only approach that works is for developers to make requirements as clear as possible, and for all stakeholders to
    co-operate. In the long run, project success is in everybody's interest.
</p>
<p>
    Dangerous ambiguities can be caused by the word <strong>or</strong> and also by many more-subtle errors.
</p>
<h5>
    Example
</h5>
<p>
    <em>The same subsystem shall also be able to generate a visible or audible caution/warning signal for the attention of
    the co-pilot or navigator.</em>
</p>
<p>
    Which subsystem? Is the signal to be visible, audible, or both? Is it both caution and warning, just caution, or just
    warning? Is it for both the co-pilot and the navigator, or just one of them? If just one of them, which one and under
    what conditions?
</p>
<h4>
    Don't make multiple requirements
</h4>
<p>
    Requirements which contain conjunctions (words that join independent clauses together) are dangerous. Problems arise
    when readers try to figure out which part applies, especially if the different clauses seem to conflict, or if the
    individual parts apply separately. Multiple requirements also make verification more complex.
</p>
<p>
    Dangerous conjunctions include: and, or, but
</p>
<h5>
    Example
</h5>
<p>
    <em>The battery low warning lamp shall light up when the voltage drops below 3.6 Volts, and the current workspace or
    input data shall be saved.</em>
</p>
<p>
    Should the battery low warning lamp light up when the voltage drops and the workspace is saved? Should the battery low
    warning lamp light up and the workspace be saved when the voltage drops?
</p>
<h4>
    Never use let-out or escape words
</h4>
<p>
    Requirements that include options or exceptions are dangerous. They seem to ask for something definite, but at the last
    moment they back down and allow for other options. Problems arise when the requirements are to be tested, and someone
    has to decide what (if anything) could prove the requirement was met.
</p>
<p>
    Dangerous words that imply exceptions include: if, when, but, except, unless, although.
</p>
<h5>
    Examples
</h5>
<p>
    <em>The forward passenger doors shall open automatically when the aircraft has halted, except when the rear ramp is
    deployed.</em>
</p>
<p>
    <em>The fire alarm shall always be sounded when smoke is detected, unless the alarm is being tested or the engineer has
    suppressed the alarm.</em>
</p>
<p>
    The latter sentence is a truly dangerous requirement!
</p>
<h4>
    Don't ramble
</h4>
<p>
    Long rambling sentences, especially when combined with arcane language, references to unreachable documents, and other
    defects of writing, quickly lead to confusion and error.
</p>
<h5>
    Example
</h5>
<p>
    <em>Provided that the designated input signals from the specified devices are received in the correct order where the
    system is able to differentiate the designators, the output signal shall comply with the required framework of section
    3.1.5 to indicate the desired input state.</em>
</p>
<h4>
    Resist designing the system
</h4>
<p>
    Requirements should specify the design envelope without unnecessary constraints on a specific design. If we supply too
    much detail we start to design the system. Going too far is tempting for designers, especially when they come to their
    favorite bits.
</p>
<p>
    Danger signs include names of components, materials, software objects/procedures, and database fields.
</p>
<h5>
    Example
</h5>
<p>
    <em>The antenna shall be capable of receiving FM signals, using a copper core with nylon covering and a waterproof
    hardened rubber shield.</em>
</p>
<p>
    Specifying design rather than actual need increases the cost of systems by placing needless constraints on development
    and manufacture. Often knowing why is much better than knowing what.
</p>
<h4>
    Avoid mixing different kinds of requirements
</h4>
<p>
    The user requirements form a complete model of what users want. They need to be organized coherently to show gaps and
    overlaps. The same applies to system requirements, which form a complete functional model of the proposed system. A
    quick road to confusion is to mix up requirements for users, systems, and how the system should be designed, tested, or
    installed.
</p>
<p>
    Danger signs are any references to system, design, testing, or installation.
</p>
<h5>
    Example
</h5>
<p>
    <em>The user shall be able to view the currently selected channel number which shall be displayed in 14pt Swiss type on
    an LCD panel tested to Federal Regulation Standard 567-89 and mounted with shockproof rubber washers.</em>
</p>
<h4>
    Do not speculate
</h4>
<p>
    Requirements are part of a contract between customer and developer. There is no room for wish lists, meaning general
    terms about things that somebody probably wants.
</p>
<p>
    Danger signs include vagueness about which type of user is speaking, and generalization such as: usually, generally,
    often, normally, typically
</p>
<h5>
    Example
</h5>
<p>
    <em>Users normally require early indication of intrusion into the system.</em>
</p>
<h4>
    Do not use vague, undefined terms
</h4>
<p>
    Many words used informally to indicate system quality are too vague for use in requirements. Vague terms include, among
    others: user-friendly, versatile, flexible, approximately, as possible
</p>
<p>
    Requirements using these terms are unverifiable because there is no definite test to show whether the system has the
    indicated property.
</p>
<h5>
    Examples
</h5>
<p>
    <em>The print dialog shall be versatile and user-friendly.</em>
</p>
<p>
    <em>The OK status indicator lamp shall be illuminated as soon as possible after the system self-check is
    completed.</em>
</p>
<h4>
    Do not express possibilities
</h4>
<p>
    Suggestions that are not explicitly stated as requirements are invariably ignored by developers.
</p>
<p>
    "Possible options" are indicated with terms such as: may, might, should, ought, could, perhaps, probably
</p>
<h5>
    Example
</h5>
<p>
    <em>The reception subsystem probably ought to be powerful enough to receive a signal inside a steel-framed
    building.</em>
</p>
<h4>
    Avoid wishful thinking
</h4>
<p>
    Engineering is a real-world activity. No system or component is perfect. Wishful thinking means asking for the
    impossible.
</p>
<p>
    Wishful-thinking terms include: reliable, safe, handle all unexpected failures, please all users, run on all platforms,
    never fail, upgradeable to all future situations
</p>
<h5>
    Examples
</h5>
<p>
    <em>The gearbox shall be 100% safe in normal operation.</em>
</p>
<p>
    <em>The network shall handle all unexpected errors without crashing.</em>
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="requirement_attributes"
					briefDescription="Requirements attributes capture additional information, such as risk, planned iteration, source of requirement, about each requirement. This additional information is used to manage the project."
					id="_VQ268O0KEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
					presentationName="Requirement Attributes" variabilityType="na">
					<Presentation
						name="requirement_attributes_1,_VQ268O0KEdqHTdbLTmC5IQ"
						briefDescription="" id="-fCBrf_5JlrmuKgyrCaKGOA" orderingGuide=""
						suppressed="false" authors="Chris Sibbald"
						changeDate="2006-09-20T08:41:34" changeDescription=""
						version="0.2">
						<MainDescription><![CDATA[<p>
    Attributes are a very important source of requirements information. Just as every person has attributes (age, hair
    color, gender), each requirement has a source, a relative importance, and time it was created. Attributes do more than
    simply clarify a&nbsp;requirement.&nbsp; If created properly, they can yield significant information about the state of
    the system. Just as you can run a database query to find all men with brown hair over age 30, given our human example,
    you can run queries on the status of requirements to find&nbsp;all high-priority requirements from the customer in the
    last 30 days. <a class="" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a>
</p>
<h4>
    Examples of attributes
</h4>
<p>
    Listed below is a partial list of some common attributes and a brief description of their meaning. Some attributes are
    best described as a number, date, Boolean (true or false) or a text field for entering free format comments. Other
    attributes can be expressed as lists. For instance, priority type is a list of high, medium, and low; Weekday is a list
    which includes Monday, Tuesday, and so on.
</p>
<p>
    <em>Source</em> - Person, document or other origin of a given requirement.&nbsp; This is&nbsp;useful&nbsp;for
    determining whom to call for questions or for grouping&nbsp;requirements according to the person making the demands.
</p>
<p>
    <em>Priority</em> - Statement of relative importance of the requirement, either to the system (mandatory, critical,
    optional) or to other requirements (high, medium, low). It is good to track the mandatory or high-priority
    items&nbsp;as an indication of how well the system will meet the greatest needs or for compliance-related metrics.
</p>
<p>
    <em>Assigned to</em> - Who in the organization is responsible for making sure the requirement is met (person's name or
    organizational name).
</p>
<p>
    <em>Comments</em> - Reviewer's or writer's comments on a requirement.
</p>
<p>
    <em>Difficulty</em> - An indication of the level of effort needed or how hard it will be to implement the requirement
    (high, medium, low).
</p>
<p>
    <em>Status</em> - Degree of completeness (completed, partial, not started).
</p>
<p>
    <em>Risk</em> - Confidence measure on the likelihood of meeting (or not meeting) a requirement. Could be high, medium,
    low or the integers one through ten.
</p>
<p>
    <em>Due By</em> - Date the requirement must be provided.
</p>
<p>
    <em>Method of verification</em> - Qualification type to be used to verify that a requirement has been met: analysis,
    demonstration, inspection, test, and walkthrough.
</p>
<p>
    <em>Level of Test</em> - Describes the verification lifecycle stage at which the requirement is determined to be met:
    unit test, component, system or product.
</p>
<p>
    <em>Subsystem Allocation</em> - Name of system or subsystem a requirement is to be assigned to (for instance, flight
    control module, wing assembly, passenger cabin).
</p>
<p>
    <em>Test Number</em> - Identification of a specific test or other method of verification.
</p>
<br />
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="traceability"
					briefDescription="Traceability is a term used to describe the establishment and maintenance of relationships  between artifacts, such as a requirement and a design class or a requirement and  a test case, so that you can track the completeness of work  &lt;strong> &lt;/strong>and assess the impact of changes."
					id="_eYtQQO0KEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false"
					presentationName="Traceability" variabilityType="na">
					<Presentation
						name="traceability_1,_eYtQQO0KEdqHTdbLTmC5IQ" briefDescription=""
						id="-TksCtMgc0b4QqzwzniGvIw" orderingGuide="" suppressed="false"
						authors="Chris Sibbald" changeDate="2006-05-02T12:37:44"
						changeDescription="Added concept in accordance with Feb 23, 2006 minutes of RM SIG meeting."
						version="0.1">
						<MainDescription><![CDATA[<p align="left"> Traceability is about understanding how high-level requirements 
  (objectives, goals, aims, aspirations, expectations, needs) are transformed 
  into low-level requirements, how they are implemented, and how they are verified. 
</p>
<p>
    Using traceability can provide the following benefits <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html#HUL05"
    guid="_9ToeIB83Edqsvps02rpOOg">[HUL05]</a>:
</p>
<ul>
    
  <li> <strong>Greater confidence in meeting objectives </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> Establishing traceability engenders greater reflection on how objectives 
    are satisfied.&nbsp; Traceability permits coverage analysis to ensure that 
    everything you have done everything that you agreed to do and only what you 
    agreed to do.</p>
</blockquote>
<ul>
    
  <li> <strong>Ability to assess the impact of change </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px"> 
  <p> Traceability permits various forms of impact analysis that can be used to 
    assess the impact of a proposed change on the cost, schedule, and technical 
    aspects of the project.</p>
</blockquote>
<ul>
    
  <li><strong> Improved accountability </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> Traceability provides greater clarity about how work contributes to the 
    whole. </p>
</blockquote>
<ul>
  <li><strong> Ability to track progress </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> It is notoriously difficult to measure progress when all that you are doing 
    is creating and revising artifacts. Traceability processes allow precise measures 
    of progress, such as: Is there a design artifact for each requirement? Is 
    there a test case for each requirement?. </p>
</blockquote>
<ul>
    
  <li><strong> Ability to balance cost against benefit </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> Relating product components to the requirements allows you to compare benefits 
    to costs. </p>
</blockquote>
<br dir="ltr" />
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="use_case_formats"
					briefDescription="This guideline describes different use case formats and associated levels of detail  that you may want to use, depending upon the nature  of the project."
					id="_qq0GMAXkEduj_7BEUj1JfQ" orderingGuide="" suppressed="false"
					presentationName="Use Case Formats" variabilityType="na">
					<Presentation
						name="new_guideline,_qq0GMAXkEduj_7BEUj1JfQ" briefDescription=""
						id="-pQrBSyxJHLLodLbS4R_Zdw" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-16T04:20:15" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<h3> Use Case Formats </h3>
<p> Use cases differ from project to project and person to person. A use case 
  that works in one situation may be totally unsuited for another. Different projects 
  have different needs. (See <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[ADO04]</a> 
  for more information on use case formats.) </p>
<p>Some need rigorous documentation, including <strong>high-ceremony use cases</strong>, 
  which are formal, highly structured use cases. If the writers used a template, 
  then they filled out all or almost all of its fields for each use case. High-ceremony 
  use cases are best suited for large, extremely complex, safety-critical systems, 
  such as flight control systems, telephone switches, and so forth. They are also 
  used in development cultures that have high documentation standards. </p>
<p>Other projects may be more agile and less formal, benefiting from <strong>low-ceremony 
  use cases</strong>, which are informal, less rigidly structured use cases. If 
  the writers used a template, then they may have left many of the fields blank. 
  Low-ceremony use cases are best suited for smaller, less complex, less safety-critical 
  systems where most of the stakeholders have a strong background in the problem 
  domain. Sometimes, simple descriptions suffice, such as use case <strong>briefs</strong>. 
</p>
<p> As <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html" guid="_4BJ_YCxSEdqjsdw1QLH_6Q">Guideline: 
  Detail Use Cases and Scenarios</a> explains, it makes sense to write use cases 
  iteratively. Starting with the basic details, you can then identify the various 
  alternative and error paths that the use case might follow so that you can evaluate, 
  rearrange, or eliminate them, and then elaborate or fill in the details of the 
  courses that you intended to use. You can then write the 
  use cases in<strong> </strong> one or more of 
  the following formats, progressively, until you 
  reach the one with the level of detail required for a specific project: </p>
<ul>
  <li><a id="Actor-Goal-List" name="Actor-Goal_List"><strong>Actor-Goal list</strong></a>: 
    A format for the overview</li>
  <li> <a id="Briefs" name="Briefs"><strong>Briefs: </strong></a>A format for 
    writing summary use cases</li>
  <li> <a id="Improvisational Score" name="Improvisational Score"><strong>Improvisational 
    score: </strong></a>A format for writing less formal, low-ceremony use cases</li>
  <li> <a id="Symphonic Score" name="Symphonic Score"><strong>Symphonic score: 
    </strong></a>A format for writing more formal, high-ceremony use cases</li>
</ul>
<h4>Actor-Goal list </h4>
<p> <strong>Context: </strong>You have identified your actors and are trying to 
  identify use cases. </p>
<p> <strong>Problem:</strong> Developing a set of use cases in an ad hoc manner 
  can lead to unnecessary work, missing features, and feature creep. Weight 
  is one of the most important factors in space flight &#8212; so important that 
  the United States space agency, NASA, will not 
  allow anything on a spacecraft that isn’t absolutely critical to the flight. 
  If something literally isn’t worth its weight, then it doesn’t go. Likewise, 
  each use case adds cost to a system; therefore, you need to be sure to include 
  only those use cases that add some kind of value to your collection. </p>
<p> <strong>Forces:<em> </em></strong></p>
<ul>
  <li>
    <p><strong>Simply listing actors or listing goals is not informative enough, 
      but actors and goals together are informative.</strong> The classical approach 
      to writing use cases is to define a list of actors, then find use cases 
      for each. A variation on this theme is to itemize what the system must accomplish. 
      Yet, neither approach is adequate by itself. You need to know both who is 
      using the system and why they are using it. Otherwise, you introduce the 
      potential of either feature creep or missed features. At the least, a set 
      of use cases should describe this association. </p>
  </li>
  <li> 
    <p><strong> A quick overview of the entire project structure is sufficient 
      and necessary early in the use case development cycle.</strong> Ideally, 
      this overview should be as short as reasonably possible. It must contain 
      key information as to who requires each service and why they need it. Most 
      other information is not very useful at this stage of the project, because 
      it runs the risk of quickly becoming obsolete, as well as discouraging 
      out-of-the-box (innovative) thinking. An overview 
      helps the writers work through the entire set from a high-level view, expanding 
      some use cases, eliminating others, and combining still others into a more 
      logical grouping. </p>
  </li>
  <li> 
    <p><strong>You need to be able to expand each to a full use case on demand. 
      </strong>A <em>seedling</em><strong> </strong>use case forms the basis for 
      a full use case later in the iterative development cycle. Each seedling 
      use case needs to convey enough information so that someone, possibly other 
      than the outline writer, can easily go back and expand it into a more informative 
      use case. </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Build an Actor-Goal list, 
  which is a list of actors and their goals that 
  gives you an overview of entire project needs.<strong></strong></p>
<ul>
  <li>
    <p>Start by identifying the list of actors who will use the system, and then 
      identify at least one goal for each. Actors without goals indicate that 
      you haven’t adequately defined the system. The actor is beyond the system’s 
      scope, doesn’t belong in the system, or is part of another actor. </p>
  </li>
  <li>
    <p>Likewise, leftover goals can indicate that the system is too complex and 
      you're trying to accomplish too much, or that you haven’t adequately defined 
      all of the necessary actors. Carefully evaluate the leftovers to see if 
      you are just overlooking some detail, or whether they don’t belong in the 
      system. </p>
  </li>
  <li>
    <p>Remove unassociated actors and goals from the list. </p>
  </li>
</ul>
<p> Sometimes, this list may provide enough information to serve as use cases 
  for very small, high-communicating, low-ceremony project teams. Usually, the 
  actor goal list is the first step of identifying use cases. </p>
<h4>
    Briefs
</h4>
<p> <strong>Context: </strong>You have written an Actor-Goal list that outlines 
  your use cases. </p>
<p> <strong>Problem: </strong>Relying solely on an overview to capture the important 
  parts of a system’s behavior is dangerous, because it provides only high-level 
  information and can easily introduce ambiguity into a system. </p>
<p> <strong>Forces: </strong></p>
<ul>
  <li> 
    <p><strong>Although valuable, an Actor-Goal list does not clearly describe 
      a system.</strong> Usually, an outline doesn’t provide enough precision 
      to avoid ambiguity, which can wreak havoc on a project by leading to unnecessary 
      or erroneous development. Yet, an outline is helpful, because you still 
      want an overview that you can easily scan. Unfortunately, with the passing 
      of time or sheer volume of work, it’s too easy to forget details 
      that were obvious to you earlier.</p>
  </li>
  <li> 
    <p><strong>Iterative use case development requires creating placeholders for 
      expansion.</strong> To develop use cases iteratively, you start with sparse 
      use cases, reorganize them, and flesh them out as the system takes shape. 
      Ideally, these placeholders should be clear enough to: 1) unambiguously 
      describe their role in the system, and 2) allow someone to expand the use 
      case, even if they were not involved in writing them originally. </p>
  </li>
  <li> 
    <p><strong>Because outlines are general by nature, do not spend a lot of time, 
      energy, or money writing them. </strong>Outlines provide an inexpensive 
      method of documenting complex ideas in a manner that is easy to follow, 
      and they provide a mechanism for people outside of a project to understand 
      the high-level concepts. While it may take 
      some effort to think things through, you don’t want to waste resources describing 
      your ideas. The system is still in a state of flux at this point, and it 
      is too early to spend much time documenting its shifting details. </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Write two to four sentences per use case, capturing 
  key activities and key-extension handling. </p>
<ul>
  <li>
    <p> Expand the Actor-Goal list into<strong> briefs</strong> by writing a two- 
      to four-sentence use cases for each entry in the list. </p>
  </li>
  <li>
    <p>Briefly describe each use case’s main&nbsp;scenario and most important 
      extensions. </p>
  </li>
  <li>
    <p> Include enough information to eliminate ambiguity for at least the main&nbsp;scenario 
      of the system. </p>
  </li>
</ul>
<h4> Improvisational score</h4>
<p> <strong>Context: </strong>You are operating in well-known domains or in situations 
  where writing high-ceremony use cases would require all of your allotted development 
  time. </p>
<p> <strong>Problem:</strong> Writing formal, high-ceremony use cases when lesser 
  detail would suffice wastes time and resources. </p>
<p> Jazz is considered to be “musician’s music,” and jazz players are usually 
  highly skilled. Many jazz musicians prefer to improvise in small, highly skilled 
  teams, such as jazz quartets. To improvise effectively, the musicians must have 
  a thorough understanding of the conventions that form the given musical style, 
  including chord sequences, rhythmic patterns, and melodies. These conventions 
  provide a basic framework for the musicians to interact as a team, while still 
  allowing room for spontaneous creativity. </p>
<p> Likewise, use cases do not always need to be specified in excruciating detail. 
  A far-preferable strategy is simply to define the basic structure of what the 
  developers need to implement. The use cases act as placeholders that may be 
  elaborated later or simply improvised by the developer who implements the use 
  case. </p>
<p> <strong>Forces:</strong></p>
<ul>
  <li> 
    <p><strong>Briefs do not provide enough information. </strong>While useful, 
      use-case briefs describe only the more significant parts of behavior. Often, 
      developers need more information, especially when working in unfamiliar 
      domains or in the heart of the system, where the actor has many choices 
      to make and many paths to follow. Briefs do not describe all of the important 
      events that can happen, nor do they describe the details that go into making 
      choices along the way. </p>
  </li>
  <li> 
    <p><strong>Fully elaborated use cases can be too expensive, time consuming, 
      long to write, and boring to read. </strong>It 
      takes a lot of time and effort to write a formal, fully descriptive set 
      of use cases. Maintaining this set takes even longer. Often, a collection 
      of use cases reaches the point of diminishing returns long before it is 
      completely written, much less formalized. Readers often prefer shorter, 
      simpler use cases over long, complicated ones, because overly detailed use 
      cases can be overwhelming and, frankly speaking, quite boring. </p>
  </li>
  <li> 
    <p><strong>Many groups communicate well enough to 
      resolve ambiguities on the fly. </strong>While briefs may be insufficient, 
      stakeholders don’t always need everything to be spelled out for them. Developers 
      are usually capable of asking questions and filling out the necessary detail 
      from their own domain knowledge. Many people can work with a fair level 
      of ambiguity, and most organizations possess what is often referred to as 
      their “core competencies.” Mature organizations with strong domain knowledge 
      can survive, and even thrive, using more informal, less precise use cases. 
    </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Specify the use cases at 
  a low level of precision, allowing the developers to fill in the missing details 
  as necessary. The level of precision required depends on the background experiences 
  of the development team. Skip the less meaningful fields on the template, and 
  write the Main Scenario section as a simple paragraph. 
  Describe key-extension handling in the next paragraph 
  or two. Be prepared to resolve ambiguities and expand detail on the fly throughout 
  the project. </p>
<p> When you can rely upon open and frequent communication among the developers 
  and customer, write the use case with less detail and precision. The developers 
  can fill in the gaps by asking users or by using knowledge of the domain. However, 
  the developers need a thorough understanding of the business context to be able 
  to fill out the details themselves. Even the most knowledgeable developer will 
  still need access to the customers and users to get answers to questions and 
  clarify requirements. </p>
<p> Ideally, the project will be structured to enable effective communication 
  between the customer and the developers. Typically, this will involve having 
  a small, co-located team, with the developers having easy access to the users 
  throughout the project. The risk of misunderstanding can be resolved by frequent 
  incremental delivery if the development organization 
  has a relatively low-ceremony culture. </p>
<p> Jazz improvisation does not always work. It can become tedious and unpleasant 
  to listen to, even for the committed connoisseur. 
  For this reason, you also need feedback from the audience to determine the success 
  of the improvisations. Multi-level or two-tier reviews are critical to success 
  (see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html" guid="_E-dPIL-GEdqb7N6KIeDL8Q">Guideline: 
  Effective Requirement Reviews</a>). </p>
<p> Improvisation may not always be suitable for the organizational culture, a 
  full <strong>symphonic score</strong> may be preferable in large, high-ceremony 
  teams (see section that follows). For instance, 
  I once watched a conductor toss his baton away in disgust when a pianist improvised 
  to such an extent that the orchestra could not follow the score. If the organization 
  deems the risk of improvising to be unacceptably high, then you can specify 
  the use cases with a higher level of detail and precision. You could start with 
  a strategy of specifying low levels of detail and precision, and then adapt 
  as necessary. </p>
<h4> Symphonic score </h4>
<p> <strong>Context: </strong>Writing structure for high-ceremony situations, 
  such as when there are many developers or when development teams are geographically 
  dispersed. </p>
<p> <strong>Problem: </strong>Writing low-ceremony use cases for high-ceremony 
  situations raises the risk of miscommunication to unacceptable levels. </p>
<p> A conductor’s version of a symphonic score contains the music for the entire 
  orchestra, as well as any accompanying vocals. The parts to be performed by 
  different voices or instruments are written on a separate staff, with all of 
  the staves aligned, one above another. This score specifies each note and its 
  associated timing in precise detail, so that the orchestra can perform a symphony 
  as the composer intended. </p>
<p> As with use cases, a score tells the musician what to play, not how to play 
  it. For most symphonies, the orchestra will not be able to meet the composer, 
  so instead, they must rely upon the director to interpret the 
  score and the composer's intentions. </p>
<p> <strong>Forces: </strong></p>
<ul>
  <li> 
    <p><strong>Certain development situations and cultures require high degrees 
      of formality. </strong>Some organizations operate in a highly formal manner, 
      thus require a highly formal process. While this formality may not 
      be desirable, it is the company's way of doing business, so things need 
      to be done that way. Other organizations are highly formal because they 
      do highly complex, life-critical work, where even small failures could have 
      disastrous consequences. For instance, no one would feel comfortable flying 
      on an airliner with an off-the-shelf, one-size-fits-all flight management 
      system. </p>
  </li>
  <li> 
    <p><strong>The cost of repairing miscommunication  
      is high. </strong>It is easy to write vague, inadequate use cases full of 
      ambiguity. Use cases can be too brief and ambiguous, or contain domain-specific 
      details that may be beyond the understanding of many stakeholders. Either 
      way, they provide an opportunity for a misunderstanding that leads to an 
      incorrect implementation. The cost of correcting these mistakes depends 
      on when they are discovered. <em>Earlier</em> is cheaper than<em> later</em>, 
      especially when later means customers finding the problem in the delivered 
      product. To avoid miscommunication, aim to write use cases that are general 
      enough for all of the stakeholders to follow, yet precise enough for the 
      developers to use when building the system. </p>
  </li>
  <li> 
    <p><strong>Developers need detail for implementing steps, business rules, 
      data fields, and, especially, for handling extensions. </strong>No one has 
      developed a program that can take a set of use cases as input, and churn 
      out a completed system. Even the best-case tools seem to require human intervention 
      to flesh out details and resolve ambiguities. Similarly, developers who 
      do not understand the business context or lack domain expertise may not 
      be able to fully comprehend a product. In an ideal project, software developers 
      would have access to the domain experts to ask questions, so they could 
      fill in any areas that may have been missed (see<em> Improvisational score</em>, 
      previously). But often, they do not ask. Therefore, they misunderstand the 
      more complex or ambiguous use cases in the set. To develop a system correctly, 
      a team needs either access to domain experts or additional information that 
      describe the steps, business rules, data fields, and extension handling 
      that they are implementing. </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Specify your use cases with a high level of precision, 
  explicitly filling in all of the details in the use case template, while staying 
  technology-neutral. The level of precision required depends on the background 
  experiences of the development team. </p>
<p> Intuition may tell you that if some detail is good, then more must be better. 
  However, be careful about falling into the trap of over-specifying details. 
  It’s naive to believe that everyone who reads your use cases will be able to 
  understand them. Different people may interpret the use cases differently. Prepare 
  for this eventuality in your process, and avoid the tendency to over-specify 
  your use cases. If you try to specify a use case in too much detail, you may 
  fall into the classic analysis paralysis trap. </p>
<p> People are often tempted to address the communication problem by trying to 
  explain the business domain within the use cases. In a similar manner, they 
  include too much technical detail. Succumbing to these temptations by explaining 
  the business domain or including technical details is always a mistake, because 
  it complicates the process and obfuscates the requirements. The reader of the 
  use cases cannot distinguish the real requirements from the boring background 
  information, so will soon get distracted and lose interest. Instead, include 
  this information in an extra section. </p>
<p> If you are handing over the requirements to a development team whose members 
  are unfamiliar with the domain, then you will need an alternative strategy for 
  teaching them the domain knowledge. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:TermDefinition"
					name="feature" briefDescription="" id="_PgYREAeYEduWycDgioo5rg"
					orderingGuide="" suppressed="false" presentationName="Feature"
					variabilityType="na">
					<Presentation
						name="new_term_definition,_PgYREAeYEduWycDgioo5rg"
						briefDescription="" id="-qpBnpWqiD7gjT08LjTMbsQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-06-29T07:56:21"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[An externally observable service provided by the system that directly fulfills 
a <a class="elementLink"
href="./../../../openup_basic/guidances/termdefinitions/stakeholder_need,_WUiFcAeYEduWycDgioo5rg.html"
guid="_WUiFcAeYEduWycDgioo5rg">Stakeholder Need</a>&nbsp;.]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:TermDefinition"
					name="stakeholder_need" briefDescription=""
					id="_WUiFcAeYEduWycDgioo5rg" orderingGuide="" suppressed="false"
					presentationName="Stakeholder Need" variabilityType="na">
					<Presentation
						name="new_term_definition,_WUiFcAeYEduWycDgioo5rg"
						briefDescription="" id="-1pmL5bC27rtWB84PXAgq9Q" orderingGuide=""
						suppressed="false" authors="" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[The business or operational problem (opportunity) that must be fulfilled to justify 
purchase or use of the system.]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Checklist"
					name="supporting_requirements"
					briefDescription="This check list is used to verify that all types of supporting requirements are considered."
					id="_Vael8CGMEdu3VKXZx45D3A" orderingGuide="" suppressed="false"
					presentationName="Supporting Requirements" variabilityType="na">
					<Presentation
						name="new_checklist,_Vael8CGMEdu3VKXZx45D3A" briefDescription=""
						id="-kw2vYHKDkWv2tZrDMrBPNA" orderingGuide="" suppressed="false"
						authors="" changeDescription="" version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Functionality"
							briefDescription="" id="_kTZiACGMEdu3VKXZx45D3A" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li> Are functional
								requirements that affect multiple Use
								Cases identified? &#xD; For example, all
								Use Cases may be subject to access
								control, audit trail, &#xD; general
								responses to abnormal situations
								(overflow, communication facilities,
								&#xD; error handling and recovery ) and
								so on. &lt;/li>&#xD; &lt;li> For each of
								these requirements, are they behavioral
								and better captured &#xD; in a common
								Use Case? &lt;/li>&#xD; &lt;li> For each
								of these functions, is it clear how
								input &#xD; and shared data generate
								output and shared data? &lt;/li>&#xD;
								&lt;/ul>
							</Description>
						</Section>
						<Section name="Usability" briefDescription=""
							id="_-eJXoCGMEdu5QMD9IAHRNg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &#xD; &lt;li> Are critical
								tasks and critical usability factors
								identified for each Supporting &#xD;
								Requirement? &lt;/li>&#xD; &#xD; &lt;li>
								Are the requirements specified in a way
								that &#xD; is verifiable, including
								metrics and target values? &lt;/li>&#xD;
								&lt;li>&#xD; Do they accommodate novice
								to expert users?&#xD; &lt;/li>&#xD;
								&lt;/ul>
							</Description>
						</Section>
						<Section name="Reliability" briefDescription=""
							id="_QCbtwCGNEdubdKsr57an1g" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; Have
								reliability requirements been specified
								as measurable requirements or
								prioritized design goals?&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Is error
								checking and recovery required?&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Are undesired
								events considered and their required
								responses specified?&#xD; &lt;/li>&#xD;
								&#xD; &lt;li> Are initial or special
								states considered (such as cold starts
								or abnormal &#xD; termination)?
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Performance" briefDescription=""
							id="_e3pOgCGNEdubdKsr57an1g" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; Have the
								resource and performance margin
								requirements been stated (speed,
								response time, recovery time of
								various&#xD; software functions)?&#xD;
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Supportability"
							briefDescription="" id="_l8CeUCGNEdubdKsr57an1g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; Are there any
								requirements that will enhance the
								supportability or maintainability of the
								system being built?&#xD; &lt;/li>&#xD;
								&lt;/ul>
							</Description>
						</Section>
						<Section name="Constraints" briefDescription=""
							id="_wIttsCGNEdubdKsr57an1g" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; Are there any
								required standards in effect,
								implementation language, policies for
								database integrity, resource&#xD;
								limits, operating environment(s),
								etc.?&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Has the use of inherited design or code
								or pre-selected tools been
								specified?&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="External Interfaces"
							briefDescription="" id="_5j6c0CGNEdubdKsr57an1g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; Is it clear
								how the software interacts with people,
								the system's hardware, other hardware,
								and other software?&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Are all data elements
								crossing application boundaries
								identified?&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Business Rules"
							briefDescription="" id="_H052MCGOEdubdKsr57an1g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; Are the rules
								relevant to the use cases identified
								(data validation rules, formulas, flow
								decisions)?&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section
							name="Standards and Regulatory Compliance" briefDescription=""
							id="_NBM78CGOEdubdKsr57an1g" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; Have all
								requirements derived from existing
								standard and regulations been
								specified?&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact"
					name="rm_supporting_requirements" briefDescription=""
					id="_oclg0DRXEdudA-StyUUwnw" orderingGuide="" suppressed="false"
					presentationName=""
					variabilityBasedOnElement="_BVh9cL-CEdqb7N6KIeDL8Q"
					variabilityType="contributes">
					<Presentation xsi:type="uma:ArtifactDescription"
						name=",_oclg0DRXEdudA-StyUUwnw" briefDescription=""
						id="-SUqkkwrs1D_5YXZls-3YBg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-14T03:34:35" changeDescription=""
						version="1.0.0" externalId="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;h4>&#xD; Recommendation: Use the
							Supporting Requirements Specification
							Template&#xD; &lt;/h4>&#xD; &lt;p>&#xD;
							&lt;a class=&quot;elementLinkWithType&quot;
							href=&quot;./../../openup_basic/guidances/templates/supporting_requirements_spec,_ItYXcNa9Edqrw4BYKyYKiA.html&quot;
							guid=&quot;_ItYXcNa9Edqrw4BYKyYKiA&quot;>Template:
							Supporting Requirements
							Specification&lt;/a>&amp;nbsp;provides a
							tool to capture,&#xD; structure, and
							organize the supporting requirements.&#xD;
							&lt;/p>&#xD; &lt;p>&#xD; Even in a small
							project, a requirements management tool, a
							database, or a spreadsheet, are recommended
							for prioritizing&#xD; and managing
							requirements. If Stakeholders are
							comfortable with accessing requirements
							directly from that tool or with&#xD;
							accessing a report automatically generated
							from the tool, you will not need a separate
							document.&#xD; &lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Checklist>_Vael8CGMEdu3VKXZx45D3A</Checklist>
					<Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
					<Guideline>_wr24gNcGEdqz_d2XWoVt6Q</Guideline>
					<Template>_ItYXcNa9Edqrw4BYKyYKiA</Template>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact"
					name="rm_use_case" briefDescription="" id="_qis78DRbEduFvfVCXiK3AA"
					orderingGuide="" suppressed="false" presentationName=""
					variabilityBasedOnElement="_0VGbUMlgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<Presentation xsi:type="uma:ArtifactDescription"
						name=",_qis78DRbEduFvfVCXiK3AA" briefDescription=""
						id="-JcGDIeBIMM099mbWX5fXbA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-14T03:30:41" changeDescription=""
						version="1.0.0" externalId="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;p>&#xD; Some projects apply Use Cases
							informally to help discover requirements,
							documenting and maintaining these
							requirements&#xD; in another form such as
							user stories. How you tailor Use Cases may
							depend on project size, team experience,
							your tool&#xD; set, the customer
							relationship, and so forth. See &lt;a
							class=&quot;elementLinkWithType&quot;
							href=&quot;./../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html&quot;
							guid=&quot;_4BJ_YCxSEdqjsdw1QLH_6Q&quot;>Guideline:
							Detail Use Cases and
							Scenarios&lt;/a>&amp;nbsp;for guidance
							related to documenting&#xD; Use Cases.&#xD;
							&lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Checklist>_0kNwINk1Edq2Q8qZoWbvGA</Checklist>
					<Template>_0cpNwMlgEdmt3adZL5Dmdw</Template>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact" name="rm_vision"
					briefDescription="" id="_6OAFQDRdEduFvfVCXiK3AA" orderingGuide=""
					suppressed="false" presentationName=""
					variabilityBasedOnElement="_0WVxcMlgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<Template>_0cW54MlgEdmt3adZL5Dmdw</Template>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact" name="rm_actor"
					briefDescription="" id="_eel3kDRgEduFvfVCXiK3AA" orderingGuide=""
					suppressed="false" presentationName=""
					variabilityBasedOnElement="_0VMh8MlgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<Presentation xsi:type="uma:ArtifactDescription"
						name=",_eel3kDRgEduFvfVCXiK3AA" briefDescription=""
						id="-corBrzOMNPCwmV78f8EReA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-25T07:42:06" changeDescription=""
						version="" externalId="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							The simplest method is to capture the
							Actor's name &#xD; and a its brief
							description &lt;strong>&lt;/strong>in a
							table.&lt;strong> &#xD; Include&lt;/strong>
							a list of the Use Cases that this Actor
							initiates, as &#xD; well as the Use Cases in
							which the actor participates in a secondary
							role. &#xD; See the discussion of the
							Actor-Goal-List in &lt;a
							class=&quot;elementLinkWithType&quot;
							href=&quot;./../../openup_basic/guidances/guidelines/use_case_formats,_qq0GMAXkEduj_7BEUj1JfQ.html&quot;
							guid=&quot;_qq0GMAXkEduj_7BEUj1JfQ&quot;>Guideline:
							&#xD; Use Case Formats&lt;/a>&amp;nbsp;for
							more information on this representation
							option.
						</RepresentationOptions>
					</Presentation>
					<Guideline>_eyL0wCu-EdqSxKAVa9kmvA</Guideline>
					<Guideline>_qq0GMAXkEduj_7BEUj1JfQ</Guideline>
				</ContentElement>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ContentPackage" name="test"
				briefDescription="Portion of testing discipline that relates to Intent."
				id="_IIPZQDRjEduU7vV49F9N0A" orderingGuide="" suppressed="false"
				global="false">
				<ContentElement xsi:type="uma:Task"
					name="create_test_case"
					briefDescription="Develop the test cases and test data for the requirements to be tested."
					id="_0iwc0clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Create Test Cases" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="create_test_case,_0iwc0clgEdmt3adZL5Dmdw"
						briefDescription="" id="_NrVKsKeqEdmKDbQuyzCoqQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-07-10T08:59:13"
						changeDescription="" version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section
							name="Examine the requirements to be tested" briefDescription=""
							id="_IJFSsKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								Work with&amp;nbsp;&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Role:
								Analyst&lt;/a> to identify which
								use-case scenarios need to be tested.
								Create at least&#xD; one test case for
								each use-case scenario.&amp;nbsp; Ensure
								that the right number of use cases have
								been addressed and that edge&#xD;
								conditions have been
								considered.&amp;nbsp; For more
								information on creating test cases from
								use-case scenarios, see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/checklists/test_case,_0Zxf8MlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0Zxf8MlgEdmt3adZL5Dmdw&quot;>Checklist:
								Test Case&lt;/a>.
							</Description>
						</Section>
						<Section name="Consider Test Ideas"
							briefDescription="" id="_nWyowL6rEdqGMOikj2yydg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Review the Test-ideas
								List.&amp;nbsp; Ensure that all relevant
								test-ideas have been reviewed.&amp;nbsp;
								If you have prioritized&#xD; your list,
								begin test case creation from the
								highest priority test ideas.&amp;nbsp;
								For more information on Test Ideas,
								see&#xD; &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/test_ideas,_0jnYcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0jnYcMlgEdmt3adZL5Dmdw&quot;>Concept:
								Test Ideas&lt;/a>&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Outline the Test Case"
							briefDescription="" id="_LpbM8KuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Write the name, purpose, and
								steps for the test case.&amp;nbsp; For
								more information on the test case
								outline, see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/templates/test_case,_0dT8IMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0dT8IMlgEdmt3adZL5Dmdw&quot;>Template:
								Test Case&lt;/a>.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Identify Test Data"
							briefDescription="" id="_NK18YKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Walk through the steps of a
								test case.&amp;nbsp; Note where data
								input or output is needed to run the
								test case.&amp;nbsp; For&#xD; more
								information on test data selection,
								see&amp;nbsp;&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/checklists/test_data,_KZQJMBhBEduxCP6DVVLxsA.html&quot;
								guid=&quot;_KZQJMBhBEduxCP6DVVLxsA&quot;>Checklist:
								Test Data&lt;/a>.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Evaluate and verify your results"
							briefDescription="" id="_Ok_mMKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Ensure that:&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								The prioritized use-case scenario from
								your use case model have been used to
								generate test cases&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Each test case has an
								outline&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Sources other than use cases have been
								examined as prospective sources of test
								cases&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Test data has been identifed and ideally
								typed&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Sources of test cases have been captured
								in a test-ideas list&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;p>&#xD; For more
								information on test case creation
								verification, see see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/checklists/test_case,_0Zxf8MlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0Zxf8MlgEdmt3adZL5Dmdw&quot;>Checklist:
								Test Case&lt;/a>.&lt;br />&#xD; &lt;br
								/>&#xD; &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p>
    The purpose of this task is to:
</p>
<ul>
    <li>
        identify various sources for your test cases
    </li>
    <li>
        generate test cases from use case scenarios
    </li>
    <li>
        identify sources of test data needed to run the test case
    </li>
</ul>]]></Purpose>
					</Presentation>
					<Concept>_0jnYcMlgEdmt3adZL5Dmdw</Concept>
					<PerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0VGbUMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0ZS-0MlgEdmt3adZL5Dmdw</Output>
					<AdditionallyPerformedBy>
						_0VxJsMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0ZS-0MlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept" name="test_ideas"
					briefDescription="A list of test ideas sorted in decreasing order of importance and associated with specific testing strategies used to create executable tests."
					id="_0jnYcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Test Ideas" variabilityType="na">
					<Presentation
						name="test_ideas,_0jnYcMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_uqL2gMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-07-21T12:10:39" changeDescription=""
						version="">
						<MainDescription><![CDATA[<p>
    <strong>Test Ideas List</strong> - A list of brief statements identifying tests that are potentially useful to conduct.
</p>
<p>
    <strong>Test Ideas Catalog</strong> - A catalog of common faults and mistakes done when developing software.
</p>
<ul>
    <li>
        Test Ideas will describe any of the elements of an executable test.&nbsp;
    </li>
    <li>
        Test ideas ensure the important ideas are not forgotten and are detailed later in test cases.&nbsp;&nbsp;
    </li>
    <li>
        Test Ideas are to be captured at a less-specific level in an intermediate form.
    </li>
    <li>
        Test ideas are more reviewable and understandable then complete tests.&nbsp; Making the reasoning behind the test
        idea clearer.&nbsp;
    </li>
    <li>
        Test ideas support more powerful test, by not constraining the tester.&nbsp; Making it easier to create tests that
        validate more then just the defined requirements.
    </li>
    <li>
        Test Ideas are often based on explicit and implicit fault modules, to include but not limited to Booleans,
        boundaries and method calls.&nbsp; Test Ideas Lists will contain test ideas from many faults models derived for one
        or many work products.
    </li>
</ul>
<p>
    Creating test ideas before testing for review and inspection of design work products assists in discovering design or
    analysis errors.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
			</MethodPackage>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ContentPackage" name="solution"
			briefDescription="Solution sub-process." id="_kB42IDRiEduU7vV49F9N0A"
			orderingGuide="" suppressed="false" global="false">
			<MethodPackage xsi:type="uma:ContentPackage"
				name="architecture" briefDescription="" id="_0WuL8MlgEdmt3adZL5Dmdw"
				orderingGuide="" suppressed="false" global="false">
				<MethodPackage xsi:type="uma:ContentPackage"
					name="visual_modeling" briefDescription=""
					id="_0WuL8clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					global="false">
					<ContentElement xsi:type="uma:Concept"
						name="visual_modeling"
						briefDescription="This concept introduces the use of semantically rich graphical and textual design  notations to capture software designs."
						id="_0XY6UMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Visual Modeling" variabilityType="na">
						<Presentation
							name="visual_modeling,_0XY6UMlgEdmt3adZL5Dmdw"
							briefDescription="" id="_SB1n8MM1EdmSIPI87WLu3g" orderingGuide=""
							suppressed="false" authors="" changeDate="2006-08-21T10:43:09"
							changeDescription="" version="1.0.0">
							<MainDescription><![CDATA[<p align="center">
    <img height="229" alt="visual modelling" src="openup_basic/guidances/concepts/resources/visual.gif" width="447" />
</p>
<p align="center"> Visual modeling raises the level of abstraction </p>
<p> Visual modeling is the use of semantically rich, graphical and textual design 
  notations to capture software designs. A notation, such as UML, allows the level 
  of abstraction to be raised, while maintaining rigorous syntax and semantics. 
  In this way, it improves communication in the design team, as the design is 
  formed and reviewed, allowing the reader to reason about the design, and it 
  provides an unambiguous basis for implementation. </p>
<h3>How visual models help </h3>
<p> A model is a simplified view of a system. It shows the essentials of the system 
  from a particular perspective and hides the nonessential details. Visual models 
  help you:: </p>
<ul>
  <li> Increase understanding of complex systems </li>
  <li> Explore and compare design alternatives at a low cost </li>
  <li> Form a foundation for implementation </li>
  <li>Capture requirements precisely </li>
  <li> Communicate decisions unambiguously </li>
</ul>
<h4> Increase understanding of complex systems </h4>
<p> The importance of models increases as systems become more complex. For example, 
  you can build a doghouse without blueprints. However, as you progress to building 
  houses and then to skyscrapers, your need for blueprints becomes pronounced. 
</p>
<p> Similarly, a small application built by one person in a few days may be easily 
  understood in its entirety. However, an e&nbsp;-&nbsp;commerce system with tens 
  of thousands of source lines of code (SLOCs) or an air traffic control system 
  with hundreds of thousands of SLOCs can no longer be easily understood by one 
  person. Constructing models allows a developer to focus on the big picture, 
  understand how components interact, and identify fatal flaws.&nbsp; </p>
<p> Among the various types of models are these examples: 
</p>
<ul>
  <li> Use cases to specify behavior unambiguously </li>
  <li> Class diagrams and data model diagrams to capture design </li>
  <li> State transition diagrams to model dynamic behavior </li>
</ul>
<p> Modeling is important because it helps the team visualize, construct, and 
  document the structure and behavior of the system without getting lost in complexity. 
</p>
<h4> Explore and compare design alternatives at a low cost </h4>
<p> You can create and modify simple models inexpensively 
  to explore design alternatives. Innovative ideas can be captured and reviewed 
  by other developers before investing in costly code development. When coupled 
  with iterative development, visual modeling helps developers assess design changes 
  and communicate these changes to the entire development team. </p>
<h4> Form a foundation for implementation </h4>
<p> Today, many projects employ object-oriented programming languages to build 
  reusable, change-tolerant, and stable systems. To get 
  these benefits, it is even more important to use object technology in design. 
</p>
<p> With the support of appropriate tools, you can use a design model to generate 
  an initial code for implementation. This is referred to as <strong>forward engineering 
  </strong>or <strong>code generation</strong>. You can also enhance design models 
  to include enough information to build the system. </p>
<p> <strong>Reverse engineering </strong>may also be applied to generate design 
  models from existing implementations. You can use this method to evaluate existing 
  implementations.&nbsp;&nbsp; </p>
<p> <strong>Round-trip engineering</strong> combines both forward and reverse 
  engineering techniques to ensure consistent design and code. Combined with an 
  iterative process and the right tools, round-trip engineering allows you to 
  synchronize the design and code during each iteration. </p>
<h4> Capture requirements precisely </h4>
<p> Before building a system, it's critical to capture the requirements. Specifying 
  the requirements using a precise and unambiguous model helps to ensure that 
  all stakeholders can understand and agree on the requirements. </p>
<p> A model that separates the external behavior of the system from the implementation 
  of it helps you focus on the intended use of the system, without getting bogged 
  down in implementation details. </p>
<h4> Communicate decisions unambiguously </h4>
<p> The Unified Modeling Language (UML) is&nbsp;a consistent notation that can 
  be applied for system engineering, as well as for business engineering. According 
  to these excerpts from the UML specification, a standard notation:: </p>
<ul>
  <li>
    <p>Serves as a language for communicating decisions that are not obvious or 
      cannot be inferred from the code itself.</p>
  </li>
  <li>
    <p> Provides semantics that are rich enough to capture all important strategic 
      and tactical decisions.</p>
  </li>
  <li>
    <p> Offers a form concrete enough for humans to reason [about] and for tools 
      to manipulate.</p>
  </li>
</ul>
<p> UML represents the convergence of the best practice in software modeling throughout 
  the object-technology industry. For more information on the UML, see <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[UML05]</a>.</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Concept"
						name="using_visualizations" briefDescription=""
						id="_Jlz_YACuEdu8m4dIntu6jA" orderingGuide="" suppressed="false"
						presentationName="Using Visualizations" variabilityType="na" />
					<ContentElement xsi:type="uma:Task"
						name="ucm_analyze_arch_reqs" briefDescription=""
						id="_YdaogAI9Edu5WetVoS7Gvw" orderingGuide="" suppressed="false"
						presentationName=""
						variabilityBasedOnElement="_0f-1oMlgEdmt3adZL5Dmdw"
						variabilityType="contributes" />
					<ContentElement xsi:type="uma:Task"
						name="ucm_demonstrate_architecture" briefDescription=""
						id="_TmlnAAI-Edu5WetVoS7Gvw" orderingGuide="" suppressed="false"
						presentationName=""
						variabilityBasedOnElement="_0hmmQclgEdmt3adZL5Dmdw"
						variabilityType="contributes">
						<OptionalInput>
							_W2SgEDR5EdutE_HNDTJk5Q
						</OptionalInput>
					</ContentElement>
					<ContentElement xsi:type="uma:Artifact"
						name="vm_architecture" briefDescription=""
						id="_lRV2QEvkEduCAaECSrUMPQ" orderingGuide="" suppressed="false"
						presentationName=""
						variabilityBasedOnElement="_0XAf0MlgEdmt3adZL5Dmdw"
						variabilityType="contributes">
						<Concept>_Jlz_YACuEdu8m4dIntu6jA</Concept>
						<Concept>_0XY6UMlgEdmt3adZL5Dmdw</Concept>
					</ContentElement>
					<ContentElement xsi:type="uma:Concept"
						name="abstract_away_complexity" briefDescription=""
						id="_we3F4ACpEdu8m4dIntu6jA" orderingGuide="" suppressed="false"
						presentationName="Abstract Away Complexity"
						variabilityType="na">
						<Presentation
							name="abstract_away_complexity,_we3F4ACpEdu8m4dIntu6jA"
							briefDescription="" id="-X7QSjItNBz7w8603yBCv0Q" orderingGuide=""
							suppressed="false" authors="" changeDate="2006-09-15T08:59:10"
							changeDescription="" version="1.0.0">
							<MainDescription><![CDATA[<p>
    Software&nbsp;development is a pursuit characterized by complexity. This can take many forms, such as accommodating
    complex requirements, technology, or team dynamics. Elevating the level of abstraction helps you manage this complexity
    and make measurable progress, despite the inherent difficulty of the task.
</p>
<p>
    Suggestions for several strategies that help abstract away complexity follow.
</p>
<h4>
    Leverage patterns
</h4>
<p>
    Patterns help you take advantage of proven techniques for solving common problems. You can benefit from the experience
    of seasoned practitioners and avoid "re-inventing the wheel," as the saying goes. The use of patterns is a crucial
    aspect of an architecture-centric approach to development, because it helps reduce the novelty and diversity of a
    solution, thus improves quality.
</p>
<p>
    See <a class="elementLink" href="./../../../openup_basic/guidances/concepts/patterns,_0YJvUMlgEdmt3adZL5Dmdw.html" guid="_0YJvUMlgEdmt3adZL5Dmdw">Patterns</a>&nbsp;for more information.
</p>
<h4>
    Design the architecture with components and services
</h4>
<p>
    This strategy helps manage software complexity through&nbsp;partitioning&nbsp;a system into a set of loosely coupled
    and highly cohesive subsystems. The benefits of this approach include the ability to organize the team around a set of
    smaller, more manageable objectives, and the ability to substitute parts of the system without disturbing the overall
    cohesion of the system. Exposing services encourages re-use by making the functionality of the system easier to
    comprehend. Focusing on services makes it possible to understand what the system does from a technical perspective
    without necessarily having to understand the details of how the system works.
</p>
<p>
    See <a class="elementLink" href="./../../../openup_basic/guidances/concepts/component,_0YP18MlgEdmt3adZL5Dmdw.html" guid="_0YP18MlgEdmt3adZL5Dmdw">Component</a>&nbsp;for more information.
</p>
<h4>
    Actively promote reuse
</h4>
<p>
    Incorporating existing software into an overall architecture helps reduce cost and improve quality by reusing proven
    working software, rather than developing from scratch. It also helps reduce the burden of maintenance by eliminating
    duplication in the software. Although often difficult to manage, a project or enterprise can reap significant benefits
    from a well-executed re-use strategy.
</p>
<h4>
    Model key perspectives
</h4>
<p>
    Modeling helps raise the level of abstraction because you simplify complex ideas and represent them visually, as
    illustrations. Good models can convey information that helps the team visualize, specify, construct, and document
    software. The Unified Modeling Language (UML) provides an industry-standard approach to software modeling.
</p>
<p>
    When applying this strategy, you can use various techniques:.
</p>
<ul>
    <li>
        <strong>Identify the key perspectives:</strong> Focus on modeling the things that count. Few (if any) projects
        benefit from modeling the entire design to a great level of detail. Make sure that you understand why you are
        modeling something and who will benefit.
    </li>
    <li>
        <strong>Sketch the design:</strong> Not all models need to be detailed completely and presented in a software
        modeling tool. It is often perfectly acceptable (if not desirable) to produce hand-drawn sketches on paper or on a
        whiteboard when you are exploring and communicating the architecture and design with your team. You can use a
        digital camera or an electronic whiteboard to capture these diagrams and share them. For many small projects, this
        is often all you need. See <a  href="http://www.agilemodeling.com" >www.agilemodeling.com</a> for more information.
    </li>
    <li>
        <strong>Agree on a standard notation:</strong> In a team environment, it is important that others can understand
        your diagrams without much explanation. Choosing a standard notation enables others to quickly comprehend your
        diagrams without ambiguity. The Unified Modeling Language is an example of a widely understood notation.
    </li>
    <li>
        <strong>Visualize the code:</strong> Many software development tools allow you to view the code as models, making
        it easier to comprehend static and dynamic aspects of a complex code base.
    </li>
    <li>
        <strong>Document key architectural perspectives:</strong> Even if you choose to model very little&nbsp;of your
        design, it is often advantageous to produce diagrams that communicate the key architectural aspects of the system.
        Conveying the "big picture" to the rest of the team helps them understand the overall approach and develop cohesive
        software.
    </li>
    <li>
        <strong>Use model-driven development</strong>: This approach takes formal and complete models and applies a series
        of defined transformations, which results in the generation of working software.&nbsp;This technique&nbsp;offers a
        number of benefits, with many success stories reported. (See <a  href="http://www.omg.org/mda" >www.omg.org/mda</a>
        for more information.)
    </li>
</ul>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
					</ContentElement>
				</MethodPackage>
				<ContentElement xsi:type="uma:Concept" name="patterns"
					briefDescription="Generalized solutions that can be implemented and applied in a problem situation  (a context) and thereby eliminate one or more of the inherent problems."
					id="_0YJvUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Patterns" variabilityType="na">
					<Presentation
						name="patterns,_0YJvUMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_QvmkAMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-21T11:31:09" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<h4>
    Origins
</h4>
<p>
    The idea of patterns as it is now applied to software design comes from the work of Christopher Alexander. He has
    written widely on the subject of applying patterns to the design and construction of towns and buildings. Two of his
    books, <em>A Pattern Language</em> [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">ALE77</a>] and <em>The Timeless Way of Building</em> [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">ALE79</a>] have had the greatest impact on the software community and the adoption of
    software patterns for the design of software. His concepts of patterns and pattern language provide a model for the
    capture of software design expertise in a form that can then be reapplied in recurring situations.
</p>
<h4>
    A definition of patterns
</h4>
<p>
    Today, the most commonly used definition of software patterns is along the following lines (paraphrased):
</p>
<blockquote>
    <p>
        A pattern is a proven solution to a problem in a context.
    </p>
</blockquote>
<p>
    This definition often serves only as a starting point, however. A richer definition, based on Alexander’s work, is
    offered by Gabriel in his book, <em>A Timeless Way of Hacking</em> [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">ALU03</a>], in which each pattern is a three-part rule that expresses relationships
    among a certain context, a certain system of forces that occur repeatedly in that context, and a certain software
    configuration that allows these forces to resolve themselves.
</p>
<h4>
    Describing patterns
</h4>
<p>
    The description of patterns can take many forms, including narrative forms, such as the Portland Form. It emulates the
    format used by Alexander and the keyword format made popular by Erich Gamma and his three colleagues [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">GAM95</a>]. They have come to be known as the Gang of Four (GoF); therefore, their
    description is known as the <strong>GoF format</strong>. The GoF format uses the following keywords to describe
    object-oriented design patterns:
</p>
<ul>
    <li>
        <p>
            <strong>Pattern name and classification:</strong> Naming the pattern allows design to work at a higher level of
            abstraction, using a vocabulary of patterns. Gamma says that finding a good name is one of the hardest problems
            of developing a catalogue of patterns (see <strong>Pattern catalogues</strong> later in this section).
        </p>
    </li>
    <li>
        <p>
            <strong>Intent:</strong> An answer to questions such as: What does the pattern do? What problem does it
            address?
        </p>
    </li>
    <li>
        <p>
            <strong>Also known as:</strong> Other names for the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Motivation:</strong> A concrete scenario that illustrates a design problem and how the pattern solves
            the problem.
        </p>
    </li>
    <li>
        <p>
            <strong>Applicability:</strong> Instructions for how you can recognize situations in which patterns are
            applicable.
        </p>
    </li>
    <li>
        <p>
            <strong>Structure:</strong> A graphical representation of the classes in the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Participants:</strong> The responsibilities of the classes and objects that participate in the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Collaborations:</strong> How participants collaborate to fulfil their responsibilities.
        </p>
    </li>
    <li>
        <p>
            <strong>Consequences:</strong> The results, side effects and trade offs caused by using the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Implementation:</strong> Guidance on the implementation of the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Sample code:</strong> Code fragments that illustrate the pattern’s implementation.
        </p>
    </li>
    <li>
        <p>
            <strong>Known uses:</strong> Where to find real-world examples of the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Related patterns:</strong> Synergies, differences, and other pattern relationships.
        </p>
    </li>
</ul>
<p>
    Although the GoF format is specifically intended for object-oriented development, you can use it, with slight
    modification, to address other software patterns. A more general keyword format for software patterns based on
    Alexander’s principles uses keywords such as <em>problem</em>, <em>context</em>, <em>forces</em> and <em>solution</em>.
</p>
<h4>
    Pattern catalogs
</h4>
<p>
    To assist with the identification and selection of patterns, various classification schemes have been proposed. One of
    the early schemes, proposed by Buschmann and his associates, [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">BUS96</a>] uses three classifiers: granularity, functionality, and structured
    principles. Of those three classifiers, it is their granularity classifier that has remained popular. Granularity
    classifies patterns into three levels of abstraction:
</p>
<ul>
    <li>
        <p>
            <strong>Architectural patterns:</strong> Architectural patterns express the fundamental structure of a software
            scheme. Examples of architectural pattern include: layers, pipes and filters, and the model view controller
            pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Design patterns:</strong> Software architecture usually consists of smaller architectural units that
            are described by design patterns. The GoF pattern is an example of a design pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Idioms.</strong> An idiom is the lowest-level pattern, and it is specific to a programming language.
        </p>
    </li>
</ul>
<p>
    Buschmann and his colleagues introduced four groups for categorizing architectural patterns:
</p>
<ul>
    <li>
        Structure
    </li>
    <li>
        Distributed systems
    </li>
    <li>
        Interactive systems
    </li>
    <li>
        Adaptable systems
    </li>
</ul>
<p>
    The following table shows the categorization of their architectural patterns.
</p>
<table cellspacing="0" cellpadding="2" width="85%" summary="Categories for Architectural Patterns [BUS96]" border="1" valign="top">
    <caption>
        <strong>Categories for Architectural Patterns<br />
        </strong>
    </caption>
    <tbody>
        <tr>
            <th scope="col">
                <div align="center">
                    <strong>Category</strong>
                </div>
            </th>
            <th scope="col">
                <div align="center">
                    <strong>Pattern</strong>
                </div>
            </th>
        </tr>
        <tr>
            <td>
                Structure
            </td>
            <td>
                <p>
                    Layers<br />
                    Pipes and filters<br />
                    Blackboard
                </p>
            </td>
        </tr>
        <tr>
            <td>
                Distributed systems
            </td>
            <td>
                Broker
            </td>
        </tr>
        <tr>
            <td>
                Interactive systems
            </td>
            <td>
                Model view controller<br />
                Presentation abstraction control
            </td>
        </tr>
        <tr>
            <td>
                <p>
                    Adaptable systems
                </p>
            </td>
            <td>
                <p>
                    Reflection<br />
                    Micro kernel
                </p>
            </td>
        </tr>
    </tbody>
</table>
<p>
    For design patterns, Gamma's group categorized their design patterns by purpose, using three categories:
</p>
<ul>
    <li>
        Creational
    </li>
    <li>
        Structural
    </li>
    <li>
        Behavioral
    </li>
</ul>
<h4>
    Pattern languages
</h4>
<p>
    In addition to the concept of patterns, Alexander also gave the software community the concept of a pattern language.
    The purpose of developing a pattern language was to provide a vocabulary of design principles (patterns) that would
    allow those who work, study, or live in buildings to communicate effectively with the planners and designers of those
    buildings. Alexander explains that when using a pattern language:
</p>
<blockquote>
    <p>
        We always use it as a sequence, going through the patterns, moving always from the larger patterns to the smaller,
        always from the ones that create structure to the ones which then embellish those structures, and then to those
        that embellish the embellishments.
    </p>
</blockquote>
<p>
    In applying patterns in this way, Alexander advocated the use of generative pattern languages, ones that, given an
    initial context, would always lead to good design.&nbsp; Alexander&nbsp;states:
</p>
<blockquote>
    <p>
        Thus, as in the case of natural languages, the pattern language is generative. It not only tells us the rules of
        arrangement, but shows us how to construct arrangements — as many as we want — which satisfies the rules.
    </p>
</blockquote>
<p>
    In the application of software patterns, pattern names provide a vocabulary for the communication of software ideas.
    The sequential application of patterns finds application in software design processes, both waterfall and iterative,
    that successively apply architectural patterns, and then design patterns, and, finally, idioms to design and implement
    a software system. Software processes, however, rely on the skills of the Architect and Developer roles to guide the
    application of patterns, rather than a generative pattern language.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept" name="component"
					briefDescription="An encapsulated part of a system that is, ideally, a nontrivial, nearly independent,  and replaceable part of a system that fulfills a clear function in the context  of well-defined architecture."
					id="_0YP18MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Component" variabilityType="na">
					<Presentation
						name="component,_0YP18MlgEdmt3adZL5Dmdw" briefDescription=""
						id="_TZiasMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-21T10:34:12" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p align="left"> The software industry and literature use the term <strong>componen</strong>t 
  to refer to many different things. It is often used in the broad sense to mean 
  a constituent part. It is also frequently used in a narrow sense to denote specific 
  characteristics that enable replacement and assembly in larger systems. </p>
<p align="left"> Here. we use <em>component</em> to mean <strong>an encapsulated 
  part of a system</strong> that is, ideally, a nontrivial, nearly independent, 
  and replaceable part of a system that fulfils a clear function in the context 
  of well-defined architecture. This includes two types of components: </p>
<ul>
  <li>
    <div align="left">
      <p><strong>Design component. </strong>A significant encapsulated part of 
        the design that includes design subsystems and, sometimes, significant 
        design classes and design packages. </p>
    </div>
  </li>
  <li> 
    <div align="left">
      <p><strong> Implementation component.</strong> A significant encapsulated 
        part of the implementation, generally code that implements a design component. 
      </p>
    </div>
  </li>
</ul>
<p align="left"> Ideally, the design reflects the implementation; therefore, you 
  can simply refer to <em>components</em>, with each component having a design 
  and an implementation. </p>
<p align="left"> The Unified Modeling 
  Language [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">UML05</a>] 
  defines <em>component </em>as follows: </p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
  <blockquote>
    <p>A modular part of a system that encapsulates its contents and whose manifestation 
      is replaceable within its environment. A component defines its behavior 
      in terms of provided and required interfaces. As such, a component serves 
      as a type, whose conformance is defined by these provided and required interfaces 
      (encompassing both their static as well as dynamic semantics). (See 
      <strong>UML representation</strong> at the end of this section for definitions 
      from earlier versions of UML.)</p>
    <p>A <em>component</em> is defined as a subtype of structured class. Therefore, 
      a component has attributes and operations, 
      is able to participate in associations and generalizations, and has internal 
      structure and ports. </p>
  </blockquote>
</blockquote>
<p align="left"> A number of UML standard stereotypes exist that apply to components, 
  including &lt;&lt;subsystem&gt;&gt; to model large-scale components, and &lt;&lt;specification&gt;&gt; 
  and &lt;&lt;realization&gt;&gt; to model components with distinct specification 
  and realization definitions, where one specification may have multiple realizations.</p>
<p align="left"> Here, we use&nbsp;the term <em>component&nbsp;</em>in a&nbsp;broader 
  way than the UML definition. Rather than defining components as having characteristics, 
  such as modularity, deployability, and replaceability, we instead recommend 
  these as desirable characteristics of components. See the section that follows 
  on Component Replaceability. </p>
<h4 align="left"> Component replaceability</h4>
<p align="left"> In UML terminology, components should be replaceable. However, 
  this may mean only that the component exposes a set of interfaces that hide 
  an underlying implementation. </p>
<p align="left"> There are other, stronger, kinds of replaceability: . </p>
<div align="left">
  <ul>
    <li>
      <p><strong>Source file replaceability: </strong>If two classes are implemented 
        in a single source code file, then those classes cannot usually be separately 
        versioned and controlled. However, if a set of files fully implements 
        a single component (and no other component), then the component source 
        files are replaceable.<strong> </strong> This characteristic makes 
        it easier to use version control, to use the file 
        as a baseline, and to reuse the source file. </p>
    </li>
    <li> 
      <p><strong>Deployment replaceability: </strong>If two classes are deployed 
        in a single executable file, then each class 
        is not independently replaceable in a deployed system. 
        It is desirable for larger-granularity components 
        to be replaceable during deployment, which allows new versions 
        of the component to be deployed without having to rebuild the other components. 
        This usually means that there is one file or one set of files that deploy 
        the component, and no other component. </p>
    </li>
    <li>
      <p><strong>Run-time replaceability: </strong>If a component can be redeployed 
        into a running system, then it is referred to as <em>run-time replaceable</em>. 
        This enables you to upgrade software without loss of availability. </p>
    </li>
    <li> 
      <p><strong>Location transparency: </strong>Components with network-addressable 
        interfaces are referred to as having <em>location transparency</em>. This 
        allows components to be relocated to other servers or to be replicated 
        on multiple servers to support fault tolerance, load balancing, and so 
        on. These kinds of components are often referred to as <em>distributed 
        </em>or <em>distributable</em> components. </p>
    </li>
  </ul>
</div>
<h4 align="left"> Modeling of components </h4>
<p align="left"> The UML component is a modeling construct that provides the following 
  capabilities: </p>
<div align="left">
  <ul>
    <li> Group classes to define a larger granularity part of a system</li>
    <li> Separate the visible interfaces from internal implementation</li>
    <li>Execute instances run-time </li>
  </ul>
</div>
<p align="left"> A component </strong>includes <strong>provided</strong> and <strong>required</strong> 
  interfaces that form the basis for wiring components together. A<strong> provided 
  interface</strong> is one that is either implemented directly by the component 
  or one of its realizing classes or subcomponents, or it is the type of a provided 
  port of the component. A<strong> required interface</strong> is designated by 
  a usage dependency of the component or one of its realizing classes or subcomponents, 
  or it is the type of a required port. </p>
<p align="left"> A component has an external view (or<em> black box </em>view) 
  through its publicly visible properties and operations .Optionally, a behavior 
  such as a protocol state machine may be attached to an interface, a port, and 
  the component itself to define the external view more precisely by making dynamic 
  constraints in the sequence of operation calls explicit. The wiring between 
  components in a system or other context can be structurally defined by using 
  dependencies between component interfaces (typically on component diagrams). 
</p>
<p align="left"> Optionally, you can make a more detailed specification of the 
  structural collaboration by using parts and connectors in composite structures 
  to specify the role or instance-level collaboration between components. That 
  is the component's internal view (or <em>white-box </em>view) through its private 
  properties and realizing classes or subcomponents. This view shows how the external 
  behavior is realized internally. The mapping between external and internal views 
  is by dependencies on components diagrams or delegation connectors to internal 
  parts on composite structure diagrams. </p>
<p align="left"> The recommendation is to&nbsp;use components as the representation 
  for design subsystems. </p>
<h4 align="left"> Component instantiation </h4>
<p align="left"> A component may or may not be directly instantiated at run time. 
</p>
<p align="left"> An indirectly instantiated component is implemented, or realized, 
  by a set of classes, subcomponents, or parts. The component itself does not 
  appear in the implementation; it merely serves 
  as a design that an implementation must follow. The set of realizing classes, 
  subcomponents, or parts must cover the entire set of operations specified in 
  the provided interface of the component. The manner of implementing the component 
  is the responsibility of the implementer. </p>
<p align="left"> A directly instantiated component specifies its own encapsulated 
  implementation. It is instantiated as an addressable object, which 
  means that a design component has a corresponding construct in the implementation 
  language; therefore, it can be referenced explicitly. </p>
<h4 align="left"> UML representation </h4>
<p align="left"> The definition of <em>component </em>with the UML has changed 
  over time with the release of different versions. The version of UML you use 
  may be constrained by the capabilities of the modeling tools you use. That is 
  why the definitions from 1.3 to 2.0 are provided here. </p>
<p align="left"> UML 2.0 defined <em>component</em> as the following: </p>
  
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px"> 
  <blockquote>
    <p align="left"> ...a modular part of a system that encapsulates its contents 
      and whose manifestation is replaceable within its environment. </p>
    <p align="left"> A component defines its behavior in terms of provided and 
      required interfaces. As such, a component serves as a type whose conformance 
      is defined by these provided and required interfaces (encompassing both 
      their static as well as dynamic semantics). </p>
  </blockquote>
</blockquote>
<p align="left"> UML 1.5 defined <em>component </em>as the following: </p>
<blockquote>
  <blockquote>
    <div align="left">A modular, deployable, and replaceable part of a system 
      that encapsulates implementation and exposes a set of interfaces. A component 
      is typically specified by one or more classes or subcomponents that reside 
      on it and may be implemented by one or more artifacts (e.g., binary, executable, 
      or script files). </div>
    <div align="left">
<p>In UML 1.3 and earlier versions of the UML, the component notation was 
        used to represent files in the implementation. Files are no longer considered 
        components by the latest UML definitions. However, many tools and UML 
        profiles still use the component notation to represent files. </p>
    </div>
  </blockquote>
</blockquote>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact" name="arch_poc"
					briefDescription="This artifact represents a experimental solution to the architecturally significant requirements that are identified early in the project."
					id="_PoDR0NbYEdmlO4WLYHrJaQ" orderingGuide="" suppressed="false"
					presentationName="Architectural Proof-of-Concept"
					variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="arch_poc,_PoDR0NbYEdmlO4WLYHrJaQ" briefDescription=""
						id="_2LWIoMJ4EdmvyNnEUA1LkQ" orderingGuide="" suppressed="false"
						authors="Jim Ruehlin" changeDate="2006-09-25T10:15:07"
						changeDescription="" version="1.0.0" externalId="">
						<MainDescription></MainDescription>
						<KeyConsiderations><![CDATA[<p>
    The decision about whether this artifact&nbsp;is required or not and what form it should take depends on three factors:
</p>
<ul>
    <li>
        <strong>How well the team understands the domain.</strong> If the domain is unfamiliar,&nbsp;having an architecture
        proof of concept may help not only to explore possible solutions, but also to help the customer and development
        organizations understand and clarify requirements.
    </li>
    <li>
        <strong>The novelty of the system.</strong> If the development organization has constructed many&nbsp;similar
        systems previously, then it should not be necessary to&nbsp;produce a&nbsp;proof-of-concept for the architecture.
        It should be possible to base a determination of feasibility on existing reference architectures and technologies.
    </li>
    <li>
        <strong>When any of the requirements are particularly onerous.</strong> You may need the proof of concept even
        though the domain is familiar and you have built a similar system before if, for example, ultra-high transaction
        rates or extreme reliability are required.
    </li>
</ul>]]></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose><![CDATA[<p>
    The proof-of-concept purpose is to demonstrate the feasibility of the project using the selected architecture candidate
    or to mitigate one or more architecturally significant risks.
</p>]]></Purpose>
						<ReasonsForNotNeeding>
							This&amp;nbsp;artifact may be omitted when
							the problem domain is well-understood, &#xD;
							the requirements are well-defined, the
							system has precedents, &#xD; and its
							development is evaluated as low-risk.
						</ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;p> This artifact may take any of several
							forms, including &#xD; these
							examples:&amp;nbsp; &lt;/p>&#xD;
							&lt;ul>&#xD; &#xD; &lt;li> List of known
							technologies (frameworks, patterns,
							executable architectures) &#xD; that seem
							appropriate to the solution&lt;/li>&#xD;
							&lt;li> Sketch of a conceptual model of a
							solution using a notation, such as
							UML&lt;/li>&#xD; &#xD; &lt;li>Simulation of
							a solution&lt;/li>&#xD; &lt;li> Executable
							prototype&lt;/li>&#xD; &lt;/ul>
						</RepresentationOptions>
					</Presentation>
					<Guideline>_THh0cMm_EdqGlYjw6LZtjg</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="demonstrate_architecture"
					briefDescription="Present at least one solution that proves that &lt;/font>the  planned architecture will meet the requirements."
					id="_0hmmQclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Demonstrate the Architecture"
					variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="create_arch_poc,_0hmmQclgEdmt3adZL5Dmdw" briefDescription=""
						id="_yw7BoLtQEdm3b_jWTe1Rjg" orderingGuide="" suppressed="false"
						authors="Mark Dickson" changeDate="2006-09-22T12:22:36"
						changeDescription="Added text to explicitly reference Vision, Supporting Requirements and Use Case products. Added Use Case as an optional input."
						version="1.1">
						<MainDescription><![CDATA[<p> Projects teams</font> are at risk of spending time developing 
  an architecture that will not support the requirements of the system. This task 
  mitigates the risk of having to rework</font> the architecture 
  by describing at least one potential architecture through</font> 
  the <a
    class="elementLink" href="./../../openup_basic/workproducts/arch_poc,_PoDR0NbYEdmlO4WLYHrJaQ.html"
    guid="_PoDR0NbYEdmlO4WLYHrJaQ">Architectural Proof-of-Concept</a>. The objective 
  is to describe just enough of the architecture before building it to be confident 
  that the approach will succeed. </p>
<p> Demonstrating that an architectural approach will succeed can be very informal 
  or very formal. If a team is building software similar to systems 
  that</font> they have developed</font> in the past or on 
  top of well-understood frameworks (such as Java&#8482; 2 Platform, Enterprise 
  Edition, or J2EE&#8482;), it may take very little explanation to be confident 
  of the architectural approach. If the team is new or is building software based 
  on new technology, significant research, description, and prototype&nbsp;may 
  be required before achieving enough confidence to proceed with a specific architecture. 
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Define objectives"
							briefDescription="" id="_-3BOQMP3EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Define the scope and
								objectives of the proof of concept. In
								order to show value, these should
								support the objectives&#xD; for the
								system requirements and trace back to
								one or more of the following&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								the &lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting
								Requirements&lt;/a>&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; one or more high level
								&lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use
								Case&lt;/a>s (if available)&#xD;
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Decide on construction approach"
							briefDescription="" id="__UoXUMP3EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Select a format for the
								proof of concept that addresses the
								objectives.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Construct the proof of concept"
							briefDescription="" id="_F6-ZMMP4EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Construct the architectural
								proof of concept using the construction
								approach that you have chosen. This may
								involve one&#xD; or&amp;nbsp;more &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0YDosMlgEdmt3adZL5Dmdw&quot;>Developer&lt;/a>.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Verify the proof-of-concept"
							briefDescription="" id="_Y8bDcBEJEduF1vpgvvEo8g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Show how the proof of
								concepts satisfies the objecitves
								described in the first step.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Communicate the proof-of-concept"
							briefDescription="" id="_SC6iEBEWEduF1vpgvvEo8g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Communicate the
								proof-of-concept to&amp;nbsp;demonstrate
								to the stakeholders&amp;nbsp;that the
								architecture will meet its&#xD;
								objectives. This should include the
								project &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a>(s)
								as well as other technical team members
								who need to know.&#xD; &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[Reduce the risk of reworking the software architecture by illustrating at least 
one architecture that supports the requirements of the system.]]></Purpose>
					</Presentation>
					<Guideline>_THh0cMm_EdqGlYjw6LZtjg</Guideline>
					<Guideline>_ZtFfcCkzEduLGM8dfVsrKg</Guideline>
					<PerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_BVh9cL-CEdqb7N6KIeDL8Q
					</MandatoryInput>
					<MandatoryInput>
						_0XAf0MlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_PoDR0NbYEdmlO4WLYHrJaQ</Output>
					<AdditionallyPerformedBy>
						_0YDosMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0VGbUMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="analyze_arch_reqs"
					briefDescription="Analyze the architecturally significant requirements and define an architecture candidate for the system based on experience gained from similar systems or in similar problem domains. Define the architecture patterns, key mechanisms, and, where applicable, modeling conventions for the system."
					id="_0f-1oMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Analyze Architectural Requirements"
					variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="analyze_architecture,_0f-1oMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_qDRSULBKEdm7Eph_l9Cn9w" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-25T10:21:11"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    This task focuses on defining a candidate&nbsp;architecture and constraining the architectural techniques to use for
    the development, testing, and operation of system. It relies on gathering experience gained in similar systems or
    problem domains to constrain and focus the architecture so that effort is not wasted in re-inventing architecture.
</p>
<p>
    The work in this task may also be informed by one or more <a class="elementLink" href="./../../openup_basic/workproducts/arch_poc,_PoDR0NbYEdmlO4WLYHrJaQ.html" guid="_PoDR0NbYEdmlO4WLYHrJaQ">Architecture Proof-of-Concept</a>&nbsp;products from previous iterations.
</p>]]></MainDescription>
						<KeyConsiderations><![CDATA[This task&nbsp;is primarily beneficial when developing new and unprecedented systems. In systems where there is already a
well-defined architecture, this task might be omitted, or at least performed very quickly as a&nbsp;review of the existing
architecture.]]></KeyConsiderations>
						<Section name="Identify architectural goals"
							briefDescription="" id="_3nMQQA3rEduibvKwrGxWxA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Describe the goals of the architecture
								by examining the project &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/checklists/vision,_0WoFUMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WoFUMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>&amp;nbsp;and
								product requirements, including
								architecturally significant use
								cases,&#xD; if available. Also, talk to
								the project &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a>&#xD;
								and &lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a>.
								These goals will guide the approach you
								take to important architecture and&#xD;
								design decisions.
							</Description>
						</Section>
						<Section
							name="Identify architectural constraints" briefDescription=""
							id="_9o6Z4CSCEdqDjNgZyGMf5w" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Work with the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a>
								and &lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a>
								roles to identify any constraints on the
								solution (or opportunities)&#xD; that
								are inherent in the existing environment
								or organization. If available, examine
								the &lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting
								Requirements&lt;/a>&amp;nbsp;for any
								constraints that have already been&#xD;
								identified.&amp;nbsp;&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Survey, assess, and select available assets"
							briefDescription="" id="_B899cMP2EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Establish the availability
								of any existing software assets as
								suitable candidates for re-use.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section
							name="Define approach for structuring the system"
							briefDescription="" id="_FVrlsMP2EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Define the layering strategy
								for the software architecture. As a
								minimum, decide on:&#xD; &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; The number of
								layers.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Their names and purposes.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Their
								relationships to one another.&#xD;
								&lt;/li>&#xD; &lt;/ul>&#xD; &lt;p>&#xD;
								These decisions should be documented as
								specific, high level aspects of the
								&lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>,&#xD;
								providing scope and structure that will
								evolve into a more detailed description
								of the system.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Develop Deployment Overview"
							briefDescription="" id="_tmvWwE5cEducxZ_XZXh-vw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Outline how the software will deploy
								over the nodes on the network.
							</Description>
						</Section>
						<Section name="Identify key abstractions"
							briefDescription="" id="_I32E4MP2EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Identify the key
								abstractions that the system needs to
								handle. You can usually find these by
								looking for nouns that the&#xD;
								requirements emphasize or repeat,
								because they help identify what is
								important to the business. The &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html&quot;
								guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a>
								is particularly useful for this. Work
								with the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a>&amp;nbsp;and
								&lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a>
								roles here, as they will have knowledge
								and materials that are relevant&#xD; to
								this task.&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Key abstractions should be documented as
								elements of the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>&amp;nbsp;that
								will evolve into more specific elements
								of the system as more&#xD; detailed
								development work is performed.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Identify analysis mechanisms"
							briefDescription="" id="_KBAsYMP2EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Catalog the architecture
								mechanisms that are necessary to fulfill
								the requirements (see &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/architecture_mechanism,_mzxI0A4LEduibvKwrGxWxA.html&quot;
								guid=&quot;_mzxI0A4LEduibvKwrGxWxA&quot;>Architecture
								Mechanism&lt;/a>). These will be
								expressed as &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0gvqoMlgEdmt3adZL5Dmdw&quot;>Analysis
								Mechanism&lt;/a> at this point in the
								process, because there is only a
								relatively&#xD; small amount of detail
								required for each mechanism.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Map each
								mechanism to one or more use cases. This
								will show how the mechanisms address the
								requirements and assist in&#xD; the
								setting priorities for development of
								the mechanisms.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Capture architectural decisions"
							briefDescription="" id="_xTdYACGAEdqk6N_Ot_YEvA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Capture&amp;nbsp;important
								decisions&amp;nbsp;about the
								architecture for future reference.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[To provide sufficient guidance and direction for the team to be able to perform design and analysis in consistent and
coherent ways.]]></Purpose>
					</Presentation>
					<Guideline>_42UD4A3tEduibvKwrGxWxA</Guideline>
					<PerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_Wn7HcNcEEdqz_d2XWoVt6Q
					</MandatoryInput>
					<MandatoryInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0XAf0MlgEdmt3adZL5Dmdw</Output>
					<Output>_0WuL8slgEdmt3adZL5Dmdw</Output>
					<AdditionallyPerformedBy>
						_0VxJsMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0WuL8slgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_0XAf0MlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_PoDR0NbYEdmlO4WLYHrJaQ
					</OptionalInput>
					<OptionalInput>
						_0VGbUMlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_BVh9cL-CEdqb7N6KIeDL8Q
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Task" name="develop_arch"
					briefDescription="Make concrete decisions about the architecture to provide guidance and direction  to the development work for the iteration."
					id="_0gRJgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Develop the Architecture" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="refine_architecture,_0gRJgMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_rUis8LBKEdm7Eph_l9Cn9w" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-13T03:54:16"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    This task&nbsp;builds on&nbsp;the work&nbsp;performed during <a class="elementLink" href="./../../openup_basic/tasks/define_architecture,_0f-1oMlgEdmt3adZL5Dmdw.html" guid="_0f-1oMlgEdmt3adZL5Dmdw">Define the Architecture</a>&nbsp;to produce a concrete approach for the main development
    work to follow.
</p>
<p>
    The objective is to resolve the overarching issues which affect the design and development activity for the current
    iteration. These are:
</p>
<ul>
    <li>
        To specify&nbsp;common mechanisms or patterns to be used.
    </li>
    <li>
        To&nbsp;specify what, if any, use will be made of existing software assets and how they will integrate with the
        overall solution.
    </li>
    <li>
        To&nbsp;specify what, if any, new software needs to be developed.
    </li>
    <li>
        To ensure that the appropriate hardware and software resources are&nbsp;specified to support the development and
        testing of the solution.
    </li>
    <li>
        To ensure that the architecture is useful to the project team
    </li>
    <li>
        To ensure that the architecture is used by the project team
    </li>
</ul>
<p>
    The products of this task are generally termed "high level"&nbsp;(in that they are&nbsp;applied&nbsp;in broad terms
    across solution). They are also specific (in that the technical decisions are concrete and unambiguous).
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section
							name="Identify architecture drivers and scenarios"
							briefDescription="" id="_P28vkMP3EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Use the Vision, Supporting
								Requirements and Use Cases to evaluate
								the&amp;nbsp;objectives for the
								architecture.&amp;nbsp;You&#xD; should
								balance the objectives for the current
								iteration against the overall project
								objectives, ensuring that the&#xD;
								architecture can support current and
								future needs.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Architecture
								drivers&amp;nbsp;can take the form
								of&amp;nbsp;one or more &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/architectural_mechanism,_mzxI0A4LEduibvKwrGxWxA.html&quot;
								guid=&quot;_mzxI0A4LEduibvKwrGxWxA&quot;>Architectural
								Mechanism&lt;/a>s brought into scope by
								association to the use case
								scenarios&#xD; prioritized for the
								current iteration. Other drivers may
								also be apparent. For example, it may be
								necessary to move&#xD; certain aspects
								of the architecture from prototype to
								production quality implementation; or
								explore certain aspects of&#xD; the
								architecture to inform future
								iterations.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Identify design mechanisms"
							briefDescription="" id="_0qoQ8CikEduQBKSg5n118w" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Refine &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/architectural_mechanism,_mzxI0A4LEduibvKwrGxWxA.html&quot;
								guid=&quot;_mzxI0A4LEduibvKwrGxWxA&quot;>Architectural
								Mechanism&lt;/a>s into &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html&quot;
								guid=&quot;_w2ACwA4LEduibvKwrGxWxA&quot;>Design
								Mechanism&lt;/a>s&amp;nbsp;by looking at
								the requirements in context,&#xD;
								including&amp;nbsp;the&amp;nbsp;Use
								Cases&amp;nbsp;in scope.&amp;nbsp;Look
								for&amp;nbsp;commonality across
								scenarios as they are&amp;nbsp;they&#xD;
								are&amp;nbsp;being analyzed and
								designed, then propose common
								components&amp;nbsp;and patterns for
								their solution.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Identify business patterns"
							briefDescription="" id="_QtKuoCilEduQBKSg5n118w" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p dir=&quot;ltr&quot;
								style=&quot;MARGIN-RIGHT:
								0px&quot;>&#xD; Analyse the&amp;nbsp;Use
								Cases&amp;nbsp;and identify areas of
								related or similar behavior and propose
								any appropriate generic&#xD; designs.
								See &lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/business_pattern,_Z53x0BapEduSTJywppIxVQ.html&quot;
								guid=&quot;_Z53x0BapEduSTJywppIxVQ&quot;>Business
								Pattern&lt;/a>.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Identify reuse opportunities"
							briefDescription="" id="_Vdln8MP3EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p dir=&quot;ltr&quot;
								style=&quot;MARGIN-RIGHT:
								0px&quot;>&#xD; Leverage reuse of
								existing components by evaluating their
								interfaces and the behavior that they
								provide.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Identify architecturally significant design elements"
							briefDescription="" id="_G_k1kBaqEduSTJywppIxVQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p align=&quot;left&quot;>&#xD;
								Refine the key abstractions to decide on
								the important design elements (such as
								classes
								and&amp;nbsp;subsystems)&amp;nbsp;that&#xD;
								make up the architecture, and provide at
								least a name and brief description for
								each. Add them to the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section
							name="Define development architecture and test architecture"
							briefDescription="" id="_LsyLkBaqEduSTJywppIxVQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Decide on additional
								architecture elements that will be
								required for the development and test
								activities.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Evaluate results"
							briefDescription="" id="_Zlw-QMP3EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Verify that your
								architecture decisions taken are
								appropriate for the purpose. You can do
								this through such activities&#xD; as
								verifying the success of exploratory
								prototypes, peer review of
								documentation, or formal assessment
								reviews.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Communicate and document decisions" briefDescription=""
							id="_aRCI0MP3EdmWKcx6ixEiwg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p> Ensure that those who need to act
								upon the architectural
								work&amp;nbsp;understand&amp;nbsp;it
								&#xD; and are able to work with
								it.&amp;nbsp;Make sure that the
								description &#xD; of the architecture
								clearly conveys not &#xD; only the
								solution but also the motivation and
								objectives related &#xD; to
								the&amp;nbsp;decisions that have been
								made in shaping the architecture. &#xD;
								This will make it easier for others to
								understand the architecture and to &#xD;
								adapt it over time. &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p> Provide a skeletal design to enable more&nbsp;comprehensive design activities 
  to be performed coherently by the team. </p>]]></Purpose>
					</Presentation>
					<Concept>_Z53x0BapEduSTJywppIxVQ</Concept>
					<Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
					<Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
					<Guideline>_mDf2EBapEduSTJywppIxVQ</Guideline>
					<PerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0WuL8slgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_0XAf0MlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_BVh9cL-CEdqb7N6KIeDL8Q
					</MandatoryInput>
					<MandatoryInput>
						_0VGbUMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0WuL8slgEdmt3adZL5Dmdw</Output>
					<Output>_0XAf0MlgEdmt3adZL5Dmdw</Output>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact"
					name="architecture"
					briefDescription="The architecture describes the blueprint for software development, frequently represented using a number of architectural views. It also contains the rationale, assumptions, explanations and implications of the decisions that where made in forming the architecture as well as the global mapping between views. "
					id="_0XAf0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Architecture" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="architecture,_0XAf0MlgEdmt3adZL5Dmdw" briefDescription=""
						id="_H4gOYKYTEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-13T11:57:12" changeDescription=""
						version="" externalId="">
						<MainDescription><![CDATA[<p> This artifact&nbsp;is a communication vehicle that tells Developers what pieces 
  to build, as well as how those pieces behave and 
  interact with each other. It determines the project structure so that managers 
  can plan the project. It also gives  whoever must 
  maintain and change the architecture later their 
  first glimpse of the system. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose><![CDATA[<p> This artifact focuses on specific aspects of the design, concentrating on 
  structure, essential elements, key scenarios and those aspects that have a lasting 
  impact on performance, reliability, adaptability and cost. It defines the set 
  of mechanisms, patterns and styles that will guide 
  the rest of the design, assuring its integrity. </p>
<p> Teams are formed around architectural elements, which are the units of implementation, 
  unit testing, integration, configuration management, documentation, and many 
  other activities. </p>]]></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;p> You can represent the architecture in
							many forms &#xD; and from many viewpoints,
							depending on the needs of the project and
							the preferences &#xD; of the project team.
							You can express the architecture &#xD; as a
							simple metaphor or as a comparison to a
							predefined &#xD; architectural style or set
							of styles. It may be a precise set of models
							or documents &#xD; that describe the various
							aspects of the system's key elements.
							Expressing &#xD; it as skeletal code is
							another option.&lt;/p>&#xD; &lt;p> It is
							frequently a design artifact that must be
							represented in a readable &#xD; and
							accessible way, employing &lt;a
							class=&quot;elementLink&quot;
							href=&quot;./../../openup_basic/guidances/guidelines/architecture_view,_T9nygClEEduLGM8dfVsrKg.html&quot;
							guid=&quot;_T9nygClEEduLGM8dfVsrKg&quot;>Architecture
							&#xD; View&lt;/a>s for describing and
							communicating the architecture. A view is a
							representation &#xD; of a set of significant
							system elements and the relationships
							associated with &#xD; them. To choose the
							appropriate set of views, you must identify
							the Stakeholders &#xD; who depend on
							software architecture documentation &#xD;
							and the information that they need. &lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_0YP18MlgEdmt3adZL5Dmdw</Concept>
					<Concept>_we3F4ACpEdu8m4dIntu6jA</Concept>
					<Checklist>_17PYUNd6EdmIm-bsRSNCgw</Checklist>
					<Guideline>_T9nygClEEduLGM8dfVsrKg</Guideline>
					<Guideline>_0gpkAMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0gjdYMlgEdmt3adZL5Dmdw</Guideline>
					<Template>__JXkoCk8EduLGM8dfVsrKg</Template>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="analysis_mechanism"
					briefDescription="An Analysis Mechanism is a conceptual representation of an Architectural Mechanism."
					id="_0gvqoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Analysis Mechanism" variabilityType="na">
					<Presentation
						name="analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_S8KCcMP2EdmWKcx6ixEiwg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-15T08:59:22"
						changeDescription="" version="">
						<MainDescription><![CDATA[<p>
    An Analysis Mechanism is a conceptual representation of an <a class="elementLink" href="./../../../openup_basic/guidances/concepts/architecture_mechanism,_mzxI0A4LEduibvKwrGxWxA.html" guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a>. Over time, Analysis Mechanisms are refined into <a class="elementLink" href="./../../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html" guid="_w2ACwA4LEduibvKwrGxWxA">Design Mechanism</a>&nbsp;and, later, into <a class="elementLink" href="./../../../openup_basic/guidances/concepts/implementation_mechanism,_0LcUkA4LEduibvKwrGxWxA.html" guid="_0LcUkA4LEduibvKwrGxWxA">Implementation Mechanism</a>.
</p>
<p>
    Analysis Mechanisms&nbsp;allow the development to focus on understanding the requirements without getting distracted by
    the specifics of a complex implementation. They are a way of abstracting away the detail of the solution, so people can
    better comprehend the problem.
</p>
<p>
    Analysis Mechanisms are described in simple terms:
</p>
<ul>
    <li>
        <strong>Name:</strong> Identifies the mechanism.
    </li>
    <li>
        <strong>Basic attributes:</strong> Define the requirements of the mechanism.
    </li>
</ul>
<p>
    You can identify Analysis Mechanisms top-down, from previous knowledge, or bottom-up, meaning that you discover them as
    you proceed.
</p>
<p>
    In the top-down mode, experience guides the <a class="elementLink" href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html" guid="_0X9iEMlgEdmt3adZL5Dmdw">Architect</a>, who knows that certain problems are present in the domain and will
    require certain kinds of solutions. Examples of common architectural problems that might be expressed as mechanisms
    during analysis are: persistence, transaction management, fault management, messaging, and inference engines. The
    common aspect of all of these is that each is a general capability of a broad class of systems, and each provides
    functionality that interacts with or supports the basic application functionality. The Analysis Mechanisms support
    capabilities required in the basic functional requirements of the system, regardless of the platform that it is
    deployed upon or the implementation language. Analysis Mechanisms also can be designed and implemented in different
    ways. Generally, there will be more than one design mechanism that corresponds with each Analysis Mechanism. There may
    also be more than one way of implementing each design mechanism.
</p>
<p>
    The bottom-up approach is where Analysis Mechanisms ultimately originate. They are created as the <a class="elementLink" href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html" guid="_0X9iEMlgEdmt3adZL5Dmdw">Architect</a> sees, perhaps faintly at first, a common theme emerging from a set of
    solutions to various problems. For example: There is a need to provide a way for elements in different threads to
    synchronize their clocks, and there is a need for a common way of allocating resources. <a class="elementLink" href="./../../../openup_basic/guidances/concepts/analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw.html" guid="_0gvqoMlgEdmt3adZL5Dmdw">Analysis Mechanism</a>, which simplify the language of analysis, emerge from these
    patterns.
</p>
<p>
    Identifying an Analysis Mechanism means that you identify a common, perhaps implicit&nbsp;subproblem, and you give it a
    name. Initially, the name might be all that exists. For example, the system will require a persistence
    mechanism.&nbsp;Ultimately, this mechanism will be implemented through the collaboration of various classes, some of
    which do not deliver application functionality directly, but exist only to support it. Very often these support classes
    are located in the middle or lower layers of a layered architecture, thereby providing a common support service to all
    application-level classes.
</p>
<p>
    If the subproblem that you identify is common enough, perhaps a pattern exists from which the mechanism can be
    instantiated, probably by binding existing classes and implementing new ones, as required by the pattern. An Analysis
    Mechanism produced this way will be abstract, and it will require further refinement throughout design and
    implementation work.
</p>
<p>
    You can see examples of how Architectural Mechanisms can be represented in <a class="elementLink" href="./../../../openup_basic/guidances/guidelines/example_analysis_mechanisms_descr,_4k_HsA4LEduibvKwrGxWxA.html" guid="_4k_HsA4LEduibvKwrGxWxA">Example Analysis Mechanism Descriptions</a>.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_HrZGIA4MEduibvKwrGxWxA</Concept>
					<Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
					<Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
					<Concept>_0LcUkA4LEduibvKwrGxWxA</Concept>
					<Guideline>_4k_HsA4LEduibvKwrGxWxA</Guideline>
					<Guideline>_4k_HsQ4LEduibvKwrGxWxA</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Checklist"
					name="architecture"
					briefDescription="This checklist lists questions to help in evaluating whether architectural decisions have been captured appropriately."
					id="_17PYUNd6EdmIm-bsRSNCgw" orderingGuide="" suppressed="false"
					presentationName="Architecture" variabilityType="na">
					<Presentation
						name="architecture,_17PYUNd6EdmIm-bsRSNCgw" briefDescription=""
						id="_17Ve8Nd6EdmIm-bsRSNCgw" orderingGuide="" suppressed="false"
						authors="Chris Doyle, Mark Dickson"
						changeDate="2006-07-30T11:36:36"
						changeDescription="(Mark Dickson) formatted &amp; applied changes from Chris Doyle "
						version="1.2">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="General" briefDescription=""
							id="_LqpmkCALEduY2JH31Kkn-A" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p> In general, the architecture must
								support the needs of the development
								team &#xD; for the current iteration:
								&lt;/p>&#xD; &lt;ul>&#xD; &#xD; &lt;li>
								Does the architecture appear to be
								stabilizing? Although the architecture
								&#xD; may be unstable during early
								Inception and Elaboration iterations, it
								should &#xD; become more stable toward
								the end of Elaboration, with sufficient
								stability &#xD; during Construction to
								allow the team to build &#xD; the
								software efficiently and with
								confidence. The architecture should be
								very &#xD; stable during the Transition
								phase. &#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Does the architecture divide the
								system’s responsibilities into
								well-defined subsystems with
								well-defined&#xD; interfaces?&#xD;
								&lt;/li>&#xD; &lt;li> Are all of the
								subsystem components for the iteration
								identified? &lt;/li>&#xD; &lt;li>&#xD;
								Are the number and types of components
								reasonable?&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Does the packaging approach
								reduce complexity and improve
								understanding?&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Are packages defined to be
								highly cohesive within the package,
								while the packages themselves are
								loosely coupled?&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Can team members understand
								enough from the architecture to
								successfully design and code their
								allocated&#xD; components?&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Is the
								architecture description current?&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Have the
								design guidelines been followed?&#xD;
								&lt;/li>&#xD; &lt;li> Are all technical
								risks either mitigated or addressed in
								&#xD; a contingency plan? &lt;/li>&#xD;
								&lt;li> Does the architecture address
								all of the non-behavioral requirements
								in &#xD; the Supplementary Requirements?
								If not, is there a plan to address them?
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Architecture Qualities"
							briefDescription="" id="_3UwPcClVEduLGM8dfVsrKg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li> The architectural
								qualities are specified, with
								appropriate &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../../openup_basic/guidances/concepts/architecture_mechanism,_mzxI0A4LEduibvKwrGxWxA.html&quot;
								guid=&quot;_mzxI0A4LEduibvKwrGxWxA&quot;>Architecture
								&#xD; Mechanisms&lt;/a> in place to meet
								them. For example:&lt;/li>&#xD; &lt;li
								style=&quot;LIST-STYLE-TYPE: none&quot;>
								&#xD; &lt;ul>&#xD; &lt;li>&lt;strong>
								Error recovery &lt;/strong>&lt;/li>&#xD;
								&lt;li style=&quot;LIST-STYLE-TYPE:
								none&quot;> &#xD; &lt;ul>&#xD; &lt;li>
								For each error or exception, a policy
								defines how the system is &#xD; restored
								to a normal state. &lt;/li>&#xD; &lt;li>
								For each possible type of user-input
								&#xD; error incorrect data from external
								systems, &#xD; written procedures
								explain how to restore &#xD; the system
								normal state. &lt;/li>&#xD; &lt;li>
								There is a consistently applied policy
								for handling exceptional &#xD;
								situations. &lt;/li>&#xD; &lt;li> There
								is a consistently applied policy for
								handling data corruption &#xD; in the
								database. &lt;/li>&#xD; &lt;li> There is
								a consistently applied policy for
								handling database unavailability, &#xD;
								including whether data can still be
								entered into the system and stored &#xD;
								later. &lt;/li>&#xD; &lt;li> If data is
								exchanged between systems, there is a
								policy for how &#xD; systems synchronize
								their views of the data. &lt;/li>&#xD;
								&lt;li> If the system uses redundant
								processors or nodes to provide fault
								&#xD; tolerance or high availability,
								there is a strategy for ensuring that
								&#xD; no two processors or nodes act on
								the assumption that they are primary
								&#xD; and that no processor or node is
								primary. &lt;/li>&#xD; &lt;li> The
								failure modes for a distributed system
								have been identified &#xD; and
								strategies defined for handling the
								failures. &lt;/li>&#xD; &lt;/ul>&#xD;
								&lt;/li>&#xD; &lt;li>&lt;strong>
								Performance&amp;nbsp;&amp;nbsp;
								&lt;/strong> &lt;/li>&#xD; &lt;li
								style=&quot;LIST-STYLE-TYPE: none&quot;>
								&#xD; &lt;ul>&#xD; &lt;li> Performance
								requirements are reasonable and reflect
								real constraints &#xD; in the problem
								domain; their specification is not
								arbitrary. &lt;/li>&#xD; &lt;li>
								Estimates of system performance exist
								(using a Workload Analysis &#xD; Model
								as necessary), and these indicate that
								the performance requirements &#xD; are
								not significant risks. &lt;/li>&#xD;
								&lt;li> System performance estimates
								have been validated using architectural
								&#xD; prototypes, especially for
								performance-critical requirements.
								&lt;/li>&#xD; &lt;/ul>&#xD;
								&lt;/li>&#xD; &lt;li>&lt;strong> Memory
								use&lt;/strong> &lt;/li>&#xD; &lt;li
								style=&quot;LIST-STYLE-TYPE: none&quot;>
								&#xD; &lt;ul>&#xD; &lt;li> Memory
								budgets for the application have been
								defined. &lt;/li>&#xD; &lt;li> Actions
								have been taken to detect and prevent
								memory leaks. &lt;/li>&#xD; &lt;li>
								There is a consistently applied policy
								that defines how the virtual &#xD;
								memory system is used, monitored, and
								tuned.&amp;nbsp; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;/li>&#xD; &lt;li>
								&lt;strong>Portability &lt;/strong>
								&lt;/li>&#xD; &lt;li
								style=&quot;LIST-STYLE-TYPE: none&quot;>
								&#xD; &lt;ul>&#xD; &lt;li> Portability
								requirements have been met.
								&lt;/li>&#xD; &lt;li> Programming
								Guidelines provide specific guidance for
								&#xD; creating portable code.
								&lt;/li>&#xD; &lt;li> Design Guidelines
								provide specific guidance for designing
								portable &#xD; applications.
								&lt;/li>&#xD; &lt;li> A test port has
								been created to verify portability
								claims.&amp;nbsp; &#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;/li>&#xD; &lt;li>
								&lt;strong>Reliability &lt;/strong>
								&lt;/li>&#xD; &lt;li
								style=&quot;LIST-STYLE-TYPE: none&quot;>
								&#xD; &lt;ul>&#xD; &lt;li> Measures of
								quality (MTBF, number of outstanding
								defects, and so &#xD; on) have been met.
								&lt;/li>&#xD; &lt;li> The architecture
								provides for recovery in the event of
								disaster &#xD; or system
								failure&amp;nbsp; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;/li>&#xD;
								&lt;li>&lt;strong> Security &lt;/strong>
								&lt;/li>&#xD; &lt;li
								style=&quot;LIST-STYLE-TYPE: none&quot;>
								&#xD; &lt;ul>&#xD; &lt;li> Security
								requirements have been met.&lt;br
								/>&#xD; &lt;/li>&#xD; &lt;/ul>&#xD;
								&lt;/li>&#xD; &lt;/ul>&#xD;
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Architecture Description"
							briefDescription="" id="_RWz4ICALEduY2JH31Kkn-A" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;h4>&#xD; The Use-Case View&#xD;
								&lt;/h4>&#xD; &lt;p> For the Use-Case
								View section of the Software
								Architecture document: &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li> Is each
								architecturally significant Use Case
								identified as such for these &#xD;
								reasons: &#xD; &lt;ul>&#xD; &lt;li> Is
								vitally important to the
								stakeholders?&lt;/li>&#xD; &lt;li>
								Motivates key elements in the other
								views?&lt;/li>&#xD; &lt;li> Is a driver
								for mitigating one or more major risks,
								including any challenging &#xD;
								non-functional requirements?
								&lt;/li>&#xD; &lt;/ul>&#xD;
								&lt;/li>&#xD; &lt;li> Are there any Use
								Cases whose architectural concerns are
								already covered &#xD; by another Use
								Case? &lt;/li>&#xD; &lt;li> Are the
								architecturally significant aspects of
								the Use Case clear, not &#xD; lost in
								details? &lt;/li>&#xD; &lt;li> Are the
								Use Cases sufficiently clear and
								unlikely to change in a way that &#xD;
								affects the architecture, or is there a
								plan in place for how to achieve such
								&#xD; clarity and stability?
								&lt;/li>&#xD; &lt;li> Have any
								architecturally significant Use Cases
								been missed? &lt;strong>Note: &#xD;
								&lt;/strong>This may require analysis of
								the Use Cases not selected for this
								&#xD; view.&lt;/li>&#xD; &lt;li> Can the
								architecture handle all Use Case
								realizations &#xD; defined for the
								current iteration? &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;h4>&#xD; The Logical
								View&#xD; &lt;/h4>&#xD; &lt;p> For the
								Logical View section of the Software
								Architecture document: &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; Does it
								accurately and completely present an
								overview of the architecturally
								significant elements of the design?&#xD;
								&lt;/li>&#xD; &lt;li> Does it present
								the complete set of architectural
								mechanisms used in the &#xD; design,
								along with the rationale for their
								selection? &lt;/li>&#xD; &lt;li>&#xD;
								Does it present the layering of the
								design, along with the rationale used to
								partition the layers?&#xD; &lt;/li>&#xD;
								&lt;li> Does it present any frameworks
								or patterns used in the design, along
								with &#xD; the rationale for selecting
								those patterns or frameworks?&lt;br
								/>&#xD; &lt;br />&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;h4>&#xD; The Process
								View&#xD; &lt;/h4>&#xD; &lt;p> For the
								Process View section of the Software
								Architecture document: &lt;/p>&#xD;
								&lt;ul>&#xD; &#xD; &lt;li> Are potential
								race conditions (process
								&lt;strong>&lt;/strong>competition for
								&#xD; critical resources) identified,
								and have you defined avoidance and
								resolution &#xD; strategies?
								&lt;/li>&#xD; &lt;li>&#xD; Are the
								nominal and maximal performance
								requirements for important operations
								specified?&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Is there is a set of
								performance tests capable of measuring
								whether performance requirements have
								been met?&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Have any architectural
								weaknesses with the potential for
								performance bottlenecks been
								identified?&#xD; &lt;/li>&#xD; &lt;li>
								Is there consistent policy for handling
								errors and &#xD; exceptions in the
								system? &lt;/li>&#xD; &lt;li> Is the
								system tolerant of errors and
								exceptions, so that when an error &#xD;
								or exception occurs, the system can
								revert to a consistent state?
								&lt;/li>&#xD; &lt;/ul>&#xD; &lt;h4>&#xD;
								The Deployment View&#xD; &lt;/h4>&#xD;
								&lt;p> For the Deployment View section
								of the Software Architecture document:
								&lt;/p>&#xD; &lt;ul>&#xD; &#xD; &lt;li>
								Does the deployment conform to all
								Stakeholder’s deployment requirements?
								&#xD; &lt;/li>&#xD; &lt;li> Have the
								system availability requirements been
								addressed? &lt;/li>&#xD; &lt;li> Have
								the system capacity requirements been
								addressed? &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Models" briefDescription=""
							id="_4-x2YClXEduLGM8dfVsrKg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;h4>&#xD; Overall&#xD; &lt;/h4>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; Subsystem and
								package partitioning and layering is
								logically consistent.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; All analysis mechanisms
								have been identified and described.&#xD;
								&lt;/li>&#xD; &lt;/ul>&#xD; &lt;h4>&#xD;
								Subsystems&#xD; &lt;/h4>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; The services
								(interfaces) of subsystems in
								upper-level layers have been
								defined.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								The dependencies between subsystems and
								packages correspond to dependency
								relationships between the contained&#xD;
								classes.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								The classes in a subsystem support the
								services identified for the
								subsystem.&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;h4>&#xD; Classes&#xD;
								&lt;/h4>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								The key entity classes and their
								relationships have been identified.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Relationships
								between key entity classes have been
								defined.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								The name and description of each class
								clearly reflects the role it plays.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; The
								description of each class accurately
								captures the responsibilities of the
								class.&#xD; &lt;/li>&#xD; &lt;li> The
								entity classes are mapped to analysis
								mechanisms, where appropriate. &#xD;
								&lt;/li>&#xD; &lt;li> The role names of
								aggregations and associations accurately
								describe the &#xD; relationships between
								the related classes. &lt;/li>&#xD;
								&lt;li>&#xD; The multiplicities of the
								relationships are correct.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; The key
								entity classes and their relationships
								are consistent with the business model
								(if it exists), domain model&#xD; (if it
								exists), requirements, and glossary
								entries.&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;h4>&#xD; General Model
								Considerations&#xD; &lt;/h4>&#xD;
								&lt;ul>&#xD; &#xD; &lt;li> The model is
								at an appropriate level of detail, given
								the model objectives. &#xD;
								&lt;/li>&#xD; &lt;li> For the business,
								requirements, or design models during
								the Elaboration &#xD; phase, there is
								not an over-emphasis on implementation
								issues. &lt;/li>&#xD; &lt;li> For the
								design model in the Construction phase,
								there is a good balance &#xD; of
								functionality across the model elements,
								and it combines &#xD; relatively simple
								elements to build a more complex design.
								&lt;/li>&#xD; &lt;li>&#xD; The model
								demonstrates familiarity and competence
								with the full breadth of modeling
								concepts applicable to the&#xD; problem
								domain; modeling techniques are used
								appropriately for the problem at
								hand.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Concepts are modeled in the simplest way
								possible.&#xD; &lt;/li>&#xD; &lt;li> The
								model can easily evolve, and expected
								changes can be easily accommodated.
								&#xD; &lt;/li>&#xD; &lt;li> At the same
								time, the model has not been overly
								structured to handle unlikely &#xD;
								change at the expense of simplicity and
								comprehensibility. &lt;/li>&#xD; &lt;li>
								The key assumptions that the model is
								based on are &#xD; documented and
								visible to reviewers of the model. If
								the assumptions are applicable &#xD; to
								a given iteration, then the model should
								be able to evolve within those &#xD;
								assumptions, but not necessarily outside
								of those assumptions. Documenting &#xD;
								assumptions is a way of indemnifying
								designers from not being &#xD; expected
								to consider &lt;em>all &lt;/em>possible
								requirements. In an iterative &#xD;
								process, it is impossible to analyze all
								possible requirements and to define
								&#xD; a model that will handle every
								future requirement. &lt;/li>&#xD;
								&lt;/ul>
							</Description>
						</Section>
						<Section name="Transition and Installation"
							briefDescription="" id="_lp5FUClXEduLGM8dfVsrKg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li>&#xD; The process
								for upgrading an existing system without
								loss of data or operational capability
								is defined and has been&#xD;
								tested.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								The process for converting data used by
								previous releases is defined and has
								been tested.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; The amount of time and
								resources required to upgrade or install
								the product is well-understood and
								documented.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; The functionality of the
								system can be activated one Use Case at
								a time.&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Administration"
							briefDescription="" id="_QL9kIClXEduLGM8dfVsrKg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &lt;li> Disk space can be
								reorganized or recovered while the
								system is running. &#xD; &lt;/li>&#xD;
								&lt;li> The responsibilities and
								procedures for system configuration have
								been &#xD; identified and documented.
								&lt;/li>&#xD; &lt;li> Access to the
								operating system or administration
								functions is restricted. &#xD;
								&lt;/li>&#xD; &lt;li> Licensing
								requirements are satisfied.
								&lt;/li>&#xD; &lt;li> Diagnostics
								routines can be run while the system is
								running. &lt;/li>&#xD; &lt;li> The
								system monitors operational performance
								(capacity threshold, critical &#xD;
								performance threshold, resource
								exhaustion). &lt;/li>&#xD; &lt;li> The
								actions taken when thresholds are
								reached are defined. &lt;/li>&#xD;
								&lt;li> The alarm-handling policy is
								defined. &lt;/li>&#xD; &lt;li> The
								alarm-handling mechanism is defined and
								has been prototyped and tested. &#xD;
								&lt;/li>&#xD; &lt;li> The alarm-handling
								mechanism can be adjusted to &#xD;
								prevent false or redundant alarms.
								&lt;/li>&#xD; &lt;li> The policies and
								procedures for monitoring and
								administration the network &#xD; (LAN,
								WAN) are defined. &lt;/li>&#xD; &lt;li>
								Faults on the network can be isolated.
								&lt;/li>&#xD; &lt;li> There is an
								event-tracing mechanism&lt;strong>
								&lt;/strong>that &#xD; can be enabled to
								aid in troubleshooting. &lt;/li>&#xD;
								&lt;li> The overhead&lt;strong>
								&lt;/strong>of the facility &#xD; is
								understood.
								&lt;strong>&lt;/strong>&lt;/li>&#xD;
								&lt;li> The administrative staff
								possesses the knowledge to use the
								facility effectively. &#xD;
								&lt;/li>&#xD; &lt;li> It is not possible
								for a malicious user to: &lt;/li>&#xD;
								&lt;li style=&quot;LIST-STYLE-TYPE:
								none&quot;> &#xD; &lt;ul>&#xD; &lt;li>
								Enter the system&lt;/li>&#xD; &lt;li>
								Destroy critical data&lt;/li>&#xD;
								&lt;li> Consume all
								resources&lt;/li>&#xD; &lt;/ul>&#xD;
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Organizational Issues"
							briefDescription="" id="_PHv_kCALEduY2JH31Kkn-A" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p> By the completion of the
								Elaboration phase, the architecture
								should be sufficiently &#xD;
								well-defined to allow decisions about
								the structure of &#xD; the
								team:&lt;/p>&#xD; &lt;ul>&#xD; &#xD;
								&lt;li> Does the component architecture
								provide a suitable basis for organizing
								&#xD; the development teams?
								&lt;/li>&#xD; &lt;li>&#xD; Does each
								team have the skills required to
								implement their allocated
								components?&#xD; &lt;/li>&#xD; &#xD;
								&lt;li> Are responsibilities divided
								well between &#xD; teams? &lt;/li>&#xD;
								&#xD; &lt;li> Do all team members share
								the same understanding &#xD; of the
								architecture as the one presented by the
								architect? &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Cost and Schedule"
							briefDescription="" id="_JeqlsClXEduLGM8dfVsrKg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;ul>&#xD; &#xD; &lt;li> The actual
								number of lines of code developed thus
								far matches the estimated lines of code
								at the current milestone. &lt;/li>&#xD;
								&#xD; &lt;li> The estimation of cost and
								schedule&lt;strong>
								&lt;/strong>assumptions &#xD; have been
								reviewed and remain valid. &lt;/li>&#xD;
								&#xD; &lt;li> Cost and schedule
								estimates have been recalculated &#xD;
								using the most recent actual project
								experience and performance.
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
					</Presentation>
					<Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline" name="layering"
					briefDescription="Guidance on the possible ways for partitioning the system."
					id="_0gpkAMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Layering" variabilityType="na">
					<Presentation
						name="layering,_0gpkAMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_lbGQwMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-11T06:00:17" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p> Layering logically partitions the subsystems 
  into a number of sets, with certain rules regarding how relationships can be 
  formed between the layers. Layering provides a way to restrict inter-subsystem 
  dependencies, with the result that the system is more loosely coupled and, therefore, 
  more easily maintained. </p>
<p>
    The criteria for grouping subsystems follow a few patterns:
</p>
<ul>
  <li> <b>Visibility</b><strong>:</strong> Subsystems may depend only on subsystems 
    in the same layer and the next-lower layer. </li>
  <li> <b>Volatility</b><strong>:</strong> 
    <ul>
      <li> <b>In the highest layers</b>, put elements that vary when user requirements 
        change. </li>
      <li> <b>In the lowest layers</b>, put elements that vary when the implementation 
        platform changes (hardware, language, operating system, database, and 
        so forth). </li>
      <li> <strong>Sandwiched in the middle</strong>, put elements that are generally 
        applicable across wide ranges of systems and implementation environments. 
      </li>
      <li> <strong>Add layers </strong>when additional partitions within these 
        broad categories help to organize the model. </li>
    </ul>
  </li>
  <li> <b>Generality</b><strong>: </strong>Abstract model elements tend to be 
    placed lower in the model. If not implementation-specific, they tend to gravitate 
    toward the middle layers. </li>
  <li> <b>Number of layers.</b> For a small system, three layers are sufficient. 
    For a complex system, five to seven layers are usually sufficient. For any 
    degree of complexity, more than 10 layers should be viewed with suspicion 
    that increases with the number of layers. The table that follows gives you 
    a few guidelines. </li>
</ul>
<p align="center"><strong>Guideline for number of layers 
  according to number of classes</strong></p>
<div align="center">
    
  <table
    style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"
     cellspacing="0" bordercolordark="#808080" cellpadding="4" width="58%" bordercolorlight="#808080" border="1">
    <tbody>
            <tr>
                <th width="40%">
                    <p align="center" scope="col"> <b>Number of Classes</b> </p>
                </th>
                <th width="60%">
                    <p align="center" scope="col"> <b>Number of Layers</b> </p>
                </th>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center">
                        0 - 10
                    </p>
                </td>
                
        <td width="60%"><blockquote> 
            <blockquote>
              <p> No layering needed </p>
            </blockquote>
          </blockquote></td>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center">
                        10 - 50
                    </p>
                </td>
                
        <td width="60%"><blockquote> 
            <blockquote>
              <p> 2 layers </p>
            </blockquote>
          </blockquote></td>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center"> 25 - 150 </p>
                </td>
                
        <td width="60%"><blockquote> 
            <blockquote>
              <p> 3 layers </p>
            </blockquote>
          </blockquote></td>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center">
                        100 - 1000
                    </p>
                </td>
                
        <td width="60%"><blockquote> 
            <blockquote>
              <p> 4 layers </p>
            </blockquote>
          </blockquote></td>
            </tr>
        </tbody>
    </table>
    
  
</div>
<p> Failure to restrict dependencies according to Visibility criteria mentioned 
  above can cause architectural degradation and make the system difficult to extend 
  and maintain. </p>
<p> Exceptions include cases where subsystems need direct access to lower-layer 
  services. Make a decision about how to handle primitive services that are needed 
  throughout the system, such as printing, sending messages, and so forth. There 
  is little value in restricting messages to lower layers if the solution is to 
  effectively implement call pass-throughs in the intermediate layers. </p>
<h4> <a id="PartitioningPatterns" name="PartitioningPatterns">Partitioning patterns</a> 
</h4>
<p> Within the top layers of the system, additional partitioning may help organize 
  the model. The following guidelines for partitioning present different issues 
  to consider: </p>
<p><b>User organization</b><strong>: </strong> Subsystems may be organized along 
  lines that mirror the organization of functionality in the business organization 
  (partitioning occurs along departmental lines). This partitioning often occurs 
  early in the design because an existing enterprise model that is strongly partitioned 
  according to the structure of the organization. This pattern usually affects 
  only the top few layers of application-specific services and often disappears 
  as the design evolves. </p>
<ul>
  <li>
    <p> Partitioning along user-organization lines can be a good starting point 
      for the model. </p>
  </li>
  <li>
    <p> The structure of the user organization is not stable over a long period 
      of time because business reorganizations occur; therefore, it is not a good 
      long-term basis for system partitioning. The internal organization of the 
      system should enable the system to evolve and be maintained independently 
      of the organization of the business that it supports. </p>
  </li>
</ul>
<p><b>Areas of competence and skills: </b>Subsystems may be organized to partition 
  responsibilities for parts of the model among different groups within the development 
  organization. Typically, this occurs in the middle and lower layers of the system, 
  and reflects the need for specialization in skills during the development and 
  support of an infrastructure based on complex technology. 
  Examples of such technologies include network and distribution management, database 
  management, communication management, and process control, among others. Partitioning 
  along competence lines may also occur in upper layers, where special competency 
  in the problem domain is required to understand and support key business functionality. 
  Examples include telecommunication call management, securities trading, insurance 
  claims processing, and air traffic control, to name a few. </p>
<p><b>System distribution: </b> Within any of the layers of the system, the layers 
  may be further partitioned horizontally, so to speak, to reflect the distribution 
  of functionality. </p>
<ul>
  <li>
    <p>Partitioning to reflect distribution of functionality can help you visualize 
      the network communication that will occur as the system runs. </p>
  </li>
  <li>
    <p>Partitioning to reflect distribution can also, however, make the system 
      more difficult to change if the deployment model changes significantly. 
    </p>
  </li>
</ul>
<p><b>Secrecy areas</b><strong>: </strong> Some applications, especially those 
  requiring special security clearance to develop or support, require additional 
  partitioning according to security access privileges. Software that controls 
  access to secrecy areas must be developed and maintained by personnel with appropriate 
  clearance. If the number of people with this background on the project is limited, 
  the functionality requiring special clearance must be partitioned into subsystems 
  that will be developed independently from other subsystems, with the interfaces 
  to the secrecy areas the only visible aspect of these subsystems. </p>
<p><b>Variability areas: </b> Functionality that is likely to be optional, and 
  therefore delivered only in some variants of the system, should be organized 
  into independent subsystems that are developed and delivered independently from 
  the mandatory functionality of the system. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
					<Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="repres_interfaces_to_ext_systems"
					briefDescription="This guideline introduces system level interfaces."
					id="_0gjdYMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Representing Interfaces to External Systems"
					variabilityType="na">
					<Presentation
						name="repres_interfaces_to_ext_systems,_0gjdYMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_iCwb8MM3EdmSIPI87WLu3g" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-20T11:07:47"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    If the system communicates with another system, there will be one or more boundary classes identified in <a class="elementLink" href="./../../../openup_basic/tasks/design_solution,_0fshwMlgEdmt3adZL5Dmdw.html" guid="_0fshwMlgEdmt3adZL5Dmdw">Design the Solution</a> to describe the communication protocol. An external system may
    be anything from software to hardware units that the current system will use, such as printers, terminals, alarm
    devices, and sensors. In each case, a boundary class that mediates the communication with the external system will be
    identified.
</p>
<p>
    Example:
</p>
<blockquote>
    <p>
        An automated teller machine (ATM) must communicate with the ATM network to ascertain whether a customer's bank
        number and PIN are correct, and whether the customer has sufficient funds to withdrawal the requested amount. The
        ATM network is an external system (from the perspective of the ATM); therefore, you would use a
        <strong>boundary</strong> class to represent it in a use-case analysis.
    </p>
</blockquote>
<p>
    If the interfaces with the system are simple and well-defined, a single class may be sufficient to represent the
    external system. Often, however, these interfaces are too complex to be represented by using a single class; they often
    require complex collaborations of many classes. Moreover, interfaces between systems are often highly reusable across
    applications. As a result, in many cases, a subsystem models the system interfaces more appropriately.
</p>
<p>
    The use of a subsystem allows the interface to the external system to be defined and stabilized, while leaving the
    design details of the system interface hidden as the system evolves.<br />
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_uF-QYEAhEdq_UJTvM1DM2Q</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline" name="arch_poc"
					briefDescription="This guideline describes how to select and validate an appropriate architectural proof of concept."
					id="_THh0cMm_EdqGlYjw6LZtjg" orderingGuide="" suppressed="false"
					presentationName="Architectural Proof of Concept"
					variabilityType="na">
					<Presentation
						name="arch_poc,_THh0cMm_EdqGlYjw6LZtjg" briefDescription=""
						id="-q_IUbl8BmC83zTeabpQ4lQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-28T12:10:26" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p>
    The&nbsp;architectural proof of concept can be produced in different forms, ranging from a conceptual diagram to an
    executable prototype. Its form and the approach you use to construct it are directly related to the objectives you
    defined for the proof of concept.
</p>
<p>
    If the objective is to validate the integration with an external system, you can develop a prototype to validate this
    integration on a meaningful transaction. If the objective is to validate the feasibility of the system architecture,
    searching documentation on previous successful projects that used this approach might be sufficient.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="analyze_arch_reqs"
					briefDescription="Guidelines to support the architectural tasks."
					id="_42UD4A3tEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Define the Architecture" variabilityType="na">
					<Presentation
						name="analyze_arch_reqs,_42UD4A3tEduibvKwrGxWxA"
						briefDescription="" id="-YeVRerdEixh4HgHOuw2KRQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-27T10:23:17"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<h4>
    Identify architectural goals
</h4>
<p>
    Architectural goals provide the motivation and rationale&nbsp;for decisions. These goals are&nbsp;often driven
    by&nbsp;the software requirements, particularly in&nbsp;<a class="elementLink" href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html" guid="_BVh9cL-CEdqb7N6KIeDL8Q">Supporting Requirements</a>, because they are not always&nbsp;obvious from&nbsp;the use
    cases alone [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">ALL02</a>].
</p>
<p>
    Architectural goals define how the system needs to respond to change over time. Consider these questions when writing
    your goals:
</p>
<ul>
    <li>
        What is the expected lifespan of the system?
    </li>
    <li>
        Will the system need to respond to technological changes over that time, such as new versions of middleware or
        other products?
    </li>
    <li>
        How&nbsp;frequently is&nbsp;the system&nbsp;expected to adapt to change?
    </li>
    <li>
        What changes can we anticipate in the future, and how can we make them easier to accommodate?
    </li>
</ul>
<p>
    These considerations will have a significant effect on the structure of the system.
</p>
<h4>
    Identify architectural constraints
</h4>
<p>
    Often, the system that you develop will be integrated into an existing environment. To ensure a smooth integration, you
    need to gather information about this environment and identify any architectural constraints.
</p>
<p>
    Architectural constraints can arise from various factors:
</p>
<div style="MARGIN-LEFT: 2em">
    <ul>
        <li>
            Network topology
        </li>
        <li>
            Use of a given database vendor or an existing database
        </li>
        <li>
            Web environment (server configurations, firewall, DMZs, and so forth)
        </li>
        <li>
            Servers (hardware model, operating system)
        </li>
        <li>
            Use of third-party software or a particular technology
        </li>
        <li>
            Compliance with existing standards
        </li>
    </ul>
</div>
<p>
    For example, if the company uses only one type of database, you will probably try to use it as much as possible to
    leverage&nbsp;the existing database administration skills, rather than introducing a new one.
</p>
<p>
    These architectural constraints, combined with the requirements, help you define&nbsp;an appropriate&nbsp;candidate for
    the system architecture.
</p>
<h4>
    Survey, assess, and select from available assets
</h4>
<p>
    To assess and select assets to reuse on your project, you need to understand the requirements of the system's
    environment. You also need to understand the scope and general functionality of the system that the Stakeholders
    require. There are several types of assets to consider, including (but not limited to): reference architectures;
    frameworks; patterns; analysis mechanisms; classes; and experience. You can search asset&nbsp;repositories (internal or
    external to your organization) and industry literature to identify assets or similar projects.
</p>
<p>
    You need to assess whether available assets contribute to solving the key challenges of the current project and whether
    they are compatible with the project's architectural constraints. You also need to analyze the extent of the fit
    between assets and requirements, considering whether any of the requirements are negotiable (to enable use of the
    asset). Also, assess whether the asset could be modified or extended to satisfy requirements, as well as what the
    tradeoffs in adopting it are, in terms of cost, risk, and functionality.
</p>
<p>
    Finally, decide, in principle, whether to use one or more assets, and record the rationale for this decision.
</p>
<h4>
    Define approach for structuring the system
</h4>
<p>
    Structuring your system helps you manage its complexity by using the well-known "divide and conquer" strategy. By
    breaking the process into smaller and more manageable pieces, you make development easier.
</p>
<p>
    Layering&nbsp; is&nbsp;one of the most&nbsp;commonly used&nbsp;approaches for structuring and decomposing systems. Each
    layer groups similar classes or components, which communicate insofar as possible only with adjacent layers.
</p>
<p>
    You do not define which layers contain which classes or components. Instead, you define how many layers you will need
    and which kinds of layers you will use. For example, if you are developing a new middleware system, you probably do not
    need a business layer. Later, during&nbsp;design activities, you decide which classes and components will populate
    these layers.
</p>
<h4>
    Develop Deployment Overview
</h4>
<p>
    Develop a high level overview of how the software is deployed. For example, determine if the system needs to accessed
    remotely, or has requirements that suggest distribution across multiple nodes. Some sources of information to consider
    are:
</p>
<ul>
    <li>
        users at locations, defined in&nbsp;the Vision and use cases
    </li>
    <li>
        organization of business data
    </li>
    <li>
        service level requirements defined in the Supplementary Specifications.
    </li>
    <li>
        constraints (in the Supplementary Specifications, such as requirements to interface with legacy systems)
    </li>
</ul>
<p>
    Validate that the deployment overview supports users (especially users at remote locations if this is required)
    performing typical use cases while satisfying nonfunctional requirements and constraints. Validate that the nodes and
    connections are adequate to support the interactions between components on different nodes, and between components and
    their stored data.
</p>
<h4>
    Identify key abstractions
</h4>
<p>
    Requirement and analysis tasks usually uncover key concepts that the system must be able to handle. These concepts
    manifest in design as key abstractions.&nbsp;Your <a class="elementLink" href="./../../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">Vision</a> and <a class="elementLink" href="./../../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html" guid="_Wn7HcNcEEdqz_d2XWoVt6Q">Glossary</a> work products are good sources for key abstractions. You can often easily
    identify these abstractions, because they represent things that are significant to the business. For example, Customer
    and Account are typical key abstractions in the banking business.
</p>
<p>
    When you define the key abstractions, also define any obvious relationships that exist between entity classes. You can
    capture these in a table or&nbsp;on UML class diagrams (in a tool or whiteboard), and create a short description for
    each abstraction.&nbsp;In general, it is not worth agonizing over defining a highly detailed set of relationships at
    this early stage in design. The relationships will become more concrete and detailed later and will&nbsp; probably
    modify your initial assumptions.
</p>
<p>
    The classes that you identify at this point will also probably change and evolve during the course of the project. The
    purpose of this step is not to identify a set of classes and relationships that will survive throughout
    design.&nbsp;Rather, it is&nbsp;to identify the key concepts that the system must handle. Don't spend too much time
    describing entity classes in detail at this initial stage, because there is a risk that you will identify classes and
    relationships that the use cases do not actually need. Remember that you will find more entity classes and
    relationships when looking at the use cases.
</p>
<h4>
    Identify analysis mechanisms
</h4>
<p>
    See <a class="elementLink" href="./../../../openup_basic/guidances/concepts/analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw.html" guid="_0gvqoMlgEdmt3adZL5Dmdw">Analysis Mechanism</a>.
</p>
<h4>
    Capture architectural decisions
</h4>
<p>
    It is often useful to record key architectural decisions and working assumptions on an architectural overview diagram
    to make it easier to communicate the architecture to the project team and stakeholders.&nbsp;This information should be
    part of the description of the architecture, but it can vary in format to suit the needs of the project.&nbsp;For
    example, on an agile and low-ceremony project the overview diagram can be an informal picture story board or a graph
    with icons on either a whiteboard or a drawing tool. The illustration needs to show the nature of the proposed
    solution, convey the governing ideas, and represent the major building blocks.
</p>
<p>
    If a more complex system is required, then a more formal and comprehensive set of&nbsp;models that describe the
    architecture from a number of viewpoints is more appropriate. See <a class="elementLink" href="./../../../openup_basic/guidances/guidelines/architectural_view,_T9nygClEEduLGM8dfVsrKg.html" guid="_T9nygClEEduLGM8dfVsrKg">Architectural View</a>&nbsp;for more information.&nbsp;
</p>
<p>
    You will find it useful to develop these three Unified Modeling Language (UML) diagrams at this stage:
</p>
<ul>
    <li>
        <strong>Layer map</strong> (represented as a class diagram using packages) that describes the upper-level layers of
        the architecture
    </li>
    <li>
        <strong>Draft deployment diagram</strong> that outlines the&nbsp;expected network topology
    </li>
    <li>
        <strong>Simple class diagram</strong> that shows the key abstractions and any obvious relationships among them
    </li>
</ul>
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept" name="arch_mech"
					briefDescription="Used during development to minimize complexity, Architectural Mechanisms represent a common solution to a common problem."
					id="_mzxI0A4LEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Architectural Mechanism" variabilityType="na">
					<Presentation
						name="arch_mech,_mzxI0A4LEduibvKwrGxWxA" briefDescription=""
						id="-SJrpVySJ2npYs8NwGvnHjw" orderingGuide="" suppressed="false"
						authors="Mark Dickson" changeDate="2006-09-28T12:12:08"
						changeDescription="Simplified text explaining mechanism concept"
						version="1.0.0">
						<MainDescription><![CDATA[<p>
    Architectural Mechanisms are&nbsp;used to satisfy architecturally significant requirements.&nbsp;They&nbsp;form the
    basis of&nbsp;common software&nbsp;that will be&nbsp;consistently applied&nbsp;across the product being developed. They
    also form the basis for standardizing the way that the software works; therefore, they are an important element of the
    overall software architecture.
</p>
<p>
    When fully described, Architectural Mechanisms show patterns of structure and behavior in the software.
</p>
<p>
    There are three categories of Architectural Mechanism: Analysis, Design and Implementation.&nbsp;These
    categories&nbsp;reflect the state of the architectural mechanism over time. The state changes as successive levels of
    detail are uncovered during the refinement of architecturally significant requirements into working software. The
    categories are summarized in the table that follows.
</p>
<strong>Types of Architectural Mechanism</strong> 
<table style="WIDTH: 806px; HEIGHT: 228px" cellspacing="0" cellpadding="2" width="806" summary="Types of Architectural Mechanism" border="1">
    <tbody valign="top">
        <tr>
            <th scope="col">
                Mechanism
            </th>
            <th scope="col">
                Description
            </th>
        </tr>
        <tr>
            <td>
                Analysis
            </td>
            <td>
                A conceptual solution to a common technical problem. For example,&nbsp;persistence is an abstract solution
                to the common requirement to store data. The purpose of this category is simply to identify the need for an
                Architectural Mechanism to be designed and implemented; and capture basic attributes for that mechanism.
            </td>
        </tr>
        <tr>
            <td>
                Design
            </td>
            <td>
                A refinement of an Analysis Mechanism into a concrete technology (for example, RDBMS). The purpose of this
                category is to enable initial design specifications to be produced and to guide precise product or
                technology selection.
            </td>
        </tr>
        <tr>
            <td>
                Implementation
            </td>
            <td>
                A further refinement of a Design Mechanism into a&nbsp;specific technology or product that implements the
                required Architectural Mechanism. For example, MySQL, as a database product, implements the Analysis
                Mechanism <strong>Persistence</strong> and Design Mechanism <strong>RDBMS.</strong> 
            </td>
        </tr>
    </tbody>
</table>
<br />
<p>
    The transition from one state to another&nbsp;can be obvious or intuitive. Therefore, it can be achieved in a matter of
    seconds. It can also require more considered analysis and design, thus take longer. The following diagram illustrates
    the transition of Architectural Mechanisms from one state to another.
</p>
<p>
    <strong>State Machine for Architectural Mechanisms</strong>
</p>
<p>
    <img style="WIDTH: 876px; HEIGHT: 115px" height="113" alt="Architectural Mechanism States"     src="openup_basic/guidances/concepts/resources/ArchMechanismsStatemachine.JPG" width="600" />&nbsp;<br />
</p>
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_0gvqoMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_HrZGIA4MEduibvKwrGxWxA</Concept>
					<Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
					<Concept>_0LcUkA4LEduibvKwrGxWxA</Concept>
					<Guideline>_4k_HsA4LEduibvKwrGxWxA</Guideline>
					<Guideline>_4k_HsQ4LEduibvKwrGxWxA</Guideline>
					<Guideline>_4k_Hsg4LEduibvKwrGxWxA</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="design_mechanism"
					briefDescription="A Design Mechanism is a concrete representation of an Architectural Mechanism."
					id="_w2ACwA4LEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Design Mechanism" variabilityType="na">
					<Presentation
						name="design_mechanism,_hNXugOUuEdqGCpzGJ4tJOw"
						briefDescription="" id="-EG22TRyJ5TDKW6U88AXfhw" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-23T01:26:28"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p align="left">
    A Design Mechanism is a concrete representation of an&nbsp;<a class="elementLink" href="./../../../openup_basic/guidances/concepts/architectural_mechanism,_mzxI0A4LEduibvKwrGxWxA.html" guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a>. It is refined from an <a class="elementLink" href="./../../../openup_basic/guidances/concepts/analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw.html" guid="_0gvqoMlgEdmt3adZL5Dmdw">Analysis Mechanism</a>&nbsp;and is further refined into an <a class="elementLink" href="./../../../openup_basic/guidances/concepts/implementation_mechanism,_0LcUkA4LEduibvKwrGxWxA.html" guid="_0LcUkA4LEduibvKwrGxWxA">Implementation Mechanism</a>&nbsp;as the design becomes more detailed.
</p>
<p align="left">
    Design Mechanisms are represented as specific design patterns and frameworks&nbsp;in the <a class="elementLink" href="./../../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html" guid="_0WuL8slgEdmt3adZL5Dmdw">Design</a>. They are used&nbsp;to guide development&nbsp;(see <a class="elementLink" href="./../../../openup_basic/guidances/guidelines/using_patterns,_0cr7cACrEdu8m4dIntu6jA.html" guid="_0cr7cACrEdu8m4dIntu6jA">Using Patterns</a>). Design Mechanisms should still be relatively independent of
    implementation but provide enough detailed information for implementation choices to be made and software to be
    developed with confidence.
</p>
<p align="left">
    See <a class="elementLink" href="./../../../openup_basic/guidances/guidelines/example_design_mechanisms,_4k_Hsg4LEduibvKwrGxWxA.html" guid="_4k_Hsg4LEduibvKwrGxWxA">Example: Design Mechanisms</a>.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_0gvqoMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
					<Concept>_0LcUkA4LEduibvKwrGxWxA</Concept>
					<Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
					<Guideline>_4k_Hsg4LEduibvKwrGxWxA</Guideline>
					<Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="implementation_mechanism"
					briefDescription="A representation of an Architecture Mechanism that uses a specific programming language or product."
					id="_0LcUkA4LEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Implementation Mechanism" variabilityType="na">
					<Presentation
						name="implementation_mechanisms,_3ANskOK5EdqHEo0wLIc5jg"
						briefDescription="" id="-Rex8oOBv985RruZNrCW0rg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-25T10:09:13"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    An Implementation Mechanism is a refinement of a corresponding Design Mechanism that uses, for example, a particular
    programming language and other implementation technology (such as a particular vendor's middleware product). An
    Implementation Mechanism may instantiate one or more idioms or implementation patterns.
</p>
<p>
    Review these points when you are considering Implementation Mechanisms:
</p>
<ul>
    <li>
        <p>
            <b>Determine the ranges of characteristics.</b> Take the characteristics that you identified for the Design
            Mechanisms into consideration to determine reasonable, economical, or feasible ranges of values to use in the
            Implementation Mechanism candidate.
        </p>
    </li>
    <li>
        <p>
            <b>Consider the cost of purchased components</b>. For Implementation Mechanism candidates, consider the cost of
            licensing, the maturity of the product, your history or relationship with the vendor, support, and so forth in
            addition to purely technical criteria.
        </p>
    </li>
    <li>
        <p>
            <b>Conduct a search for the right components, or build the components.</b> You will often find that there is no
            apparently suitable Implementation Mechanism for a particular Design Mechanism. This will either trigger a
            search for the right product or make the need for in-house development apparent. You may also find that some
            Implementation Mechanisms are not used at all.<br />
            <br />
            The choice of Implementation Mechanisms is based not only on a good match for the technical characteristics,
            but also on the non-technical characteristics, such as cost. Some of the choices may be provisional. Almost all
            have some risks attached to them. Performance, robustness, and scalability are nearly always concerns and must
            be validated by evaluation, exploratory prototyping, or inclusion in the architectural prototype.
        </p>
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_0gvqoMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
					<Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
					<Guideline>_4k_Hsg4LEduibvKwrGxWxA</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="example_analysis_mechanisms_descr"
					briefDescription="Examples showing how to describe Analysis Mechanisms"
					id="_4k_HsA4LEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Example Analysis Mechanism Descriptions"
					variabilityType="na">
					<Presentation
						name="new_guideline,_V4qNUAn_Edu0OeEVPFogVA" briefDescription=""
						id="-CJ--jlBqXi3FzdOM_dw5_w" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-07-11T12:10:58" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p> The following shows how to capture information for <a class="elementLinkWithType"
    href="file:///c|/documents%20and%20settings/rbalduino/my%20documents/tng/beacon/copyedit/structure_for_importing/openup_basic/openup_basic/guidances/concepts/analysis_mechanism,_0gvqomlgedmt3adzl5dmdw.html"
    guid="_0gvqoMlgEdmt3adZL5Dmdw">Concept: Analysis Mechanism</a>. </p>
<h3> Persistence </h3>
<p>For all classes with instances that may become persistent, you need to identify: 
  
<ul>
  <li> 
    <p><b>Granularity</b><strong>:</strong> What is the range of size of the objects 
      to keep persistent?</p>
  </li>
  <li> 
    <p><b>Volume</b><strong>: </strong>How many objects (number) do you need to 
      keep persistent?</p>
  </li>
  <li> 
    <p><b>Duration</b><strong>:</strong> How long does the object typically need 
      to be kept?</p>
  </li>
  <li> 
    <p><b>Retrieval mechanism</b><strong>: </strong>How is a given object uniquely 
      identified and retrieved? </p>
  </li>
  <li> 
    <p><b>Update frequency</b><strong>: </strong>Are the objects more or less 
      constant? Are they permanently updated? </p>
  </li>
  <li> 
    <p><b>Reliability</b><strong>: </strong>Do the objects need to survive a crash 
      of the process, the processor, or the whole system? </li>
</ul>
<h3>Communication </h3>
<p>For all model elements that need 
  to communicate with components or services that are running in other processes 
  or threads, you need to identify </p>
<ul>
  <li> 
    <p><b>Latency</b><strong>: </strong>How 
      fast must processes communicate with another? </p>
  </li>
  <li> 
    <p><b>Synchronicity</b><strong>: 
      </strong>Asynchronous communication. </p>
  </li>
  <li> 
    <p><b>Size of message</b><strong>: 
      </strong>A spectrum might be more appropriate than a single number. </p>
  </li>
  <li> 
    <p><strong>Protocol:</strong> Flow control, buffering, 
      and so on.</p>
  </li>
</ul>
<p> Notice that there is no design-level 
  information or specification here. Instead, this is more about collating and 
  refining architecturally significant requirements. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="example_architectural_mechanisms"
					briefDescription="Commonly encountered architectural mechanisms"
					id="_4k_HsQ4LEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Example Architectural Mechanisms"
					variabilityType="na">
					<Presentation
						name="example_architectural_mechanisms,_4k_HsQ4LEduibvKwrGxWxA"
						briefDescription="" id="-FqP5LgLVrlhvFC_eeYd_vA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-19T10:56:22"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    Here are some examples of commonly encountered architectural mechanisms.<br />
    <br />
</p>
<table cellspacing="0" cellpadding="2" width="85%" summary="Example Architectural Mechanisms" border="1" valign="top">
    <caption>
        <strong>Example Architectural Mechanisms</strong>
    </caption>
    <tbody>
        <tr>
            <th scope="col">
                Architectural Mechanism
            </th>
            <th scope="col">
                Description
            </th>
        </tr>
        <tr>
            <td>
                Availability
            </td>
            <td>
                The percentage of time that the system must be available for use, including planned outages.
            </td>
        </tr>
        <tr>
            <td>
                Archiving
            </td>
            <td>
                Provides a means to move data from active storage when it has reached a specific state.
            </td>
        </tr>
        <tr>
            <td>
                Auditing
            </td>
            <td>
                Provides audit trails of system execution.
            </td>
        </tr>
        <tr>
            <td>
                Communication
            </td>
            <td>
                A mechanism for handling inter-process communication.
            </td>
        </tr>
        <tr>
            <td>
                Debugging
            </td>
            <td>
                Provides elements to support application debugging.
            </td>
        </tr>
        <tr>
            <td>
                Disaster Recovery
            </td>
            <td>
                Provides facilities to recover systems, application, data and networks.
            </td>
        </tr>
        <tr>
            <td>
                Error Management
            </td>
            <td>
                Allows errors to be detected, propagated, and reported.
            </td>
        </tr>
        <tr>
            <td>
                Event Management
            </td>
            <td>
                Supports the use of asynchronous events within a system.
            </td>
        </tr>
        <tr>
            <td>
                Graphics
            </td>
            <td>
                Supports user interface services, such as 3D rendering.
            </td>
        </tr>
        <tr>
            <td>
                Information Exchange
            </td>
            <td>
                Supports information interchange accross technical and organisational boundaries, with appropriate semantic
                and format translations.
            </td>
        </tr>
        <tr>
            <td>
                Licensing
            </td>
            <td>
                Provides services for acquiring, installing, tracking, and monitoring license usage. Might be required as
                part of authorising corporate bodies.
            </td>
        </tr>
        <tr>
            <td>
                Localisation / Internationalisation
            </td>
            <td>
                Provides facilities for supporting multiple human languages and rendering the language preffered by the
                user.
            </td>
        </tr>
        <tr>
            <td>
                Mail
            </td>
            <td>
                Services that allow applications to send and receive electronic mail.
            </td>
        </tr>
        <tr>
            <td>
                Mega-data
            </td>
            <td>
                Support for handling very large amounts of data.
            </td>
        </tr>
        <tr>
            <td>
                Memory Management
            </td>
            <td>
                Services for abstracting how memory is allocated and freed.
            </td>
        </tr>
        <tr>
            <td>
                Meta-data
            </td>
            <td>
                Supports the runtime introspection of components and data.
            </td>
        </tr>
        <tr>
            <td>
                Online help
            </td>
            <td>
                Provides online help capability
            </td>
        </tr>
        <tr>
            <td>
                Persistence
            </td>
            <td>
                Services to&nbsp;handle&nbsp;the reading and&nbsp;writing of&nbsp;stored&nbsp;data.
            </td>
        </tr>
        <tr>
            <td>
                Printing
            </td>
            <td>
                Provides facilities for interfacing with printers.
            </td>
        </tr>
        <tr>
            <td>
                Process Management
            </td>
            <td>
                Provides support for the management of processes and threads.
            </td>
        </tr>
        <tr>
            <td>
                Reporting
            </td>
            <td>
                Provides flexible reporting facilities
            </td>
        </tr>
        <tr>
            <td>
                Resource Management
            </td>
            <td>
                Provides support for the management of expensive resources, such as database connections.
            </td>
        </tr>
        <tr>
            <td>
                Scheduling
            </td>
            <td>
                Provides the ability to execute tasks at a specified time.
            </td>
        </tr>
        <tr>
            <td>
                Security
            </td>
            <td>
                Provides services to protect access to certain resources or information.
            </td>
        </tr>
        <tr>
            <td>
                System Management
            </td>
            <td>
                Services that facilitate management of applications in an operational environment.
            </td>
        </tr>
        <tr>
            <td>
                Time
            </td>
            <td>
                Services to synchronise time on a network, and to translate times into different time zones.
            </td>
        </tr>
        <tr>
            <td>
                Transaction Management
            </td>
            <td>
                A mechanism for handling ACID transactions.
            </td>
        </tr>
        <tr>
            <td>
                Workflow
            </td>
            <td>
                Support for the movement of documents and other items of work, typically through an organisation.
            </td>
        </tr>
    </tbody>
</table>
<br />
<br />
<br />
<br />
 
<p>
    <br />
    <br />
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="example_design_mechanisms"
					briefDescription="Examples that show how to describe design mechanisms"
					id="_4k_Hsg4LEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Example: Design Mechanisms"
					variabilityType="na">
					<Presentation
						name="new_guideline,_K32gYAoBEdu0OeEVPFogVA" briefDescription=""
						id="-mAo18f36rZ1R98kpZX7HMw" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-07-11T12:11:18" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<h3> Design 
  Mechanism Characteristics and Mapping</h3>
<p> Consider the analysis mechanism for <strong>persistence</strong>. </p>
<ul>
  <li> There might be a need for many (2,000) small objects (200 bytes each) to 
    be stored for a few seconds, with no need for them to 
    survive thereafter. </li>
  <li> There might be a need for several <strong></strong>very large <strong></strong> 
    objects to be stored permanently on disk for several months, never updated, 
    but with sophisticated means of retrieval. </li>
</ul>
<p> These objects require different support 
  for persistency. The best option depends on the characteristics 
  of the design mechanism:</p>
<ul>
    
  <li> <b>In-memory storag</b><strong>e: </strong>For up to 1 Mb total (size x 
    volume); very fast access for read, write, update. </li>
  <li> <b>Flash card</b><strong>:</strong> For up to 8 Mb; slow update and write 
    access; moderate read access. </li>
  <li> <b>Binary file</b><strong>:</strong> For 100 Kb to 200 Mb; slow update; 
    slow read-and-write access. </li>
  <li> <b>Database management system (DBMS)</b><strong>: </strong>For 100 Kb and 
    upward (essentially no upper limit); even slower update and read-and-write 
    access. </li>
</ul>
<p> Note that these speeds are rated as slow only as compared 
  to in-memory storage. Obviously, in some environments, caching can improve 
  apparent access times. (See Figure 1.)</p>
<blockquote>
    
  <p align="center"> <img height="221" title="Figure 1. Mapping Analysis Mechanisms to Design Mechanisms and Classes" alt="Mapping Analyis Mechanisms to Design Mechanisms and Classes" src="openup_basic/guidances/guidelines/resources/co_dmec1.gif"
        width="372" /> </p>
</blockquote>
<div align="center">
  <p><strong>Figure 1. Mapping Analysis Mechanisms to Design Mechanisms and Classes</strong></p>
  <h3 align="left">Mapping Design Mechanisms to Implementation Mechanisms </h3>
  <p align="left"> The <b>persistence</b> design mechanisms can be mapped to implementation 
    mechanisms as Figure 2 shows: </p>
  <p align="center"> <img height="216" title="Figure 2. How persistence design mechanism map to implementation mechanism" alt="How persistence design mechanism map to implementation mechanism" src="openup_basic/guidances/guidelines/resources/co_dmec2.gif" width="325" /></p>
  <p align="center"><strong>Figure 2. How persistence design 
    mechanism map to implementation mechanism</strong> </p>
  <p align="left">A possible mapping between analysis mechanisms and design mechanisms. 
    Dotted arrows mean "is specialized by," implying that the characteristics 
    of the design mechanisms are inherited from the analysis mechanisms but that 
    they will be specialized and refined. </p>
  <p align="left"> After you have finished optimizing the mechanisms, the following 
    mappings exist (see Figure 3): </p>
  <blockquote> 
    <p align="center"> <img height="110" title="Figure 3. Mapping structure after optimizing the mechanisms" alt="Illustration of mapping structure after optimizing the mechanisms" src="openup_basic/guidances/guidelines/resources/co_dmec3.gif" width="418" /> 
    </p>
    <p align="center" class="picturetext"><strong>Figure 3. Mapping structure 
      after optimizing the mechanisms </strong></p>
    <p align="left" class="picturetext">The design decisions for a client class 
      in terms of mappings between mechanisms. The <font face="Courier New, Courier, mono">Flight 
      </font>class needs two forms of persistency<strong>:</strong> <strong>in-memory 
      storage</strong>, implemented by a predefined  
      library routine, and <strong>a database,</strong> implemented with an off-the-shelf 
      ObjectStorage product. </p>
  </blockquote>
  <p align="left"> The map must be navigable in both directions to make it easy 
    to determine client classes when changing implementation mechanisms. </p>
  <h4 align="left">Refining 
    the mapping between design and implementation mechanisms </h4>
</div>
<p> Initially, the mapping between design mechanisms and implementation mechanisms 
  is likely to be less than optimal, but it will get the project running, identify 
  unforeseen risks, and trigger further investigations and evaluations. As the 
  project continues and you gain more knowledge, you will need to refine the mapping. 
</p>
<p> Proceed iteratively to refine the mapping between design and implementation 
  mechanisms. Eliminate <strong></strong>redundant 
  paths, working both top-down and bottom-up. </p>
<p> <b>Working top-down: </b>When working top-down (from top to bottom), new and 
  refined use-case realizations will put new requirements on the necessary design 
  mechanisms through the analysis mechanisms that you need. These new requirements 
  might uncover additional characteristics of a design mechanism, forcing a split 
  between mechanisms. A compromise between the system's complexity and its performance 
  is also necessary: </p>
<ul>
    <li>
        Too many different design mechanisms make the system too complex.
    </li>
  <li> Too few design mechanisms can create performance problems for implementation 
    mechanisms that stretch the limits of the reasonable ranges of the values 
    of their characteristics. </li>
</ul>
<p> <b>Working bottom-up: </b>When working bottom-up (from bottom to top) and 
  investigating the available implementation mechanisms, you might find products 
  that satisfy several design mechanisms at once, but force some adaptation or 
  repartitioning of your design mechanisms. You want to minimize the number of 
  implementation mechanisms you use, but too few of them can also lead to performance 
  problems. </p>
<p> After you decide to use a DBMS to store class A objects, you might be tempted 
  to use it to store all objects in the system. This could be very inefficient 
  or very cumbersome. Not all objects that require persistency need to be stored 
  in the DBMS. Some objects may be persistent, but one application may access 
  them frequently, while other applications access them only infrequently. A hybrid 
  strategy, in which the object is read from the DBMS into memory and periodically 
  synchronized, may be the best approach. </p>
<blockquote>
  <p class="example"> <b>Example</b> </p>
  <p class="example"> A flight can be stored both in memory for fast access and 
    in a DBMS for long-term persistency. However, this triggers a need for a mechanism 
    to synchronize both. </p>
</blockquote>
<p> It is not uncommon to have more than one design mechanism associated with 
  a client class as a compromise between different characteristics. </p>
<p> Because implementation mechanisms often come in bundles in off-the-shelf components 
  (operating systems and middleware products), some optimization based on cost, 
  impedance mismatch, or uniformity of style needs to occur. Also, mechanisms 
  are often interdependent, which makes clear separation of services into design 
  mechanisms difficult. </p>
<blockquote> 
  <p class="example"> <b>Examples</b> </p>
  <ul>
    <li> The notification mechanism can be based on the inter-process communication 
      mechanism. </li>
    <li> The error reporting mechanism can be based on the persistency mechanism. 
    </li>
  </ul>
</blockquote>
<p> Refinement continues over the whole Elaboration phase, and is always a compromise 
  between: </p>
<ul>
    
  <li> An exact fit with the requirements of the clients of the design mechanism, 
    in terms of the expected characteristics. </li>
    <li>
        The cost and complexity of having too many different implementation mechanisms to acquire and integrate.
    </li>
</ul>
<p> The overall goal is always to have a simple, clean set of mechanisms that 
  give conceptual integrity, simplicity, and elegance to a large system. </p>
<h3> Describing Design Mechanisms </h3>
<p>
    As with analysis mechanisms, design mechanisms can be modeled using a collaboration, which may instantiate one or more
    architectural or design patterns (see <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/using_patterns,_0cr7cACrEdu8m4dIntu6jA.html"
    guid="_0cr7cACrEdu8m4dIntu6jA">Concept: Using Patterns</a>).
</p>
<blockquote>
  <p> <strong>Example: A persistence mechanism </strong></p>
  <p> This example uses an instance of a pattern for RDBMS-based persistency drawn 
    from <strong></strong><a 
    href="http://java.sun.com/products/jdbc/index.html" target="_blank" ><u>Java&#8482; 
    Database Connectivity (JDBC)</u></a>. Although we present the design here, 
    JDBC supplies actual code for some of the classes. Therefore, it is a short 
    step from what is presented here to an implementation mechanism. </p>
</blockquote>
<p> Figure 4, titled <strong> JDBC: Static view,</strong> shows the classes (actually, 
  the classifier roles) in the collaboration. <strong></strong></p>
<p align="center"> <img height="382" title="Figure 4. JDBC: Static View" alt="Diagram of the figure titled Static View: JDBC shows the classes (actually, the classifier roles) in the collaboration. " src="openup_basic/guidances/guidelines/resources/jdbc1.gif" width="571" /></p>
<p align="center"> <strong>Figure 4. JDBC: Static view </strong></p>
<p align="left"> The yellow classes are the ones that were supplied. The others, 
  in tan (<font face="Courier New, Courier, mono">myDBClass</font> and so on), 
  were bound by the designer to create the mechanism. </p>
<p align="left"> In a Java database class, a client will work with a <b>DBClass</b> 
  to read and write persistent data. The <font face="Courier New, Courier, mono">DBClass 
  </font>is responsible for accessing the JDBC database, using the <b>DriverManager</b> 
  class. Once a database <b>connection</b> is open, the <font face="Courier New, Courier, mono">DBClass 
  </font>can then create SQL statements that will be sent to the underlying RDBMS 
  and executed using the <b>Statement</b> class. The <font face="Courier New, Courier, mono">Statement 
  </font>class is what communicates with the database. The result of the SQL query 
  is returned in a <b>ResultSet</b> object.<span style="mso-spacerun: yes">&nbsp;</span> 
</p>
<p align="left"> The <b>DBClass</b> is responsible for making another class instance 
  persistent. It understands the OO-to-RDBMS mapping and can interface with the 
  RDBMS. The<font face="Courier New, Courier, mono"> DBClass</font> flattens the 
  object, writes it to the RDBMS, and then reads the object data from the RDBMS 
  and builds the object. Every class that is persistent has a corresponding <font face="Courier New, Courier, mono">DBClass</font>.&nbsp; 
</p>
<p align="left"> The <b>PersistentClassList</b> is used to return a set of persistent 
  objects as a result of a database query, for example: <font face="Courier New, Courier, mono">DBClass.read()</font>. 
</p>
<p align="left"> A series of dynamic views follow, in Figures 5 thorough 9, to 
  show how the mechanism actually works. <strong></strong></p>
<p align="center"> <img height="146" title="Figure 5. JDBC: Initialize" alt="Diagram of JDBC: Initialize" src="openup_basic/guidances/guidelines/resources/jdbc2.gif" width="285" /> 
</p>
<p align="center"> <b>Figure5. JDBC: Initialize</b> </p>
<p>
    Initialization must occur before any persistent class can be accessed.
</p>
<p> To initialize the connection to the database, the <font face="Courier New, Courier, mono">DBClass</font> 
  must load the appropriate driver by calling the <font face="Courier New, Courier, mono">DriverManager 
  getConnection() </font>operation with a URL, user, and password. </p>
<p> The operation <font face="Courier New, Courier, mono">getConnection()</font> 
  attempts to establish a connection to the given database URL. The driver manager 
  attempts to select an appropriate driver from the set of registered JDBC drivers. 
</p>
<blockquote> 
  <p> <strong>Parameters</strong></p>
  <blockquote> 
    <p> <b>URL</b><strong>: </strong>A database URL in the form <font face="Courier New, Courier, mono">jdbc:subprotocol:subname</font>. 
      This URL is used to locate the actual database server and is not Web-related, 
      in this instance. </p>
    <p> <b>user</b><strong>: </strong>The database user who is making the connection.</p>
    <p> <b>pass</b><strong>:</strong> The user's password </p>
  </blockquote>
  <p> <strong>Returns</strong></p>
  <blockquote>
    <p> A connection to the URL.</p>
  </blockquote>
</blockquote>
<p align="center"> <img height="253" title="Figure 6. JDBC: Create" alt="Diagram of JDBC: Crreate" src="openup_basic/guidances/guidelines/resources/jdbc3.gif" width="478" /> 
</p>
<p align="center"> <b>Figure 6. JDBC: Create</b> </p>
<p align="left"> To create a new class, the persistency client asks the <font face="Courier New, Courier, mono">DBClass</font> 
  to create the new class. The <font face="Courier New, Courier, mono">DBClass</font> 
  creates a new instance of <font face="Courier New, Courier, mono">PersistentClass 
  </font>with default values. The<font face="Courier New, Courier, mono"> DBClass 
  </font>then creates a new<font face="Courier New, Courier, mono"> Statement</font> 
  using the <font face="Courier New, Courier, mono">Connection class createStatement()</font> 
  operation. The<font face="Courier New, Courier, mono"> Statement </font>runs, 
  and the data is added to the database.</p>
<p align="center"> <img height="352" title="Figure 7. JDBC: Read" alt="Diagram of JDBC: Read" src="openup_basic/guidances/guidelines/resources/jdbc4.gif" width="600" /> 
</p>
<p align="center"> <b>Figure 7. JDBC: Read</b> </p>
<p> To read a persistent class, the persistency client asks the <font face="Courier New, Courier, mono">DBClass</font> 
  to read. The <font face="Courier New, Courier, mono">DBClass </font>creates 
  a new <font face="Courier New, Courier, mono">Statement</font> using the <font face="Courier New, Courier, mono">Connection 
  class createStatement() </font>operation. The Statement is executed, and the 
  data is returned in a <font face="Courier New, Courier, mono">ResultSet</font> 
  object. The<font face="Courier New, Courier, mono"> DBClass </font>then creates 
  a new instance of the <font face="Courier New, Courier, mono">PersistentClass 
  </font>and populates it with the retrieved data. The data is returned in a collection 
  object, an instance of the <font face="Courier New, Courier, mono">PersistentClassList 
  </font>class. </p>
<p> <strong>Note: </strong></p>
<p>The string passed to <font face="Courier New, Courier, mono">executeQuery() 
  </font>is not necessarily exactly the same string as the one passed into the 
  <font face="Courier New, Courier, mono">read()</font>. The <font face="Courier New, Courier, mono">DBClass</font> 
  will build the SQL query to retrieve the persistent data from the database, 
  using the criteria passed into the <font face="Courier New, Courier, mono">read()</font>. 
  This is because it is not useful for the client of the <font face="Courier New, Courier, mono">DBClass</font> 
  to know the internal structure of the database to create a valid query. This 
  knowledge is encapsulated within <font face="Courier New, Courier, mono">DBClass</font>. 
</p>
<p align="center"> <img height="255" title="Figure 8. JDBC: Update" alt="Diagram of JDBC: Update" src="openup_basic/guidances/guidelines/resources/jdbc5.gif" width="473" /> 
</p>
<p align="center"> <b>Figure 8. JDBC: Update</b> </p>
<p> To update a class, the persistency client asks the<font face="Courier New, Courier, mono"> 
  DBClass</font> to update. The <font face="Courier New, Courier, mono">DBClass 
  </font>retrieves the data from the given <font face="Courier New, Courier, mono">PersistentClass 
  </font>object, and creates a new <font face="Courier New, Courier, mono">Statement 
  </font>using the <font face="Courier New, Courier, mono">Connection class createStatement() 
  </font>operation. Once the <font face="Courier New, Courier, mono">Statement</font> 
  is built, the database is updated with the new data from the class. </p>
<p> <strong>Remember: </strong>It is the job of the <font face="Courier New, Courier, mono">DBClass</font> 
  to flatten the <font face="Courier New, Courier, mono">PersistentClass </font>and 
  write it to the database. That is why it must be retrieved from the given <font face="Courier New, Courier, mono">PersistentClass 
  </font>before creating the SQL <font face="Courier New, Courier, mono">Statement</font>. 
</p>
<p> <strong>Note: </strong></p>
<p>In the above mechanism, the <font face="Courier New, Courier, mono">PersistentClass</font> 
  must provide access routines for all persistent data so that<font face="Courier New, Courier, mono"> 
  DBClass</font> can access them. This provides external access to certain persistent 
  attributes that would have been private otherwise. This is a price you have 
  to pay to pull the persistence knowledge out of the class that encapsulates 
  the data.</p>
<p align="center"> <img height="255" title="Figure 9. JDBC: Delete" alt="Diagram of JDBC: Delete" src="openup_basic/guidances/guidelines/resources/jdbc6.gif" width="473" /> 
</p>
<p align="center"> <b>Figure 9. JDBC: Delete</b></p>
<p align="left"> To delete a class, the persistency client asks the <font face="Courier New, Courier, mono">DBClass</font> 
  to delete the <font face="Courier New, Courier, mono">PersistentClass</font>. 
  The <font face="Courier New, Courier, mono">DBClass </font>creates a new <font face="Courier New, Courier, mono">Statement</font> 
  using the <font face="Courier New, Courier, mono">Connection class createStatement() 
  </font>operation. The <font face="Courier New, Courier, mono">Statement </font>is 
  executed and the data is removed from the database. </p>
<p align="left"> In the actual implementation of this design, you would make some 
  decisions about the mapping of <font face="Courier New, Courier, mono">DBClass</font> 
  to the persistent classes, such as having one <font face="Courier New, Courier, mono">DBClass</font> 
  per persistent class and allocating them to appropriate packages. These packages 
  will depend on<strong> </strong>the supplied java.sql file (see <a href="http://java.sun.com/products/jdbc/index.jsp">JDBC: 
  API Documentation</a>)<strong> </strong>package that contains the supporting 
  classes <font face="Courier New, Courier, mono">DriverManager, Connection, Statement</font>, 
  and <font face="Courier New, Courier, mono">ResultSet</font>. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="architecturally_significant_requirements"
					briefDescription="Some requirements have a profound impact on the architecture of the solution and require special attention."
					id="_HrZGIA4MEduibvKwrGxWxA" orderingGuide="" suppressed="false"
					presentationName="Architecturally Significant Requirements"
					variabilityType="na">
					<Presentation
						name="new_concept,_eFElAOK2EdqHEo0wLIc5jg" briefDescription=""
						id="-EytH4BCNGiHF6pZrp8ISCw" orderingGuide="" suppressed="false"
						authors="Mark Dickson" changeDate="2006-07-07T01:53:04"
						changeDescription="First Draft" version="1.0">
						<MainDescription><![CDATA[<p> Not all requirements have equal significance in the architecture.&nbsp;Some 
  play an important role in determining the architecture of the 
  system, but others do not. </p>
<p> Deciding whether a specific requirement is architecturally significant is 
  often a matter of judgment. Typically, these are requirements that are 
  technically challenging, technically constraining, or central to the 
  system's purpose. </p>
<p> These are good examples of Architecturally Significant Requirements:</p>
 
<ul>
  <li> The system must record every modification to customer records for audit 
    purposes.</li>
  <li> The system must respond within 5 seconds.</li>
  <li> The system must&nbsp;deploy on Microsoft Windows XP and Linux. </li>
  <li> The system must encrypt all network traffic.</li>
  <li> The ATM system must dispense cash on&nbsp;demand&nbsp;to validated account 
    holders with sufficient cleared funds.</li>
</ul>
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="business_pattern"
					briefDescription="A re-usable portion of design that can be applied to multiple domain-specific activities. "
					id="_Z53x0BapEduSTJywppIxVQ" orderingGuide="" suppressed="false"
					presentationName="Business Pattern" variabilityType="na">
					<Presentation
						name="new_concept,_RoSdMBWYEduCK502eDgjUQ" briefDescription=""
						id="-Of51hmgdsO_U2-pnbJ67Cg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-07-21T08:59:56" changeDescription=""
						version="">
						<MainDescription><![CDATA[<p> Business Patterns are a form of Design Pattern&nbsp;(see <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/using_patterns,_0cr7cACrEdu8m4dIntu6jA.html"
    guid="_0cr7cACrEdu8m4dIntu6jA">Concept: Using Patterns</a>) and are the business-domain 
  counterpart of <a
    class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/architecture_mechanism,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Concept: Architectural Mechanism</a>. Just as 
  similar problems in the technical domain may be solved by using Architecture 
  Mechanisms, similar problems in the business domain can be solved by using Business 
  Patterns. </p>
<p> Business Patterns are often found in COTS products. For example, packaged 
  applications that support Enterprise Resource Planning or Customer Relationship 
  Management ship with functionality to support a variety of generic business 
  processes. Similarly, it is frequently possible to identify related or similar 
  behavior in the Use Case&nbsp;Scenarios&nbsp;and thereby derive generic designs 
  that you can use in the design of the system. These elements of generic behavior 
  can be&nbsp;expressed as Design&nbsp;Patterns and applied to the system design. 
</p>
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
					<Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="refine_architecture"
					briefDescription="This guideline provides additional information to support the ongoing refinement and development of the architecture."
					id="_mDf2EBapEduSTJywppIxVQ" orderingGuide="" suppressed="false"
					presentationName="Refine the Architecture" variabilityType="na">
					<Presentation
						name="refine_architecture,_mDf2EBapEduSTJywppIxVQ"
						briefDescription="" id="-t7mQSRPYITkMoYRVNz7jQg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-20T11:08:39"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<h4>
    Identify architectural drivers and scenarios
</h4>
<p>
    <strong>Architectural drivers</strong> are the combination of functional requirements and&nbsp;quality attributes that
    shape the architecture. Typically, the drivers are a subset of the&nbsp;<a class="elementLink" href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html" guid="_BVh9cL-CEdqb7N6KIeDL8Q">Supporting Requirements</a> that address attributes such as modifiability, performance,
    safety, reliability, and security. The drivers&nbsp;can also&nbsp;address functional aspects of the requirements that
    provide essential system services.
</p>
<p>
    The requirements of architectural drivers are often satisfied by the development of software that implements&nbsp;<a class="elementLink" href="./../../../openup_basic/guidances/concepts/architectural_mechanism,_mzxI0A4LEduibvKwrGxWxA.html" guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a>. The features required by these mechanisms can be implicit
    in the use cases that describe the functionality of the system. These are used to guide the design of
    each&nbsp;architectural mechanism. It may sometimes be useful to devise additional use cases and scenarios to
    specifically describe the architectural mechanism. For example&nbsp;<strong>Log on to Application</strong> is a use
    case commonly associated with mechanisms related to security, but&nbsp;frequently overlooked when users alone specify
    software requirements.
</p>
<p>
    It is important to specify qualities precisely. For example, if you want a system to be secure, specify the types of
    threats. Quality scenarios are one way to express desired qualities in collaboration with the system stakeholders [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">KAZ04</a>]. Walk through things that could happen to the system and How it would
    respond. <strong>Use-case scenarios</strong> &nbsp;focus on run-time behavior where the stakeholder is the user.
    <strong>Quality scenarios</strong> encompass other interactions with the system as well, such as system maintenance
    staff modifying the system.
</p>
<p>
    For each quality attribute (such as usability, reliability, performance, or&nbsp;security), several scenarios may be
    documented (for instance, security scenarios for denial of service and unauthorized access). A good scenario makes
    clear what the stimulus is, what causes it, and what responses are appropriate.
</p>
<p>
    Example:
</p>
<blockquote>
    <p>
        During peak operation, an unauthorized intruder tries to download prohibited data through the system
        administrator’s interface. The system detects the attempt, blocks access, and notifies the supervisor within 15
        seconds.
    </p>
</blockquote>
<p>
    After you have collected the use cases and scenarios, you need to establish priorities for them. Use scenarios to
    realize requirements, so that their mapping onto the architecture, their impact, and their interactions can be
    understood.
</p>
<h4>
    Identify design mechanisms
</h4>
<p>
    Consider each high-priority quality scenario, and map each of these onto the architecture. This step raises the set of
    infrastructure services that determine issues to the architectural level. Examples: :
</p>
<ul>
    <li>
        How system activities are scheduled and coordinated
    </li>
    <li>
        How data moves through the system
    </li>
    <li>
        How faults are propagated and handled
    </li>
    <li>
        How security is achieved
    </li>
    <li>
        How performance goals are measured and met
    </li>
    <li>
        How new components are integrated
    </li>
    <li>
        How well the system scales
    </li>
</ul>
<p>
    It is this set of infrastructure services, far more than the functional goals of the system, that determine the form of
    the architecture.
</p>
<p>
    Propose mechanisms or tactics for responding to quality scenarios. These are represented by the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html" guid="_w2ACwA4LEduibvKwrGxWxA">Design Mechanism</a>. There are, for example, sets of engineering design principles and
    patterns for dealing with performance constraints, modifiability, or fault tolerance. The Software Engineering
    Institute (SEI) at Carnegie Mellon University has proposed tactics for six quality attributes [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">KAZ00</a>]:
</p>
<ol>
    <li>
        Availability
    </li>
    <li>
        Modifiability
    </li>
    <li>
        Security
    </li>
    <li>
        Performance
    </li>
    <li>
        Usability
    </li>
    <li>
        Testability
    </li>
</ol>
<h4>
    Identify reuse opportunities
</h4>
<p>
    After looking for similar behavior and returned values, then look for similarity of parameters. If their
    interfaces&nbsp;are not an exact match for the component interfaces being proposed, you can modify the
    proposed&nbsp;signatures to increase the degree of reuse. Some design mechanisms, such as performance or security
    requirements, may disqualify a component from reuse even when there is&nbsp;a perfect match between operation
    signatures.
</p>
<p align="left">
    A common set of components may exist that provides many of the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/architectural_mechanism,_mzxI0A4LEduibvKwrGxWxA.html" guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a> that you need&nbsp;for the new system. These components may
    be available either because they were developed or purchased previously for&nbsp;similar systems. Given their
    suitability and compatibility within the software architecture, there may be a need to reverse-engineer these
    components to represent them in a design model and reuse them in a project.
</p>
<p align="left">
    Similar thinking applies to&nbsp;existing databases. Part of the information to be used by the application under
    development may already reside in a database. You may be able to get the classes that represent the database structures
    that hold this information by reverse-engineering the database.
</p>
<h4 align="left">
    Identify architecturally significant design elements
</h4>
<p align="left">
    Consider&nbsp;each high-priority use case in turn while mapping use case scenarios&nbsp;onto the architecture. Walk
    through the actions that the use case initiates and highlight the areas of the architecture that participate in
    realizing, or implementing, the use case.
</p>
<p>
    Identifying components will help hide the complexity of the system and help you work at a higher level. Components need
    to be internally cohesive and to provide external services through a limited interface. Component identification can
    be&nbsp;based on architectural layers, deployment choices, or key abstractions. Ask yourself these questions:
</p>
<ul>
    <li>
        What is logically or functionally related (same use case or service, for example)?
    </li>
    <li>
        What entities provide services to multiple others?
    </li>
    <li>
        What entities depend on each other? Strongly or weakly?
    </li>
    <li>
        What entities should you be able to exchange independently from others?
    </li>
    <li>
        What will run on the same processor or network node?
    </li>
    <li>
        What parts are constrained by similar performance requirements?
    </li>
</ul>
<p>
    Each component includes entities from the problem domain, control classes that coordinate complex tasks within
    components, and interfaces that handle communication with the environment. The interface for each instantiated element
    is identified. At this point, interfaces do not need to be as detailed as a signature, but they do need to document
    what the elements need, what they can use, and what they can depend on.
</p>
<p>
    Identified patterns define the types of elements, but not a specific number. Apply the chosen patterns to define a new
    set of elements that conform to the patterns. Functionality will be allocated to the instantiated elements.
</p>
<h4>
    Define development and test architectures
</h4>
<p>
    The development and test architectures may be different from the target production implementation.
</p>
<ul>
    <li>
        Additional software may need to be developed to support testing.
    </li>
    <li>
        Alternative deployment configurations may need to be defined in response to constraints on development hardware.
    </li>
    <li>
        Multiple environments may be required to support different categories of tests.
    </li>
</ul>
<p>
    In each case, you need to specify the architecture. Also, be sure to consider the impact on the quality of the overall
    architecture.
</p>
<h4>
    Document and communicate decisions
</h4>
<p>
    You can document and communicate your decisions as many ways as you wish:
</p>
<ul>
    <li>
        Publication of&nbsp;reference source code
    </li>
    <li>
        Publication of&nbsp;reference models
    </li>
    <li>
        Publication of&nbsp;software architecture documentation
    </li>
    <li>
        Formal&nbsp;presentations of the material
    </li>
    <li>
        Informal walkthroughs of the architecture
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_Z53x0BapEduSTJywppIxVQ</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="demonstrate_architecture"
					briefDescription="Guidelines for the Demonstrate the Architecture task."
					id="_ZtFfcCkzEduLGM8dfVsrKg" orderingGuide="" suppressed="false"
					presentationName="Demonstrate the Architecture"
					variabilityType="na">
					<Presentation
						name="new_guideline,_ZtFfcCkzEduLGM8dfVsrKg" briefDescription=""
						id="-fOaK9KC1e2WhLCoNcMSvww" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-28T08:27:29" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<h4>
    Define objectives
</h4>
<p>
    List the questions and unknown quantities about the architecture that must be understood to be reasonably confident of
    the architectural approach. These issues guide the construction of the proof of concept. The success of the proof of
    concept is measured by its ability to illuminate these issues.
</p>
<p>
    The objectives describe what parts of the architecture are at risk and need to be understood before investing
    significant effort in the project. For example, if new commercial off-the-shelf (COTS) software will be part of the
    architecture, it may be useful to understand how the system under development will integrate with the COTS software and
    to understand what problems other organizations have had with integrating the third-party software.
</p>
<h4>
    Decide on construction approach
</h4>
<p>
    Select a&nbsp;format that
</p>
<ul>
    <li>
        Illustrates the architectural approach of the system.
    </li>
    <li>
        Addresses the objectives of the solution that you have defined.
    </li>
    <li>
        Identifies elements that&nbsp;are&nbsp;essential to&nbsp;the delivery of&nbsp;architecturally significant
        requirements, such as performance or security.
    </li>
</ul>
<p>
    The proof of concept can take many forms, depending on the novelty of the architecture and the difficulty of the
    requirements. See <a class="elementLink" href="./../../../openup_basic/guidances/guidelines/arch_poc,_THh0cMm_EdqGlYjw6LZtjg.html" guid="_THh0cMm_EdqGlYjw6LZtjg">Architectural Proof of Concept</a>&nbsp;for guidance on selecting an approach and
    validating the proof of concept.
</p>
<h4>
    Construct the architectural proof of concept
</h4>
<p>
    This effort could take less than a day&nbsp;or&nbsp;up to a few days, depending on the construction approach that you
    select.&nbsp;However, a&nbsp;rare worst-case scenario could require constructing and validating&nbsp;up to 80% of the
    actual architecture before achieving enough confidence that it&nbsp;will support the requirements.
</p>
<h4>
    Verify the proof of concept
</h4>
<p>
    Return to the objectives that you defined for the proof of concept. Verify that the proof of concept shows that you can
    meet those objectives and that the proof answers questions or mitigates risks posed by the architectural concept.
</p>
<p>
    Enhance the proof of concept if unanswered questions or unmitigated risks remain. This may require a different
    construction approach for the proof of concept.
</p>
<h4>
    Examine the proof of concept
</h4>
<p>
    The form of this examination depends on the construction approach. If you use a prototype for the proof of concept, it
    must be run and evaluated. If you use a model (expressed in UML, for example), it must be reviewed and evaluated by the
    appropriate technical people. Use the list of objectives to guide how to assess the proof of concept. The proof of
    concept must be measured against each objective that you created in previous steps.
</p>
<p>
    It is possible that the proof of concept&nbsp;will indicate that a different architectural approach is required. In
    other words, the proof of concept was successful in that it answered important questions about the architectural
    approach, and those answers indicate the approach will not work. In this case, you will need a different architectural
    approach, which may require a new proof of concept.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Guideline>_THh0cMm_EdqGlYjw6LZtjg</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="architectural_view"
					briefDescription="Architecture can be represented from a variety of viewpoints, all of which can be combined to create a holistic view of the system."
					id="_T9nygClEEduLGM8dfVsrKg" orderingGuide="" suppressed="false"
					presentationName="Architectural View" variabilityType="na">
					<Presentation name=",_T9nygClEEduLGM8dfVsrKg"
						briefDescription="" id="-cnGBBA4NXmhTIjHjlHx4Mw" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-08-22T08:29:43"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p> As an Architect, you may want to consider the following views (not all views 
  are relevant to all systems or all the Stakeholders). This set of views is known 
  as the 4+1 Views of Software Architecture</strong> [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">KRU95</a>].. 
</p>
<p>
    <img height="254" alt="4+1 Views of Software Architecture" src="openup_basic/guidances/guidelines/resources/4plus1_2.jpg" width="405" />
</p>
<ul>
  <li> 
    <p> Use-case view:</strong> Describes functionality of the system, 
      its external interfaces, and its principal users. The use-case view&nbsp;contains 
      the <a class="elementLink" href="./../../../openup_basic/workproducts/uc_model,_0UCrZclgEdmt3adZL5Dmdw.html" guid="_0UCrZclgEdmt3adZL5Dmdw">Use-Case 
      Model</a>. This view is mandatory when using the 4+1 Views, because all 
      elements of the architecture should be derived from requirements. </p>
  </li>
  <li> 
    <p> Logical view: </strong>Describes how the system is structured 
      in terms of units of implementation. The elements are packages, classes, 
      and interfaces. The relationship between elements shows dependencies, interface 
      realizations, part-whole relationships, and so forth. Note: </strong>This 
      view is mandatory when using the 4+1 Views of Software Architecture. </p>
  </li>
  <li> 
    <p>Implementation view: </strong>Describes how development artifacts 
      are organized in the file system. The elements are files and directories 
      (any configuration items). This includes development artifacts and deployment 
      artifacts. This view is optional when using the 4+1 Views. </p>
  </li>
  <li> 
    <p>Process view: </strong>Describes how the run-time system is structured 
      as a set of elements that have run-time behavior and interactions. Run-time 
      structure often bears little resemblance to the code structure. It consists 
      of rapidly changing networks of communication objects. The elements are 
      components that have run-time presence (processes, threads, Enterprise JavaBeans&#8482; 
      (EJB&#8482;), servlets, DLLs, and so on), data stores, and complex connectors, 
      such as queues. Interaction between elements varies, based on technology. 
      This view is useful for thinking </strong></font>about 
      run-time system quality attributes, such as performance and reliability. 
      This view is optional when using the 4+1 Views. </p>
  </li>
  <li> 
    <p> Deployment views: </strong>Describe how the system is mapped to 
      the hardware. This view is optional when using the 4+1 Views. </p>
  </li>
</ul>
<p>In addition, you may wish to represent the following, </p>
<ul>
  <li>
    <p> Data view:</strong> A specialization of the logical view. Use 
      this view if persistence is a significant aspect of the system, and the 
      translation from the design model to the data model is not done automatically 
      by the persistence mechanism. </p>
  </li>
</ul>
<p><br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Guideline>_0X3bcMlgEdmt3adZL5Dmdw</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="using_patterns"
					briefDescription="This guidance discusses the practical application of patterns in a project."
					id="_0cr7cACrEdu8m4dIntu6jA" orderingGuide="" suppressed="false"
					presentationName="Using Patterns" variabilityType="na">
					<Presentation
						name="using_patterns,_0cr7cACrEdu8m4dIntu6jA" briefDescription=""
						id="-U-5cLUk-mdaO518lh5CxTQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-22T12:38:16" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p>
    In software design, it is primarily the development method and not the pattern and its pattern language that influences
    the process of pattern selection and use. As discussed in <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/patterns,_0YJvUMlgEdmt3adZL5Dmdw.html" guid="_0YJvUMlgEdmt3adZL5Dmdw">Concept: Patterns</a>, Alexander developed the concept of generative pattern languages
    to guide a designer’s application of individual patterns to the entire design. In software design, however, as
    Alexander observed [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">OOP96</a>] there is little evidence of using generative pattern languages.
</p>
<p>
    For iterative development methods, software patterns and pattern languages support the development method through their
    ability to be applied incrementally, or by piecemeal growth, and by providing extensible structures. From an
    architectural perspective, these two qualities allow software architecture to be designed and refactored incrementally,
    thus so avoid the need for a so-called "big, up-front design."
</p>
<h4>
    Piecemeal growth
</h4>
<p>
    The term <strong>piecemeal growth</strong>, as it applies to patterns, originates in Alexander's work. It refers to a
    top-down design process in which a design starts from a high-level structure that is embellished or refined through the
    implementation of lower-level patterns. For software development, this corresponds to using hierarchies of
    architectural and design patterns and idioms like those proposed by Buschmann et. al. [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">BUS96</a>]. Using the idea of piecemeal growth, an architect can start with one or more
    architectural patterns to provide an architectural vision for the design, and then progressively extend the design
    using design patterns. For example, an interactive application may use the Model-View-Controller pattern as its
    architectural vision, then during implementation the Command pattern may be selected to implement the Controller
    component.
</p>
<h4>
    Extensibility
</h4>
<p>
    A key aspect of object oriented design patterns is their ability to support extension without causing the rewriting of
    existing code. This feature allows a bottom up approach to the design process through code refactoring. When a problem
    is encountered during coding such as duplicate code, the developer can weighed up various patterns and their tradeoffs
    and select the appropriate solution in the context of the application.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Role" name="sln_architect"
					briefDescription="" id="_cH6f0DR7EduwLdLujGQAIQ" orderingGuide=""
					suppressed="false" presentationName=""
					variabilityBasedOnElement="_0X9iEMlgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<ResponsibleFor>
						_PoDR0NbYEdmlO4WLYHrJaQ
					</ResponsibleFor>
					<ResponsibleFor>
						_0XAf0MlgEdmt3adZL5Dmdw
					</ResponsibleFor>
				</ContentElement>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ContentPackage"
				name="development" briefDescription="" id="_0YcDMMlgEdmt3adZL5Dmdw"
				orderingGuide="" suppressed="false" global="false">
				<MethodPackage xsi:type="uma:ContentPackage"
					name="visual_modeling" briefDescription=""
					id="_PGDx8PisEdmjyaJMRcPDWA" orderingGuide="" suppressed="false"
					global="false">
					<ContentElement xsi:type="uma:Artifact"
						name="design_vm" briefDescription="" id="_ZTGAYL3uEdqLRJZPGVbHDA"
						orderingGuide="" suppressed="false" presentationName=""
						variabilityBasedOnElement="_0WuL8slgEdmt3adZL5Dmdw"
						variabilityType="contributes">
						<Concept>_0XY6UMlgEdmt3adZL5Dmdw</Concept>
					</ContentElement>
					<ContentElement xsi:type="uma:Task"
						name="design_solution_vm"
						briefDescription="Render the design visually to aid in solving the problem and communicating the  solution."
						id="_T8WvwL3vEdqLRJZPGVbHDA"
						orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quot;?> &lt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quot;>   &lt;orderInfos name=&quot;sections&quot; timestamp=&quot;1146255243164&quot;>     &lt;gUIDs>_4Z7WYKuKEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_YiTAIL3vEdqLRJZPGVbHDA&lt;/gUIDs>     &lt;gUIDs>_--6tYKuKEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_RBAyANbzEdqu5o2S60g5LA&lt;/gUIDs>     &lt;gUIDs>_A_LU8KuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_ObN0cNbzEdqu5o2S60g5LA&lt;/gUIDs>     &lt;gUIDs>_ENwJwKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_Gyf-cKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_JrHKUKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_KNZYAKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_OGYbwKuLEdmhFZtkg1nakg&lt;/gUIDs>   &lt;/orderInfos> &lt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollection> "
						suppressed="false" presentationName=""
						variabilityBasedOnElement="_0fshwMlgEdmt3adZL5Dmdw"
						variabilityType="contributes">
						<Presentation xsi:type="uma:TaskDescription"
							name=",_T8WvwL3vEdqLRJZPGVbHDA" briefDescription=""
							id="-_BAmniONtHWbpHQH7znR3g" orderingGuide="" suppressed="false"
							authors="" changeDescription="" version="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<Purpose></Purpose>
						</Presentation>
						<Guideline>_2uan8NbyEdqu5o2S60g5LA</Guideline>
						<Guideline>_CFAswNbzEdqu5o2S60g5LA</Guideline>
						<Guideline>_1fM3AC9_EduW5uTjiIcspQ</Guideline>
						<Guideline>_ienXEEyAEdu-df7p0PuRvQ</Guideline>
					</ContentElement>
					<ContentElement xsi:type="uma:Guideline"
						name="uc_realizations"
						briefDescription="A use-case realization represents how a use case will be implemented in terms of collaborating objects. This guideline describes its purpose and UML notation."
						id="_2uan8NbyEdqu5o2S60g5LA" orderingGuide="" suppressed="false"
						presentationName="Use-Cases Realizations" variabilityType="na">
						<Presentation
							name="uc_realizations,_2uan8NbyEdqu5o2S60g5LA"
							briefDescription="" id="-CFYVionNDLkMw6SG6runQA" orderingGuide=""
							suppressed="false" authors="" changeDate="2006-09-27T12:24:33"
							changeDescription="" version="1.0.0">
							<MainDescription><![CDATA[<p>
    A use-case realization represents how a use case will be implemented in terms of collaborating objects. This artifact
    can take various forms. It may include, for example, a textual description (a document), class diagrams of
    participating classes and subsystems, and interaction diagrams (communication and sequence diagrams) that illustrate
    the flow of interactions between class and subsystem instances.
</p>
<p>
    The reason for separating the use-case realization from its use case is that doing so allows the use cases to be
    managed separately from their realizations. This is particularly important for larger projects, or families of systems
    where the same use cases may be designed differently in different products within the product family. Consider the case
    of a family of telephone switches which have many use cases in common, but which design and implement them differently
    according to product positioning, performance and price.
</p>
<p>
    For larger projects, separating the use case and its realization allows changes to the design of the use case without
    affecting the baselined use case itself.
</p>
<p>
    In a model, a use-case realization is represented as a UML collaboration that groups the diagrams and other information
    (such as textual descriptions) that form part of the use-case realization.
</p>
<p>
    UML diagrams that&nbsp;support use-case realizations can be produced in an analysis context, a&nbsp;design context, or
    both, depending on the needs of the project. For each use case in the use-case model, there&nbsp;can be&nbsp;a use-case
    realization in the analysis/design model with a realization relationship to the use case. In UML this is shown as a
    dashed arrow, with an arrowhead like a generalization relationship, indicating that a realization is a kind of
    inheritance, as well as a dependency.<br />
</p>
<p align="center">
    <img height="109" alt="Use Case Realisations" src="openup_basic/guidances/guidelines/resources/ucrea1.gif" width="277" />
</p>
<p>
    A use-case realization in the&nbsp;design can be traced to a use case in the use-case model.
</p>
<h4>
    Class Diagrams Owned by a Use-Case Realization
</h4>
<p>
    For each use-case realization there may be one or more class diagrams depicting its participating classes. A class and
    its objects often participate in several use-case realizations. It is important&nbsp;while designing to coordinate all
    the requirements on a class and its objects that different use-case realizations may have. The figure below shows an
    analysis&nbsp;class diagram for the realization of the Receive Deposit Item use case. Note the use of
    boundary-control-entity stereotypes to represent analysis classes (see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html" guid="_uF-QYEAhEdq_UJTvM1DM2Q">Concept: Entity-Control-Boundary Pattern</a>).
</p>
<p align="center">
    <img height="213" alt="Class diagram for the realization of Receive Deposit Item" src="openup_basic/guidances/guidelines/resources/md_ucre3.gif"     width="328" />
</p>
<p align="center">
    <strong>The use case Receive Deposit Item and its analysis-level class diagram</strong>.
</p>
<h4>
    Communication and Sequence Diagrams Owned by a Use-Case Realization
</h4>
<p>
    For each use-case realization there&nbsp;can be&nbsp;one or more interaction diagrams depicting its participating
    objects and their interactions. There are two types of interaction diagrams: sequence diagrams and communication
    diagrams. They express similar information, but show it in different ways. Sequence diagrams show the explicit sequence
    of messages and are better when it is important to visualize the time ordering of messages, whereas communication
    diagrams show the communication links between objects and are better for understanding all of the effects on a given
    object and for algorithm design.
</p>
<p>
    Realizing use cases through interaction diagrams helps to keep the design simple and cohesive. Assigning
    responsibilities to classes on the basis of what the use-case scenario explicitly requires encourages the design to
    contain the following:
</p>
<ul>
    <li>
        Only the functionality actually used in support of a use case scenario
    </li>
    <li>
        Functionality that can be tested through an associated test case
    </li>
    <li>
        Functionality that is more easily traceable to requirements and changes
    </li>
    <li>
        Explicitly declared class dependencies that are easier to manage
    </li>
</ul>
<p>
    These factors help improve the overall quality of the system.
</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
						<Concept>_uF-QYEAhEdq_UJTvM1DM2Q</Concept>
					</ContentElement>
					<ContentElement xsi:type="uma:Guideline"
						name="design_components"
						briefDescription="This guideline describes how to visually represent design components."
						id="_CFAswNbzEdqu5o2S60g5LA" orderingGuide="" suppressed="false"
						presentationName="Design Components Representation"
						variabilityType="na">
						<Presentation
							name="design_components,_CFAswNbzEdqu5o2S60g5LA"
							briefDescription="" id="-6ep_EyK3ZO6vRGWtAqoJ-A" orderingGuide=""
							suppressed="false" authors="" changeDate="2006-04-28T10:31:47"
							changeDescription="" version="">
							<MainDescription><![CDATA[&nbsp;]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Role"
						name="developer_vm" briefDescription=""
						id="_sypCEPvjEdqf0-top1XJIg" orderingGuide="" suppressed="false"
						presentationName=""
						variabilityBasedOnElement="_BCtiMDR9EduwLdLujGQAIQ"
						variabilityType="contributes">
						<Presentation xsi:type="uma:RoleDescription"
							name="new_role,_sypCEPvjEdqf0-top1XJIg" briefDescription=""
							id="-xbAirPdH1IOKcnklk8hdqw" orderingGuide="" suppressed="false"
							authors="" changeDate="2006-09-11T08:34:39" changeDescription=""
							version="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<AssignmentApproaches></AssignmentApproaches>
							<Skills>
								&lt;p>&#xD; In addition, to create a
								visual model of the system, this role
								needs the ability to&amp;nbsp;render the
								design in the&#xD; Unified Modeling
								Language (UML).&#xD; &lt;/p>
							</Skills>
							<Synonyms></Synonyms>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Guideline"
						name="designing_visually"
						briefDescription="This guideline provides information on how to apply visual modeling to designing a system."
						id="_1fM3AC9_EduW5uTjiIcspQ" orderingGuide="" suppressed="false"
						presentationName="Designing Visually" variabilityType="na">
						<Presentation
							name="visual_modeling,_1fM3AC9_EduW5uTjiIcspQ"
							briefDescription="" id="-1xE2ZW3MjNAJ7jkaZNbkww" orderingGuide=""
							suppressed="false" authors="" changeDate="2006-09-11T11:07:18"
							changeDescription="" version="">
							<MainDescription><![CDATA[<h3>
    Identify elements
</h3>
<p>
    Render the identified design elements as classes in a UML diagram.&nbsp; Apply appropriate stereotypes and optionally
    render the class using an icon specific to the stereotype to characterize the intent of the class in the design.&nbsp;
    Name and briefly describe&nbsp;the classes&nbsp;in a few sentences.
</p>
<p>
    Classes can be drawn as a basic UML rectangle or with a specific symbol associated with a particular stereotype
</p>
<p>
    &lt;describe and show stereotypes&gt;
</p>
<h3>
    Determine how elements collaborate to realize the scenario
</h3>
<p>
    Create&nbsp;a realization that communicates how the classes are structured and collaborate to realize the behavior of a
    scenario.&nbsp; Realizations can cover one or more scenarios of a use case (use-case realizations) or they
    can&nbsp;describe other scenarios conceived to&nbsp;determine and communicate how the design will perform some
    behavior.
</p>
<p>
    Create a number of dynamic object diagrams that walk through how a set of objects can collaborate to perform the
    behavior of the scenarios.&nbsp; Even if just one scenario is being designed, this might take multiple diagrams to
    render it in smaller, understandable chungs or from multiple contexts.
</p>
<p>
    Create one or more static class diagrams that show the classes in the design that support the realization.&nbsp; These
    class diagrams are often called View of Participating Classes diagrams, they provide a focused view on the overall
    design by only showing the classes, relationships, operations, and attributes relevant to the collaboration.
</p>
<p>
    Update other class diagrams as appropriate based on modifications or additions to the design.
</p>
<h3>
    Refine design decisions
</h3>
<p>
    [TBD - reference updating diagrams with appropriate detail.]
</p>
<p>
    A class may have to store simple data information, like: string, integer, and the like. For such simple type of
    information, attributes are defined for classes. For a more complex or "behavioral' attribute, consider creating an
    extra class and establish an association to it.&nbsp;
</p>
<h3>
    Describe responsibilities
</h3>
<p>
    Class responsibilities&nbsp;are either actions to be performed by an object or knowledge maintained and provided to
    other objects. Each class will typically have several responsibilities; each responsibility&nbsp;will evolve into one
    or more operations during design.&nbsp;
</p>
<p>
    Responsibilities are derived from messages on interaction diagrams or from non-functional requirements that a class has
    to convey. Document a responsibility by giving it a name, and optionally a brief description (what it does).
</p>
<h3>
    Describe attributes and associations
</h3>
<p>
    To perform their responsibilities, classes may depend on other classes to supply needed behavior. Associations in a
    class diagram can be used to represent inter-class relationships.
</p>
<h3>
    Design internals
</h3>
<p>
    [TBD discuss creating components, defining interfaces, and designing internals.]
</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Checklist"
						name="vm_design" briefDescription="" id="_nnSXcD6SEduAL-bCqar_dg"
						orderingGuide="" suppressed="false" presentationName=""
						variabilityBasedOnElement="_0XSzsMlgEdmt3adZL5Dmdw"
						variabilityType="contributes">
						<Presentation
							name="new_checklist,_nnSXcD6SEduAL-bCqar_dg" briefDescription=""
							id="-HQSI39vBrjpmQL1qHYOJtA" orderingGuide="" suppressed="false"
							authors="" changeDescription="" version="1.0.0">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Section name="Packages and Organization"
								briefDescription="" id="_sG8ZoD6SEduAL-bCqar_dg"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									&lt;p>&#xD; Is the package
									partitioning logical and consistent?
									Does it make sense to team members
									and stakeholders?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Do package names
									accurately describe the contents of
									the package and the role they play
									in the architecture? Do they&#xD;
									follow naming conventions?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Do public
									packages and interfaces provide a
									logically cohesive set of
									services?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Are all the contents of
									a package listed? Are the classes
									within a package cohesive?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Do package
									dependencies correspond to the
									dependencies of the contained
									classes?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Are there packages or
									classes within a package that can be
									separated into and independent or
									sub-package?&lt;br />&#xD; &lt;/p>
								</Description>
							</Section>
							<Section name="Views" briefDescription=""
								id="_tx6tsD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false"
								sectionName="" variabilityType="na">
								<Description>
									&lt;p>&#xD; Does each diagram help
									the designer reason about the
									design, or communicate key design
									decisions to the team?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Are the
									relationships between diagrams clear
									when several diagrams are used to
									describe behavior?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Is it easy to navigate
									between related diagrams?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Does each
									diagram focus on a relevant
									perspective? For instance, does a
									set of diagrams show a single class
									and its&#xD; direct relationships,
									rather than using&amp;nbsp;one or
									two diagrams to show all
									classes?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Is each diagram complete
									and minimal? Does it show everything
									relevant to that view and nothing
									more?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
									Are the diagrams tidy and easy to
									interpret, with a minimum of
									clutter?&#xD; &lt;/p>
								</Description>
							</Section>
							<Section name="UML" briefDescription=""
								id="_yeFh4D6SEduAL-bCqar_dg" orderingGuide="" suppressed="false"
								sectionName="" variabilityType="na">
								<Description>
									&lt;p>&#xD; Does the visual model
									conform to UML standards so all
									stakeholders can understand the
									model over time? See
									the&amp;nbsp;&lt;a
									href=&quot;http://www.uml.org/&quot;
									target=&quot;_blank&quot;>OMG UML
									Resource Page&lt;/a>&amp;nbsp;for
									more information.&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Does the visual model
									conform to project or organization
									specific modeling standards?&#xD;
									&lt;/p>&#xD; Is the visual model
									internally consistent? For instance,
									if an object diagram shows a
									relationship between objects, does
									a&#xD; corresponding relationship
									exist between the appropriate
									classes?&lt;br />&#xD; &lt;p>&#xD;
									Does the name of each class clearly
									reflect the role it plays?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Does each
									class offer the required
									behavior?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Is there at least
									one&amp;nbsp;realization association
									defined for each interface? The
									realization may represent a 3rd&#xD;
									party implementation of the
									subsystem.&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Are&amp;nbsp;there
									dependency associations from each
									subsystem to the interfaces it
									uses?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
									Is each operation in a subsystem
									interface described in a sequence
									diagram? Or at least mapped directly
									to an operation&#xD; in a
									class?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
									Does each class represent a single
									well defined abstraction?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Are
									generalization relationships used
									only to inherit definitions, not
									behavior (implementation)? In other
									words, is&#xD; behavior shared
									through the use of association,
									aggregation and containment
									relationships instead of
									generalization?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Are parent classes in
									generalization relationships
									abstract? Are the &quot;leaf&quot;
									classes in a generalization
									hierarchy the&#xD; only concrete
									classes?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Are stereotypes used
									consistently and meaningfully?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD;
									Do&amp;nbsp;statecharts exist for
									classes with complex or restrictive
									state changes?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Do relationships have
									descriptive role or association
									names (one or the other but not
									both), and&amp;nbsp;correct&#xD;
									multiplicities?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Are relationships
									between classes unidirectional
									whenever possible?&lt;br />&#xD;
									&amp;nbsp;&#xD; &lt;/p>
								</Description>
							</Section>
							<Section name="Non-UML Visual Modeling"
								briefDescription="" id="_IsDY4D6TEduAL-bCqar_dg"
								orderingGuide="" suppressed="false" sectionName=""
								variabilityType="na">
								<Description>
									&lt;p>&#xD; Are the semantics of the
									visual modeling language clearly
									defined, documented, and accessible
									to team members? The&#xD; semantics
									should be meaninful to the users of
									the model.&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Can the semantics of the
									modeling language be understood over
									time? Is the language documented
									well enough so that team&#xD;
									members can understand the model
									long after design decisions have
									taken place?&#xD; &lt;/p>&#xD;
									&lt;p>&#xD; Are team members and
									stakeholders trained in the modeling
									language being used?&#xD;
									&lt;/p>&#xD; &lt;p>&#xD; Does the
									visual model conform to the
									semantics of the visual modeling
									language? In other words, are the
									meanings&#xD; of&amp;nbsp;the
									symbols in the
									diagrams&amp;nbsp;consistent across
									the model and
									diagrams?&amp;nbsp;&#xD; &lt;/p>
								</Description>
							</Section>
						</Presentation>
					</ContentElement>
					<ContentElement xsi:type="uma:Guideline"
						name="data_modeling"
						briefDescription="The Data Model captures the design of the persistent data stores used by the system. This guideline introduces Data Modeling and its use within OpenUP."
						id="_ienXEEyAEdu-df7p0PuRvQ" orderingGuide="" suppressed="false"
						presentationName="Data Modeling" variabilityType="na">
						<Presentation
							name="new_guideline,_ienXEEyAEdu-df7p0PuRvQ" briefDescription=""
							id="-XMbxFU8M85cRlf3C4iwAGw" orderingGuide="" suppressed="false"
							authors="" changeDate="2006-09-25T01:47:48" changeDescription=""
							version="1.0.0">
							<MainDescription><![CDATA[<h3>
    Overview
</h3>
<p>
    Data Models are used to design the structure of the persistent data stores used by the system. The Unified Modeling
    Language (UML) profile for database design provides database designers with a set of modeling elements that can be used
    to develop the detailed design of tables in the database and model the physical storage layout of the database.&nbsp;
    The UML database profile also provides constructs for modeling referential integrity (constraints and triggers), as
    well as stored procedures used to manage access to the database.
</p>
<p>
    Data Models might be constructed at the enterprise, departmental, or individual application level. Enterprise and
    departmental level Data Models can be used to provide standard definitions for key business entities (such as customer
    and employee) that will be used by all applications within a business or a business unit. These types of Data Models
    can also be used to define which system in the enterprise is the "owner" of the data for a specific business entity and
    what other systems are users of (subscribers to) the data.
</p>
<p>
    This guideline describes the model elements of the UML profile for database modeling used to construct a Data Model for
    a relational database. Because there are numerous existing publications on general database theory, it does not cover
    this area.
</p>
<h3>
    Stages of Data Modeling
</h3>
<p>
    As described in [<a class="elementLink" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">References</a>], there are three general stages in the development of a Data Model:
    conceptual, logical, and physical. These stages of data modeling reflect the different levels of detail in the design
    of the persistent data storage and retrieval mechanisms of the application. Summaries of logical and physical data
    modeling are provided in the next two sections of this guideline.
</p>
<h4>
    Logical Data Modeling
</h4>
<p>
    In logical data modeling, you should concentrate on identifying the key entities and relationships that capture the
    critical information that the application needs to persist in the database. During design, you must ensure that the
    evolving designs of the analysis and design classes for the application will adequately support the development of the
    database. When designing classes, identify the set of classes that will need to persist data in the database.
</p>
<p>
    This set of persistent classes provides a design view that, although different from the traditional Logical Data Model,
    meets many of the same needs. The persistent classes used in the design function in the same manner as the traditional
    entities in the Logical Data Model. These design classes accurately reflect the data that must be persisted, including
    all of the data columns (attributes) that must be persisted and key relationships. This makes these design classes an
    excellent starting point for the physical database design.
</p>
<p>
    Creating a separate Logical Data Model is an option. However, in the best case it would end up capturing the same
    information in a different form. In the worst case it would not, and thus in the end might not meet the business needs
    of the application. In particular, if the database is intended to service a single application, then the application's
    view of the data might be the best starting point. You can create tables from this set of persistent design classes to
    form an initial Physical Data Model.
</p>
<p>
    Still, situations might exist that would require you to create an idealized design of the database that is independent
    from the application design. In this case, the logical database design is represented in a separate Logical Data Model
    that is part of the overall <a class="elementLink" href="./../../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html" guid="_0WuL8slgEdmt3adZL5Dmdw">Design</a>. This Logical Data Model depicts the key logical entities and their
    relationships that are necessary to satisfy the system requirements for persisting data consistent with the overall
    architecture of the application. The Logical Data Model might be constructed using the modeling elements of the UML
    profile for database design described in later sections of this guideline. For projects that use this approach, close
    collaboration between the application designers and the database designers is absolutely critical to the successful
    development of the database design.
</p>
<p>
    The Logical Data Model might be refined applying normalization prior to evolving Logical Data Model to create the
    physical design of the database.
</p>
<p>
    The figure below depicts the primary approach of using the Design Model classes as the source of logical database
    design information for creating an initial Physical Data Model. It also illustrates the alternative approach of using a
    separate Logical Data Model.
</p>
<p align="center">
    <img height="319" alt="Data Modeling" src="openup_basic/guidances/guidelines/resources/dm_1.jpg" width="488" />
</p>
<p align="center">
    <strong>Figure 1: Data Modeling</strong>
</p>
<h4>
    Physical Data Modeling
</h4>
<p>
    Physical data modeling is the final stage of development in the design of the database. The Physical Data Model
    consists of the detailed database table designs and their relationships created initially from the persistent design
    classes and their relationships. The Physical Data Model is part of the Data Model; it is not a separate artifact.
</p>
<p>
    The tables in the Physical Data Model have well-defined columns, as well as keys and indexes as needed. The tables
    might also have triggers defined as necessary to support the database functionality and referential integrity of the
    system. In addition to the tables, stored procedures have been created, documented, and associated with the database in
    which the stored procedure will reside.
</p>
<p>
    The diagram below shows an example of some of the elements of the Physical Data Model.&nbsp; This example model is a
    part of the Physical Data Model of a fictional online auction application. It depicts four tables (Auction, Bid, Item,
    and AuctionCategory), along with one stored procedure (sp_Auction) and its container class (AuctionManagement).&nbsp;
    The figure also depicts the columns of each table, the primary key and foreign key constraints, and the indexes defined
    for the tables.
</p>
<p align="center">
    <img height="600" alt="Example (Physical) Data Model Elements" src="openup_basic/guidances/guidelines/resources/md_datamd18.gif" width="600" />
</p>
<p>
    The Physical Data Model also contains mappings of the tables to physical storage units (tablespaces) in the database.
    The figure below shows an example of this mapping. In this example, the tables Auction and OrderStatus are mapped to a
    tablespace called PRIMARY. The diagram also illustrates modeling the realization of the tables to the database (named
    PearlCircle in this example).
</p>
<p align="center">
    <img height="600" alt="Example Data Storage Model Elements" src="openup_basic/guidances/guidelines/resources/md_datamd19.gif" width="600" />
</p>
<p align="center">
    <strong>Example Data Storage Model Elements</strong>
</p>
<p>
    On projects in which a database already exists,you can reverse-engineer the existing database to populate the Physical
    Data Model.
</p>
<h4>
    Data Model Elements
</h4>
<p>
    This section describes the general modeling guidelines for each major element of the Data Model based on the UML
    profile for database modeling. A brief description of each model element is followed by an example illustration of the
    UML model element. The Relationships section of this guideline includes a description of the usage of the model
    elements.
</p>
<h5>
    Package
</h5>
<p>
    Standard UML packages are used to group and organize elements of the Data Model. For example, packages might be defined
    to organize the Data Model into separate Logical and Physical Data Models. Packages might also be used to identify
    logically related groups of tables in the Data Model that constitute the major data "subject areas" of importance to
    the business domain of the application being developed. The figure below shows an example of two subject area packages
    (Auction Management and UserAccount Management) used to organize views and tables in the Data Model.
</p>
<p align="center">
    <strong><img height="254" alt="Subject Area Packages Example" src="openup_basic/guidances/guidelines/resources/md_datamd02.gif" width="250" /></strong>
</p>
<p align="center">
    <strong>Subject Area Packages Example</strong>
</p>
<h5>
    Table
</h5>
<p>
    In the UML profile for database modeling, a table is modeled as a class with a stereotype of &lt;&lt;Table&gt;&gt;. The
    columns in the table are modeled as attributes with the stereotype of &lt;&lt;column&gt;&gt;. One or more columns might
    be designated as a primary key to provide for unique row entries in the table. Columns might also be designated as
    foreign keys. Primary keys and foreign keys have associated constraints that are modeled as the stereotyped operations
    of &lt;&lt;Primary Key&gt;&gt; and &lt;&lt;Foreign Key&gt;&gt; respectively. The figure below depicts the structure of
    an example table used to manage information about items sold at auction in a fictional online auction system.
</p>
<p align="center">
    <strong><img height="214" alt="Table Example" src="openup_basic/guidances/guidelines/resources/md_datamd03.gif" width="294" /></strong>
</p>
<p align="center">
    <strong>Table Example</strong>
</p>
<p>
    Tables might be related to other tables through the following types of relationships:
</p>
<ul>
    <li>
        identifying (composite aggregation)<br />
        non-identifying (association)
    </li>
</ul>
<p>
    The Relationships section of this guideline provides examples of how these relationships are used.<br />
    <br />
</p>
<h5>
    <a id="Trigger" name="Trigger">Trigger</a>
</h5>
<p>
    A trigger is a procedural function designed to run as a result of some action on the table in which the trigger
    resides. A trigger is defined to execute when a row in the table is inserted, updated, or deleted. Additionally, a
    trigger is designated to execute either before or after the table command executes. Triggers are defined as operations
    in a table. The operations are stereotyped &lt;&lt;Trigger&gt;&gt;.;
</p>
<p align="center">
    <img height="218" alt="Trigger Example" src="openup_basic/guidances/guidelines/resources/md_datamd13.gif" width="316" />
</p>
<p align="center">
    <strong>Trigger Example</strong>
</p>
<h5>
    <br />
    Index
</h5>
<p>
    Indexes are used as mechanisms for enabling faster access of information when specific columns are used to search the
    table. An index is modeled as an operation in the table with a stereotype of &lt;&lt;index&gt;&gt;. Indexes might be
    designated as unique and might be designated as clustered or unclustered. Clustered indexes are used to force the order
    of the data rows in the table to be aligned with the order of the index values. An example of an index operation
    (IX_auctioncategory) is shown in the figure below.
</p>
<p align="center">
    <img height="150" alt="Index Example" src="openup_basic/guidances/guidelines/resources/md_datamd14.gif" width="346" />
</p>
<p align="center">
    Index Category
</p>
<h5>
    View
</h5>
<p>
    A view is a virtual table with no independent persistent storage. A view has the characteristics and behaviors of a
    table and accesses the data in the columns from the table(s) with which the view has defined relationships. Views are
    used for providing more efficient access to information in one or more tables and also can be used to enforce business
    rules for restricting access to data in the tables. In the example below, an AuctionView has been defined as a "view"
    of information in the Auction table shown in the physical data modeling section of this guideline.
</p>
<p>
    Views are modeled as classes with the stereotype of &lt;&lt;view&gt;&gt;. The attributes of the view class are the
    columns from the tables referenced by the view. The datatypes of the columns in the view are inherited from the tables
    with a defined dependency with the view.
</p>
<p align="center">
    <img height="244" alt="View Example" src="openup_basic/guidances/guidelines/resources/md_datamd21.gif" width="451" />
</p>
<p align="center">
    View Example
</p>
<h5>
    Domain
</h5>
<p>
    A domain is a mechanism used to create user-defined datatypes that can be applied to columns across multiple tables. A
    domain is modeled as a class with the stereotype &lt;&lt;Domain&gt;&gt;.&nbsp; In the example below, a domain has been
    defined for a "zip + 4" zipcode.
</p>
<p align="center">
    <img height="98" alt="Domain Example" src="openup_basic/guidances/guidelines/resources/md_datamd20.gif" width="225" />
</p>
<p align="center">
    Domain Example
</p>
<h4>
    Stored Procedure Container
</h4>
<p>
    A stored procedure container is a grouping of stored procedures within the Data Model. A stored procedure container is
    created as a UML class that is stereotyped &lt;&lt;SP Container&gt;&gt;. Multiple stored procedure containers can be
    created in a database design. Each stored procedure container must have at least one stored procedure.
</p>
<h5>
    <a id="Stored Procedure" name="Stored Procedure">Stored Procedure</a>
</h5>
<p>
    A stored procedure is an independent procedure that typically resides on the database server. Stored procedures are
    documented as operations that are grouped into classes stereotyped as &lt;&lt;SP Container&gt;&gt;. The operations are
    stereotyped &lt;&lt;SP&gt;&gt;. The example below shows a single stored procedure operation (SP_Auction) in a container
    class named AuctionManagement.&nbsp; When designing stored procedures, the database designer must be cognizant of any
    naming conventions used by the specific RDBMS.
</p>
<p align="center">
    <img height="88" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd12.gif" width="165"     border="0" />
</p>
<p align="center">
    Stored Procedure Container and Stored Procedure Example
</p>
<br />
<h4>
    Tablespace
</h4>
<p>
    A tablespace represents the amount of storage space to be allocated to such items as tables, stored procedures and
    indexes. Tablespaces are linked to a specific database through a dependency relationship. The number of tablespaces and
    how the individual tables will be mapped to them depends on the complexity of the Data Model. Tables that will be
    accessed frequently might need to be partitioned into multiple tablespaces. Tables that do not contain large amounts of
    frequently accessed data might be grouped into a single tablespace.
</p>
<p>
    A tablespace container is defined for each tablespace. The tablespace container is the physical storage device for the
    tablespace. Although multiple tablespace containers can exist for a single tablespace, it is recommended that a
    tablespace container be assigned to only a single tablespace. Tablespace containers are defined as attributes to the
    tablespace; they are not explicitly modeled.
</p>
<p align="center">
    <img height="69" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd15.gif" width="132"     border="0" />
</p>
<p align="center">
    Tablespace Example
</p>
<h4>
    <a id="Schema" name="Schema">Schema</a>
</h4>
<p>
    A schema documents the organization or structure of the database. A schema is represented as a package that is
    stereotyped &lt;&lt;Schema&gt;&gt;. When a schema is defined as a package, the tables that make up that package should
    be contained within the schema. A dependency between the database and the schema is created to document the
    relationship between the database and the schema.
</p>
<p align="center">
    <img height="86" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd17.gif" width="105"     border="0" />
</p>
<p align="center">
    Schema Example
</p>
<h4>
    Database
</h4>
<p>
    A database is a collection of data that is organized such that the information in it can be accessed and managed. The
    management and access of information in the database is performed through the use of a commercial database management
    system (DBMS). A database is represented in the Data Model as a component that is stereotyped &lt;&lt;Database&gt;&gt;.
</p>
<p align="center">
    <img height="69" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd16.gif" width="125"     border="0" />
</p>
<p align="center">
    Database Example
</p>
<h4>
    Relationships
</h4>
<p>
    The UML profile for database modeling defines the valid relationships between the major elements of the Data Model. The
    following sections provide examples of the different relationship types.
</p>
<h5>
    Non-Identifying
</h5>
<p>
    A non-identifying relationship is a relationship between two tables that independently exist within the database. A
    non-identifying relationship is documented by using an association between the tables. The association is stereotyped
    &lt;&lt;Non-Identifying&gt;&gt;. The example below depicts a non-identifying relationship between the Item table and
    the AuctionCategory table.
</p>
<p align="center">
    <img height="398" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd05.gif" width="735"     border="0" />
</p>
<p align="center">
    Non-Identifying Relationship Example
</p>
<h5>
    Identifying
</h5>
<p>
    An identifying relationship is a relationship between two tables in which the child table must coexist with the parent
    table. An identifying relationship is documented by using a composite aggregation between two tables. The composite
    aggregation is stereotyped as &lt;&lt;Identifying&gt;&gt;. The figure below is an example of an identifying
    relationship. This example shows that instances of the child table (CreditCard) must have an associated entry in the
    parent table (UserAccount).
</p>
<p align="center">
    <img height="443" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd06.gif" width="747"     border="0" />
</p>
<p align="center">
    Identifying Relationship Example
</p>
<p>
    For both the association and composite aggregation, multiplicity should be defined to document the number of rows in
    the relationship. In the example above, for each row in the UserAccount table, there can be 0 or more CreditCard rows
    in the CreditCard table. For each row in the CreditCard table, there is exactly one row in the UserAccount table.
    Multiplicity is also known as cardinality.
</p>
<h5>
    Database Views
</h5>
<p>
    When defining a database view's relationship with a table, a dependency relationship is used, drawn from the view to
    the table. The stereotype of the dependency is &lt;&lt;Derive&gt;&gt;. Typically, the view dependency is named, and the
    name of the dependency is the same as the name of the table that is defined in the dependency relationship with the
    database view.
</p>
<p align="center">
    <img height="513" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd22.gif" width="763"     border="0" />
</p>
<p align="center">
    View and Table Dependency Relationship Example
</p>
<h5>
    Tablespace
</h5>
<p>
    A dependency relationship is used to link a tablespace to a specific database. As shown in the figure below, the
    relationship is drawn to show that the database has the dependency on the tablespace.&nbsp;Multiple tablespaces can be
    related to a single database in the model.
</p>
<p align="center">
    <img height="88" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd08.gif" width="298"     border="0" />
</p>
<p align="center">
    Tablespace and Database Dependency Relationship Example
</p>
<p>
    A dependency relationship is used to document the relationships between tablespaces and the tables within a
    tablespace.&nbsp; One or many tables can be related to a single tablespace, and a single table can be related to
    multiple tablespaces. The example below shows that the table Auction is assigned to a single tablespace named PRIMARY.
</p>
<p align="center">
    <img height="345" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd09.gif" width="560"     border="0" />
</p>
<p align="center">
    Table and Tablespace Dependency Relationship Example
</p>
<h5>
    <u>Realizations</u>
</h5>
<p>
    Realizations are used to establish the relationship between a database and the tables that exist within it. A table can
    be realized by multiple databases in the Data Model.
</p>
<p align="center">
    <img height="348" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd10.gif" width="561"     border="0" />
</p>
<p align="center">
    Table and Database Realization Relationship Example
</p>
<h5>
    Stored Procedures
</h5>
<p>
    A dependency relationship is used to document the relationship between the stored procedure container and the tables
    that the stored procedures within the stored procedure containers act upon. The example below depicts this type of
    relationship by showing that the stored procedure SP_Auction will be used to access information in the Auction table.
</p>
<p align="center">
    <img height="344" alt="Diagram described in accompanying text." src="openup_basic/guidances/guidelines/resources/md_datamd11.gif" width="633"     border="0" />
</p>
<p align="center">
    Stored Procedure Container and Table Dependency Relationship Example
</p>
<h3>
    <a id="Evolution of the Data Model" name="Evolution of the Data Model">Evolution of the Data Model</a>
</h3>
<h4>
    <a id="Inception Phase" name="Inception Phase">Inception Phase</a>
</h4>
<p>
    In the <a class="elementLink" href="./../../../openup_basic/capabilitypatterns/inception_phase_iteration,_0o3r4slgEdmt3adZL5Dmdw.html" guid="_0o3r4slgEdmt3adZL5Dmdw">Inception Phase Iteration</a> , initial data modeling tasks might be performed in
    conjunction with the development of any proof-of-concept prototypes as part of the"Perform architectural synthesis
    activity" tasks. On projects in which a database already exists,&nbsp;you might reverse-engineer the existing database
    to develop an initial Physical Data Model based on the structure of the existing database. Elements of the Physical
    Data Model might be transformed into Design Model elements as needed to support any proof-of-concept prototyping tasks.
</p>
<h4>
    <a id="Elaboration Phase" name="Elaboration Phase">Elaboration Phase</a>
</h4>
<p>
    The goal of the <a class="elementLink" href="./../../../openup_basic/capabilitypatterns/elaboration_phase_iteration,_0sTaYMlgEdmt3adZL5Dmdw.html" guid="_0sTaYMlgEdmt3adZL5Dmdw">Elaboration Phase Iteration</a><a class="elementLink" href="./../../../openup_basic/capabilitypatterns/elaboration_phase_iteration,_0sTaYMlgEdmt3adZL5Dmdw.html" guid="_0sTaYMlgEdmt3adZL5Dmdw">Elaboration Phase Iteration</a>is to eliminate technical risk and to produce a stable
    (baselined) architecture for the system. In large-scale systems, poor performance resulting from a badly designed Data
    Model is a major architectural concern. As a result, both data modeling and the development of an architectural
    prototype that allows the performance of the database to be evaluated are essential to achieving a stable architecture.
    As the architecturally significant use cases are detailed and analyzed in each iteration, Data Model elements are
    defined based on the development of the persistent class designs from the use cases. As the class designs stabilize,
    the database designer might periodically transform the class designs into tables in the Data Model and define the
    appropriate data storage model elements.
</p>
<p>
    By the end of the elaboration phase, the major database structures (tables, indexes, and primary and foreign key
    columns) must be put in place to support the execution of the defined architecturally significant scenarios for the
    application. In addition, representative data volumes must be loaded into the database to support architectural
    performance testing. Based on the results of performance testing, the Data Model might need to be adjusted with
    optimization techniques, including but not limited to de-normalizing, optimizing physical storage attributes or
    distribution, and indexing.
</p>
<h4>
    <a id="Construction Phase" name="Construction Phase">Construction Phase</a>
</h4>
<p>
    Major restructuring of the Data Model should not occur during the <a class="elementLink" href="./../../../openup_basic/capabilitypatterns/construction_phase_iteration,_y-3IrutQEdqc1LGhiSPqRg.html" guid="_y-3IrutQEdqc1LGhiSPqRg">Construction Phase Iteration</a>. Additional tables and data storage elements might be
    defined during the construction phase iterations based on the detailed design of the set of use cases and approved
    change requests allocated to the iteration. A primary focus of database design during the construction phase is to
    continually monitor the performance of the database and optimize the database design as needed through de-normalizing,
    defining indexes, creating database views, and other optimization techniques.
</p>
<p>
    The Physical Data Model is the design artifact maintained during the construction phase. It can be maintained by either
    making direct updates in the model or as a result of a tool reading updates that have been made directly on the
    database.
</p>
<h4>
    <a id="Transition Phase" name="Transition Phase">Transition Phase</a>
</h4>
<p>
    The Data Model, like the Design Model, is maintained during the <a class="elementLink" href="./../../../openup_basic/capabilitypatterns/transition_phase_iteration,_0rQRgMlgEdmt3adZL5Dmdw.html" guid="_0rQRgMlgEdmt3adZL5Dmdw">Transition Phase Iteration</a> in response to approved change requests.&nbsp;You should
    keep the Data Model synchronized with the database as the application goes through final acceptance test and is
    deployed into production.
</p>
<h3>
    <a id="Roundtrip Engineering Considerations" name="Roundtrip Engineering Considerations">Round-trip Engineering
    Considerations</a>
</h3>
<p>
    If a development team is using modern visual modeling tools that have the ability to convert classes to tables (and
    vice versa) and/or has the ability to reverse and forward engineer databases, then the team needs to establish
    guidelines for managing the transformation and engineering processes. The guidelines are primarily needed for large
    projects in which a team is working in parallel on the database and application design. The development team must
    define the points in the development of the application (build/release cycle) at which it will be appropriate to
    perform the class-to-table transformations and to forward-engineer the database. Once the initial database is created,
    the development team must define guidelines for the team to manage the synchronization of the Data Model and database
    as the design and code of the system evolve throughout the project.
</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
						</Presentation>
					</ContentElement>
				</MethodPackage>
				<ContentElement xsi:type="uma:Artifact"
					name="implementation"
					briefDescription="Software code files (source, binary or executable), data files, and documentation files such as online help files that represent the raw parts of a system that can be built. "
					id="_0YoQcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Implementation" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="implementation,_0YoQcMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_6u9ZsKYcEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
						authors="Jim Ruehlin" changeDate="2006-09-25T10:03:16"
						changeDescription="" version="1.0.0" externalId="">
						<MainDescription><![CDATA[<p>
    The Implementation of a software application is the collection of one or more of&nbsp;these elements:
</p>
<ul>
    <li>
        Binary executable
    </li>
    <li>
        Data files
    </li>
    <li>
        Documentation
    </li>
    <li>
        Installation files
    </li>
    <li>
        Source code files
    </li>
    <li>
        Other files that are transformed into the executable system
    </li>
</ul>
<p>
    The organization of the Implementation defines the units of the system. You can use that structure to assign version
    numbers and to deploy and replace the system.
</p>
<br />
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose><![CDATA[<p>
    To represent the physical parts of what makes up the system (source, binaries, executables, etc) organized in a way
    that's understandable and manageable.
</p>]]></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;p>&#xD; Implementation files represented
							as files in the local file system. File
							folders (directories), represented as&#xD;
							packages, group the files into logical
							units.&#xD; &lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Guideline>_0Y0dsMlgEdmt3adZL5Dmdw</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact" name="build"
					briefDescription="An operational version of a system or part of a system that demonstrates a subset of the capabilities to be provided in the final product."
					id="_0YuXEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Build" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="build,_0YuXEMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_NqSB0KeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-13T11:57:38" changeDescription=""
						version="" externalId="">
						<MainDescription><![CDATA[<p> This working version of the system is the result of putting the implementation 
  of the system through a build process (typically an automated build script) 
  that creates an executable version of the system, or one 
  that runs.</p>]]></MainDescription>
						<KeyConsiderations><![CDATA[<p> In an iterative lifecycle, each build must evolve from the previous iteration's 
  build, adding more functionality and improving quality. </p>
<p>The purpose of early builds that minimize or eliminate a risk or verify architectural 
  decisions is to achieve consistently stable builds in later iterations. </p>
<p>]]></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose><![CDATA[Deliver incremental value to the user and customer, and provide a testable artifact for verification.]]></Purpose>
						<ReasonsForNotNeeding>
							&lt;p>&#xD; There will always need to be an
							executable version of the system.&#xD;
							&lt;/p>
						</ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;p>&#xD; This work product
							is&amp;nbsp;almost always&amp;nbsp;a
							composite product made up of numerous parts
							required to make the&#xD; executable
							system.&amp;nbsp; The specifics of those
							parts will vary by technology in use.&#xD;
							&lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
					<Guideline>_SM4YIL6dEdqti4GwqTkbsQ</Guideline>
					<Guideline>_i8bUEL6cEdqti4GwqTkbsQ</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact"
					name="developer_test"
					briefDescription="The instructions that validate individual software components perform as specified."
					id="_0YuXEclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Developer Test" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="developer_test,_0YuXEclgEdmt3adZL5Dmdw" briefDescription=""
						id="_NqSB0qeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-26T10:04:07" changeDescription=""
						version="1.0.0" externalId="">
						<MainDescription><![CDATA[<p> This artifact covers all of 
  the steps that are required to validate 
  a software component. It specifies test entries, 
  execution conditions, and expected results. These details 
  are identified for the purpose of evaluating a 
  particular aspect of a scenario. </p>
<p> The tests should be self-documenting in a way that 
  makes it clear upon completion of the test whether the component has 
  run correctly. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving>
							Not having developer tests can inhibit
							iterative development, because &#xD; there
							is no assurance that modified components are
							still working correctly &#xD; when you
							modify components iteration by iteration.
						</ImpactOfNotHaving>
						<Purpose><![CDATA[Evaluate that a software component performs as specified.]]></Purpose>
						<ReasonsForNotNeeding>
							If the tests can be embedded into the actual
							production code, you might not need a
							separate work product. Nonetheless,
							some&#xD; level of support for developer
							testing is always necessary.
						</ReasonsForNotNeeding>
						<BriefOutline>
							&lt;p>&#xD; There is no predefined template
							for this&amp;nbsp;work product and a testing
							tool will&amp;nbsp;affect how the work
							product is&#xD; handled, but here are some
							key issues that should be addressed:&#xD;
							&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
							Setup&#xD; &lt;/li>&#xD; &lt;li>&#xD;
							Inputs&#xD; &lt;/li>&#xD; &lt;li>&#xD;
							Script&#xD; &lt;/li>&#xD; &lt;li>&#xD;
							Expected Results&#xD; &lt;/li>&#xD;
							&lt;li>&#xD; Evaluation Criteria&#xD;
							&lt;/li>&#xD; &lt;li>&#xD; Clean-Up&#xD;
							&lt;/li>&#xD; &lt;/ul>
						</BriefOutline>
						<RepresentationOptions>
							&lt;p align=&quot;left&quot;>&#xD; The
							following are recommendation and options for
							representing this work product.&#xD;
							&lt;/p>&#xD; &lt;h4> Recommendation:
							Automated Code Unit&lt;/h4>&#xD; &lt;p> The
							most appropriate technique for running these
							&#xD; tests is using code that tests the
							components fully &#xD; and that you can run
							regularly as &#xD; you update the system
							during development. &lt;/p>&#xD; &lt;p> When
							code is the&amp;nbsp;sole form
							of&amp;nbsp;the tests, you &#xD; must take
							care to ensure that the code is
							self-documenting, including &#xD;
							specifications of what conditions you are
							testing and what setup or clean-up &#xD; is
							required for the test to run properly.
							&lt;/p>&#xD; &lt;h4> Option: Manual
							Instructions&lt;/h4>&#xD; &lt;p> In some
							cases, manual instructions can suffice. For
							example, when testing &#xD; a user
							interface, a Developer could walk through a
							script, explaining &#xD; the component. In
							this case, it can still be valuable to
							create a test harness &#xD; that goes
							straight to the user interface. That way,
							&#xD; the Developer can follow the script
							without having to walk through a complicated
							&#xD; set of instructions to get to a
							particular screen &#xD; or page.
							&lt;strong>&lt;/strong>&lt;/p>&#xD; &lt;h4>
							Option: Embedded Code&lt;/h4>&#xD; &lt;p>
							Certain technologies (such as
							Java&amp;#8482; 5 Test Annotation)
							&lt;strong>enable &#xD; you to&lt;/strong>
							embed tests in the implementation. In those
							cases, there &#xD; will be a logical work
							product, but it will be assimilated into the
							code that &#xD; you are testing.&lt;strong>
							&lt;/strong>Here, &#xD; too, take into
							consideration that you must ensure that the
							code is self-documenting. &#xD; &lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Concept>_0Y6kUMlgEdmt3adZL5Dmdw</Concept>
					<Guideline>_eRutgC5QEduVhuZHT5jKZQ</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="implementation"
					briefDescription="This guideline describes the different types of elements in an implementation."
					id="_0Y0dsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Implementation" variabilityType="na">
					<Presentation
						name="implementation,_0Y0dsMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_4wqaMMPaEdmbOvqy4O0adg" orderingGuide="" suppressed="false"
						authors="Jim Ruehlin" changeDate="2006-07-28T06:21:45"
						changeDescription="" version="1.0">
						<MainDescription><![CDATA[<h5>
    Code Reuse&nbsp;
</h5>
<p>
    Code reuse and code generation tools produce more robust code and are preferable to writing code by hand. Existing code
    has often already been tested and even deployed, making it more stable and well understood than new code. Source code
    created from a code generation tool (such as a visual modeling tool) automates dreary coding tasks such as creating
    getters and setters.
</p>
<p>
    There are many places to harvest code for reuse:
</p>
<br />
<br />
<ul>
    <li>
        Internal (corporate) code libraries.
    </li>
    <li>
        3rd party libraries.
    </li>
    <li>
        Built-in language libraries.
    </li>
    <li>
        Code samples from tutuorials, examples, books, etc.
    </li>
    <li>
        Local code guru or knowledgable colleague
    </li>
    <li>
        Existing system code
    </li>
    <li>
        Open source products (be sure to follow any licensing agreements)&nbsp;
    </li>
</ul>
<h5>
    Transforming the Design into the&nbsp;Implementation
</h5>
<p>
    Transforming the design into code implements the system structure in the chosen source language. It also implements the
    system behavior defined in the functional requirements. Implementing the system behavior means writing the code that
    allows different parts of the application (classes or components) to collaborate in realizing the behavior of the
    system.
</p>
<p>
    There are various techniques for automatically transforming design to implementation. Here are some examples:
</p>
<br />
<br />
<ul>
    <li>
        Platform-specific visual models can be used to generate an initial code framework. This framework can be further
        elaborated with additional code not specified in the design.<br />
    </li>
    <li>
        Models can be detailed and used to generate an implementation. Both structure (class and package diagrams) and
        behavior diagrams (such as state and activity diagram) can be used to generate executable code. These prototypes
        can be further refined as needed.<br />
    </li>
    <li>
        The design may be platform independent to varying degrees. Platform specific design models or even code can be
        generated via transformations that apply various rules to map high level abstractions platform specific elements.
        This is the focus of the Object Management Group (OMG) Model Driven Architecture (MDA) <a 
        href="http://www.omg.org/" target="_blank" >(http://www.omg.org</a>) initiative.<br />
    </li>
    <li>
        Standard patterns can be applied to generate design and code elements from related design and implementation. For
        example, a standard transformation pattern can be applied to a data table to create java classes to access the data
        table. Another example is using an Eclipse Modeling Framework (<a  href="http://www.eclipse.org/emf/"
        target="_blank" >http://www.eclipse.org/emf/</a>) model to generate code for storing data that matches the model and
        to generate a user interface implementation for populating data. A pattern or transformation engine can be used to
        create the implementation, or the implementation can be done by hand. Pattern engines are easier and more reliable,
        but hand-written code implementing a defined pattern will have fewer errors than hand-written code implementing a
        novel or unique design.
    </li>
</ul>
<p>
    In all cases, however, some design abstraction (classes, components, etc)&nbsp;is detailed to become the
    implementation.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="test_first_design"
					briefDescription="This concept explains how to bring test design chronologically in-line with software design."
					id="_0Y6kUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Test-first Design" variabilityType="na">
					<Presentation
						name="test_first_design,_0Y6kUMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_Hg5UUMPbEdmbOvqy4O0adg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-08-16T02:49:28"
						changeDescription="" version="">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    With Test-First Design (TFD) you do detailed design in a just-in-time (JIT) manner&nbsp;via writing a single test
    before writing just enough production code to fulfill that test.&nbsp; When you have new functionality to add to your
    system, perform the following steps:
</p>
<ol>
    <li>
        <strong>Quickly add a test</strong>.&nbsp; You need just enough code to fail.&nbsp;
    </li>
    <li>
        <strong>Run your tests</strong>.&nbsp; You will&nbsp;typically run the complete test suite, although for sake of
        speed you may decide to run only a subset.&nbsp; The goal is&nbsp;to ensure that the new test does in fact
        fail.&nbsp;
    </li>
    <li>
        <strong>Update your production code</strong>.&nbsp;&nbsp;The goal is to add just enough functionality so that
        your&nbsp;code&nbsp;passes the new test.&nbsp;
    </li>
    <li>
        <strong>Run your test suite&nbsp;again</strong>.&nbsp; If they tests fail you need to update your functional code
        and retest.&nbsp; Once the tests pass, start over.&nbsp;
    </li>
</ol>
<br />
<p>
    <img height="600" alt="Test First Design Flow" src="openup_basic/guidances/concepts/resources/testFirstDesign.jpg" width="294" />&nbsp;
</p>
<h4>
    Why TFD?
</h4>
<p>
    A significant advantage of TFD is that it enables you to take small steps when writing software, which is not only
    safer it is also far more productive than writing code&nbsp;in large steps.<span     style="mso-spacerun: yes">&nbsp;</span> For example, assume you add some new functional code, compile, and test
    it.<span style="mso-spacerun: yes">&nbsp;</span> Chances are pretty good that your tests will be broken by defects that
    exist in the new code.<span style="mso-spacerun: yes">&nbsp;</span> It is much easier to find, and then fix, those
    defects if you've written five new lines of code than in fifty lines. The implication is that the faster your compiler
    and regression test suite, the more attractive it is to proceed in smaller and smaller steps.<span     style="mso-spacerun: yes">&nbsp;</span>
</p>
<p>
    There are three other common testing strategies (in order of effectiveness).
</p>
<ol>
    <li>
        <strong>Write&nbsp;several tests first</strong>.&nbsp; This is a variant of TFD where you write more than one test
        before writing just enough production code to fulfill those tests.&nbsp; The advantage is that you don't need to
        build your system as often,&nbsp;potentially saving time.&nbsp; It&nbsp;has the disadvantage that you will write
        more&nbsp;production code at once, increasing the difficulty of finding any new bugs that you do introduce.
    </li>
    <li>
        <strong>Test after the fact</strong>.&nbsp; With this approach you write some production code then you write enough
        testing code to validate it.&nbsp; This has the advantage that you're at least still validating the code but has
        the disadvantage that you lose the design benefit inherent in writing the testing code first.
    </li>
    <li>
        <strong>Don't test at all</strong>.&nbsp; This is a really bad idea.
    </li>
</ol>
<br />
<h3>
    Good Things to Know
</h3>
<p>
    1. An underlying assumption of TDD is that you have a unit-testing framework available to you.<span     style="mso-spacerun: yes">&nbsp;</span> Agile software developers often use the xUnit family of open source tools, such
    as <a  href="http://www.junit.org/" ><strong><font color="#000080">JUnit</font></strong></a> or <a  href="http://www.vbunit.org/" ><strong><font color="#000080">VBUnit</font></strong></a>, although commercial tools are
    also viable options.<span style="mso-spacerun: yes">&nbsp;&nbsp;</span><span style="mso-spacerun: yes">&nbsp;</span>
</p>
<p>
    2. Test-Driven Design (TDD) = TFD + <a class="elementLink" href="./../../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html" guid="_Poc7IPDzEdqYgerqi84oCA">Refactoring</a>
</p>
<p>
    3. TFD/TDD is commonly used with object-oriented business code, although you can also take this approach with
    procedural code, user-interface code, and your database code if you choose to.
</p>
<p>
    4. A more thorough discussion of TFD and TDD is presented at <a  href="http://www.agiledata.org/essays/tdd.html" target="_blank" >Introduction to Test Driven Development (TDD)</a>.
</p>
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="developer_testing"
					briefDescription="This guideline describes approaches for performing developer testing on the implementation."
					id="_0ZGxkMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Developer Testing" variabilityType="na">
					<Presentation
						name="developer_testing,_0ZGxkMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_Kxs9wMPbEdmbOvqy4O0adg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-12T03:13:00"
						changeDescription="" version="">
						<MainDescription><![CDATA[<h3>
    Testing Philosophies
</h3>
<p>
    Here are some important philosophies with regard to testing:
</p>
<ol>
    <li>
        The goal is to find defects. Successful tests find bugs, but correcting the bugs&nbsp;falls into other areas.
    </li>
    <li>
        Test&nbsp;early and often. The cost of change to rises exponentially the longer it takes to find and then remove a
        defect. The implication is that you want to test as early as possible (the earliest you could possibly test is
        first, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/test_first_design,_0Y6kUMlgEdmt3adZL5Dmdw.html" guid="_0Y6kUMlgEdmt3adZL5Dmdw">Concept: Test-first Design</a>).
    </li>
    <li>
        Testing builds confidence. Many people fear making a change to their code because they are afraid that they will
        break it, but with a full test suite in place if you do break something you know you will detect it and then fix
        it.
    </li>
    <li>
        One test is worth a thousand opinions. You can&nbsp;say that your application works, but until you show the test
        results&nbsp;you might&nbsp;not be believed.
    </li>
    <li>
        Test to the risk. The riskier something is, the more it needs to be reviewed and tested. In other words you should
        invest significant effort testing in an air traffic control system but nowhere near as much effort testing a “Hello
        World” application.
    </li>
    <li>
        You can validate all artifacts. You can test all your artifacts, not just your source code, although the focus of
        this guidance is testing code.
    </li>
</ol>
<h3>
    Qualities of a Good Developer Test
</h3>
These are the qualities of&nbsp;a good developer test: 
<ul class="noindent">
    <li>
        It runs fast.&nbsp;It has&nbsp;short setup, run time, and clean-up.
    </li>
    <li>
        It runs in isolation. You should be able to reorder your tests.
    </li>
    <li>
        It is understandable. Good tests have consistent and informative names and use data that makes them easy to read
        and to understand.
    </li>
    <li>
        It uses real data. E.g. Use copies of production data when appropriate, but remember that you'll also have to
        create some specific "artificial" test data as well.
    </li>
    <li>
        It is minimally cohesive. The test represents one step toward your overall goal. The test should address one and
        one only issue.
    </li>
</ul>
<h3>
    Approaches for Test Setup
</h3>
<p>
    To successfully run a test, the system must be in a known state.&nbsp; To do this you will need objects or components
    in memory, rows in your database, etc.&nbsp;that you will test against.&nbsp; The easiest approach is to hardcode the
    required data and the setup code within the test itself.&nbsp; The primary advantage&nbsp;is that all the information
    that you need about the test is in one place and that the test is potentially self-sufficient.
</p>
<p>
    Another approach is to define an external data set which&nbsp;is loaded into memory or into&nbsp;the database at the
    beginning of&nbsp;the test run.&nbsp; There are several advantages to this approach:
</p>
<ul>
    <li>
        It decouples the test data from the test.&nbsp;
    </li>
    <li>
        More than one test&nbsp;can use the same data set.&nbsp;
    </li>
    <li>
        It is easy to modify and/or multiply the test data.&nbsp;
    </li>
</ul>
<p>
    There are some disadvantages to this approach:
</p>
<ul>
    <li>
        Increased complexity for maintaining the external data
    </li>
    <li>
        Potential coupling between test cases.&nbsp; When&nbsp;they share a common test data bed it becomes very easy to
        write tests&nbsp;that depend on other tests running first, thereby coupling them together.<br />
    </li>
</ul>
<h3>
    Coding for Testability
</h3>
<p>
    Instrument the code for testing and debugging.&nbsp; Pay special attention to the implementation of the
    observation/control points, as these aspects might need special support that has to be implemented in the component
    under test.
</p>
<h3>
    Reviewing Tests
</h3>
<p>
    If a test will be long-lived, ask a person with less inside knowledge of the component to run it and check if there is
    enough support information. Review it with other people within the development team and other interested parties as
    needed.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="implement_solution"
					briefDescription="Implement source code to provide new functionality or fix defects."
					id="_0hyzgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Implement the Solution" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="implement_solution,_0hyzgMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_d2aMwKrMEdmqUqi7YGiSxw" orderingGuide=""
						suppressed="false" authors="Jim Ruehlin"
						changeDate="2006-09-28T03:31:00" changeDescription=""
						version="1.0">
						<MainDescription><![CDATA[<p>
    Usually, this task is focused on a specific element, such as a class or component, but it does not need to be.
</p>
<p>
    You implement a portion of the design during each iteration by performing this task. You can perform the task any
    number of times during an iteration.
</p>
<p>
    Modify the implementation incrementally. Make additions and changes to the implementation for an issue, run the unit
    and regression tests, and then complete the issue before moving on to other issues.
</p>
<p>
    See the associated guidelines for information on how to perform the steps described in this task.
</p>]]></MainDescription>
						<KeyConsiderations><![CDATA[<p>
    This task is complete once the build has successfully completed. The implementation should then be immediately tested.
</p>]]></KeyConsiderations>
						<Section name="Determine a strategy"
							briefDescription="" id="_2sxisE2iEduU655MA_3VXg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; You need to determine a
								strategy, based on the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>&amp;nbsp;of
								the work item being worked on, for how
								you're going to implement it.&#xD; Your
								fundamental options are:&#xD;
								&lt;/p>&#xD; &lt;ol>&#xD; &lt;li>&#xD;
								Apply existing, reusable assets.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Model the
								design in detail and generate the source
								code (by model transformation).&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Write the
								source code.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Any combination
								thereof.&#xD; &lt;/li>&#xD; &lt;/ol>
							</Description>
						</Section>
						<Section name="Identify opportunities for reuse"
							briefDescription="" id="_iMMWoKuPEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Complete the implementation
								by reusing code at every
								opportunity.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Identify existing code or
								other implementation elements that you
								can reuse in the portion of the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/implementation,_0YoQcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0YoQcMlgEdmt3adZL5Dmdw&quot;>Implementation&lt;/a>&amp;nbsp;that
								you are creating or changing. A
								comprehensive understanding&#xD; of the
								overall design is helpful, because it is
								best to leverage reuse opportunities
								when you have a thorough&#xD;
								understanding of the proposed
								solution.&lt;br />&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Transform design into implementation" briefDescription=""
							id="_pjehkNb7Edq_LtLvi4w2yw" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; If you are using
								sophisticated modeling tools, you should
								be able to generate a portion of the
								required source code&#xD; from the
								model.&amp;nbsp;Note that programming is
								often required to complete the
								implementation after the design&#xD;
								model&amp;nbsp;has been transformed into
								code.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Write source code"
							briefDescription="" id="_mFQ58KuPEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; You should strive to reuse
								and/or generate code wherever possible,
								but you will often need to still need to
								do some&#xD; programming.&amp;nbsp;To do
								so, consider the following:&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								Examine the&amp;nbsp;requirements.
								Because some requirements information
								does not translate directly into your
								design&#xD; you should examine the
								requirement(s) (potentially including
								both the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use
								Case&lt;/a>(s) and &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting
								Requirements&lt;/a>) to ensure that they
								are fully realized in the&#xD;
								implementation.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Refactor your code to
								improve its design.&amp;nbsp;&lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html&quot;
								guid=&quot;_Poc7IPDzEdqYgerqi84oCA&quot;>Refactoring&lt;/a>&amp;nbsp;is
								a technique where you improve the
								quality of your code via&#xD; small
								changes.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Tuning the results of the existing
								implementation by improving performance,
								the user interface, security, and
								other&#xD; nonfunctional areas.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Adding
								missing details, such as completing the
								logic of operations or adding supporting
								classes and data structures&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Handling
								boundary conditions.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Dealing with unusual
								circumstances or error states.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Restricting
								behavior (preventing users from
								executing illegal flows, scenarios, or
								combinations of options).&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Adding
								critical sections for multi-threaded or
								re-entrant code.&lt;br />&#xD;
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Create a build"
							briefDescription="" id="_-0yzwDH4EduMqpUNhaTSRA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Create a new &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0YuXEMlgEdmt3adZL5Dmdw&quot;>Build&lt;/a>.
								This might involve simply running an
								existing build script and/or updating
								an&#xD; existing build script.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Evaluate the implementation"
							briefDescription="" id="_ni25UKuPEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Verify that the
								implementation is fit for its
								purpose.&amp;nbsp;Examine the code for
								its suitability to perform its&#xD;
								intended function. This is a quality
								assurance step that you perform in
								addition to testing, and it is described
								in&#xD; other tasks. Consider these
								strategies:&#xD; &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; Pair
								programming.&amp;nbsp;By pairing to
								implement the code in the first place,
								you effectively evaluate the code
								as&#xD; its being written.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Read through
								the code for common mistakes. Consider
								keeping a checklist of common mistakes
								that you make, as a&#xD; reminder
								reference.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Use tools to check for
								implementation errors and inappropriate
								code. For example, use a static code
								rule checker or&#xD; set the compiler to
								the most detailed warning level.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Use tools
								that can visualize the code. Code
								visualization, such as the&amp;nbsp;UML
								visualizations in the Eclipse IDE,&#xD;
								help developers identify issues such as
								excessive coupling or&amp;nbsp;circular
								dependencies.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Perform informal, targeted
								code inspections. Ask colleagues to
								review&amp;nbsp;small critical sections
								of code and code&#xD; with significant
								churn. Avoid reviewing large sections of
								code.&#xD; &lt;/li>&#xD; &lt;/ul>&#xD;
								&lt;p>&#xD; Improve the implementation
								based on the results of these
								evaluations.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Communicate significant decisions" briefDescription=""
							id="_q5XiIKuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Communicate the impact of
								unexpected changes to the design and
								requirements.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; The issues and constraints
								that you uncover when you implement the
								system must be communicated to the team.
								The impact&#xD; of issues discovered
								during implementation must be
								incorporated into future decisions. If
								appropriate, update use cases&#xD; and
								supporting requirements to reflect
								ambiguities that you identified and
								resolved in the implementation so they
								can&#xD; be tested and you can manage
								the &lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a>&amp;nbsp;expectations
								appropriately. Similarly, update the
								design to reflect&#xD; new constraints
								and issues uncovered during
								implementation to be sure that the new
								information is communicated to
								other&#xD; developers.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Usually, there is no need
								for a change request if the required
								change is small and the same person is
								designing and&#xD; implementing the
								class. That individual can make the
								design change directly. If the required
								change has a broad impact,&#xD; such as
								a change in a public operation, it may
								be necessary to communicate that change
								to the other team members&#xD; through a
								change request.&lt;br />&#xD; &lt;br
								/>&#xD; &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p>
    The purpose of this task is to produce an implementation for part of the solution (such as a class or component), or to
    fix one or more defects. The result is typically new or modified source code, which is generally referred to <em>the
    implementation</em>.<br />
</p>]]></Purpose>
					</Presentation>
					<Concept>_0Y6kUMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
					<Concept>_Poc7IPDzEdqYgerqi84oCA</Concept>
					<Guideline>_0Y0dsMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_SM4YIL6dEdqti4GwqTkbsQ</Guideline>
					<PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0WuL8slgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0YoQcMlgEdmt3adZL5Dmdw</Output>
					<Output>_0YuXEMlgEdmt3adZL5Dmdw</Output>
					<Output>_BVh9cL-CEdqb7N6KIeDL8Q</Output>
					<Output>_0VGbUMlgEdmt3adZL5Dmdw</Output>
					<OptionalInput>
						_0YoQcMlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_BVh9cL-CEdqb7N6KIeDL8Q
					</OptionalInput>
					<OptionalInput>
						_0VGbUMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="impl_developer_tests"
					briefDescription="Implement one or more tests that enable the validation of the individual software components through execution."
					id="_0iL1EMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Implement Developer Tests"
					variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="impl_developer_tests,_0iL1EMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_dWPe8KrMEdmqUqi7YGiSxw" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-12T08:23:54"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    Developer testing is different from other forms of testing in that it is based on the expected behavior of code units
    rather than being directly based on the system requirements.
</p>]]></MainDescription>
						<KeyConsiderations><![CDATA[<ol>
    <li>
        Automate tests via a unit regression testing tool (for example, xUnit) so that tests may be run by developers
        whenever they make changes to the code.
    </li>
    <li>
        Test to the risk of the component. For example, the more critical a component is, the more important it is&nbsp;to
        test it&nbsp;thoroughly.
    </li>
</ol>]]></KeyConsiderations>
						<Section
							name="Refine scope and identify the test(s)" briefDescription=""
							id="_2LYo8KuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Select the increment of work
								to be tested and identify developer
								test(s) to verify that
								the&amp;nbsp;&lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/implementation,_0YoQcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0YoQcMlgEdmt3adZL5Dmdw&quot;>Implementation&lt;/a>&amp;nbsp;being
								developed behaves correctly.&amp;nbsp;
								It is best to do this&#xD; at a small
								scale, much smaller than the complete
								code base to be authored by a developer
								over the course of an&#xD;
								iteration.&amp;nbsp; This can be done
								for one operation, one field added to a
								user interface, one stored procedure,
								etc.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Write the test setup"
							briefDescription="" id="_g8npoC5UEduVhuZHT5jKZQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Implement the setup
								logic&amp;nbsp;that must be performed as
								part of the&amp;nbsp;&lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/developer_test,_0YuXEclgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0YuXEclgEdmt3adZL5Dmdw&quot;>Developer
								Test&lt;/a>.&amp;nbsp; To successfully
								run a test the system must be in a known
								state&#xD; so that the correct behavior
								can be defined.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Write the test logic"
							briefDescription="" id="_5WtVcKuPEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Write the&amp;nbsp;steps that performs
								the actual test(s).&amp;nbsp;
							</Description>
						</Section>
						<Section name="Define the expected results"
							briefDescription="" id="_g1eDUC5VEduVhuZHT5jKZQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Define the expected results
								of&amp;nbsp;each&amp;nbsp;test&amp;nbsp;so
								that it can be verified.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD;
								After&amp;nbsp;a test runs, you need to
								be able to compare the results of
								running the test against
								what&amp;nbsp;was expected&#xD; to
								happen.&amp;nbsp; The test is successful
								when the actual results match the
								expected results.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Define the test response"
							briefDescription="" id="_j30aAC5VEduVhuZHT5jKZQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Define the information the test(s) must
								produce to successfully indicate success
								or failure.&amp;nbsp; Consider if a
								response&#xD; of True or False is
								sufficient, or&amp;nbsp;if a detailed
								message should be logged as well.
							</Description>
						</Section>
						<Section name="Write clean-up code"
							briefDescription="" id="_ku06gC5VEduVhuZHT5jKZQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Identify, and then implement, the steps
								to be followed in order to restore the
								environment to the original state for
								each&#xD; test.&amp;nbsp; The goal is to
								ensure that there are no side effects
								from running&amp;nbsp;the tests.
							</Description>
						</Section>
						<Section name="Test the test"
							briefDescription="" id="_6wZFMKuPEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD;
								Verify&amp;nbsp;that&amp;nbsp;each
								developer test works correctly. To do
								this:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
								&lt;li>&#xD; Run the test(s),
								observe&amp;nbsp;their behavior, and fix
								any defects in the tests.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Ensure that
								the expected results are defined
								properly and that they're being checked
								correctly.&amp;nbsp;&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Check the clean-up logic
								for each test.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Ensure that each developer
								test&amp;nbsp;works within your test
								suite framework.&#xD; &lt;/li>&#xD;
								&lt;/ul>
							</Description>
						</Section>
						<Alternatives><![CDATA[Rely on acceptance tests to validate your software. This will likely be time consuming, late, and not as effective as
developer testing in identifying bugs and finding their location in the code.]]></Alternatives>
						<Purpose><![CDATA[Prepare to validate a software component (e.g. an operation, a class, a stored procedure) through unit testing.&nbsp; The
result is one or more new developer tests.]]></Purpose>
					</Presentation>
					<Concept>_0Y6kUMlgEdmt3adZL5Dmdw</Concept>
					<Guideline>_0ZGxkMlgEdmt3adZL5Dmdw</Guideline>
					<PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0YoQcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0YuXEclgEdmt3adZL5Dmdw</Output>
					<OptionalInput>
						_0WuL8slgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_0ZfMEMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="run_developer_tests"
					briefDescription="Run tests of the individual software components to  verify that their internal structures work as specified."
					id="_0iYCUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Run Developer Tests" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="run_developer_tests,_0iYCUMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_W6rc0Lv7EdmmUvZAZjqE3g" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-08-23T12:37:36"
						changeDescription="" version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations><![CDATA[<p> It is common to require that code pass all Developer tests before it can be 
  delivered in an integrated build (see <a class="elementLinkWithType" href="./../../openup_basic/guidances/guidelines/promoting_builds,_SM4YIL6dEdqti4GwqTkbsQ.html" guid="_SM4YIL6dEdqti4GwqTkbsQ">Guideline: 
  Promoting Builds</a>). </p>]]></KeyConsiderations>
						<Section name="Run tests" briefDescription=""
							id="_MSnQsMP4EdmWKcx6ixEiwg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Run the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/developer_test,_0YuXEclgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0YuXEclgEdmt3adZL5Dmdw&quot;>Developer
								Test&lt;/a>s. The procedure will vary,
								depending on whether the test is manual
								or&#xD; automated and whether additional
								test components are
								necessary,&amp;nbsp;such
								as&amp;nbsp;drivers or stubs.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; To run the
								tests, you need to make sure that you
								have initialized the test environment
								with all necessary elements,&#xD; such
								as software, hardware, tools, data, and
								so on.&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Automated tests will often update a
								&lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/test_log,_0ZlSsMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0ZlSsMlgEdmt3adZL5Dmdw&quot;>Test
								Log&lt;/a>&amp;nbsp;which you can
								evaluate to determine where your tests
								went wrong.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Evaluate execution of tests"
							briefDescription="" id="_NkRF0MP4EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Testing ends or terminates
								in one of two conditions:&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								&lt;strong>Normal:&lt;/strong> The test
								run appears successful. You may choose
								to review the test log&amp;nbsp;to
								ensure that&#xD; this in fact is the
								case.&amp;nbsp; For example, perhaps a
								developer test&amp;nbsp;ran successfully
								but logged results&#xD; which you didn't
								expect.&amp;nbsp;&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; &lt;strong>Abnormal or
								premature:&lt;/strong>&amp;nbsp;The
								developer tests did not run completely
								or as you intended. When&#xD; testing
								ends abnormally, the test results may be
								unreliable. You must must identify and
								correct the cause of the&#xD;
								termination and rerun the tests before
								you perform any additional test
								tasks.&amp;nbsp;&#xD; &lt;/li>&#xD;
								&lt;/ul>
							</Description>
						</Section>
						<Section
							name="Determine cause of the problem(s)" briefDescription=""
							id="_q031wEzgEdurd9mTUOyYDg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Review the test log to
								understand any reported failures,
								warnings, or unexpected
								results.&amp;nbsp; The&amp;nbsp;cause of
								the&#xD; problem(s) may fall under one
								or more of the following categories&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								The implementation element
								being&amp;nbsp;tested is faulty.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; There is a
								problem
								with&amp;nbsp;the&amp;nbsp;developer
								tests.&amp;nbsp; Perhaps there is a
								problem with the setup of a test,&#xD;
								incorrect test data, or a
								test&amp;nbsp;didn't&amp;nbsp;evaluate
								its results appropriately.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; There is an
								environment problem.&amp;nbsp; There may
								have been a fatal error
								(a&amp;nbsp;network failures, a
								hardware&#xD; crash, ...) or a test
								script command failure where a test
								script cannot execute a command or a
								line of code.&amp;nbsp;&#xD; Both types
								of abnormal termination of testing may
								exhibit the same symptoms, either
								unexpected actions or the test&#xD;
								environment appearing to be unresponsive
								or in an undesirable state.&#xD;
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Take corrective action(s)"
							briefDescription="" id="_SXPFkMP4EdmWKcx6ixEiwg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Based on the cause of the
								problem, determine the appropriate
								corrective action to recover from a
								&quot;failed&quot; test&#xD;
								run.&amp;nbsp;&amp;nbsp;&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; If the
								implementation element under test is
								faulty, fix the problem if
								possible.&amp;nbsp; If the problem is
								serious and&#xD; cannot be immediately
								addressed,&amp;nbsp;perform the
								task&amp;nbsp;&lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0mwzEclgEdmt3adZL5Dmdw&quot;>Request
								Change&lt;/a>&amp;nbsp;to report the
								defect.&amp;nbsp;&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; If there was a problem with
								your environment, then fix it and then
								rerun your tests.&#xD; &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[To verify that the implementation works as specified.]]></Purpose>
					</Presentation>
					<Guideline>_0kF5kMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0ZGxkMlgEdmt3adZL5Dmdw</Guideline>
					<PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0YuXEclgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_0YoQcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0ZlSsMlgEdmt3adZL5Dmdw</Output>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact" name="design"
					briefDescription="This artifact describes the realization of required system functionality in terms of components and serves as an abstraction of the source code."
					id="_0WuL8slgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Design" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="design,_0WuL8slgEdmt3adZL5Dmdw" briefDescription=""
						id="_zxB-QKYcEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-15T04:04:28" changeDescription=""
						version="" externalId="">
						<MainDescription><![CDATA[<p>
    This product&nbsp;can describe multiple static and dynamic&nbsp;views of the system&nbsp;for&nbsp;examination. Although
    various views may focus on divergent, seemingly independent&nbsp;issues of how the system will be put together and
    work, they should fit together without contradiction.
</p>
<p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an isolated subsystem, a high-level analysis of the system, a view of the system
    in only one context, or other perspectives that explain a solution to a specific problem that needs to be communicated.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving>
							&lt;p>&#xD; Implementation will proceed with
							fine-grained, inconsistent tactical
							decisions that lead to poor-quality
							software.&#xD; &lt;/p>
						</ImpactOfNotHaving>
						<Purpose><![CDATA[<p>
    Describe the&nbsp;elements of the system&nbsp;so&nbsp;they can be examined and understood in ways not&nbsp;possible by
    reading the source code.
</p>]]></Purpose>
						<ReasonsForNotNeeding>
							Some representation of the design will
							always be necessary. In circumstances where
							a project involves applying&#xD;
							well-understood, existing strategies for
							architecture and design, it is possible that
							you will not need a &lt;em>new&lt;/em>&#xD;
							design. In those cases, you can simply refer
							to&amp;nbsp;some existing design.
						</ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;p align=&quot;left&quot;>&#xD; It is
							important that the author of this work
							product&amp;nbsp;be able to analyze and
							communicate to other collaborators key&#xD;
							decisions about the structure and behavior
							of the system.&amp;nbsp; It is also
							important that these decisions can be&#xD;
							communicated at various levels of
							abstraction and granularity. Whether you
							record these decisions on a white board
							or&#xD; use a formal tool is not governed by
							this process.&#xD; &lt;/p>&#xD; &lt;p
							align=&quot;left&quot;>&#xD; Certain parts
							of this artifact will be important to the
							understanding of the overall architecture.
							Therefore, you must&#xD; represent them in
							some way that will last.&amp;nbsp; For other
							parts that are not
							architecturally-significant, this work&#xD;
							product&amp;nbsp;may be considered more of
							an informal result of the task of designing
							than a true artifact.&#xD; &lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Checklist>_0XSzsMlgEdmt3adZL5Dmdw</Checklist>
					<Guideline>_0X3bcMlgEdmt3adZL5Dmdw</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="design_solution"
					briefDescription="Identify the elements and devise the interactions, behavior, relations, and data necessary to realize some functionality."
					id="_0fshwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Design the Solution" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="design_solution,_0fshwMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_NrC20qeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-09T02:58:28" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p>
    This task is about designing part of the system, not the whole system.&nbsp; It should be applied based upon some small
    subset of requirements.&nbsp; The requirements driving the design could be scenario-based functional requirements,
    non-functional requirements, or a combination.
</p>
<p>
    This task can be applied in some specific context such as the database access elements required for some
    scenario.&nbsp; In this case the task might be applied&nbsp;again later&nbsp;to deal with a different context on the
    same requirements.&nbsp; Keep in mind that to actually build some functionality of value&nbsp;to the users, all
    contexts will typically need to be designed and implemented. For example, to actually utilize some system capability it
    will have to have been designed and implemented all its context such as user interface, business rules, database
    access, etc.
</p>
<p>
    If this task is being performed on an architecturally significant element the results of this design should be
    referenced by the architecture.
</p>]]></MainDescription>
						<KeyConsiderations><![CDATA[<P>Each step in this task can cause all previous steps to be revisited in light of new information and decisions.&nbsp; For example, while determining how elements collaborate&nbsp;you might find a gap in the requirements that causes you to go back to the beginning after collaborating with the analyst, or when evaluating the design a reviewer could&nbsp;note that a reusable element being used doesn't work as expected and that could cause you to identify new elements to take its place.<?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></P>
<P>Consider the architecture while performing this task.&nbsp; All design work must be done while regarding the architecture within which the design exists.&nbsp; Furthermore, certain design elements will be deemed architecturally significant; those elements will require updates to the architecture. </P>
<P>This task will be applied numerous times.&nbsp; Design is best performed in small chunks.</P>
<P>Even when starting the design for a particular project it&nbsp;is expected that there will be existing frameworks and reusable elements.&nbsp; Every step of this task must give attention to the existing design and existing implementation, utilizing existing elements when possible and emulating or improving existing elements as appropriate while designing this portion of the solution. </P>
<P>Apply patterns throughout this task.&nbsp; Patterns represent proven designs and their usage promotes quality and consistency across the design. </P>]]></KeyConsiderations>
						<Section name="Understand requirement details"
							briefDescription="" id="_4Z7WYKuKEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Examine the relevant &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use
								Case&lt;/a>(s) and &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;
								guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting
								Requirements&lt;/a>&amp;nbsp;to
								understand the scope of the design task
								and the&#xD; expectations on the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; If the
								requirements are not represented in some
								sort of scenario form (for example a
								non-functional requirement might&#xD;
								not have a scenario associated with it),
								a scenario will have to be identified
								that appropriately exercises the&#xD;
								requirements under consideration.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; If the
								requirements are&amp;nbsp;determined to
								be&amp;nbsp;incomplete or incorrect,
								work with the analyst to get the&#xD;
								requirements improved and possibly
								submit a change request against the
								requirements.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Identify design elements"
							briefDescription="" id="_--6tYKuKEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Identify the elements that
								collaborate together to provide the
								required behavior.&amp;nbsp; This can
								start with the key&#xD; abstractions
								identified in the architecture, domain
								analysis, and classical
								analysis&amp;nbsp;of the requirements
								(noun&#xD; filtering) to derive
								the&amp;nbsp;elements that would be
								required to fulfill them.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Identify
								elements in all perspectives being
								considered when performing this
								task.&amp;nbsp; This could include
								identifying&#xD; user interface
								elements,&amp;nbsp;control elements,
								data elements,&amp;nbsp;and elements
								relating to interfacing to other&#xD;
								systems or devices.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Existing elements of the
								design should be examined to see if they
								should participate in the
								collaboration.&amp;nbsp; It is&#xD; a
								mistake to create all new elements in
								each&amp;nbsp;execution of this
								task.&#xD; &lt;/p>&#xD; &lt;p>&#xD; This
								list of candidates must be expanded to
								include special-purpose participants
								that handle&amp;nbsp;particular roles
								in&#xD; providing the required behavior
								such as transaction processing or
								adherence to some security
								specification.&amp;nbsp; The&#xD; &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html&quot;
								guid=&quot;_uF-QYEAhEdq_UJTvM1DM2Q&quot;>Entity-Control-Boundary
								Pattern&lt;/a>&amp;nbsp;provides a good
								start for identifying elements.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section
							name="Determine how elements collaborate to realize the scenario"
							briefDescription="" id="_A_LU8KuLEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Walk through the scenario
								distributing responsibilities to the
								participating elements. These
								responsibilities can be&#xD; simple
								statements of behavior assigned to
								elements; they need not be detailed
								operation specifications with
								parameters,&#xD; etc. This step is about
								ensuring that a quality model is being
								created that is robust enough to support
								the&#xD; requirements.&amp;nbsp;&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Identify the
								required relationships between
								the&amp;nbsp;elements based on the
								walkthrough of the scenario examining
								how&#xD; the elements initiate each
								other's behavior. An element that
								requests behavior from another element
								is represented as a&#xD; relationship
								between those elements. As with the
								responsibilities, these relationships
								can just be defined at this&#xD;
								step.&#xD; &lt;/p>&#xD; &lt;p>&#xD; Look
								to the architecture and previous design
								work to create a consistent
								collaboration. Look to reuse existing
								behavior&#xD; and relations or to apply
								similar structure to simplify the design
								of the overall system.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Additional elements might be
								identified as behavior is found that
								cannot appropriately be assigned to any
								of the&#xD; existing elements.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Refine design decisions"
							briefDescription="" id="_ENwJwKuLEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Refine the design to an
								appropriate level of detail to drive
								implementation and to ensure that it
								fits into the&#xD;
								architecture.&amp;nbsp; In this step the
								design can take into consideration the
								actual implementation language and
								other&#xD; technical
								decisions.&amp;nbsp; Revisit the
								identification of the elements and the
								collaborations&amp;nbsp;that realize
								the&#xD; scenarios if necessary as this
								refinement takes into consideration
								details at a lower level of
								abstraction.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; In particular make decisions
								in regard to the considerations
								below:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
								&lt;li>&#xD; Specific details of
								relationships between the elements such
								as multiplicity and navigability&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Operation
								detail such as parameters and return
								values&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Existence and detail of data attributes
								necessary&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Usage of inheritance and
								interfaces to improve the design&#xD;
								&lt;/li>&#xD; &lt;/ul>&#xD; &lt;p>&#xD;
								Incorporate &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html&quot;
								guid=&quot;_w2ACwA4LEduibvKwrGxWxA&quot;>Design
								Mechanism&lt;/a>s from the architecture.
								Apply consistent structure of the
								elements&#xD; and organization of the
								behavior as in other areas of the design
								and use patterns identified in the
								architecture.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Design internals (for large or complex elements)"
							briefDescription="" id="_KNZYAKuLEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Design large or complex
								elements or some complex internal
								behavior in more detail. &amp;nbsp;&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; This might just
								involve devising an algorithm
								that&amp;nbsp;could be performed to
								produce the desired behavior. Add&#xD;
								additional operations, attributes, and
								relationships to support the
								expectations of an element.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; The state of
								the&amp;nbsp;element managed over the
								course of its lifetime&amp;nbsp;can be
								designed to ensure proper behavior
								in&#xD; various usages.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Design the database schema"
							briefDescription="" id="_9LeFME42EdudDeUNeAxPCQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; If the system has persistent
								data, the design will need to
								address&amp;nbsp;the database (or file)
								schema.&amp;nbsp; For a&#xD; relational
								database schema, identify the
								following:&#xD; &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; The structure
								of tables and views&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Relationships
								between&amp;nbsp;tables&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Triggers
								which enforce referential integrity&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Constraints
								on columns&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Default values for
								columns&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Stored procedures and functions&#xD;
								&lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Evaluate the design"
							briefDescription="" id="_mUVt8BfnEduD353bkQ4frw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Evaluate the object design
								for coupling, cohesion, and other
								quality design measurements.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Evaluate the
								database/file design for performance,
								referential integrity, and
								normalization.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Consider the design from
								various angles to ensure that it is a
								high-quality, communicable
								design.&amp;nbsp; Work with other&#xD;
								technical team members; an independent
								party can provide a fresh
								perspective.&amp;nbsp; However, when
								identifying potential&#xD; reviewers
								keep in mind that if someone can add
								value by reviewing the design, then
								perhaps they could have added even&#xD;
								more value by actively participating in
								the design effort itself.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; If design flaws
								are identified, improve the design.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Communicate the design"
							briefDescription="" id="_OGYbwKuLEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Communicate&amp;nbsp;the
								design to&amp;nbsp;those who need to
								understand it. Though this is described
								here toward the end of&#xD; the task,
								communication should be going on
								throughout the steps. Working
								collaboratively is always better
								than&#xD; reviewing the work after it is
								complete.&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Here are some ways to
								communicate&amp;nbsp;the design:&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								Formal models&amp;nbsp;specified in UML
								.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Informal diagrams that render static
								structure and capture&amp;nbsp;dynamic
								behavior.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Annotated code that
								communicates information about the
								static structure supplemented with
								textual descriptions of&#xD; dynamic
								behavior across code
								modules&amp;nbsp;.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Physical data models to
								describe the database schema.&#xD;
								&lt;/li>&#xD; &lt;/ul>&#xD; &lt;p>&#xD;
								Here are some examples of
								individuals&amp;nbsp;who will need to
								understand the design:&#xD; &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD;
								Developers&amp;nbsp;who will implement a
								solution based on the design.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD;
								An&amp;nbsp;architect who can review the
								design to ensure that it conforms to the
								architecture or who might examine
								the&#xD; design for opportunities to
								improve the architecture.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Other
								designers who can examine the design for
								applicability to other parts of the
								system.&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Developers or other designers who will
								be working on other parts of the system
								that will&amp;nbsp;depend on the&#xD;
								elements designed in this task.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Other
								reviewers&amp;nbsp;who will review the
								design for quality and adherence to
								standards.&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p>
    The purpose of&nbsp;this&nbsp;task&nbsp;is to describe the&nbsp;elements of the system so that they support the
    required behavior, are of high quality, and fit within the architecture.
</p>]]></Purpose>
					</Presentation>
					<Concept>_uF-QYEAhEdq_UJTvM1DM2Q</Concept>
					<Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
					<Guideline>_0X3bcMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
					<PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_BVh9cL-CEdqb7N6KIeDL8Q
					</MandatoryInput>
					<MandatoryInput>
						_0XAf0MlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_0VGbUMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0WuL8slgEdmt3adZL5Dmdw</Output>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0WuL8slgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Checklist" name="design"
					briefDescription="This checklist provides questions to verify that design is created in a consistent and complete manner."
					id="_0XSzsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Design" variabilityType="na">
					<Presentation name="design,_0XSzsMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_YIYIYMM1EdmSIPI87WLu3g" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-15T09:28:43"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    The items in this checklist represent good practices for creating and communicating a robust design. Try to address
    every item to the greatest extent possible to create the best design. It may not be possible to address every item, and
    some items may only be able to be addressed to a limited extent. In these cases, be sure that there are good reasons
    for only partially addressing an item, or not addressing an item at all.
</p>
<p>
    Design can be performed every day. Use this checklist regularly to assure the design is robust, consistent, and
    understandable. Make the design good enough for the specific goals being addressed by using this checklist to identify
    areas that have been skipped, ignored, or not sufficiently addressed.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="General" briefDescription=""
							id="_cKSvsD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Do separate design elements
								have low coupling? Does each design
								element have high internal
								cohesion?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Does the design reflect the
								architectural objectives of the
								system?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Can the system be implemented from the
								information in the design? Has
								sufficient detail been included?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is the design
								consistent? Does any part of the design
								contradict another part of it in such a
								way that puts the project&#xD; at
								risk?&#xD; &lt;/p>&#xD; &lt;p>&#xD; Is
								the design able to accommodate future
								changes?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Is the design appropriate to the
								experience level of other team members
								and stakeholders, neither too simple nor
								too&#xD; advanced?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Is the design written in
								such a way, and is it structured well
								enough, so it can be maintained
								easily?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Does the design constrain the
								implementation only as much as is
								necessary?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Does the design describe all the
								behavior of the system for the
								requirements that are currently being
								addressed?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Can all parts of the design be traced
								back to the requirements? Can the
								requirements (for the current iteration)
								be&#xD; traced to design elements?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is there an
								unambiguous place or places&amp;nbsp;in
								the design where each behavior
								exists?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Are the use case flows that are
								currently being addressed described in
								the design?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Are&amp;nbsp;complex flows
								outside the Basic
								Flow&amp;nbsp;addressed, including
								exceptional cases?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Has the behavior described
								in the requirements that are currently
								being addressed&amp;nbsp;been
								distributed to the correct&#xD; design
								elements?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Does the design provide enough
								information for test design? For
								example, are the collaborations between
								design elements&#xD; clear enough to
								create integration tests?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Have redundant
								areas of the design been removed so the
								Implementation does not contain
								redundant code?&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Organization and Clarity"
							briefDescription="" id="__4O2AD6WEduAL-bCqar_dg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Does the design describe the
								system at the appropriate level of
								abstraction, given the objectives? This
								usually means&#xD; the system is
								described at a number of different
								levels of&amp;nbsp;abstraction and
								perspectives.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does the design use common
								vocabulary and terms from the business
								and technical domains?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Does the design describe the
								behavior of the elements unambiguously
								to the extent that developer tests can
								be created&#xD; toverify the
								implementation?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Are the design's constructs,
								vocabulary, and semantics appropriate to
								the problem being solved? This usually
								means the&#xD; customer's vocabulary is
								used, and elements of the design are
								referenced in a consistent manner.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is the design
								organized in a way that team members can
								easily find the information they're
								looking for?&#xD; &lt;/p>&#xD; Is the
								notation used to&amp;nbsp;describe the
								design&amp;nbsp;used consistently?&lt;br
								/>&#xD; &lt;p>&#xD; Is the design
								organized in a way that helps team
								members modify it without contending for
								the same part of the design?&#xD; That
								is, can mulitple people work on the
								design in parallel?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Are the names of elements
								within the design consistent and easy to
								interpret?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Does each design element represent a
								clearly defined abstraction?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Is the design
								as simple as it can be while fulfilling
								the objectives of the design and giving
								sufficient direction to&#xD;
								implementers?&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Is the design clear enough
								and contain enough detail so it can be
								implemented?&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Architecture" briefDescription=""
							id="_dahBcD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Is the architecture clearly
								called out in the design ? Can team
								members and stakeholders clearly
								identify the portion&#xD; of the design
								that is the architecture?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Are
								architectural mechanisms (patterns)
								clearly defined in the design so they're
								reusable and understandable?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Are
								architectural mechanisms used
								appropriately? Are they applied in all
								applicable circumstances?&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Subsystems" briefDescription=""
							id="_kWnQ4D6SEduAL-bCqar_dg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Do all elements within a
								subsystem have private visibility? In
								other words, is the subsystem interface
								the&amp;nbsp;only&#xD; way to access the
								behavior of elements inside the
								subsystem?&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Is the interface for each subsystem
								clearly defined in the design?&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Are the
								subsystem dependencies
								documented?&amp;nbsp;&#xD; &lt;/p>
							</Description>
						</Section>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline" name="design"
					briefDescription="This guideline gives additional information on how to design a portion of the system."
					id="_0X3bcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Design" variabilityType="na">
					<Presentation name="design,_0X3bcMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_Qo7pYMM3EdmSIPI87WLu3g" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-09T03:28:07"
						changeDescription="" version="">
						<MainDescription><![CDATA[<p>
    The design represents the behavior and structure of the system at various levels of abstraction – most notably not
    solely at the code level of abstraction.&nbsp; This will help the designer reason&nbsp;about the quality, structure,
    and behavior&nbsp;of the design.
</p>
<h3>
    Multiple Passes
</h3>
<p>
    The design will be revisited many times throughout the iterative lifecycle and even within an iteration.&nbsp;
</p>
<p>
    Each time some design activity is being performed, it will be performed with some specific goal.&nbsp; The goal might
    be to identify a notional set of participants in a collaboration that can be exercised to realize the behavior required
    (an analysis pass).&nbsp; The goal might be in the identification of some coarse-grained elements that are required to
    act out some scenario (an architectural pass).&nbsp; Then a pass might be done within one of those components to
    identify the elements within that will collaborate together to perform the behavior required (a more detailed design
    pass).
</p>
<p>
    Design might be performed in a particular context such as database context, user-interface context, or perhaps the
    context of how some existing library will be applied.&nbsp; In these cases the design steps will be performed just to
    make and communicate decisions regarding that context.
</p>
<p>
    Avoid analysis paralysis.&nbsp; Avoid refining, extending, and improving the design beyond a minimal version that
    suffices to cover the needs of the requirements within the architecture.&nbsp; Design should be done in small chunks,
    proven via implementation, improved via refactoring, and integrated into the baseline to provide value to the
    stakeholders.
</p>
<h3>
    Identification of&nbsp;Elements
</h3>
<p>
    Identify the&nbsp;elements based on needs of the requirements.
</p>
<p>
    The identification of elements can stem from a static perspective of walking through the requirements and identifying
    elements clearly called out, a form of domain modeling.&nbsp; It can pull in other elements identified as being in the
    application domain or deemed necessary from examining the requirements for the portion of the system being
    designed.&nbsp; This can also pull from key abstractions identified while defining the architecture.
</p>
<p>
    The identification of&nbsp;elements&nbsp;should&nbsp;apply a dynamic perspective&nbsp;by&nbsp;walking through scenarios
    of usage of the system (or subsystem) identifying elements needed to support&nbsp;the behavior.&nbsp; That behavior
    might be a scenario of usage from an external user perspective or, while designing a subsystem, a responsibility
    assigned to the subsystem that has complex algorithmic behavior. Consider applying the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html" guid="_uF-QYEAhEdq_UJTvM1DM2Q">Entity-Control-Boundary Pattern</a>&nbsp;to identify the elements necessary to support
    the scenario or apply other patterns identified in the architecture that specify the elements that will be used to
    support specific aspects of the scenario.
</p>
<p>
    If the system being designed is a real-time system, include elements representing events and signals that allow us to
    describe the asynchronous triggers of behavior to which the system must respond.&nbsp; Events are specifications of
    interesting occurrences in time and space that usually (if they are noteworthy) require some response from the
    system.&nbsp; Signals represent asynchronous mechanisms used to communicate certain types of events within the system.
</p>
<p>
    If there are existing&nbsp;elements from previous passes over the design or from selected frameworks or other reusable
    elements, those should be reused whenever possible.
</p>
<p>
    Having identified the elements, each should be given a meaningful name.&nbsp; Each element should also have a
    description so that the team members that work together to refine the design and implement from&nbsp;the
    design&nbsp;will understand the role the&nbsp;element will play.
</p>
<p>
    Based on the above, this identification of&nbsp;elements&nbsp;could be applied a number of times in designing just one
    part of the system.&nbsp; While there is no&nbsp;one correct&nbsp;strategy for multiple passes, they could be done at a
    coarse-grained level and then a fine-grained level or at an analysis (abstract) level and then a design level.
</p>
<h3>
    Behavior&nbsp;of&nbsp;Elements
</h3>
<p>
    To&nbsp;identify the behavior&nbsp;of the elements, walk through scenarios assigning behavior to the appropriate
    collaborating participant.&nbsp; If a particular usage of the system or subsystem can have&nbsp;multiple possible
    outcomes or variant sequences, cover enough scenarios to ensure that the design is robust enough to support the
    necessary possibilities.
</p>
<p>
    When assigning behavior to elements, consider applying the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html" guid="_uF-QYEAhEdq_UJTvM1DM2Q">Entity-Control-Boundary Pattern</a>&nbsp;or other patterns identified in the
    architecture.
</p>
<p>
    Behavior can be&nbsp;represented as&nbsp;a simple statement of responsibility or it can be a detailed operation
    specification.&nbsp; Use the appropriate level of detail to communicate important design decisions while&nbsp;giving
    the freedom to make appropriate implementation decisions as those tasks ensue.
</p>
<p>
    Behavior must be understood as a responsibility on an element, and as an interaction between two&nbsp;elements in the
    context of some broader behavior of the system or subsystem.&nbsp; The latter part of this will lead the developer to
    identify relationships needed between the elements.
</p>
<p>
    Avoid too much&nbsp;identification of behavior solely from the perspective of domain modeling.&nbsp; Only include
    behavior that is really needed, behavior identified by walking through required scenarios of system usage.
</p>
<h3>
    Design&nbsp;Element Relationships
</h3>
<p>
    The relationships between the&nbsp;elements necessary for the behavior must be designed.&nbsp; This can simply be the
    identification of&nbsp;the ability&nbsp;to traverse from one&nbsp;element to another or a need to manage an association
    between the elements.
</p>
<p>
    More detailed design can be performed on the relationships as appropriate.&nbsp; This can include optionality,
    multiplicity, whether the relationship is a simple dependency or managed association, etc. These decisions that drive
    implementation details are best made at the design level when it is&nbsp;easier to see how all the pieces fit
    together.&nbsp;
</p>
<p>
    As with the behavior discussion above, avoid defining too many relationships based on relationships in the application
    domain.&nbsp; Only include the relationships that are really needed based on the requirements.&nbsp; On the other hand,
    a combination of requirements knowledge and domain knowledge can lead to some detailed decisions on the relationships
    such as optionality and multiplicity.
</p>
<h3>
    Refine Design
</h3>
<p>
    Having identified a design&nbsp;including a set of collaborating&nbsp;elements with the behavior and relationships
    robust enough to handle the requirements under consideration, the design can be improved and transformed into an
    implementable system through refinement.
</p>
<p>
    The visibility of each operation should be selected to be as&nbsp;restrictive as possible.&nbsp; Based on walking
    through the scenario it should be clear which operations must be&nbsp;available to other elements in the design and
    which can be considered private behavior inside the element that has the operation.&nbsp; Minimizing the number of
    public operations creates a more maintainable and understandable design.
</p>
<p>
    With respect to parameters, the return value, and&nbsp;a description of how it will go about performing the behavior,
    operations can be detailed at a lower level that drives the actual implementation or that detail might be left to
    be&nbsp;handled when writing the code.
</p>
<p>
    Data attributes can be identified based on information needed to support behavior or based on additional requirements
    such as information to be presented to the user or transmitted to another system.&nbsp; Avoid indiscriminate domain
    analysis; there might be a great deal of data in the domain that is not needed to support the requirements.&nbsp; Data
    attributes can simply be identified or they can be designed in detail with attribute types, initial values, and
    constraints. Decide on the visibility of the data attribute; operations to access and update the data can be added or
    deferred to implementation.
</p>
<p>
    Generalization&nbsp;and interfaces can be applied to simplify or otherwise improve the design.&nbsp; Ensure that the
    usage of these techniques actually improves the design rather than muddling it with complexity.&nbsp; For example,
    common behavior can be factored into a parent class via generalization or out to a helper class via delegation; the
    latter solution can be more understandable and maintainable as generalization is an inflexible relationship.
</p>
<p>
    The refinement of any portion of the design could include another pass through the design process.&nbsp; One might find
    that what was initially identified as a single behavior on an&nbsp;element&nbsp;warrants a detailed walkthrough of the
    collaborating&nbsp;elements to realize that behavior.
</p>
<p>
    When updating an existing design <span     style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA">
    –</span> especially one that has had portions already implemented <span     style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA">
    –</span> apply <a class="elementLink" href="./../../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html" guid="_Poc7IPDzEdqYgerqi84oCA">Refactoring</a> to ensure that the improved design continues to perform as expected.
</p>
<h4>
    Organization of&nbsp;Elements (package-level)
</h4>
<p>
    In a design of any notable size, the&nbsp;elements must be organized into packages.&nbsp; Assign the&nbsp;elements to
    existing or new packages and ensure that the visibility relationships between the packages support
    the&nbsp;navigability required between the elements.&nbsp; Decide whether each element should be visible to elements
    outside its package.
</p>
<p>
    When structuring the design into packages, consider <a class="elementLink" href="./../../../openup_basic/guidances/guidelines/layering,_0gpkAMlgEdmt3adZL5Dmdw.html" guid="_0gpkAMlgEdmt3adZL5Dmdw">Layering</a>&nbsp;and other patterns.&nbsp; Though all design work must conform to
    existing architectural decisions, the allocation of&nbsp;elements to packages and possible updates to package
    visibility is an area of&nbsp;significant architectural concern.&nbsp; The developer should collaborate with the
    architect to ensure that package-level decisions are in accordance with the rest of the architecture.
</p>
<p>
    This guideline first talks about the identification and design of the&nbsp;elements and then about organizing
    the&nbsp;elements into packages.&nbsp; This is not a strict order of events.&nbsp; There is nothing wrong with
    identifying a package structure for the system and then populating that structure with identified&nbsp;elements&nbsp;as
    long as the actual&nbsp;elements identified are allowed to influence the resulting package structure.
</p>
<h3>
    Reviewing the Design
</h3>
<p>
    Design is best done collaboratively as it is a problem-solving activity with a range parts and perspectives.&nbsp;
    There should be a constant level of review to ensure that the decisions make sense within the area being designed and
    in the design of the system overall.&nbsp; There also might be occasions where the review of some area of design is
    reviewed by a set of interested or knowledgeable parties such as the architect who will verify that the design conforms
    to some architectural decision or a developer&nbsp;who will be expected to implement the design.&nbsp;
</p>
<p>
    The design should be examined to ensure that it follows heuristics of quality design such as loose coupling and high
    cohesion.&nbsp; Responsibilities should be appropriately&nbsp;distributed to elements such that there are no elements
    with too much responsibility and no elements are left without any responsibilities.&nbsp; The design should be able to
    clearly&nbsp;communicate the design decisions while not delving into concerns best dealt with during implementation of
    code.
</p>
<p>
    Ensure the design follows any project-specific guidelines and conforms to the architecture.
</p>
<p>
    Modifications to the design to improve it based on issues identified in reviewing it should apply <a class="elementLink" href="./../../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html" guid="_Poc7IPDzEdqYgerqi84oCA">Refactoring</a> to ensure that the design and any existing implementation of the design
    continues to fulfill its responsibilities.
</p>
<h3>
    Relationship of Design to Architecture
</h3>
<p>
    This guideline remarks on conforming to the architecture in various ways; it is written as though one is designing
    within a pre-existing architecture.&nbsp; Though projects will often have pre-existing architectures available, a
    particular architecture is the result of design activities.&nbsp; Therefore, in addition to discussing conformance to
    some existing architecture, one must also consider the creation of the architecture and updates and improvements to the
    architecture based on the work of design.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="continuous_integration"
					briefDescription="This guideline describes how to apply continuous integration to improve the integration of units into the code base."
					id="_i8bUEL6cEdqti4GwqTkbsQ" orderingGuide="" suppressed="false"
					presentationName="Continuous Integration" variabilityType="na">
					<Presentation
						name="continuous_integration,_i8bUEL6cEdqti4GwqTkbsQ"
						briefDescription="" id="-DlaqJu4sEqMPk84qhJ6IEA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-06-01T12:26:30"
						changeDescription="" version="">
						<MainDescription><![CDATA[<p>
    [ Don't forget to talk about running developer tests. ]
</p>
<p>
    [Content below taken from step “Accept Integrated Elements and Promote Build" in the Task “Integrate and Create
    Build"... this Main Description needs to be cleaned up ]
</p>
<p>
    Depending on the complexity and number of&nbsp;components to be integrated, it is often more efficient to produce the
    target build in a number of steps, adding more&nbsp;components with each step, and producing a series of intermediate
    'mini' builds - thus, each build planned for an iteration may, in turn, have its own sequence of transient intermediate
    builds. These are subjected to a minimal integration test&nbsp;to ensure that what is added is compatible with what
    already exists in the system integration workspace. It should be easier to isolate and diagnose problems using this
    approach.&nbsp;
</p>
<p>
    Delivered&nbsp;components are accepted&nbsp;incrementally into the system integration workspace,&nbsp;having any merge
    conflicts being resolved.&nbsp;It is recommended that this&nbsp;is done in a bottom-up approach with respect to the
    layered structure, making sure that the versions of the&nbsp;components are consistent, taking imports into
    consideration. The increment of&nbsp;components is compiled and linked into an intermediate build, which is then
    provided to the tester to execute a minimal system integration test.
</p>
<p>
    <font size="1"><img height="172" alt="" src="openup_basic/guidances/guidelines/resources/ac_intsy.gif" width="501" /></font>
</p>
<p>
    This diagram shows a build produced in three increments. Some&nbsp;components are only needed as stubs, to make it
    possible to compile and link the other components, and provide the essential minimal run-time behavior.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="promoting_builds"
					briefDescription="This guideline describes how to migrate a build up through a set of tiers from a private development area to a release area."
					id="_SM4YIL6dEdqti4GwqTkbsQ" orderingGuide="" suppressed="false"
					presentationName="Promoting Builds" variabilityType="na">
					<Presentation
						name="promoting_builds,_SM4YIL6dEdqti4GwqTkbsQ"
						briefDescription="" id="-zCM2ucJJxc_bQr_LoHlSaQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-25T08:46:48"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    During iterative software development the team will create numerous <a class="elementLink" href="./../../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">Build</a>s. A build is initiated by combining the work completed by one or more
    developers and resolving any conflicts that are encountered. Ideally a build is then subjected to a battery of tests to
    determine if it is of sufficient quality to move into production.
</p>
<p>
    As a build progresses from development towards production it is beneficial to know two characteristics:
</p>
<p>
    <strong>Build contents</strong> – identifying the elements and their versions
</p>
<ul>
    <li>
        What is in this build (completed work items)
    </li>
    <li>
        What is partially in this build (work items that are partially complete)
    </li>
    <li>
        What is not in this build (work items that are not reflected at all in this build)
    </li>
</ul>
<p>
    <strong>Verification Level</strong> – identifying what amount of testing that has been completed
</p>
<ul>
    <li>
        Unit Tested
    </li>
    <li>
        Integration Tested
    </li>
    <li>
        System Tested
    </li>
    <li>
        User Acceptance Tested
    </li>
    <li>
        Production Ready
    </li>
    <li>
        Production
    </li>
</ul>
<p>
    The promotion lifecycle coordinates and synchronizes the efforts of the development team. This lifecycle consists of
    the following steps:
</p>
<ul>
    <li>
        Changes are introduced into the system in the form of completed work items
    </li>
    <li>
        A build is generated clearly identifying the build contents
    </li>
    <li>
        Testing is conducted
    </li>
    <li>
        When testing is successful a build is marked with the appropriate verification level
    </li>
</ul>
<p>
    Ultimately all required testing is complete and the a new system version is ready for production.
</p>
<p>
    It can also be beneficial to isolate work being performed at the different stages using different <a class="elementLink" href="./../../../openup_basic/guidances/concepts/workspace,_0cEmAMlgEdmt3adZL5Dmdw.html" guid="_0cEmAMlgEdmt3adZL5Dmdw">Workspace</a>s. This ensures that the effort of testing a build is applied to the
    correct version and also allows developers to continue working on the next build while the previous build is being
    tested.
</p>
<p>
    A promotional lifecycle such as this offers three key benefits
</p>
<ol>
    <li>
        Reduces effort because there is no reason to execute the tests in the next stages until the build passes the
        previous stage. For example you would not commit the resources to User Acceptance test a build until it passes both
        integration and system tests.
    </li>
    <li>
        Helps to ensure that a build which is moved into production has been subjected to the appropriate level of testing
        first.
    </li>
    <li>
        Simplifies debugging since developers can base their work on a proven build (Integration Tested build, for example)
        in relative isolation from destabilizing changes from other developers
    </li>
</ol>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_0cEmAMlgEdmt3adZL5Dmdw</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="entity_control_boundary_pattern"
					briefDescription="This concept introduces a pattern that provides a starting point for the distribution of responsibilities to a set of interacting design elements based on three key perspectives in a collaboration."
					id="_uF-QYEAhEdq_UJTvM1DM2Q" orderingGuide="" suppressed="false"
					presentationName="Entity-Control-Boundary Pattern"
					variabilityType="na">
					<Presentation
						name="finding_analysis_classes,_uF-QYEAhEdq_UJTvM1DM2Q"
						briefDescription="" id="-awaQ_2dwhGyKRoVKQ-esPQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-28T07:02:50"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    When identifying the elements for some scenario of system behavior, you can align each participating element with one
    of three key perspectives: Entity, Control, or Boundary.
</p>
<p>
    This pattern is similar to the Model View Controller pattern (described here [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html#BUS96" guid="_9ToeIB83Edqsvps02rpOOg">BUS96</a>] and here [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html#WIKP-MVC" guid="_9ToeIB83Edqsvps02rpOOg">WIKP-MVC</a>] among other places), but the Entity Control Boundary pattern is not solely
    appropriate for dealing with user interfaces and it gives the controller a slightly different role to play.
</p>
<h5>
    ECB&nbsp;Pattern Example
</h5>
<p>
    &nbsp;<img height="233" alt="" src="openup_basic/guidances/concepts/resources/EBCDiagram.JPG" width="493" />
</p>
<h3>
    Entity Elements
</h3>
<p>
    An entity is a long-lived, passive element that is responsible for some meaningful chunk of information. This is not to
    say that entities are "data" while other&nbsp;design elements&nbsp;are "function". Entities perform behavior organized
    around some cohesive amount of data.
</p>
<p>
    An example entity for a customer service application would be a Customer entity that manages all information about a
    customer.&nbsp; A design element for&nbsp;this entity would include data on the customer, behavior to manage the data,
    behavior to validate customer information&nbsp;and perform other business calculations such as "is this customer
    allowed to purchase product X?"
</p>
<p>
    The identification of the entities as part of this pattern can be done many times at different levels of abstraction
    from the code, at different levels of granularity in size, and from the perspectives of different contexts.&nbsp; For
    example you could do an analysis pass on a scenario of creating a marketing campaign and identify the customer element
    with various customer data elements such as name and address plus various required behaviors such as the management of
    the name and address data and the ability to&nbsp;rate the customer based on some algorithm&nbsp;(such an application
    of this pattern would be abstract from code, coarse-grained, and have no specific context).&nbsp; Later you could do a
    pass on the same scenario applying an architectural mechanism for database access that breaks the address out into its
    own element, moves the responsibility for storing and retrieving customers to a new control element, and identifies
    some specific database decisions&nbsp;such as&nbsp;the usage of primary keys in the entities (such an application of
    this pattern would be closer to the code, finer-grained, and aligned with a database&nbsp;context).
</p>
<h3>
    Control Elements
</h3>
<p>
    A control element manages the flow of interaction of the scenario. A control element could manage the end-to-end
    behavior of a scenario or it could manage the interactions between a subset of the elements.&nbsp; Behavior and
    business rules relating to the information relevant to the scenario should be assigned to the entities; the control
    elements are just responsible for the flow of the scenario.
</p>
<p>
    An example&nbsp;control element&nbsp;for a customer service application would be CreateMarketingCapmpaign.&nbsp; This
    design element would&nbsp;be responsive to certain front-end boundary elements and would collaborate with other
    entities, control&nbsp;elements, and back-end boundary elements to support the creation of a marketing campaign.
</p>
<p>
    As with the entity example above, there might be many passes over the identification of control elements.&nbsp; A first
    pass might be an analysis pass that identifies one control element for a&nbsp;scenario with behavior to make sure the
    design can support the flow of events, a&nbsp;subsequent pass might find controllers to manage reusable collaborations
    of low level elements that will map to a specific code&nbsp;unit to be written.
</p>
<h3>
    Boundary Elements
</h3>
<p>
    A boundary element lies on the periphery of a system or subsystem, but within it. For any scenario being considered
    either across the whole system or within some subsystem, some boundary elements will be "front-end" elements that
    accept input from outside the area under design and other elements will be "back-end" managing communication to
    supporting elements outside the system or subsystem.
</p>
<p>
    Two example boundary elements for a customer service application might be a front-end MarketingCampaignForm and a
    back-end BugdetSystem element.&nbsp; The MarketingCampaignForm would manage the exchange of information between a user
    and the system and the BugdetSystem would manage the exchange of information between the system and an external system
    that manages budgets.
</p>
<p>
    An analysis pass could identify one boundary element for each external relevant to a scenario; subsequently these could
    be broken down into multiple boundary elements or&nbsp;small communities made up of collaborating&nbsp;elements&nbsp;of
    all three stereotypes.
</p>
<h3>
    Walking the Scenario
</h3>
<p>
    One can walk through a scenario initiated by something outside the bounds of the system or subsystem being designed and
    distribute the responsibility to perform behavior supporting the scenario to the elements identified of each
    type.&nbsp; The appropriate design element responsible for each action in the scenario will be as described in the
    definition of each of the element types described above.
</p>
<p>
    In addition to identifying the behavior necessary to perform the scenario, the initiation of this behavior from design
    element to design element&nbsp;identifies the necessary relationships.&nbsp; There are certain
    appropriate&nbsp;relations between the participating elements.&nbsp;&nbsp;An element can communicate to other elements
    of the same kind.&nbsp; Control&nbsp;elements can communicate with each of the other two kinds, but entities and
    boundary elements should not directly communicate.&nbsp;
</p>
<p>
    The table below shows appropriate links between design elements.
</p>
<table cellspacing="2" cellpadding="2" width="400" summary="Appropriate Links" border="1">
    <tbody>
        <tr>
            <th scope="col">
            </th>
            <th scope="col">
                <center>
                    Entity
                </center>
            </th>
            <th scope="col">
                <center>
                    Boundary
                </center>
            </th>
            <th scope="col">
                <center>
                    Control
                </center>
            </th>
        </tr>
        <tr>
            <th scope="row">
                Entity
            </th>
            <td>
                <center>
                    X
                </center>
            </td>
            <td>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
        </tr>
        <tr>
            <th scope="row">
                Boundary
            </th>
            <td>
            </td>
            <td>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
        </tr>
        <tr>
            <th scope="row">
                Control
            </th>
            <td>
                <center>
                    X
                </center>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
        </tr>
    </tbody>
</table>
<p>
    By&nbsp;applying this pattern, a robust design can be put together that identifies the elements, behavior, and
    relationships&nbsp;necessary to support&nbsp;a scenario.&nbsp;
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="refactoring"
					briefDescription="This concept explains ways of improving the design of existing code in a way that does not alter its external behavior."
					id="_Poc7IPDzEdqYgerqi84oCA" orderingGuide="" suppressed="false"
					presentationName="Refactoring" variabilityType="na">
					<Presentation
						name="refactoring,_Poc7IPDzEdqYgerqi84oCA" briefDescription=""
						id="-fj_9xjbrpaYNSETyCz5yJg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-21T11:03:50" changeDescription=""
						version="">
						<MainDescription><![CDATA[<p>
    Refactoring is a disciplined way to restructure code&nbsp;when small changes are made to&nbsp;the code to improve its
    design.&nbsp; An important aspect of a refactoring is that it improves the design while not changing the semantics
    of&nbsp;the design; a refactoring neither adds nor removes functionality.
</p>
<p>
    Refactoring enables you to evolve&nbsp;the code slowly over time, to take an iterative and incremental approach to
    implementation.
</p>
<p>
    These are the types of refactoring:
</p>
<ol>
    <li>
        Code refactoring.&nbsp; Often referred to simply as refactoring, this is the refactoring of programming source
        code.&nbsp; Examples of code refactorings include Rename Method, Encapsulate Field, Extract Class, Introduce
        Assertion, and Pushdown Method.
    </li>
    <li>
        Database refactoring.&nbsp; A database refactoring is a simple change to a database schema that improves its design
        while retaining both its behavioral and informational semantics.&nbsp; Examples of database refactorings include
        Rename Column, Split Table, Move Method to Database, Replace LOB with Table, Introduce Column Constraint, and Use
        Official Data Source.
    </li>
    <li>
        User interface (UI) refactoring.&nbsp; A UI refactoring is a simple change to the UI which retains its
        semantics.&nbsp; Examples of UI refactorings include Align Entry Fields, Apply Common Button Size, Apply Common
        Font, Indicate Format, Reword in Active Voice, and Increase Color Contrast.
    </li>
</ol>
<p>
    These are suggested resources:
</p>
<ul>
    <li>
        <a  href="http://www.refactoring.com" target="_blank" >http://www.refactoring.com</a>
    </li>
    <li>
        <a  href="http://www.agiledata.org/essays/databaseRefactoring.html" >http://www.agiledata.org/essays/databaseRefactoring.html</a>
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="continuous_integration"
					briefDescription="This concept introduces the idea of creating regular (at least daily) integrations in order to reduce integration risks, find bugs earlier, and drive a collaborative work environment."
					id="_B3xkEPD0EdqYgerqi84oCA" orderingGuide="" suppressed="false"
					presentationName="Continuous Integration"
					variabilityType="replaces">
					<Presentation
						name="continuous_integration,_NApSVdtxEdq7ovUqqSoGBQ"
						briefDescription="" id="-dhAMzNZNWufBnW0fPYQtBA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-08-21T08:39:56"
						changeDescription="" version="">
						<MainDescription><![CDATA[<p>
    Continuous integration is an implementation practice where team members compile and test (integrate) their work
    frequently (at least daily). Integration errors should be detected as quickly as possible, either from compiler errors
    or errors reported by&nbsp;the test suite. Ideally the integration is done automatically when an updated version of
    source code is checked into&nbsp;the configuration management system.
</p>
<p>
    Benefits:
</p>
<ol>
    <li>
        Improved error detection.&nbsp; Continuous integration enables you to detect and address errors early, often
        minutes after they’ve been injected into the product.&nbsp; Note that you still need a good test suite.
    </li>
    <li>
        Improved system integration.&nbsp; By integrating continuously throughout your project you know that you can
        actually build it, thereby mitigating integration surprises at the end of the lifecycle.
    </li>
    <li>
        Reduced technical risk.&nbsp; You always have an up-to-date system against which to test.
    </li>
    <li>
        Reduced management risk.&nbsp; By continuously integrating your system you know exactly how much functionality that
        you’ve built to date, improving your ability to predict when and if you’re actually going to be able to deliver the
        necessary functionality.
    </li>
    <li>
        Improved collaboration.&nbsp; Continuous integration enables team members to work together safely.&nbsp; They know
        that they can make a change to their code, integrate the system, and determine very quickly whether or not their
        change worked.<br />
    </li>
</ol>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="types_of_developer_tests"
					briefDescription="This guideline describes various types of developer tests."
					id="_eRutgC5QEduVhuZHT5jKZQ" orderingGuide="" suppressed="false"
					presentationName="Types of Developer Tests" variabilityType="na">
					<Presentation name=",_eRutgC5QEduVhuZHT5jKZQ"
						briefDescription="" id="-VGT8iHGtQSiOUGitq1qmow" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-08-24T12:40:22"
						changeDescription="" version="">
						<MainDescription><![CDATA[<p>
    This guideline describes a number of types of tests.&nbsp; To perform these types of testing you need to define, and
    then run, a series of tests against&nbsp;the source code. A developer test is a single test that needs to be performed.
</p>
<p>
    It is valuable&nbsp;to augment automated tests with human readable test scripts in order to implement developer test
    cases, scripts that include the information discussed below. A test script is the actual steps, sometimes either
    written procedures to follow or the source code of a test. Developer test scripts are run against testing targets:
    either one unit of source code, a more complex portion of your system (such as a component), or the entire system
    itself to test&nbsp;some developer issue such&nbsp;as integration.
</p>
<h3>
    Regression Testing
</h3>
<p>
    Regression testing is the act of ensuring that changes to&nbsp;the code have not adversely affected existing
    functionality. It is important to recognize that incremental development makes regression testing critical. Whenever
    you release an application, you must ensure its previous functionality still works, and because you release
    applications more often when taking the incremental approach, this means regression testing becomes that much more
    important. Regression testing is the first thing you should be thinking about when testing for the following reasons:
</p>
<ol>
    <li>
        You want to be able to modify code and know that you can rerun your tests to see if you broke anything.
    </li>
    <li>
        Existing users get very angry when things that previously worked don’t work anymore.
    </li>
</ol>
<p>
    Regression testing is fairly straightforward conceptually – you just need to run all of&nbsp;the previous test cases
    against the new version of&nbsp;the code. Regression testing tools help immensely because they are designed with
    regression testing in mind. However, there are potential challenges to regression testing:
</p>
<ul>
    <li>
        When you change your production, either to enhance it or to refactor it, you will need to rework existing test
        cases coupled to that code.
    </li>
    <li>
        If your updates affect only a component of the system, then potentially you only need to run the test cases that
        affect this single component. Although this approach is a little risky because your changes may have had a greater
        impact than you suspect, it does help to reduce both the time and cost of regression testing.
    </li>
    <li>
        The more non-code artifacts that you decide to keep, the greater the effort to regression test your work and
        therefore the greater the risk to your project because you are more likely to skimp on your testing efforts.
    </li>
</ul>
<p>
    Regression testing is critical to success as an agile developer. Many software developers use the xUnit family of open
    source tools, such as <a  href="http://www.junit.org/" target="_blank" >JUnit</a> and <a  href="http://www.vbunit.org/" target="_blank" >VBUnit</a>, to test their code. The advantage of these tools is that they implement a testing framework
    with which you can regression test all of your source code. Commercial testing tools are also viable options.
</p>
<h3>
    Traditional Code Testing Techniques
</h3>
<p>
    Although object and procedural technologies are different, several important testing concepts from the procedural world
    are valid regardless of the underlying technology. These traditional testing techniques are:
</p>
<ul>
    <li>
        Black-box testing
    </li>
    <li>
        Clear-box testing
    </li>
    <li>
        Boundary-value testing
    </li>
    <li>
        Coverage/Path testing
    </li>
</ul>
<h4>
    Black-Box Testing
</h4>
<p>
    Black-box testing, also called interface testing, is a technique in which you create test cases based only on the
    expected functionality of a method, class, or application without any knowledge of its internal workings. One way to
    define black-box testing is that given input A you should obtain expected results B.
</p>
<p>
    The goal of black-box testing is to ensure the system can do what it should be able to do, but not how it does it. For
    example, if you invoke differenceInDays(June 30 2006, July 3 2006) the expected result should be three. The creation of
    black-box tests is often driven by the requirements for&nbsp;the system. The basic idea is&nbsp;to look at the user
    requirement and ask what needs to be done to show that the user requirement is met.
</p>
<p>
    The primary advantage of black-box testing is that it enables you to prove that your application fulfills the
    requirements defined for it.&nbsp;&nbsp; The primary disadvantage is that it does not show that the internals
    of&nbsp;the system work (hence the need for clear-box testing).
</p>
<h4>
    Clear-Box Testing
</h4>
<p>
    Clear-box testing, also called white-box testing, is based on the idea that&nbsp;the program code can drive the
    development of test cases. The basic concept is you look at&nbsp;the code, and then create test cases that exercise it.
    For example, assume you have access to the source code for differenceInDays(). When you look at it, you see an IF
    statement determines whether the two dates are in the same year. If&nbsp;they are in the same year then&nbsp;a simple
    strategy based on Julian dates is used; if not then a more complex&nbsp;strategy is used. This indicates that you need
    at least one test that uses dates from the same year and one from different years. By looking at the code, you are able
    to determine new test cases to exercise the different logic paths within it.
</p>
<p>
    The primary advantage of this concept is that it motivates you to create tests that exercise specific lines of
    code.&nbsp; The disadvantages are that it does not ensure that your code fulfils the actual requirements (hence the
    need for black-box testing) and that your testing code becomes highly coupled to your application code.
</p>
<h4>
    Boundary-Value Testing
</h4>
<p>
    This is based on the knowledge that you need to test your code to ensure it can handle unusual and extreme situations.
    For example, boundary-value test cases differenceInDays() would include passing it the same date, two wildly different
    dates, one date on the last day of the year and the second on the first day of the following year, and one date on
    February 29th of a leap year. The basic idea is you want to look for limits defined either by your business rules or by
    common sense, and then create test cases to test attribute values in and around those values.
</p>
<p>
    The primary advantage of boundary value testing is that it motivates you to confirm that your program code is able to
    handle “unusual” or “extreme” cases.
</p>
<h4>
    Coverage and Path Testing
</h4>
<p>
    Two critical “traditional” concepts are coverage and path testing. Coverage testing is a technique in which you create
    a series of test cases designed to test all the code paths in your code. In many ways, coverage testing is simply a
    collection of clear-box test cases that together exercise every line of code in your application at least once. Path
    testing is a superset of coverage testing that ensures not only have all lines of code been tested, but all paths of
    logic have also been tested. The main difference occurs when you have a method with more than one set of case
    statements or nested IF statements: to determine the number of test cases with coverage testing you would count the
    maximum number of paths between the sets of case/nested IF statements and, with path testing, you would multiply the
    number of logic paths.
</p>
<h4>
    Unit and Integration Testing
</h4>
<p>
    Unit testing is the testing of an item, such as an operation, in isolation. For example, the tests defined so far for
    differenceInDays() are all unit tests. Integration testing, on the other hand, is the testing of a collection of items
    to validate that they work together. In the case of the data library/class, do the various functions work together?
    Perhaps the differenceInDays() function has a side effect that causes the dayOfWeek() function to fail if
    differenceInDays() is called first. Integration testing looks for problems like this.
</p>
<h3>
    Object-Oriented Testing Techniques
</h3>
<p>
    When testing systems built using object technology it is important to understand that your source code is composed of
    several constructs, including methods (operations), classes, and inheritance. Therefore you need testing techniques
    that reflect the fact that you have these constructs. These techniques are:
</p>
<ul>
    <li>
        Method testing
    </li>
    <li>
        Class testing
    </li>
    <li>
        Class-integration testing
    </li>
    <li>
        Inheritance-regression testing
    </li>
</ul>
<h4>
    Method Testing
</h4>
<p>
    Method testing is the act of ensuring that your methods (operations) perform as defined. In procedural testing this
    would have been called function/procedure testing. Issues to address via method testing include:
</p>
<ul>
    <li>
        Ensure that your getter/setter methods work as intended
    </li>
    <li>
        Ensure that each method returns the proper values, including error messages and exceptions
    </li>
    <li>
        Validate the parameters being passed to a method
    </li>
    <li>
        Ensure that a method does what it should
    </li>
</ul>
<p>
    The advantage of method testing is that it ensures that methods work well in isolation but it does not help to find
    unintended side effects.
</p>
<h4>
    Class Testing
</h4>
<p>
    The main purpose of class testing is to test classes in isolation, and it is effectively the combination of traditional
    unit testing and integration testing. It is unit testing because you are testing the class and its instances as single
    units in isolation, but it is also integration testing because you need to verify the methods and attributes of the
    class work together. The one assumption you need to make while writing “class tests” is that all other classes in the
    system work. Issues to address via class testing include:
</p>
<ul>
    <li>
        Validate that the attributes of an object are initialized properly
    </li>
    <li>
        Validate the invariants of the class
    </li>
</ul>
<p>
    The primary advantages of class testing are that it validates that the operations and properties of a class work
    together and that the class works in isolation. However, it does not guarantee that a class works well with the rest of
    your system.
</p>
<h4>
    Class-integration Testing
</h4>
<p>
    Also known as component testing, this technique addresses the issue of whether the classes in your system, or a
    component of your system, work together properly. The relationships between classes can be used to drive the
    development of class integration test cases. Issues to address via class-integration testing include:
</p>
<ul>
    <li>
        Validate that objects do what other objects expect of them
    </li>
    <li>
        Validate that return values are acted upon appropriately
    </li>
    <li>
        Validate that exceptions/errors are processed appropriately
    </li>
</ul>
<p>
    The technique helps to validate that the various classes within a component, or a system, work together. However, it
    can be difficult to define and develop the test cases to fully perform this level of testing.
</p>
<h4>
    Inheritance-regression&nbsp;Testing
</h4>
This is the act of running of test cases defined for the superclasses on the instances of a subclass because errors have
not been introduced by that new subclass. New methods are added and existing methods may be redefined by subclasses,
methods which access and potentially change the value of the attributes defined in the superclass. It is possible that a
subclass may change the value of the attributes in a way that was never intended in the superclass, or at least was never
expected. The point is that you need to invoke the test suite of the superclass(es) when testing a subclass. <br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Role" name="sln_developer"
					briefDescription="" id="_BCtiMDR9EduwLdLujGQAIQ" orderingGuide=""
					suppressed="false" presentationName=""
					variabilityBasedOnElement="_0YDosMlgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<ResponsibleFor>
						_0YuXEMlgEdmt3adZL5Dmdw
					</ResponsibleFor>
					<ResponsibleFor>
						_0WuL8slgEdmt3adZL5Dmdw
					</ResponsibleFor>
					<ResponsibleFor>
						_0YuXEclgEdmt3adZL5Dmdw
					</ResponsibleFor>
					<ResponsibleFor>
						_0YoQcMlgEdmt3adZL5Dmdw
					</ResponsibleFor>
				</ContentElement>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ContentPackage" name="test"
				briefDescription="" id="_0ZM4MMlgEdmt3adZL5Dmdw" orderingGuide=""
				suppressed="false" global="false">
				<ContentElement xsi:type="uma:Artifact"
					name="test_script"
					briefDescription="This artifact contains the step-by-step instructions that realize a test, enabling its execution. These may take the form of either documented textual instructions that are executed manually or computer readable instructions that enable automated test execution."
					id="_0ZfMEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Test Script" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="test_script,_0ZfMEMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_NqYIcqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2005-07-20T01:12:17" changeDescription=""
						version="" externalId="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions></RepresentationOptions>
					</Presentation>
					<Concept>_0aJ6cMlgEdmt3adZL5Dmdw</Concept>
					<Checklist>_0Z9tMMlgEdmt3adZL5Dmdw</Checklist>
					<Checklist>_KZQJMBhBEduxCP6DVVLxsA</Checklist>
					<Guideline>_0aDz0MlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
				</ContentElement>
				<ContentElement xsi:type="uma:Checklist"
					name="test_script"
					briefDescription="This checklist provides questions to verify that tests are created in a consistent and complete manner."
					id="_0Z9tMMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Test Script" variabilityType="na">
					<Presentation
						name="test_script,_0Z9tMMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_4LuPMMPcEdmbOvqy4O0adg" orderingGuide="" suppressed="false"
						authors="" changeDate="2005-07-26T10:21:21" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Are your test scripts reusable"
							briefDescription="" id="_H-q58Bg9EduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Ensure that your test scripts can be
								reused by designing your test scripts to
								maximize reuse.&amp;nbsp; Promoting
								reuse takes&#xD; different forms
								depending on whether you are generating,
								programming, or recording test scripts.
							</Description>
						</Section>
						<Section name="Are your test scripts testable"
							briefDescription="" id="_KS930Bg9EduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
						<Section
							name="Are your test scripts naming consistent with your other test work products"
							briefDescription="" id="_La5wQBg9EduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Make sure that the naming of your test
								scripts is consistent with other test
								related work products.&amp;nbsp; For
								example, if&#xD; you are creating test
								classes for each of your test cases,
								ensure that the naming represents this
								relationship.&amp;nbsp;&#xD;
								Alternatively, if you are building test
								scripts inside of a library, use a
								consistent naming convention to reflect
								the&#xD; library or libraries.
							</Description>
						</Section>
						<Section
							name="Have you ensured that your test scripts provide test coverage consistent with the system under test"
							briefDescription="" id="_Ng5zcBg9EduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="types_of_test"
					briefDescription="Testing is applied to different types of targets, in different stages or levels of work effort. This Concept introduces various types of test."
					id="_0aJ6cMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Types of Test" variabilityType="na">
					<Presentation
						name="types_of_test,_0aJ6cMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_y-_PIMPdEdmbOvqy4O0adg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-21T12:37:14" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    There is much more to testing computer software than simply evaluating the functions, interface, and response-time
    characteristics of a target-of-test.&nbsp;Additional tests must focus on characteristics and attributes, such as the
    target-of-test.
</p>
<ul>
    <li>
        integrity (resistance to failure)
    </li>
    <li>
        ability to be installed and executed on different platforms
    </li>
    <li>
        ability to handle many requests simultaneously
    </li>
</ul>
<p>
    To achieve this, many different types of tests are implemented and executed.&nbsp;Each test type has a specific
    objective and support technique.&nbsp;Each technique focuses on testing one or more characteristics or attributes of
    the target-of-test.
</p>
<p>
    The following sections list the types of test based on the most obvious <strong>quality dimensions</strong> they
    address.
</p>
<h3>
    Quality Dimension: Functionality
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Function test:</strong>&nbsp;Tests focused on validating the target-of-test functions as intended, providing
    the required services, methods, or use cases. This test is implemented and executed against different targets-of-test,
    including units, integrated units, applications, and systems.
</p>
<p>
    <strong>Security test:</strong>&nbsp;Tests focused on ensuring the target-of-test data (or systems) are accessible only
    to those actors for which they are intended. This test is implemented and executed on various targets-of-test.
</p>
<p>
    <strong>Volume test:</strong>&nbsp;Tests focused on verifying the target-of-test's ability to handle large amounts of
    data, either as input and output or resident within the database.&nbsp;Volume testing includes test strategies such as
    creating queries that would return the entire contents of the database, or that would have so many restrictions that no
    data is returned, or where the data entry has the maximum amount of data for each field.
</p>
<h3>
    Quality Dimension:&nbsp;Usability
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Usability test:</strong>&nbsp;Tests that focus on:
</p>
<ul>
    <li>
        human factors
    </li>
    <li>
        esthetics
    </li>
    <li>
        consistency in the user interface
    </li>
    <li>
        online and context-sensitive help
    </li>
    <li>
        wizards and agents
    </li>
    <li>
        user documentation
    </li>
    <li>
        training materials
    </li>
</ul>
<p>
    <strong>Integrity test:</strong>&nbsp;Tests that focus on assessing the target-of-test's robustness (resistance to
    failure), and technical compliance to language, syntax, and resource usage.&nbsp;This test is implemented and executed
    against different targets-of-tests, including units and integrated units.
</p>
<p>
    <strong>Structure test</strong>: Tests that focus on assessing the target-of-test's adherence to its design and
    formation.&nbsp;Typically, this test is done for Web-enabled applications ensuring that all links are connected,
    appropriate content is displayed, and no content is orphaned.
</p>
<h3>
    Quality Dimension: Reliability
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Stress test:</strong>&nbsp; A type of reliability test that focuses on evaluating how the system responds under
    abnormal conditions.&nbsp;Stresses on the system could include extreme workloads, insufficient memory, unavailable
    services and hardware, or limited shared resources.&nbsp;These tests are often performed to gain a better understanding
    of how and in what areas the system will break, so that contingency plans and upgrade maintenance can be planned and
    budgeted for well in advance.
</p>
<p>
    <strong>Benchmark test:</strong>&nbsp; A type of performance test that compares the performance of a new or unknown
    target-of-test to a known reference-workload and system.
</p>
<p>
    <strong>Contention test:</strong>&nbsp; Tests focused on validating the target-of-test's ability to acceptably handle
    multiple actor demands on the same resource (data records, memory, and so on).
</p>
<h3>
    Quality Dimension: Performance
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Load test:</strong>&nbsp; A type of performance test used to validate and assess acceptability of the
    operational limits of a system under varying workloads while the system-under-test remains constant.&nbsp;In some
    variants, the workload remains constant and the configuration of the system-under-test is varied.&nbsp; Measurements
    are usually taken based on the workload throughout and in-line transaction response time.&nbsp;The variations in
    workload usually include emulation of average and peak workloads that occur within normal operational tolerances.
</p>
<p>
    <strong>Performance profile:</strong> A test in which the target-of-test's timing profile is monitored, including
    execution flow, data access, function and system calls to identify and address both performance bottlenecks and
    inefficient processes.
</p>
<p>
    <strong>Configuration test:</strong>&nbsp; Tests focused on ensuring the target-of-test functions as intended on
    different hardware and software configurations.&nbsp;This test might also be implemented as a system performance test.
</p>
<h3>
    Quality Dimension: Supportability
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Installation test:</strong>&nbsp; Tests focused on ensuring the target-of-test installs as intended on
    different hardware and software configurations, and under different conditions (such as insufficient disk space or
    power interruptions).&nbsp;This test is implemented and executed against applications and systems.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="test_suite"
					briefDescription="This guideline discusses how to maintain automated test suites."
					id="_0aDz0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Test Suite" variabilityType="na">
					<Presentation
						name="test_suite,_0aDz0MlgEdmt3adZL5Dmdw" briefDescription=""
						id="_s60KoMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-07-21T12:25:13" changeDescription=""
						version="">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The Test Suite provides a means of managing the complexity of the test implementation. Many system test efforts fail
    because the team gets lost in the minutia of all of the detailed tests, and subsequently loses control of the test
    effort. Similar to UML packages, Test Suites provide a hierarchy of encapsulating containers to help manage the test
    implementation. They provide a means of managing the strategic aspects of the test effort by collecting tests together
    in related groups that can be planned, managed, and assessed in a meaningful way.
</p>
<p>
    This work product represents a container for organizing arbitrary collections of related tests. This may be realized
    (implemented) as one or more automated regression Test Suites, but the Test Suite can also be a work plan for the
    implementation of a group of related manual tests. Note also that Test Suites can be nested hierarchically, therefore
    one Test Suite may be enclosed within another.
</p>
<p>
    Sometimes these groups of tests will relate directly to a subsystem or other system design element, but other times
    they'll relate directly to things such as quality dimensions, core "mission critical" functions, requirements
    compliance, standards adherence, and many others concerns that cut across, or are not directly related to, the internal
    system elements.
</p>
<p>
    You should consider creating Test Suites that arrange the available Test Scripts-in addition to other Test Suites-in
    many different combinations: the more variations you have, the more you'll increase coverage and the potential for
    finding errors. Give thought to a variety of Test Suites that will cover the breadth and depth of the target test
    items. Remember the corresponding implication that a single Test Script (or Test Suite) may appear in many different
    Test Suites.<br />
     Some test automation tools provide the ability to automatically generate or assemble Test Suites. There are also
    implementation techniques that enable automated Test Suites to dynamically select all or part of their component Test
    Scripts for each test cycle run.<br />
</p>
<p>
    Test Suites can help you maintain your test assets and impose a level of organization that facilitates the entire
    testing effort.&nbsp; Like physical objects, tests can break. It's not that they wear down, it's that something's
    changed in their environment. Perhaps they've been ported to a new operating system. Or-more likely-the code they
    exercise has changed in a way that correctly causes the test to fail. Suppose you're working on version 2.0 of an
    e-banking application. In version 1.0, this method was used to log in:
</p>
<p>
    public boolean login (String username);
</p>
<p>
    In version 2.0, the marketing department has realized that password protection might be a good idea. So the method is
    changed to this:
</p>
<p>
    public boolean login (String username, String password);
</p>
<p>
    Any test that uses the following will fail: login. It won't even compile. Since not much useful work can be done, not
    many useful tests can be written that don't use login. You might be faced with hundreds or thousands of failing tests.
</p>
<p>
    These tests can be fixed by using a global search-and-replace tool that finds every instance of login(something) and
    replaces it with login(something, "dummy password"). Then arrange for all the testing accounts to use that password,
    and you're on your way.
</p>
<p>
    Then, when marketing decides that passwords should not be allowed to contain spaces, you get to do it all over again.
</p>
<p>
    This kind of thing is a wasteful burden, especially when-as is often the case-the test changes aren't so easily made.
    There is a better way.
</p>
<p>
    Suppose that the tests originally did not call the product's login method. Rather, they called a library method that
    does whatever it takes to get the test logged in and ready to proceed. Initially, that method might look like this:
</p>
<p>
    public boolean testLogin (String username) {<br />
     &nbsp; return product.login(username);<br />
     }
</p>
<p>
    When the version 2.0 change happens, the utility library is changed to match:
</p>
<p>
    public Boolean testLogin (String username) {<br />
     &nbsp; return&nbsp; product.login(username, "dummy password");<br />
     }
</p>
<p>
    Instead of a changing a thousand tests, you change one method.
</p>
<p>
    Ideally, all the needed library methods would be available at the beginning of the testing effort. In practice, they
    can't all be anticipated-you might not realize you need a testLogin utility method until the first time the product
    login changes. So test utility methods are often "factored out" of existing tests as needed. It is very important that
    you perform this ongoing test repair, even under schedule pressure. If you do not, you will waste much time dealing
    with an ugly and un-maintainable test suite. You might well find yourself throwing it away, or being unable to write
    the needed numbers of new tests because all your available testing time is spent maintaining old ones.
</p>
<p>
    Note: the tests of the product's login method will still call it directly. If its behavior changes, some or all of
    those tests will need to be updated. (If none of the login tests fail when its behavior changes, they're probably not
    very good at detecting defects.)
</p>
<h3>
    Abstraction helps manage complexity
</h3>
<p>
    The previous example showed how tests can abstract away from the concrete application. Most likely you can do
    considerably more abstraction. You might find that a number of tests begin with a common sequence of method calls: they
    log in, set up some state, and navigate to the part of the application you're testing. Only then does each test do
    something different. All this setup could-and should-be contained in a single method with an evocative name such as
    readyAccountForWireTransfer. By doing that, you're saving considerable time when new tests of a particular type are
    written, and you're also making the intent of each test much more understandable.
</p>
<p>
    Understandable tests are important. A common problem with old test suites is that no one knows what the tests are doing
    or why. When they break, the tendency is to fix them in the simplest possible way. That often results in tests that are
    weaker at finding defects. They no longer test what they were originally intended to test.
</p>
<h3>
    Throwing away tests
</h3>
<p>
    Even with utility libraries, a test might periodically be broken by behavior changes that have nothing to do with what
    it checks. Fixing the test doesn't stand much of a chance of finding a defect due to the change; it's something you do
    to preserve the test's chance of finding some other defect someday. But the cost of such a series of fixes might exceed
    the value of the test's hypothetically finding a defect. It might be better to simply throw the test away and devote
    the effort to creating new tests with greater value.
</p>
<p>
    Most people resist the notion of throwing away a test-at least until they're so overwhelmed by the maintenance burden
    that they throw all the tests away. It is better to make the decision carefully and continuously, test by test, asking:
</p>
<p>
    How much work will it be to fix this test well, perhaps adding to the utility library?<br />
     How else might the time be used?<br />
     How likely is it that the test will find serious defects in the future? What's been the track record of it and related
    tests?<br />
     How long will it be before the test breaks again?<br />
     The answers to these questions will be rough estimates or even guesses. But asking them will yield better results than
    simply having a policy of fixing all tests.
</p>
<p>
    Another reason to throw away tests is that they are now redundant. For example, early in development, there might be a
    multitude of simple tests of basic parse-tree construction methods (the LessOp constructor and the like). Later, during
    the writing of the parser, there will be a number of parser tests. Since the parser uses the construction methods, the
    parser tests will also indirectly test them. As code changes break the construction tests, it's reasonable to discard
    some of them as being redundant. Of course, any new or changed construction behavior will need new tests. They might be
    implemented directly (if they're hard to test thoroughly through the parser) or indirectly (if tests through the parser
    are adequate and more maintainable).<br />
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="implement_tests"
					briefDescription="Implement one or more test artifacts to enable the validation of the software  product through actually running the system.  Combine  tests to facilitate appropriate breadth and depth of test coverage."
					id="_0jO98MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Implement Tests" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="implement_tests,_0jO98MlgEdmt3adZL5Dmdw" briefDescription=""
						id="_NrbRUKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-21T01:51:14" changeDescription=""
						version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section
							name="Select appropriate implementation technique"
							briefDescription="" id="_S8JzsKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Select one or several of the
								following test
								implementation&amp;nbsp;techniques:&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								manual test scripts&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; programmed test
								scripts&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								recorded test scripts&#xD; &lt;/li>&#xD;
								&lt;/ul>
							</Description>
						</Section>
						<Section name="Implement the test"
							briefDescription="" id="_VN5M0KuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Using your test-ideas list
								and test cases as inputs, set up your
								spreadsheet, specifications, or IDE to
								record scripts&#xD; needed to conduct
								the test.&amp;nbsp;If you are recording
								explicit steps for your test, navigate
								through the&#xD; system-under-test,
								identifying steps, groups of related
								steps, verification points, and control
								points.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Establish external data sets"
							briefDescription="" id="_WvBoYKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Create containers for your test data
								sets. Separate production data from
								generated data. Associate your data sets
								with a&#xD; given build of the system
								under test.&amp;nbsp;If data sets are
								associated with a particular part of the
								system under test,&#xD; mark them
								accordingly.
							</Description>
						</Section>
						<Section name="Verify Test implementation"
							briefDescription="" id="_X0dmcKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Run the test script to
								verify that it implements the tests
								correctly. For manual
								testing,&amp;nbsp;conduct a walkthrough
								of&#xD; the test script. For automated
								tests, verify that&amp;nbsp;the test
								implementation will involve some degree
								of the&#xD; configuration of the testing
								tool.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Organize tests into test suites"
							briefDescription="" id="_Y-ABYKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Collect tests into related
								groups. The grouping you use depends on
								your test environment. For example, you
								can organize&#xD; test cases, test
								scripts, and test data hierarchically to
								facilitate navigation within a test, as
								well as within the&#xD; suite. Another
								form of test suite organization is based
								on system functionality and uses the
								quality attributes of&#xD; usability,
								reliability, and performance as
								categories for groups.&amp;nbsp;You may
								choose to follow an iteration-based
								test&#xD; suite organization,
								instead.&amp;nbsp;Since the system under
								test is undergoing its own evolution,
								create your test suites&#xD; to
								facilitate regression testing, as well
								as system configuration
								identification.&#xD; &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p>
    To implement one or more tests that can be executed to validate a system.
</p>]]></Purpose>
					</Presentation>
					<Guideline>_0kF5kMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0jzlsMlgEdmt3adZL5Dmdw</Guideline>
					<PerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0ZS-0MlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0ZfMEMlgEdmt3adZL5Dmdw</Output>
					<OptionalInput>
						_0ZfMEMlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_0YuXEMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Task" name="run_tests"
					briefDescription="Run the appropriate collections of tests required to evaluate product quality. Capture test results that facilitate ongoing assessment of the product."
					id="_0jVEkMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Run Tests" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="run_tests,_0jVEkMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_NrbRUqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-26T09:24:18" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[Run the system test, which addresses functional and system integration tests and, potentially, user acceptance tests.]]></MainDescription>
						<KeyConsiderations><![CDATA[<ul>
    <li>
        Run the test regularly. Ideally, that means whenever the code changes but, minimally, once a day.
    </li>
    <li>
        It should be possible for anyone on the test team to run the test at any time.
    </li>
</ul>]]></KeyConsiderations>
						<Section name="Schedule test execution"
							briefDescription="" id="_fR4aQKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Run your system tests as often as
								possible. Ideally, run your tests
								whenever new code is checked into your
								version control&#xD; tool. For larger
								systems, this will be too expensive.
								Your tests may take several hours to
								run; therefore, you'll need to&#xD;
								schedule tests less frequently. If
								possible, however, run the tests several
								times a day. As a minimum,
								run&amp;nbsp;tests each&#xD; night, but
								also run&amp;nbsp;them during working
								hours, if possible.
							</Description>
						</Section>
						<Section name="Run the test" briefDescription=""
							id="_gV408KuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Run the test at the
								scheduled time. This should be
								automated.&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Good practices:&#xD; &lt;/p>&#xD;
								&lt;ol>&#xD; &lt;li>&#xD; Run the test
								in a separate test environment.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Ensure that
								you run the test against the latest
								clean build.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; The first step of the test
								should be to set up the test environment
								(ensure that the network is available,
								that the&#xD; test database is available
								and reset to a known state, and so
								on).&#xD; &lt;/li>&#xD; &lt;/ol>
							</Description>
						</Section>
						<Section name="Close test run"
							briefDescription="" id="_hfVJQKuSEdmhFZtkg1nakg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; The last step of running the
								test should be to close the actual
								run.&amp;nbsp;To do this, you must:&#xD;
								&lt;/p>&#xD; &lt;ol>&#xD; &lt;li>&#xD;
								Close the test logs. The appropriate
								test log files should be closed and
								placed in the appropriate folder or&#xD;
								directory.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Announce results. Send a
								notice to everyone involved in the
								project, informing them of the result of
								the test run&#xD; and where they can
								find the test logs.&#xD; &lt;/li>&#xD;
								&lt;/ol>
							</Description>
						</Section>
						<Section name="Examine the test log"
							briefDescription="" id="_sQaC4DO2EduqsLmIADMQ9g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Collect and compile
								information from test execution logs so
								you can:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
								&lt;li>&#xD; Capture the high-impact and
								risk issues discovered in running the
								tests&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Identify errors in test creation, data
								inputs, or integrating applications and
								any architectural anomalies&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Isolate the
								target of the test to determine failure
								points&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Diagnose failure symptoms and
								characteristics&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Assess and identify
								possible solutions&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;p>&#xD; After
								completing these steps, verify that you
								have enough details to determine the
								impact of the results. In addition,&#xD;
								make sure that enough information exists
								to assist individuals who are performing
								dependent tasks.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Identify failures and propose solutions"
							briefDescription="" id="_0XzAwDO2EduqsLmIADMQ9g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; The approach to testing will
								determine the identified failures and
								candidates for solutions.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Tests that are
								programmer supporting are used to help
								prepare and ensure confidence in the
								code.&amp;nbsp;When identifying&#xD;
								failures and proposing solutions for
								programmer supporting tests:&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								Failures will be identified at an object
								or element level&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Solutions will be to help
								clarify the problem&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;p>&#xD; Test that are
								business supporting are used to uncover
								prior mistakes and omissions.&#xD;
								&lt;/p>&#xD; &lt;ul>&#xD; &lt;li>&#xD;
								Failures will identify omissions in
								requirements&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Solutions will help to
								clarify expectations of the system&#xD;
								&lt;/li>&#xD; &lt;/ul>&#xD; &lt;p>&#xD;
								After you have this information and the
								steps proposed to resolve the failures,
								you can effectively categorize the
								type&#xD; of failure and the appropriate
								type of solution.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; See &lt;a
								class=&quot;elementLinkWithUserText&quot;
								href=&quot;./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html&quot;
								guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[MAR03]&lt;/a>
								for more information.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Communicate test results"
							briefDescription="" id="_3t6oADO2EduqsLmIADMQ9g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Communicating test results
								can affect the perception of the
								effectiveness of the tests. When
								communicating test&#xD; results, it is
								important that you:&#xD; &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; Know the
								audience, so that appropriate
								information is communicated
								appropriately&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; Run tests or scenarios that
								are likely to uncover the high-impact
								and risk issues or represent actual use
								of the&#xD; system&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;p>&#xD; When preparing
								test result reports, answer the
								following questions:&#xD; &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; How many test
								cases exist, and what are their states
								(pass, fail, blocked, and so on)?&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; How many bug
								reports have been filed, and what are
								their states (open, assigned, ready for
								testing, closed,&#xD; deferred)?&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; What trends
								and patterns do you see in test case and
								bug report states, especially opened and
								closed bug reports&#xD; and passed and
								failed test cases?&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; For test cases that were
								blocked or skipped, why are they in this
								state?&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								Considering all test cases not yet run
								(and perhaps not even created yet), what
								key risks and areas of&#xD;
								functionality remain untested?&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; For failed
								test cases, what are the associated bug
								reports?&#xD; &lt;/li>&#xD; &lt;li>&#xD;
								For bug reports ready for confirmation
								testing, when can your team perform the
								test?&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[To execute tests and evaluate the test results]]></Purpose>
					</Presentation>
					<Guideline>_0jhR0MlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0kF5kMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
					<PerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0YuXEMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_0ZfMEMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<Output>_0ZlSsMlgEdmt3adZL5Dmdw</Output>
					<Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="failure_analysis_rpt_creation"
					briefDescription="This guideline addresses how to conduct failure analysis based on the execution of tests. The result of this analysis can take the form of a failure analyisis report."
					id="_0jhR0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Failure Analysis and Report Creation"
					variabilityType="na" />
				<ContentElement xsi:type="uma:Guideline"
					name="maintaining_automated_test_suite"
					briefDescription="This guideline explains ways to maintain automated test suites - collection of tests performed together for breadth and depth coverage."
					id="_0kF5kMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Maintaining Automated Test Suite"
					variabilityType="na">
					<Presentation
						name="maintaining_automated_test_suite,_0kF5kMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_8ngBgMPdEdmbOvqy4O0adg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-26T08:31:15"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    At some point in your test effort, you may find it necessary to manage your test effort by creating test suites for
    your test assets.&nbsp;Maintaining test suites can take many different forms. To facilitate your testing, you may want
    to introduce some&nbsp;level of&nbsp;automation of your test suites.&nbsp;The fact that you've automated your test
    suites does not necessarily make your testing easier however. It may actually increase the maintenance burden of your
    suites.
</p>
<p>
    This guideline introduces you to useful heuristics on how to facilitate the maintenance of your automated test suites.
</p>
<h4>
    Plan your test&nbsp;suites
</h4>
<p>
    Automating your testing without planning increases&nbsp;the chances that testing will be ineffective
    and&nbsp;inefficient.&nbsp;Some level of planning should take place whether implicit or explicit.&nbsp;An essential
    part of any test plan is the definition of a strategy for test automation.&nbsp;Use your plan to articulate to the
    development team how you plan to maintain your test assets.&nbsp;In many cases, this is never done.&nbsp;The rest of
    the development team may be unaware of how you intend to maintain your tests.&nbsp;It is also a good practice to get
    the rest of the development team to understand that this maintenance can be a substantial part of the overall
    development effort.&nbsp;Use your test tooling to capture this information and treat this plan just like you would
    treat any other test asset in your test repository.
</p>
<h4>
    Centrally locate your test assets
</h4>
<p>
    To facilitate the maintenance of your automated test suites, locate your test assets in a repository that can be
    accessed by the development team.&nbsp;Many test automation environments provide test management tools that make it
    easier to organize and access your test assets by maintaining the test assets (test cases, test scripts, and test
    suites) in a common repository.
</p>
<p>
    In addition, some form of access control is enforced by the automation test tool.&nbsp;This eases the maintenance
    burden by ensuring the integrity of your test suites.&nbsp;You may choose to grant stakeholders and managers read-only
    access, whereas developers and testers at the practitioner level may have read/write access.
</p>
<h4>
    Treat your test assets like any other software
</h4>
<p>
    Software must be maintained.&nbsp;This also applies to the software in your test suites.&nbsp;Test cases and their
    associated test scripts, whether recorded or programmed, should be maintained.&nbsp;And just as software has different
    kinds of maintenance (e.g., corrective, preventative, or adaptive) so too do the assets in your automated test suites.
    As you lifecycle your test suites, identify, if only informally,&nbsp;how&nbsp;you plan to disposition the test suite
    corrective maintenance (e.g., syntactical errors in your scripts),&nbsp;preventative maintenance (e.g., where possible
    to write generalized test scripts), and adaptive maintenance (e.g., how you&nbsp;can use your test tooling to re-assign
    test&nbsp;assets within one suite to&nbsp;another suite or suites).&nbsp;This can be captured, as described in the
    section <strong>Plan Your Test Suites</strong> above, in your test plan.
</p>
<h4>
    Improve the testability of your test suites through collaboration with developers
</h4>
<p>
    It's one thing to say that your test suites will need to be maintained due to changes in the application, changes in
    the testing target, etc.&nbsp;It's quite another thing to actually determine whether a test suite needs to be
    revamped&nbsp;and, if it does, what test assets within it need to be addressed.
</p>
<p>
    One way to facilitate this is to use test suites as a way to communicate test decision to the developers.&nbsp;One way
    to perform continuous perfective maintenance of test suites is to think of your test suites as assets that belong to
    the development team rather than just the testers.&nbsp; You can perform a kind of perfective maintenance on test in
    the following ways:
</p>
<ul>
    <li>
        use test suites to raise the level of abstraction
    </li>
    <li>
        use test suites to provide focus for the developer
    </li>
    <li>
        use test suites to articulate areas that the developers would like testers to focus on
    </li>
    <li>
        make the construction and maintenance&nbsp;of test suites more efficient&nbsp;by understanding what area(s)
        developers want to focus on
    </li>
    <li>
        use test suites to clarify test targets with developers
    </li>
</ul>
<h4>
    Don't be afraid to clean up your suites
</h4>
<p>
    Your test assets will evolve just as the application under test will.&nbsp;As requirements to the system change, the
    application will change as well.&nbsp;To maintain your test suites, you should continually&nbsp;check whether test
    assets are valid.&nbsp;If possible, validity checks should be performed after each new release of the software,
    preferably more frequently.&nbsp;Keeping your test suites relevant is a full-time job.&nbsp;Assume that changes in the
    software will lead to some degree of invalid tests within your test suites.&nbsp;Once these test assets have been
    identified as invalid, get rid of them.&nbsp;This will make the maintenance burden much more tolerable.&nbsp;Some
    automated test tooling environments make this task easier by providing ways to package outdated or invalid
    tests.&nbsp;In some cases, you may not be absolutely sure whether you want to completely get rid of tests within your
    test suite or even of getting rid of test suites altogether.&nbsp; To alleviate this burden, you can create packages
    for obsolete tests or test suites and dispose of tests or test suites by putting them in packages labeled for this
    purpose.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="programming_automated_tests"
					briefDescription="This guideline discusses ways of structuring, recording, entering data, executing and handling errors in automated tests."
					id="_0j5sUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Programming Automated Tests"
					variabilityType="na">
					<Presentation
						name="programming_automated_tests,_0j5sUMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_vuwC4MPcEdmbOvqy4O0adg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-26T11:06:09"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Although the programming of automated tests should contribute to the overall test effort, it usually does not make up
    the entire test effort.&nbsp;In fact, test environments that are based on a complete automation approach end up
    spending more time on test automation than on testing.&nbsp;Before you begin developing automated test scripts,
    consider first whether it is more efficient to perform manual testing.&nbsp;Some aspects of an application are more
    efficiently tested manually (e.g., GUI testing versus data-drive testing).&nbsp;If you decide to program automated test
    scripts, examine what aspects of your test scripting can be automated and begin designing your scripts.
</p>
<h4>
    Design your automated tests
</h4>
<p>
    Without some level of design of your automated tests, introducing automation into your testing effort can lead to more
    problems than it solves.&nbsp;You should consider developing your automated tests according to a lifecycle with
    automation test requirements, design, testing of the automation tests, and implementation of the automation
    tests.&nbsp;This approach can be informal or formal depending on your project needs.&nbsp;By designing the programming
    of your automated tests, you can avoid spending time programming the wrong tests, re-working programmed tests,
    deciphering different coding styles in the programming of the tests, etc.
</p>
<h4>
    Recorded&nbsp;versus programmed scripts
</h4>
<p>
    Although there are clear benefits to recorded scripts (e.g., ease of creation or ability for novice testers to learn a
    scripting language), recorded scripts also present their own problems.&nbsp;The disadvantages of playback scripts are
    well known.&nbsp;They are deceptively easy to create but very difficult to update.&nbsp;Problems with script
    reliability, hard-coded data values, or changes to the application under test and the need to re-record are
    well-documented.&nbsp;On the other hand, programming scripts can present difficulties of their own:&nbsp;they are
    difficult for the novice tester to create, they can require substantial time and effort to develop, and they can be
    difficult to debug.&nbsp;Most test tooling makes these issues less problematic by providing the tester script support
    functions, such as ways to establish target of test lists, systematic ways to program verification point, point to
    datapools, build commands into the script (e.g., sleeper commands), comment the script, and document the script.&nbsp;
    Another major advantage, which is often overlooked, of using testing tooling to mitigate these risks is the ability to
    add to an existing script in the form of making corrections to an existing script, testing new features of a test
    target or application under test, or resuming a recording after an interruption.
</p>
<h4>
    Functional and performance test scripts
</h4>
<p>
    When discussing automating test scripts, it is important to distinguish between functional and performance
    tests.&nbsp;Most discussions of programming automated test scripts focus on testing the functionality of an
    application.&nbsp;This is not inappropriate, since a lot of automated testing focuses on functional
    testing.&nbsp;Performance test scripting, however, has its unique characteristics.&nbsp;Performance test automation
    provides you with the ability to programmatically set workloads by adding user groups to test loads under group usage,
    setting think time behavior, running tests randomly or at set rates, or setting the duration of a run.&nbsp;Performance
    test automation also allows you to create and maintain schedules for your tests.
</p>
<h4>
    Testing test scripts
</h4>
<p>
    When testing your test scripts, keep in mind whether you are testing recorded or programmed test scripts.&nbsp;For
    recorded scripts, much of the debugging of the script consists of errors that are introduced due to changes in the test
    target or test environment.&nbsp;When you run a recorded test script, consider the test target of the script.&nbsp;Some
    test automation tools capture this information as a part of the test script.&nbsp;Debugging a recorded script consists
    largely of determining whether changes in the target have created error conditions in the script.&nbsp;In general,
    there are two main categories to examine here: changes in the UI and test session sensitive data (e.g., date stamped
    data).&nbsp;In most cases, discrepancies between recording and playback cause errors in your recorded test scripts.
</p>
<p>
    Testing programmed test scripts involves many of the same debugging techniques you would apply to debugging an
    application.&nbsp;Consider both the flow control logic and the data aspects of your script.&nbsp;Automated testing
    tools provide you with test script debugging IDEs as well as datapool management features that facilitate this type of
    testing.&nbsp;During execution of test scripts, a test that uses a datapool can replace values in the programmed test
    with variable test data that is stored in the datapool.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="test_ideas"
					briefDescription="This guideline identifies common faults and mistakes done when developing software. It shows how to create test ideas from method calls, and from boolean and relational expressions."
					id="_0jzlsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Test Ideas" variabilityType="na">
					<Presentation
						name="test_ideas,_0jzlsMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_y3rxsMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-26T08:12:17" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Test ideas are used to generate tests.&nbsp;Test ideas can come from many different sources.&nbsp;In general, they can
    be derived in different ways depending on the given development domain, the kind of application being developed, and
    the sophistication of the testers.&nbsp;Although test ideas are derived in many different ways, there are some useful
    categories for generating them.&nbsp;This guideline will describe some of these categories as well as some general
    heuristics for creating good test ideas.
</p>
<h4>
    Test Ideas and Functions
</h4>
<p>
    Below are some test ideas to calculate the square root:
</p>
<ol>
    <li>
        A number that's barely less than zero as input
    </li>
    <li>
        Zero as the input
    </li>
    <li>
        Number that's a perfect square, like 4 or 16 (is the result exactly 2 or 4?)
    </li>
    <li>
        Print to a LaserJet IIIp
    </li>
    <li>
        Test with database full
    </li>
</ol>
<p>
    The first&nbsp;3 test ideas validate input while the last 2 address environmental issues.&nbsp; Even though these
    statements are very incomplete they ensure that an idea is not forgotten.
</p>
<h4>
    Test Ideas and Boundaries
</h4>
<p>
    Test ideas are often based on fault models.&nbsp; Consider boundaries. It's safe to assume the square root function can
    be implemented something like this:<br />
    double sqrt(double x) {<br />
    &nbsp;&nbsp;&nbsp; if (x &lt; 0)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // signal error<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br />
    It's also plausible that the &lt; will be incorrectly typed as &lt;=. People often make that kind of mistake, so it's
    worth checking. The fault cannot be detected with X having the value 2, because both the incorrect expression (x&lt;=0)
    and the correct expression (x&lt;0) will take the same branch of the if statement. Similarly, giving X the value -5
    cannot find the fault. The only way to find it is to give X the value 0, which justifies the second test idea.
</p>
<h4>
    Test Idea and Methods
</h4>
<p>
    Let's suppose you're designing tests for a method that searches for a string in a sequential collection. It can either
    obey case or ignore case in its search, and it returns the index of the first match found or -1 if no match is
    found.<br />
    int Collection.find(String string, Boolean ignoreCase);
</p>
<p>
    Here are some test ideas for this method, each of which could be implemented as a test.&nbsp;
</p>
<ol>
    <li>
        Match found in the first position
    </li>
    <li>
        Match found in the last position
    </li>
    <li>
        No match found
    </li>
    <li>
        Two or more matches found in the collection
    </li>
    <li>
        Case is ignored; match found, but it wouldn't match if case was obeyed
    </li>
    <li>
        Case is obeyed; an exact match is found
    </li>
    <li>
        Case is obeyed; a string that would have matched if case were ignored is skipped
    </li>
</ol>
<p>
    However, different test ideas can be combined into a single test; for example, the following test satisfies test ideas
    2, 6, and 7:
</p>
<p>
    <strong>Setup:</strong> Collection initialized to ["dawn", "Dawn"]<br />
    <strong>Invocation:</strong> Collection.find("Dawn", false)<br />
    <strong>Expected result:</strong> Return value is 1 (it would be 0 if "dawn" were not skipped)
</p>
<h4>
    Test Idea Simplicity and Complexity
</h4>
<p>
    Making test ideas nonspecific makes them easier to combine.<br />
    Creating many several small tests that satisfy a few test ideas makes it simpler to:
</p>
<ul>
    <li>
        "Copy and Tweak" the tests to meet other test idea
    </li>
    <li>
        Easy of debugging - if you have test that covers 2 test ideas then you know the fault is one or two area, but if
        the test covers 7 test ideas you will spend more time debugging the issue.&nbsp;
    </li>
</ul>
<p>
    If the Test-Ideas List were complete, with a test idea for every fault in the program, it wouldn't matter how you wrote
    the tests. But the list is always missing some test ideas that could find bugs. Smaller more complex tests increase the
    chance the test will satisfy a test idea that you didn't know you needed.
</p>
<h4>
    Complex Tests
</h4>
<p>
    Sometimes when you're creating more complex tests, new test ideas come to mind. However, there are reasons for not
    creating complex tests.
</p>
<ul>
    <li>
        Complex test are more difficult to debug because they usually cover multiple test ideas
    </li>
    <li>
        Complex tests are more difficult to understand and maintain. The intent of the test is less obvious.
    </li>
    <li>
        Complex tests are more difficult to create.
    </li>
</ul>
<p>
    Constructing a test that satisfies five test ideas often takes more time than constructing five tests that each
    satisfies one. Moreover, it's easier to make mistakes - to think you're satisfying all five when you're only satisfying
    four.<br />
    In practice, find a reasonable balance between complexity and simplicity.<br />
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Checklist"
					name="test_data"
					briefDescription="This checklist provides questions to verify that test data is created in a consistent and complete manner."
					id="_KZQJMBhBEduxCP6DVVLxsA" orderingGuide="" suppressed="false"
					presentationName="Test Data" variabilityType="na">
					<Presentation
						name="new_checklist,_KZQJMBhBEduxCP6DVVLxsA" briefDescription=""
						id="-GNUrr3mpSwOOaOKWSuftMg" orderingGuide="" suppressed="false"
						authors="" changeDescription="" version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section
							name="Has test data been provided for the test cases to be implemented"
							briefDescription="" id="_U06PwBhBEduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
						<Section
							name="Does the test data support boundary testing"
							briefDescription="" id="_XBmw0BhBEduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
						<Section
							name="Has the system under test been tested under conditions with sufficient data, insufficient data, and the wrong type of data"
							briefDescription="" id="_Yvo_8BhBEduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
						<Section
							name="Has test data been organized into production and generated data"
							briefDescription="" id="_a6tJUBhBEduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
						<Section
							name="Has test data been updated to apply to the appropriate iteration"
							briefDescription="" id="_cqj9YBhBEduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
						<Section
							name="Is the test data complete for the given test effort"
							briefDescription="" id="_eoWfwBhBEduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
						<Section
							name="Has data been identified for input numeric variables, output numeric variables, arrays, and vectors"
							briefDescription="" id="_h7coMBhBEduxCP6DVVLxsA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description></Description>
						</Section>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Role" name="tst_tester"
					briefDescription="" id="_yDyI8DR1EdutE_HNDTJk5Q" orderingGuide=""
					suppressed="false" presentationName=""
					variabilityBasedOnElement="_0ZM4MclgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<ResponsibleFor>
						_0ZfMEMlgEdmt3adZL5Dmdw
					</ResponsibleFor>
				</ContentElement>
			</MethodPackage>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ContentPackage" name="management"
			briefDescription="Management sub-process."
			id="_5la48DR2EdutE_HNDTJk5Q" orderingGuide="" suppressed="false"
			global="false">
			<MethodPackage xsi:type="uma:ContentPackage"
				name="project_management" briefDescription=""
				id="_0aQBEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				global="false">
				<ContentElement xsi:type="uma:Artifact"
					name="project_plan"
					briefDescription="This artifact gathers all information required to manage the project. Its main part consists of a coarse-grained plan, containing project phases and milestones."
					id="_0a6vcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Project Plan" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="project_plan,_0a6vcMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_IbVp8KX4EdmvhNXG0Oc2uA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-27T11:42:07" changeDescription=""
						version="1.0.0" externalId="">
						<MainDescription><![CDATA[<P><SPAN style="FONT-SIZE: 10pt; mso-bidi-font-family: Arial"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p>This artifact&nbsp;defines the parameters for project progress tracking and specifies the high-level objectives of the iterations and their milestones. Additionally,&nbsp;it describes how the project is organized and which roles are assigned to whom.</o:p></SPAN></P>
<P><SPAN style="FONT-SIZE: 10pt; mso-bidi-font-family: Arial"><o:p>The project manager is responsible for developing the project plan, working very closely with the rest of the team. The project plan allows stakeholders and other team members to understand the big picture, and when to expect roughly what level of functionality.</o:p></SPAN><SPAN style="FONT-SIZE: 10pt; mso-bidi-font-family: Arial"><o:p><BR></P></o:p></SPAN>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose><![CDATA[<p>
    The purpose of this artifact is&nbsp;to provide a central document where any project team member can find the
    information on how the project will be managed.&nbsp;
</p>]]></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions></RepresentationOptions>
					</Presentation>
					<Example>_Nzv5kDoAEdusGsHODb-STA</Example>
					<Report>_ePrt8Dj3EduxovfWMDsntw</Report>
					<Template>_0c7hoMlgEdmt3adZL5Dmdw</Template>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact"
					name="status_assessment"
					briefDescription="Capture and communicate results and actions from assessments. This is typically done at the end of each iteration."
					id="_0bA2EMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Status Assessment" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="status_assessment,_0bA2EMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_K-e8IKX4EdmvhNXG0Oc2uA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-22T07:56:23"
						changeDescription="" version="1.0.0" externalId="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving>
							The team may not understand whether they are
							on track or not, and whether established
							iteration objectives and evaluation&#xD;
							criteria are met. The team may not be able
							to improve the way the develop software.
						</ImpactOfNotHaving>
						<Purpose><![CDATA[<p>
    Capture and communicate whether the project is on track, requires corrective actions, and whether there are
    opportunities for improvement.
</p>]]></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;p>&#xD; The format of the status
							assessment varies from a project to another.
							It can be the minutes of an assessment
							meeting,&#xD; an update to a web site, or
							just an email. The important
							thing&amp;nbsp;is to effectively
							communicate&amp;nbsp;to all involved&#xD;
							parties whether iteration objectives and
							evaluation criteria were addressed and
							desired improvements to the way the&#xD;
							team is working.&#xD; &lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Template>_1awLIEp2Edup0IY9DKDPkg</Template>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="plan_the_project"
					briefDescription="Define a coarse-grained plan for the project."
					id="_0lC70MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Plan Project" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="plan_the_project,_0lC70MlgEdmt3adZL5Dmdw"
						briefDescription="" id="_fPbdIKe2Edmzde8VFK5bxg" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-27T10:20:13"
						changeDescription="" version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Evaluate risks"
							briefDescription="" id="_lrYj0MBAEdqSgKaj2SZBmg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; The project manager
								evaluates project risks with the team
								and updates the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/risk_list,_Ckay8Cc_EduIsqH1Q6ZuqA.html&quot;
								guid=&quot;_Ckay8Cc_EduIsqH1Q6ZuqA&quot;>Risk
								List&lt;/a>. The risk list will aid the
								team in prioritization of what to do in
								which iteration. Higher-ranked risks
								are&#xD; tackled and planned for earlier
								iterations then lower-ranked risks.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section
							name="Determine project size and scope " briefDescription=""
							id="_k1bY4MMsEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Analyze the size and the
								&lt;a class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>&amp;nbsp;of
								the project, and whether it is realistic
								to deliver what is asked for&#xD; within
								the constraints of the project.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; If the project
								is feature-driven, meaning that release
								criteria is defined as a set of features
								captured in the &lt;a
								class=&quot;elementLink&quot;
								href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Work
								Items List&lt;/a>, the team assesses the
								size of these work items, see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html&quot;
								guid=&quot;_CGHskBEdEdqY7JB6N6CW2w&quot;>Guideline:
								Agile Estimation&lt;/a>. They then look
								at how many people they would need
								to&#xD; complete these work items, which
								gives them a ballpark understanding of
								project duration, staffing profile, and
								scope.&#xD; &lt;/p>&#xD; &lt;p>&#xD; If
								the project instead is date-driven, the
								team assesses how much work can roughly
								be done in the time-frame given and&#xD;
								using the available team, captured as a
								candidate list of work items.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; The end result
								of the two approaches is the same; a
								rough understanding of the size of the
								capabilities to be&#xD; delivered, the
								size of the team, and expected time of
								completion.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Define length, number, and objectives of iterations"
							briefDescription="" id="_OfFTEABjEdqHlpDr8LcRqg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Determine iteration length,
								see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html&quot;
								guid=&quot;_lam4ADkBEduxovfWMDsntw&quot;>Concept:
								Iteration&lt;/a>, or use 4 weeks as
								default iteration length. Use iteration
								length&#xD; to assess target velocity,
								see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html&quot;
								guid=&quot;_CGHskBEdEdqY7JB6N6CW2w&quot;>Guideline:
								Agile Estimation&lt;/a>. Based on the
								target velocity and overall size of
								the&#xD; project, calculate the number
								of iterations required.&#xD;
								&lt;/p>&#xD; &lt;p>&#xD; Determine 1-3
								high-level objectives of each iteration,
								The goal is to create a high-level plan
								outlining how you can&#xD; build the
								resulting application in the given set
								of iterations. The plan will change as
								you learn more, so time-box&#xD; this
								analysis to a few hours or less. Use the
								Work Items List to outline what features
								to implement in what iteration,&#xD;
								putting top priority work items first.
								This can be done rapidly by leveraging
								expected velocity and size estimate
								of&#xD; work items.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Produce a brief summary of
								your analysis in your plan by
								documenting 1-3 objectives for each
								iteration. Do not commit&#xD; individual
								work items to the plan, since this will
								force too much re-planning. For some
								projects, you may have to wait&#xD;
								until after the first iteration until
								you can provide a meaningful plan at
								this level of detail.&lt;br />&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section
							name="Define phase milestones and refine iteration objectives"
							briefDescription="" id="_qcOtIE5dEdu3aqt7VHtzgw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Phases provide a focus for a
								team on meeting key management
								objectives, see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html&quot;
								guid=&quot;_lam4ADkBEduxovfWMDsntw&quot;>Concept:
								Iteration&lt;/a>. For example the
								Elaboration phase should answer the
								question “Do&#xD; we agree on the
								overall solution, and do we understand
								risks, costs and schedule parameters
								reasonably well?”&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; With this in mind, the
								project manager determines the start and
								end dates of the phases and aligns the
								content of the&#xD; iterations with the
								perspective of the phase. Therefore the
								objectives of the iterations assigned to
								a phase, need to&#xD; map to the goals
								of its phase. The milestones, which
								guard the transition from one phase to
								another, will provide&#xD; checkpoints
								if these goals are satisfied.&amp;nbsp;
								Revisit the plan to see if you should
								change the focus of iterations to&#xD;
								allow more rapid completion
								of&amp;nbsp;certain phases.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Map roles to team members"
							briefDescription="" id="_F2dQYABjEdqHlpDr8LcRqg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; The project manager assigns
								project members (people) to roles
								according to a table like this:&lt;br
								/>&#xD; &lt;br />&#xD; &lt;/p>&#xD;
								&lt;table style=&quot;WIDTH: 227px;
								HEIGHT: 116px&quot;
								cellspacing=&quot;2&quot;
								cellpadding=&quot;2&quot;
								width=&quot;227&quot;
								border=&quot;2&quot;>&#xD;
								&lt;tbody>&#xD; &lt;tr>&#xD;
								&lt;td>&#xD; &lt;strong>Team
								Member&amp;nbsp;&lt;/strong> &#xD;
								&lt;/td>&#xD; &lt;td>&#xD;
								&lt;strong>Analyst&lt;/strong> &#xD;
								&lt;/td>&#xD; &lt;td>&#xD;
								&lt;strong>Developer&lt;/strong>&amp;nbsp;&#xD;
								&lt;/td>&#xD; &lt;/tr>&#xD; &lt;tr>&#xD;
								&lt;td>&#xD; John&#xD; &lt;/td>&#xD;
								&lt;td>&#xD;
								&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
								X&#xD; &lt;/td>&#xD; &lt;td>&#xD;
								&lt;/td>&#xD; &lt;/tr>&#xD; &lt;tr>&#xD;
								&lt;td>&#xD;
								Judy&amp;nbsp;&amp;nbsp;&#xD;
								&lt;/td>&#xD; &lt;td>&#xD; &lt;/td>&#xD;
								&lt;td>&#xD;
								&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
								X&#xD; &lt;/td>&#xD; &lt;/tr>&#xD;
								&lt;tr>&#xD; &lt;td>&#xD;
								Jim&amp;nbsp;&#xD; &lt;/td>&#xD;
								&lt;td>&#xD;
								&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
								X&#xD; &lt;/td>&#xD; &lt;td>&#xD;
								&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
								X&#xD; &lt;/td>&#xD; &lt;/tr>&#xD;
								&lt;/tbody>&#xD; &lt;/table>&#xD; &lt;br
								/>&#xD; &lt;p>&#xD; The project manager
								needs to make sure that the roles are
								staffed according to skills and
								interests and that every role&#xD; is
								covered.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Tune and get concurrence on the plan" briefDescription=""
							id="_toVK0E5fEdu3aqt7VHtzgw" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								Gain agreement with stakeholders and the
								rest of the project team regarding the
								order of objectives and the duration of
								the&#xD; project and make adjustments as
								necessary.
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[To describe a roadmap that provides direction to the team and continually adapt it based on feedback and changes in the
environment.]]></Purpose>
					</Presentation>
					<Concept>_HNxbwMBJEdqSgKaj2SZBmg</Concept>
					<Concept>_VNxL4ACsEdu8m4dIntu6jA</Concept>
					<Concept>_lam4ADkBEduxovfWMDsntw</Concept>
					<Guideline>_CGHskBEdEdqY7JB6N6CW2w</Guideline>
					<PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_rGNWsCbSEdqh1LYUOGRh2A
					</MandatoryInput>
					<Output>_0a6vcMlgEdmt3adZL5Dmdw</Output>
					<Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
					<Output>_Ckay8Cc_EduIsqH1Q6ZuqA</Output>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0VxJsMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0ZM4MclgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0YDosMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0a6vcMlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_Ckay8Cc_EduIsqH1Q6ZuqA
					</OptionalInput>
					<OptionalInput>
						_0bA2EMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="assess_results"
					briefDescription="Determine success or failure of the iteration. Apply the lessons learned to modify the project or improve the process."
					id="_0l53cMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Assess Results" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="assess_results,_0l53cMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_a3uz4LBYEdm7Eph_l9Cn9w" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-22T09:12:39" changeDescription=""
						version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Gather stakeholder feedback"
							briefDescription="" id="_PABe4MQIEdmaiYJe8-Eaqg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; The team should demonstrate
								the product to customer, end-users, and
								other &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role:
								Stakeholder&lt;/a>s&amp;nbsp;to collect
								their feedback, or better yet, have end
								users to use the product themselves.
								This&#xD; should be done throughout the
								iteration, or at least in a separate
								session towards the end of the
								iteration. Record&#xD; requested changes
								to the product in the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
								Work Items List&lt;/a>&amp;nbsp;for
								later prioritization. Factor in feedback
								in&#xD; overall iteration
								assessment.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Assess results"
							briefDescription="" id="_o28GgMMsEdmdo9HxCRR_Gw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Towards the end of the
								iteration, the team should jointly
								assess whether the objectives and
								evaluation criteria&#xD; established in
								the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/iteration_plan,_0aQBEslgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0aQBEslgEdmt3adZL5Dmdw&quot;>Artifact:
								Iteration Plan&lt;/a>&amp;nbsp;were met,
								and whether the team adhered to the&#xD;
								iteration plan and completed all the
								planned work items. Below&amp;nbsp;are
								some sample questions that the team can
								ask&#xD; themselves as a part of the
								assessment:&#xD; &lt;/p>&#xD;
								&lt;ul>&#xD; &lt;li>&#xD; &lt;div
								style=&quot;MARGIN-LEFT: 2em;
								MARGIN-RIGHT: 0px&quot;>&#xD; Were the
								defined goals and objectives met? Did
								the release meet its functionality and
								quality goals? Did the&#xD; release meet
								performance and capacity goals?&#xD;
								&lt;/div>&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; &lt;div
								style=&quot;MARGIN-LEFT: 2em;
								MARGIN-RIGHT: 0px; LIST-STYLE-TYPE:
								none&quot;>&#xD; Were risks reduced or
								eliminated? Can we identify new
								risks?&#xD; &lt;/div>&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; &lt;div
								style=&quot;MARGIN-LEFT: 2em;
								MARGIN-RIGHT: 0px; LIST-STYLE-TYPE:
								none&quot;>&#xD; Were all planned work
								items addressed? What was the teams
								velocity relative to plan?&#xD;
								&lt;/div>&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; &lt;div
								style=&quot;MARGIN-LEFT: 2em;
								MARGIN-RIGHT: 0px; LIST-STYLE-TYPE:
								none&quot;>&#xD; Did the end users
								provide favorable feedback on what we
								built in this iteration?&#xD;
								&lt;/div>&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; &lt;div
								style=&quot;MARGIN-LEFT: 2em;
								MARGIN-RIGHT: 0px; LIST-STYLE-TYPE:
								none&quot;>&#xD; Are changes to the
								project plan required?&#xD;
								&lt;/div>&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; &lt;div
								style=&quot;MARGIN-LEFT: 2em;
								MARGIN-RIGHT: 0px&quot;>&#xD; What
								portion of the current release will be
								baselined? What portion will need to be
								reworked?&#xD; &lt;/div>&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; &lt;div
								style=&quot;MARGIN-LEFT: 2em;
								MARGIN-RIGHT: 0px&quot;>&#xD; Have there
								been external changes such as changes in
								the marketplace, in the user community,
								or in the&#xD; requirements?&#xD;
								&lt;/div>&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;p
								dir=&quot;ltr&quot;>&#xD; The
								assessments should to the extent
								possible be based on objective measures.
								For example, to assess that a given&#xD;
								requirement is developed, the team
								should ensure that the corresponding
								test cases were successfully run against
								it,&#xD; rather than considering it done
								when the implementation is done.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Perform a retrospective"
							briefDescription="" id="_iL7cQEpqEdup0IY9DKDPkg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Review the approach taken to
								development and team collaboration, the
								effectiveness of the development
								environment, the&#xD; suitability of the
								working environment, and other factors
								and discuss what things went well, what
								could have gone&#xD; better, and how
								things could be changed to deliver
								better results. Capture actions to be
								taken to improve the&#xD; development
								approach for next iteration.&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section
							name="Refine project scope and duration" briefDescription=""
							id="_YdoAAM1DEdmLoKw_mVTvhQ" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Depending on the results of
								the&amp;nbsp;assessment and the
								stakeholders' feedback, the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Role:
								Project Manager&lt;/a>&amp;nbsp;could
								need to revise the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0a6vcMlgEdmt3adZL5Dmdw&quot;>Artifact:
								Project Plan&lt;/a>&amp;nbsp;to adapt to
								those changes. If a change affects
								defined&#xD; project milestones, the
								project manager should consult with the
								stakeholders before committing to the
								changes.&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Necessary changes can also encompass the
								need to acquire new resources, to absorb
								an unplanned effort increase, or to&#xD;
								implement a specific change
								request.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Close-out phase"
							briefDescription="" id="_wp2CIMMsEdmdo9HxCRR_Gw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; This step is optional and
								must be performed only when the
								assessment period coincide with the end
								of a phase.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; The end of&amp;nbsp;a phase
								represents a point of synchronization of
								technical and management expectations
								and closure for&#xD; a project. In
								iterative development, it
								coincides&amp;nbsp;with the end of an
								iteration. However, phase ends mark a
								point&#xD; when it is possible to
								consider re-scoping and even
								re-contracting a project. For example,
								the inception phase is&#xD; exploratory
								and may be appropriately performed under
								a time-and-materials contract or a
								cost-plus type of contract. The&#xD;
								elaboration phase could be done as a
								fixed-price contract or a cost-plus
								contract, depending on the extent to
								which the&#xD; development is unusual.
								By the construction and transition
								phases, enough is known about the system
								that fixed-price&#xD; contracts are more
								appealing to the acquirer and
								vendor.&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								The phase end is marked by a major
								milestone and a corresponding milestone
								review. The degree of formality of&#xD;
								these&amp;nbsp;reviews depends on the
								project. The important thing is to take
								advantage&amp;nbsp;of this milestone
								review to&#xD; achieve agreement among
								all stakeholders on the current state of
								the project. For more information, refer
								to &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html&quot;
								guid=&quot;_HNxbwMBJEdqSgKaj2SZBmg&quot;>Concept:
								Milestones&lt;/a>.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Close-out project"
							briefDescription="" id="_1YHH8DLqEdueZPye-FaNgA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; This step is optional and
								must be performed only when the
								assessment period coincide with the end
								of the project.&#xD; &lt;/p>&#xD;
								&lt;p>&#xD; Involve the team and
								stakeholders in&amp;nbsp;a final
								assessment for project acceptance which,
								if successful, marks the&#xD; point when
								the customer accepts ownership of the
								software product. Gather and record the
								lessons learned to be used in&#xD;
								future projects. Complete the close-out
								of the project by disposing of the
								remaining assets and reassigning
								the&#xD; remaining staff.&#xD; &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[Capture and communicate whether the project is on track, requires corrective actions, and whether there are opportunities
for improvement.<br />]]></Purpose>
					</Presentation>
					<Concept>_HNxbwMBJEdqSgKaj2SZBmg</Concept>
					<PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0aQBEslgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_0a6vcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_rGNWsCbSEdqh1LYUOGRh2A
					</MandatoryInput>
					<Output>_0bA2EMlgEdmt3adZL5Dmdw</Output>
					<Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
					<Output>_0a6vcMlgEdmt3adZL5Dmdw</Output>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0dsWoMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0VxJsMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0YDosMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0ZM4MclgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0bA2EMlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_0ZlSsMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept" name="metrics"
					briefDescription="A metric is the interpretation of a measurable attribute(s) of an entity."
					id="_0mYYkMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Metrics" variabilityType="na">
					<Presentation name="metrics,_0mYYkMlgEdmt3adZL5Dmdw"
						briefDescription="" id="_7ygXoMM3EdmSIPI87WLu3g" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-08-30T02:19:12"
						changeDescription="" version="">
						<MainDescription><![CDATA[<h3>
    What is a Metric?
</h3>
<p>
    We distinguish between measure and metric.&nbsp; To clarify, let’s start by defining what is meant by measure and by
    metric.
</p>
<ul>
    <li>
        <strong>Measure</strong>:&nbsp;a raw data item that is directly measured and that will be used to calculate a
        metric.&nbsp;
    </li>
    <li>
        <strong>Metric</strong>:&nbsp;an interpretation of a measure or a set of measures that you use to guide your
        project.
    </li>
</ul>
<p>
    For example, recording how many test cases have passed and how many have failed are <strong>measures</strong>.
    Interpreting what level of quality this indicates and how it reflects the team's progress within the current iteration
    is a <strong>metric</strong>.
</p>
<h3>
    Why Measure?
</h3>
<p>
    Measurements will mainly help you to:
</p>
<ul>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Communicate effectively</strong>. Measurement supports effective communication among team members and
            project stakeholders.&nbsp;
        </div>
    </li>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Identify and correct problems early</strong>. Measurement enables you to identify and manage potential
            problems early in the development lifecycle.&nbsp;
        </div>
    </li>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Make informed trade-offs</strong>. Measurement helps assess objectively the impact of decisions,
            helping managers to make trade-off decisions to best meet project goals.&nbsp;&nbsp;
        </div>
    </li>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Tune estimations</strong>. Recording schedule, progress, and expenditures for projects will help team
            members to make more reliable estimations in the future.
        </div>
    </li>
</ul>
<h3 align="left">
    Potential Challenges
</h3>
<p align="left">
    There are several dangers when it comes to metrics:
</p>
<div style="margin-left: 2em">
    <ul>
        <li>
            <div align="left">
                They can be too costly.&nbsp;The benefit provided by the metric must exceed the cost of collecting
                it.&nbsp;Keep your measurements simple and easy to collect.
            </div>
        </li>
        <li>
            <div align="left">
                They’re a poor substitute for communication.&nbsp;The best way to determine the current status of a project
                is to ask the people involved, not to look at a report summarizing key metrics.
            </div>
        </li>
        <li>
            <div align="left">
                They can be misleading.&nbsp; No metric or collection of metrics is perfect.&nbsp;Furthermore, the
                measurements upon which they are based can be manipulated by the people capturing them.&nbsp;Don’t rely
                simply upon metrics to manage a project.<br />
            </div>
        </li>
    </ul>
</div>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="agile_estimation"
					briefDescription="This guideline explains three key concepts, and their interrelationships, for doing agile estimation; estimation of size, velocity, and estimation of effort."
					id="_CGHskBEdEdqY7JB6N6CW2w" orderingGuide="" suppressed="false"
					presentationName="Agile Estimation" variabilityType="na">
					<Presentation
						name="agile_estimation,_CGHskBEdEdqY7JB6N6CW2w"
						briefDescription="" id="_CYRMgBEdEdqY7JB6N6CW2w" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-20T09:25:58"
						changeDescription="" version="">
						<MainDescription><![CDATA[<h3>
    Agile Estimation
</h3>
<p>
    There are three main concepts you need to understand to do agile estimation:
</p>
<ul>
    <li>
        <strong>Estimation of Size</strong> gives you a high-level estimate for the work item, typically measured using a
        neutral unit such as points
    </li>
    <li>
        <strong>Velocity</strong> tells us how many points this project team can deliver within an iteration;
    </li>
    <li>
        <strong>Estimation of Effort</strong> translates the size (measured in points) to a detailed estimate of effort
        typically using the units of Actual Days or Actual Hours. The estimation of effort indicates how long it will take
        the team member(s) assigned to the work item to do the work.
    </li>
</ul>
<h4>
    Estimation of Size
</h4>
<p>
    Agile estimation of size is typically done using a relative measure called <strong>points</strong>.&nbsp; You decide
    how big a point is, and based on that size, you determine how many points each work item is. To make estimation go
    fast, you want to use only full points, 1, 2, 3, 5, 8, and so on, rather than fractions of a point, such 0.25, or 1.65
    points. To get started, look at 10 or so representative work items, give the smallest the size of one point, and then
    go through all other work items and give them a relative point estimate based on that point. Note that points are used
    for high-level estimates, so do not spend too much time on any one item. This is especially true for work items of
    lower priority, since you would then waste effort on things that are unlikely to be addressed within the current
    iteration.
</p>
<p>
    A key benefit of points is that they are neutral and relative. Let’s say that Ann is 3 times more productive than Jack.
    If Ann and Jack agree that work item A is worth 1 point, and they both think work item B is roughly 5 times as big,
    they can rapidly agree that work item B is worth 5 points. Ann may however think work item B can be done in 12 hours,
    while Jack thinks it can be done in 36 hours. That is fine, they may disagree about the actual effort required to do
    it, but we do not care at this point in time, we only want the team to agree on the relative size. We will later use
    Velocity to determine how much ‘size’, or how many points, the team can take on within an iteration.
</p>
<p>
    One project team may say that a work item of a certain size is worth 1 point. Another project team would estimate the
    same sized work item to be worth 5 points. That is fine, as long as you are consistent within the same project. You
    hence want to make sure that ideally the entire team is involved in assessing size, or at least that the same people
    are involved in all your size estimates, to ensure consistency within your project. We will see how the concept of
    velocity will fix also this discrepancy in a point meaning different things to different project teams.
</p>
<p>
    You can also use other measures of size, where the most common alternative is Ideal Days. See for example [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">COH05</a>] for more information.
</p>
<h4>
    Velocity
</h4>
<p>
    Velocity is a key metric used for iteration planning. It indicates how many points are delivered upon within an
    iteration for a certain team and project. As an example, a team may plan for taking on 20 points in the first
    iteration. At the end of the iteration, they noticed that they only delivered upon 14 points, their velocity was hence
    14. For the next iteration, they may plan for fewer points, let’s say 18 points, since they think they can do a little
    better than in previous iteration. In this iteration, they delivered 17 points, giving them a velocity of 17.
</p>
<p>
    You should expect the velocity to change from iteration to iteration. Some iterations go smoother than others, and
    points are not always identical in terms of effort. Some team members are more effective than others, and some problems
    end up being harder than others. Also, changes to the team structure, learning new skills, changes to the tool
    environment, better teaming, or more overhead with meetings or tasks external to the project will all impact velocity.
    In general, velocity typically goes up during the duration of the project, as the team builds skills and becomes more
    cohesive.
</p>
<p>
    Velocity compensates for differences between teams in terms of how big a point is. Let’s assume that project team Alpha
    and project team Beta are equally efficient in developing software, and they run the same project in parallel. Team
    Alpha, however, assesses all work items as being worth 3 times as many points. Team Alpha assesses work item A, B, C,
    and D to correspond to 30 points, and team Beta estimates the same work items to correspond to 10 points. Both teams
    deliver upon those 4 work items in the next iteration, giving team Alpha a velocity of 30, and team Beta a velocity of
    10. It may sound as if team Alpha is more effective, but let’s look at what happens when they plan the next iteration.
    They both want to take on work item E-H, which team Alpha has estimated to be 30 points, and team Beta as normal has
    estimated to be 1/3 as many points, or 10 points. Since a team can typically take on as many points as indicated by
    their velocity, they can both take on all of E-H. The end result is that it does not matter how big a point is, as long
    as you are consistent within your team.
</p>
<p>
    Velocity also averages out the efficiency of different team members. Let’s look at an example; Let’s assume that Ann
    always works 3 times as fast as Jack and Jane. Ann will perhaps deliver 9 points per iteration, and Jack and Jane 3
    points each per iteration. The velocity of that 3-person team will be 15 points. As mentioned above, Ann and Jack may
    not agree on how much effort is associated with a work item, but they can agree on how many points it is worth. Since
    the team velocity is 15, the velocity will automatically translate the point estimate to how much work can be taken on.
    As you switch team members, or as team members become more or less efficient, your velocity will change, and you can
    hence take on more or less points. This does however not require you to change the estimate of the size. The size is
    still the same, and the velocity will help you to calculate how much size you can deliver upon with the team at hand
    for that iteration.
</p>
<h4>
    Estimation of Effort
</h4>
<p>
    As you plan an iteration, you will take on a work item, such as detail, design, implement and test a scenario, which
    may be sized to 5 points. Typically you at this time break down this still reasonably big work item into a number of
    smaller work items, such as 4 separate work items for Detailing, Designing, Implementing and Testing Server portion,
    and Implementing and Testing Client portion of the scenario. You would now do a detailed estimate of the actual effort,
    measured in hours or days, associated with each of those 4 tasks. This estimate should be done by the person assigned
    to do the task. In this case you may assign the following actual estimates (with person responsible within
    parenthesis):
</p>
<ul>
    <li>
        Detailing scenario (Ann): 4 hours
    </li>
    <li>
        Designing scenario (Ann and Jack):&nbsp; 6 hours
    </li>
    <li>
        Implementing and Testing Server portion of scenario (Jack): 22 hours&nbsp;
    </li>
    <li>
        Implementing and Testing Client portion of scenario (Ann): 12 hours
    </li>
    <li>
        <strong>Total Effort Estimate for Scenario:</strong> 44 hours
    </li>
</ul>
<p>
    If other people would be assigned to the tasks, the estimated actual hours could be quite different. There is hence no
    point doing detailed estimates until you know who will do the work, and what actual problems you will run into. Often,
    you have to do some level of analysis and design of the work item before you can come up with a reasonable estimate.
    Remember that estimates are still estimates, and a person assigned to a task should feel free (and be encouraged) to
    re-estimate the effort required to complete the task, so we have a realistic view of progress within an
    iteration.<br />
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="manage_iteration"
					briefDescription="Assess project status and identify any blocking issues and/or opportunities. Identify and manage exceptions, problems and risks. Communicate project status."
					id="_8S2aICbYEdqh1LYUOGRh2A" orderingGuide="" suppressed="false"
					presentationName="Manage Iteration" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="manage_iteration,_8S2aICbYEdqh1LYUOGRh2A"
						briefDescription="" id="-PbfqVxB_j9KN-Jx39_pEUA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-08-31T03:45:37"
						changeDescription="" version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Capture status"
							briefDescription="" id="_OE65ICuxEdqTIKp3l5PtzQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; The project manager needs to
								continuously monitor the project to
								ensure its appropriate progress, and to
								enable the&#xD; team to react as soon as
								possible to any change. Many alternative
								means may be used to track the
								status:&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
								&lt;li>&#xD; Quick, daily meetings with
								the entire project team, also called
								&quot;scrum meetings” are useful to
								understand what team&#xD; members have
								accomplished since last meeting, and
								what they plan to accomplish before the
								next meeting. It also&#xD; allows the
								team to identify any blocking issues.
								See &lt;a
								class=&quot;elementLinkWithUserText&quot;
								href=&quot;./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html&quot;
								guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[SCH04]&lt;/a>&amp;nbsp;for
								guidance on scrum meetings.&#xD;
								&lt;/li>&#xD; &lt;li>&#xD; Basic
								metrics, ideally automatically generated
								from the tools at hand, or manually
								assembled. The &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0a6vcMlgEdmt3adZL5Dmdw&quot;>Artifact:
								Project Plan&lt;/a>&amp;nbsp;should
								outline which metrics the project should
								use.&#xD; Examples of such metrics
								include &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/reports/iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA.html&quot;
								guid=&quot;_uAzgkDg3Edu4E8ZdmlYjtA&quot;>Report:
								Iteration Burndown&lt;/a>&amp;nbsp;and
								&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/reports/project_burndown,_ePrt8Dj3EduxovfWMDsntw.html&quot;
								guid=&quot;_ePrt8Dj3EduxovfWMDsntw&quot;>Report:
								Project Burndown&lt;/a>&amp;nbsp;charts,
								which are reports on the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
								Work Items List&lt;/a>. See also &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/metrics,_0mYYkMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0mYYkMlgEdmt3adZL5Dmdw&quot;>Concept:
								Metrics&lt;/a>&amp;nbsp;for more
								information.&#xD; &lt;/li>&#xD;
								&lt;/ul>&#xD; &lt;br />
							</Description>
						</Section>
						<Section name="Communicate status"
							briefDescription="" id="_ztF0UCuxEdqTIKp3l5PtzQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Communicating project status
								is as important as gathering it.
								Communication is usually done at two
								levels: the task&#xD; level and project
								level.&#xD; &lt;/p>&#xD; &lt;ul>&#xD;
								&lt;li>&#xD; &lt;strong>Task Level –
								Communicated within the project
								team:&lt;/strong> status can be
								communicated through quick, daily&#xD;
								meetings. This allows you to combine the
								status capturing with the status
								communications.&#xD; &lt;/li>&#xD;
								&lt;li>&#xD; &lt;strong>Project Level –
								Communicated to the stakeholders and the
								project team:&lt;/strong> status is
								usually&#xD; communicated through core
								metrics rather than detailed
								information. This can be done through
								meetings, e-mail, or&#xD; Web
								publishing.&#xD; &lt;/li>&#xD; &lt;/ul>
							</Description>
						</Section>
						<Section name="Handle exceptions and problems"
							briefDescription="" id="_oIZdkCbZEdqh1LYUOGRh2A" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; One of the project manager's
								key responsibilities is to know about
								the project team's problems and issues.
								The manager&#xD; needs to focus on
								problems that are blocking progress. A
								quick, daily meeting is usually a good
								way to monitor those&#xD; problems and
								issues.&#xD; &lt;/p>&#xD; &lt;p>&#xD;
								Identify the cause and impact of
								problems and exceptions as they arise.
								Identify possible solutions for problems
								that&#xD; have an immediate impact on
								the short-term goals and objectives and
								identify who needs to be involved in
								implementing&#xD; the solution. Then,
								define the corrective actions and
								implement them.&amp;nbsp;&lt;br />&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Identify and manage risks"
							briefDescription="" id="_xiFJwCbZEdqh1LYUOGRh2A" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Identify risks as soon as
								the project starts and continue
								identifying and managing risks
								throughout the project. The&#xD; risk
								list should be revisited weekly, or as a
								minimum once per iteration, see &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept:
								Risk&lt;/a>&amp;nbsp;and &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/risk_list,_Ckay8Cc_EduIsqH1Q6ZuqA.html&quot;
								guid=&quot;_Ckay8Cc_EduIsqH1Q6ZuqA&quot;>Artifact:
								Risk List&lt;/a>&amp;nbsp;for more
								details. The entire team should be
								involved in&#xD; identifying and
								mitigating risk.&#xD; &lt;/p>
							</Description>
						</Section>
						<Section name="Reprioritize work as needed"
							briefDescription="" id="_Br6VECuxEdqTIKp3l5PtzQ" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								When a team is falling significantly
								behind, or critical problems occur, it
								may be necessary to reprioritize tasks
								to&#xD; ensure that the team delivers a
								useful product increment by the end of
								the iteration, while maximizing
								stakeholder value.&#xD; In these rare
								cases, the project manager should work
								with the team and stakeholders on
								revising the iteration plan and, as&#xD;
								necessary, reduce the emphasis on less
								critical tasks.
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p>
    Identify blocking issues and/or opportunities early to take action and keep the project on track.
</p>]]></Purpose>
					</Presentation>
					<Concept>_0bsLgMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_VNxL4ACsEdu8m4dIntu6jA</Concept>
					<Concept>_0mYYkMlgEdmt3adZL5Dmdw</Concept>
					<Guideline>__yQQ4L6REdqti4GwqTkbsQ</Guideline>
					<PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0aQBEslgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_0a6vcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_rGNWsCbSEdqh1LYUOGRh2A
					</MandatoryInput>
					<MandatoryInput>
						_Ckay8Cc_EduIsqH1Q6ZuqA
					</MandatoryInput>
					<Output>_0aQBEslgEdmt3adZL5Dmdw</Output>
					<Output>_0a6vcMlgEdmt3adZL5Dmdw</Output>
					<Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
					<Output>_Ckay8Cc_EduIsqH1Q6ZuqA</Output>
					<AdditionallyPerformedBy>
						_0VxJsMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0ZM4MclgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0YDosMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0dsWoMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
				</ContentElement>
				<ContentElement xsi:type="uma:Task"
					name="plan_iteration"
					briefDescription="Plan the scope and responsibilities for a single iteration."
					id="_0keUEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Plan Iteration" variabilityType="na">
					<Presentation xsi:type="uma:TaskDescription"
						name="plan_iteration,_0keUEMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_Wk7noKe1EdmGSrcKGOYDGg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-08T01:29:53" changeDescription=""
						version="1.0.0">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section name="Define the iteration objectives"
							briefDescription="" id="_CtKCMMBHEdqSgKaj2SZBmg" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; At the beginning of an
								iteration, the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Role:
								Project Manager&lt;/a>&amp;nbsp;works
								with the team to define 1-5 objectives.
								These objectives should be a refinement
								of the&#xD; iteration objectives found
								in the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0a6vcMlgEdmt3adZL5Dmdw&quot;>Artifact:
								Project Plan&lt;/a>, and should provide
								high-level direction to what should
								be&#xD; targeted for the iteration. The
								objectives should be driven based on
								&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;
								guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role:
								Stakeholder&lt;/a>&amp;nbsp;priorities,
								and&amp;nbsp;will be revised as the
								iteration plan is finalized. The
								objectives are&#xD; usually defined as
								high-level capabilities or scenarios
								that need to be implemented and tested
								during the&#xD; iteration.&lt;br />&#xD;
								&lt;/p>
							</Description>
						</Section>
						<Section name="Produce detailed plan"
							briefDescription="" id="_307v0MMsEdmdo9HxCRR_Gw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								The &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Role:
								Project Manager&lt;/a> works with the
								rest of the team, and especially the
								project&#xD; stakeholders,&amp;nbsp;to
								identify the high-priority work items
								from the &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;
								guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact:
								Work Items List&lt;/a> to be addressed
								within the iteration. The
								high-level&#xD; objectives provide
								guidance on what work items should be
								considered. The team should break down
								work items so they fit&#xD; within the
								iteration as necessary. Actual effort to
								complete each Work Item should be
								estimated. When a team has decided
								to&#xD; take on a Work Item, it will
								assign the work to one or several team
								members. Ideally, this is done by team
								members signing&#xD; up to do the work,
								since this makes people motivated and
								committed to doing the job, but based on
								culture, you may instead&#xD; have the
								project manager assign the work.
							</Description>
						</Section>
						<Section name="Define evaluation criteria"
							briefDescription="" id="_7Hqr4MMsEdmdo9HxCRR_Gw" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Each iteration should
								include testing as a part of the
								evaluation, and the test objectives and
								test cases needs to be&#xD; detailed.
								Other evaluation criteria may include
								successful demonstrations to key
								stakeholders, or favorable usage by
								a&#xD; small group of target
								users.&lt;br />&#xD; &lt;/p>
							</Description>
						</Section>
						<Alternatives></Alternatives>
						<Purpose><![CDATA[<p class="MsoNormal" style="MARGIN: 0in 0in 0pt">
    Develop a fine-grained plan for a single iteration, identifying the goals and evaluation criteria of an iteration
    (usually the next one).
</p>]]></Purpose>
					</Presentation>
					<Concept>_lam4ADkBEduxovfWMDsntw</Concept>
					<Guideline>_0auiMMlgEdmt3adZL5Dmdw</Guideline>
					<Guideline>_CGHskBEdEdqY7JB6N6CW2w</Guideline>
					<Guideline>__yQQ4L6REdqti4GwqTkbsQ</Guideline>
					<Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
					<PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
					<MandatoryInput>
						_0a6vcMlgEdmt3adZL5Dmdw
					</MandatoryInput>
					<MandatoryInput>
						_rGNWsCbSEdqh1LYUOGRh2A
					</MandatoryInput>
					<Output>_0aQBEslgEdmt3adZL5Dmdw</Output>
					<Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
					<AdditionallyPerformedBy>
						_0X9iEMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0VxJsMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0ZM4MclgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_0YDosMlgEdmt3adZL5Dmdw
					</AdditionallyPerformedBy>
					<AdditionallyPerformedBy>
						_dTa6gMAYEdqX-s4mWhkyqQ
					</AdditionallyPerformedBy>
					<OptionalInput>
						_0XAf0MlgEdmt3adZL5Dmdw
					</OptionalInput>
					<OptionalInput>
						_0WVxcMlgEdmt3adZL5Dmdw
					</OptionalInput>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="iteration_planning"
					briefDescription="The goal with iteration planning is to establish a few high-level objectives for what to accomplish during the iteration and produce a sufficiently detailed plan outlining who needs to do what."
					id="_0auiMMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Iteration Planning" variabilityType="na">
					<Presentation
						name="iteration_plan,_0auiMMlgEdmt3adZL5Dmdw" briefDescription=""
						id="_71hDkMPgEdmbOvqy4O0adg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-30T04:03:32" changeDescription=""
						version="">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The goal with iteration planning is to establish a few high-level objectives for what to accomplish during the
    iteration, produce a sufficiently detailed plan outlining who needs to do what to accomplish those objectives, and
    define how to assess that you accomplished what you set out to accomplish.
</p>
<p>
    Iteration planning is ideally done with the entire team in a meeting, typically lasting a few hours, at the beginning
    of an iteration. This ensures that the entire team understands what needs to be done, and they become committed to the
    success of the team. In some cases, it is preferred to have a smaller subset of people, such as the Project Manager, an
    Architect and an Analyst to meet in advance to prep the meeting with a draft iteration plan.
</p>
<h3>
    Define High-Level Objectives
</h3>
<p>
    A key aspect of an iteration is to focus the team on a short term deliverable of measurable value. To make sure that we
    do not loose focus on what to accomplish during the iteration, we document 1-5 high-level objectives. Typically, the
    project plan should outline one or several objectives for each iteration, and those objectives are used as a starting
    point. If you need to further detail or clarify the objectives as you plan you iteration, do so.
</p>
<p>
    The objectives are usually based on the following factors:
</p>
<ul>
    <li>
        <strong>Critical risks not yet mitigated:</strong> Iteration goals often include driving down the most critical
        risks.
    </li>
    <li>
        <strong>The time allocated to the iteration:</strong> Iterations are usually timeboxed, so the Project Manager must
        ensure that the goals for the iteration are realistic relative to the time and the resources allocated to the
        iteration.
    </li>
    <li>
        <strong>The highest priority features:</strong> requirements are prioritized to ensure that the critical features
        of the application will be developed, and tested, early on.
    </li>
</ul>
<h3>
    Produce an Iteration Plan
</h3>
<p>
    There is an Iteration Plan per iteration that should outline who will implement which Work Item in how long a time.
    Since iterations are time-boxed, we need to understand how big our ‘box” is by assessing how many hours of actual work
    can be taken on. Let’s assume that you have 6 team members, and you have 15 working days in your iteration, and you on
    average can do 5 actual hours of work per person and day. This will give you 6x15x5h = 450 hours of actual work. Note
    that the average team member only performs 4-6 hours of actual project work per day, with the rest being consumed by
    e-mails, meetings, and other overhead activities not directly related to the project.
</p>
<p>
    The team should then revisit and update priorities for all the high-priority items in the Work Items List, to make sure
    that an important Work Item is not missed that would otherwise fall just below the list of what can be taken on in this
    iteration.
</p>
<p>
    Pick the top-priority Work Item and see if it matches the objectives of the iteration. If it does, assess whether the
    Work Item is too big to take on within an iteration. If it is too big, break it down into smaller Work Items. Once the
    Work Item has been decomposed, the team determines whether to take on one or several child Work Items.
</p>
<p>
    <em>Example: The team would like to take on Work Item “Develop Use Case A”, but it would take roughly 300 hours to
    develop, so they feel that it is only necessary to do a subset of the use case to achieve their iteration objectives,
    allowing them to take on other high-priority Work Items. They divide the Work Item into 5 smaller work items
    representing different scenarios of use case A. The team decides to take on one out of the 5 identified scenarios in
    this iteration.</em>
</p>
<p>
    When a team has decided to take on a Work Item, it will assign the work to one or several team members. Ideally, this
    is done by team members signing up to do the work, since this makes people motivated and committed to doing the job,
    but based on culture, you may instead have the project manager assign the work.
</p>
<p>
    The next step is for team member(s) to assess how many actual hours or days it will take to do the work. Ideally, you
    want to have each work assignment to be no more than 2 days of work. If the Work Item is too big, consider breaking it
    down into smaller Work Items.
</p>
<p>
    The team sums up the actual estimate for each Work Item they have committed to, and checks if they can commit to any
    more work.
</p>
<p>
    <em>Example: Jack signed up to develop the chosen scenario for use case A. He thinks that it would take 50 hours, so he
    decided to develop the work into a set of tasks, and he asks other team members to help out with various subtasks:</em>
</p>
<ul>
    <li>
        <em>Detail the requirements (Jack) —5 hours</em>
    </li>
    <li>
        <em>Design the scenario (Jack, Ann, and David) —5 hours</em>
    </li>
    <li>
        <em>Implement and test the dB changes (Ann)—12 hours</em>
    </li>
    <li>
        <em>Implement and test the server portion (David)—16 hours</em>
    </li>
    <li>
        <em>Implement and test the client portion (Jack)—12 hours</em>
    </li>
    <li>
        <em>Total—50 hours</em>
    </li>
</ul>
<p>
    As Work Items are decomposed into smaller tasks, estimates can typically be improved. You also better come to
    understand what is involved, and whether other team member may be better suited to take on a subset of the task
</p>
<p>
    The team now determines whether they are willing to take on another Work Item by comparing actual hours signed up for
    to the actual hours available. In this case, the team has only signed up for 50 hours so far, and hence have another
    400 hours available
</p>
<h3>
    Define Evaluation Criteria
</h3>
<p>
    It is critical that it is clear to all team members and other stakeholders how you will measure success at the end of
    the iteration. Obvious success criteria should be that you can test the functionality implemented, and that no or few
    defects are detected. Having too many defects makes it impossible to use the functionality, and that will prevent
    meaningful feedback. Test objectives and test cases needs to be clearly outlined.
</p>
<p>
    There may however be other success criteria, such as that you demo the capabilities to a certain set of stakeholders
    with favorable review comments, or that you can successfully demonstrate or make available a tech preview at a
    conference.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept" name="milestones"
					briefDescription="The point at which an iteration or phase formally ends, thus providing a check-point for whether the project is ready to move to the next iteration or phase."
					id="_HNxbwMBJEdqSgKaj2SZBmg" orderingGuide="" suppressed="false"
					presentationName="Milestones" variabilityType="na">
					<Presentation
						name="milestones,_HNxbwMBJEdqSgKaj2SZBmg" briefDescription=""
						id="-DG8mYMnTGosWIxjPQFUoTA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-31T10:56:37" changeDescription=""
						version="">
						<MainDescription><![CDATA[<p>
    Milestones are&nbsp;the point at which an iteration or phase formally ends.
</p>
<p>
    From a&nbsp;development perspective, each iteration provides an increment of functionality to the product. Thus, the
    end of each iteration corresponds to a checkpoint where project team demonstrates to stakeholders that the objectives
    for that iteration have been met.
</p>
<p>
    However, there are four major milestones that provide evaluation criteria at the end of each phase. From a management
    perspective, the software lifecycle&nbsp;is decomposed over time into four sequential phases, each concluded by a major
    milestone [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">BOE95</a>].
</p>
<p class="banner" align="center">
    <img height="156" alt="Click on text for more information about phases and milestones" src="openup_basic/guidances/concepts/resources/co_phas1.gif"     width="406" border="0" />
</p>
<p class="picturetext" align="center">
    The phases and milestones of a project
</p>
<p>
    Each phase is essentially a span of time between two major milestones. At each phase-end an assessment is performed to
    determine whether the objectives of the phase have been met. A satisfactory assessment allows the project to move to
    the next phase.
</p>
<p>
    At the end of the <strong>Inception</strong> phase is the first major project milestone or <strong>Lifecycle Objectives
    Milestone</strong>. At this point, you examine the cost versus benefits of the project, and decide either to proceed
    with the project or to cancel it.
</p>
<p>
    At the end of the <strong>Elaboration</strong> phase is the second important project milestone, the <strong>Lifecycle
    Architecture Milestone</strong>. At this point, a baseline of requirements is agreed to, you examine the detailed
    system objectives and scope, the choice of architecture, and the resolution of the major risks.
</p>
<p>
    At the end of the <strong>Construction</strong> phase is the third important project milestone, the <strong>Initial
    Operational Capability Milestone</strong>. At this point, the product is ready to be handed over to the transition
    team. All functionality has been developed and all alpha testing (if any) has been completed. In addition to the
    software, a user manual has been developed, and there is a description of the current release. The product is ready for
    beta testing.
</p>
<p>
    At the end of the <strong>Transition</strong> phase is the fourth important project milestone, the <strong>Product
    Release Milestone</strong>. At this point, you decide if the objectives were met, and if you should start another
    development cycle. The Product Release Milestone is the result of the customer reviewing and accepting the project
    deliverables.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Guideline"
					name="assign_changes_to_iteration"
					briefDescription="This guideline promotes the best practice of isolating team members from disruptive changes during the current iteration. Change requests are reviewed and prioritized during the current iteration, but are not acted upon until assigned to a future iteration."
					id="__yQQ4L6REdqti4GwqTkbsQ" orderingGuide="" suppressed="false"
					presentationName="Assign Changes to an Iteration"
					variabilityType="na">
					<Presentation
						name="changes_at_iter_bound,__yQQ4L6REdqti4GwqTkbsQ"
						briefDescription="" id="-bUmvEAAtFf6B0aUCux8k9Q" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-22T07:37:52"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    Most iterative software development processes recommend that changes not be introduced during an iteration. The main
    idea is that the iterations should be short and with clearly defined scope so that they can be time-boxed.
</p>
<p>
    To limit scope within an iteration, change requests are reviewed and prioritized as soon as possible, but are not
    assigned for implementation until a future iteration via the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>.
</p>
<p>
    Since iterations are relatively short this should not cause undue delay in dealing with urgent and important change
    requests.
</p>
<p>
    Consider the following when choosing the future iteration where the change request will be addressed:
</p>
<ul>
    <li>
        Group similar change requests in the same iteration. For example multiple change requests focused on the same
        functionality or that are dependent on each other.
    </li>
    <li>
        Assign change requests that mitigate high risks to the earliest iteration possible.
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Concept"
					name="risk_management"
					briefDescription="This is a fundamental practice that project managers should consider in their projects. Identifying and minimizing risks early in the project lifecycle is key factor for project success."
					id="_VNxL4ACsEdu8m4dIntu6jA" orderingGuide="" suppressed="false"
					presentationName="Risk Management" variabilityType="na">
					<Presentation
						name="new_concept,_VNxL4ACsEdu8m4dIntu6jA" briefDescription=""
						id="-HhGIkAPjHSIxnPzI3cyDnQ" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-30T09:00:37" changeDescription=""
						version="">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Every project contains a&nbsp;part of uncertainty. The role of <strong>Risk Management</strong> is to deal with this
    uncertainty to try to understand its&nbsp;potential influence on the project. Project risks may be seen as threats or
    opportunities. The former means the risk should be mitigated (see risk management strategies below) where the latter
    means that&nbsp;taking a&nbsp;calculated risk may bring, for example, competitive advantage for a product or
    organization [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">SEI99</a>].
</p>
<p>
    Identify risks as soon as the project starts and continue identifying and managing risks throughout the project. A
    common mistake is to identify risks only at the beginning of the project and then only track the status of these
    initial risks. The risk list should be revisited weekly, or as a minimum once per iteration, to add any newly
    discovered risk.
</p>
<h3>
    Risks Prioritization
</h3>
<p>
    A good approach for prioritizing risks is to have an attribute called risk magnitude, a combination of the risk
    probability and the risk impact. Each iteration provides a chance&nbsp;for better understanding of stakeholder needs,
    the team capabilities, the technology at hand, and so on. As risks arise, capture, quantify&nbsp;and prioritize them.
    High level of magnitude risks are&nbsp;attacked first, thus&nbsp;improving the chances of project success and
    minimizing uncertainty. See <a class="elementLinkWithType" href="./../../../openup_basic/guidances/templates/risk_list,_MIUO0C8FEduzydamRseoUw.html" guid="_MIUO0C8FEduzydamRseoUw">Template: Risk List</a>&nbsp;for more information.
</p>
<h3>
    Risk Management Strategies
</h3>
<p>
    Once you have chosen a set of risks to focus on, choose a mitigation strategy, as described below. Then, identify and
    assign tasks to apply the strategy to the given risk. Follow up regularly on risk-mitigation actions. Try another
    strategy if your chosen strategy does not reduce the magnitude of a risk.
</p>
<p>
    Common mitigation strategies are:
</p>
<ul>
    <li>
        Risk avoidance: reorganize the project so that it cannot be affected by that risk. 
        <ul>
            <li>
                For example: you need to use a new framework. A risk avoidance strategy could be to drop this new framework
                and using another one that is well-known by the team.<br />
            </li>
        </ul>
    </li>
    <li>
        Risk transfer: reorganize the project so that someone or something else bears the risk. 
        <ul>
            <li>
                For example: the application you are developing need to communicate with a legacy system. Rather that
                taking the risk. A risk transfer strategy could be to make the legacy support team responsible of providing
                the APIs to access the legacy system.<br />
            </li>
        </ul>
    </li>
    <li>
        Risk mitigation: define a mitigation plan to&nbsp;reduce the probability or the impact of the risk. 
        <ul>
            <li>
                For example: you need to use a new middleware. A risk mitigation strategy could be to build a prototype
                using this new middleware to validate that&nbsp;it will provide the features you need for your
                application.<br />
            </li>
        </ul>
    </li>
    <li>
        Risk acceptance: decide to live with the risk, and define a contingency plan.
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            <li>
                For example: your integrator is the only one who knows how to integrate the different components of your
                application. A contingency plan could be to identify a resource on another project that you could bring on
                if your integrator is sick, leave the company, etc.
            </li>
        </ul>
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<Concept>_GXiogMvoEdqukPpotm3DYg</Concept>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact" name="risk_list"
					briefDescription="This artifact is a sorted list of known and open risks to the project, sorted in order of importance and associated with specific mitigation or contingency actions. "
					id="_Ckay8Cc_EduIsqH1Q6ZuqA" orderingGuide="" suppressed="false"
					presentationName="Risk List" variabilityType="na">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="risk_list,_Ckay8Cc_EduIsqH1Q6ZuqA" briefDescription=""
						id="-4VJ_0upihz-bR7VRlm63Vw" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-30T12:23:41" changeDescription=""
						version="" externalId="">
						<MainDescription><![CDATA[This list identifies, in decreasing order of priority, the events that could lead to a significant negative outcome. It
serves as a focal point for project activities and is the basis around which iterations are organized. <!--EndFragment-->]]></MainDescription>
						<KeyConsiderations><![CDATA[<p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
</p>]]></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose><![CDATA[To&nbsp;capture the perceived risks to the success of the project.]]></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions>
							&lt;h4>&#xD; Optional: list of risks
							captured in the project plan&#xD;
							&lt;/h4>&#xD; &lt;p>&#xD; In this approach
							you put the overall risk list in the project
							plan. The iteration plan will contain only
							the tasks you&#xD; will be doing during the
							iteration to mitigate the risks. This will
							ensure that the iteration plan contains
							only&#xD; iteration information. The project
							plan has to be revisited constantly as you
							updated risks.&#xD; &lt;/p>&#xD;
							&lt;h4>&#xD; Option: list of risks captured
							in&amp;nbsp;the iteration plan&#xD;
							&lt;/h4>&#xD; &lt;p>&#xD; In this approach
							you enter the overall risk list in the
							current iteration plan. This approach
							ensures that you look at&#xD; the risk list
							at each iteration, as it is part of your
							iteration plan. The only drawback is that
							your iteration plan&#xD; will contain
							information that is not relevant to the
							current iteration. All the risks you have
							not&amp;nbsp;mitigated&#xD; during the
							iteration&amp;nbsp;have to
							be&amp;nbsp;transferred to the next
							iteration plan.&#xD; &lt;/p>
						</RepresentationOptions>
					</Presentation>
					<Concept>_0bsLgMlgEdmt3adZL5Dmdw</Concept>
					<Concept>_VNxL4ACsEdu8m4dIntu6jA</Concept>
					<Checklist>_7BZa0DIdEduDTv4Y1akVTA</Checklist>
					<Template>_MIUO0C8FEduzydamRseoUw</Template>
				</ContentElement>
				<ContentElement xsi:type="uma:Checklist"
					name="risk_list"
					briefDescription="This checklist provides guidance on assessing that all possible risks have been considered in a project."
					id="_7BZa0DIdEduDTv4Y1akVTA" orderingGuide="" suppressed="false"
					presentationName="Risk List" variabilityType="na">
					<Presentation
						name="new_checklist,_7BZa0DIdEduDTv4Y1akVTA" briefDescription=""
						id="-gqNN4DnROmJpgKtrdguhpg" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-22T10:38:14" changeDescription=""
						version="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Section
							name="Have all potential risks to the project been identified"
							briefDescription="" id="_qO41ADIfEduDTv4Y1akVTA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Have you identified anything that can be
								on the path to the project success? List
								all potential risks, giving a
								description&#xD; and type (direct or
								indirect). See &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept:
								Risk&lt;/a>&amp;nbsp;for more
								information.
							</Description>
						</Section>
						<Section
							name="Are risks described without ambiguity" briefDescription=""
							id="_5RiSkDe2EduD7J48kKN20g" orderingGuide="" suppressed="false"
							sectionName="" variabilityType="na">
							<Description>
								Make sure you capture and describe risks
								in a clear, concise and unambiguous way.
								Also follow these rules when
								describing&#xD; mitigation strategies
								for risks. This will avoid unnecessary
								work and - more importantly
								-&amp;nbsp;that a risks are&#xD;
								effectively identified and managed.
							</Description>
						</Section>
						<Section
							name="What is the probability of happening and impact of each risk"
							briefDescription="" id="_2rpQoDIfEduDTv4Y1akVTA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								Determine&amp;nbsp;the probability of
								the risk happening and its impact on the
								project. This gives you the order of
								magnitude&#xD; of risks (probability x
								impact), allowing you to address the
								high magnitude risks early in the
								project. See &lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html&quot;
								guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept:
								Risk&lt;/a>&amp;nbsp;for more
								information.
							</Description>
						</Section>
						<Section
							name="Have the risks been properly prioritized and sorted"
							briefDescription="" id="_x-gbwDe0EduD7J48kKN20g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								The risk list is a prioritized list with
								the highest risk at the top and the rest
								in descending order.&amp;nbsp; They
								should be&#xD; sorted according to their
								magnitude of risk.
							</Description>
						</Section>
						<Section
							name="Are there interdependencies between risks"
							briefDescription="" id="_hSFaYDe3EduD7J48kKN20g" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p class=&quot;MsoNormal&quot;
								style=&quot;MARGIN: 0in 0in
								0pt&quot;>&#xD; &lt;span
								style=&quot;FONT-SIZE: 10pt;
								FONT-FAMILY: Arial&quot;>Make sure you
								establish interdependencies between
								risks as&#xD; appropriate. For example,
								the consequence of a risk happening may
								raise the probability of another risk
								happening, or&#xD; raise the impact that
								other risk brings to the project. If
								risks depend on each other, you may need
								to&#xD; mitigate&amp;nbsp;all
								interdependent risks&amp;nbsp;at the
								same time, or revisit the risk list to
								update the magnitude of&#xD; dependent
								risks.&lt;/span>&#xD; &lt;/p>
							</Description>
						</Section>
						<Section
							name="Is there a mitigation strategy for each risk"
							briefDescription="" id="_LATHgDIeEduDTv4Y1akVTA" orderingGuide=""
							suppressed="false" sectionName="" variabilityType="na">
							<Description>
								&lt;p>&#xD; Propose a mitigation
								strategy for each identified risk. You
								can either transfer the risk, avoid it,
								accept it or&#xD; mitigate it (by
								minimizing the probability&amp;nbsp;of
								happening or impact&amp;nbsp;that the
								risk brings to the project). See&#xD;
								&lt;a
								class=&quot;elementLinkWithType&quot;
								href=&quot;./../../../openup_basic/guidances/concepts/risk_management,_VNxL4ACsEdu8m4dIntu6jA.html&quot;
								guid=&quot;_VNxL4ACsEdu8m4dIntu6jA&quot;>Concept:
								Risk Management&lt;/a> for more
								information.&#xD; &lt;/p>
							</Description>
						</Section>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Role"
					name="pm_project_manager" briefDescription=""
					id="_dkAtkDR_EdursMWmT1aZyw" orderingGuide="" suppressed="false"
					presentationName=""
					variabilityBasedOnElement="_0a0o0MlgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<ResponsibleFor>
						_0a6vcMlgEdmt3adZL5Dmdw
					</ResponsibleFor>
					<ResponsibleFor>
						_Ckay8Cc_EduIsqH1Q6ZuqA
					</ResponsibleFor>
					<ResponsibleFor>
						_0bA2EMlgEdmt3adZL5Dmdw
					</ResponsibleFor>
				</ContentElement>
				<ContentElement xsi:type="uma:Example"
					name="work_items_list"
					briefDescription="This is an example of a partial Work Items List for a small team who just started to work on iteration 3."
					id="_nHomIDgzEdu4E8ZdmlYjtA" orderingGuide="" suppressed="false"
					presentationName="Work Items List" variabilityType="na">
					<Presentation
						name="work_items_list,_nHomIDgzEdu4E8ZdmlYjtA" briefDescription=""
						id="-qunTPN3vqTIGpELwajXpLA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-08-31T04:50:15" changeDescription=""
						version="">
						<MainDescription><![CDATA[<a href="openup_basic/guidances/examples/resources/ex_work_items_list.xls" target="_blank">ex_work_items_list.xls</a>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Report"
					name="iteration_burndown"
					briefDescription="The iteration burndown shows the trend for how much work is left to do within that iteration. "
					id="_uAzgkDg3Edu4E8ZdmlYjtA" orderingGuide="" suppressed="false"
					presentationName="Iteration Burndown" variabilityType="na">
					<Presentation
						name="iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA"
						briefDescription="" id="-Aw8p59vJ9rWsOV82rljQiQ" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-27T08:27:28"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    The iteration burndown is a primary tool for understanding the status of an iteration. It shows the trend for how much
    work is left to do within that iteration. This is done by adding up the estimated effort left for each of the work
    items to be addressed within the iteration, and showing how the estimated effort is changing over the duration of the
    iteration. The iteration backlog should be updated frequently, ideally daily.
</p>
<p>
    Factors that impact the team’s assessment of work left include:
</p>
<ul>
    <li>
        Work has been completed, which means that less work is left to do.
    </li>
    <li>
        The developer responsible for a work item changes their assessment of effort required to complete the work item.
        This should be expected, since we typically understand what it really takes to complete a task first when we have
        done a subset of the task. Especially, it is common that estimates of work left increases in the beginning of the
        iteration, especially for inexperienced teams, since they often underestimate efforts. As teams become more
        experienced, you would expect that they may still have to modify estimates, but the modifications are as frequently
        upward as downward.
    </li>
    <li>
        Estimated effort left can increase during the iteration, as a result of the team learning more about what needs to
        be done.
    </li>
</ul>
<p>
    Daily or frequent updates to the iteration burndown allows the team to react to changes, by for example cutting scope
    by removing work items from the iteration, by reducing the ambition level associated with a work item, or by finding
    more clever ways of approaching work items, such as having an expert team member help out with troubled work items.
</p>
<p>
    See <a href="openup_basic/guidances/reports/resources/ex_iteration_burndown.xls" target="_blank">ex_iteration_burndown.xls</a> for an example
    iteration burndown report.<br />
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Report"
					name="project_burndown"
					briefDescription="An effective way of communicating project progress."
					id="_ePrt8Dj3EduxovfWMDsntw" orderingGuide="" suppressed="false"
					presentationName="Project Burndown" variabilityType="na">
					<Presentation
						name="project_burndown,_ePrt8Dj3EduxovfWMDsntw"
						briefDescription="" id="-hrDndmFd0zexB0HNYX3gww" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-26T02:07:38"
						changeDescription="" version="1.0.0">
						<MainDescription><![CDATA[<p>
    Project burndown is usually communicated in graphical form.&nbsp;Project burndown is very useful to quickly communicate
    the overall project progress based on actual data and to diagnose a trend for the remainder of the project.&nbsp;
</p>
<p>
    The project burndown chart consists of two perspectives, the horizontal axis showing the iterations and the vertical
    axis indicating the remaining points from the work items list. Additionally the average burndown from previous
    iterations is calculated and a trend for the remainder of the project diagnosed and forecasted.
</p>
<p>
    Project burndown management is a enabling technique that allows direct linkage of iteration goals to work items. The
    project manager will use the project burndown information for communicating progress and trend to senior management.
</p>
See <a href="openup_basic/guidances/reports/resources/ex_project_burndown.xls" target="_blank">ex_project_burndown.xls</a>&nbsp;for an example of
project burndown.<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact"
					name="pm_work_items_list" briefDescription=""
					id="_sNoQ0Dn6Edu_y4hBImiwwQ" orderingGuide="" suppressed="false"
					presentationName=""
					variabilityBasedOnElement="_rGNWsCbSEdqh1LYUOGRh2A"
					variabilityType="contributes">
					<Presentation xsi:type="uma:ArtifactDescription"
						name=",_sNoQ0Dn6Edu_y4hBImiwwQ" briefDescription=""
						id="-fDVhZTkf1TqDyExbI9DM-w" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-07T11:41:14" changeDescription=""
						version="1.0.0" externalId="">
						<MainDescription><![CDATA[<p>
    Work Items should contain estimates, see <a class="elementLinkWithType" href="./../../openup_basic/guidances/guidelines/work_items_list,_7vEXEMA4EdqSgKaj2SZBmg.html" guid="_7vEXEMA4EdqSgKaj2SZBmg">Guideline: Work Items List</a>&nbsp;and <a class="elementLinkWithType" href="./../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html" guid="_CGHskBEdEdqY7JB6N6CW2w">Guideline: Agile Estimation</a>.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions></RepresentationOptions>
					</Presentation>
					<Guideline>_CGHskBEdEdqY7JB6N6CW2w</Guideline>
					<Example>_nHomIDgzEdu4E8ZdmlYjtA</Example>
					<Report>_ePrt8Dj3EduxovfWMDsntw</Report>
					<Report>_uAzgkDg3Edu4E8ZdmlYjtA</Report>
				</ContentElement>
				<ContentElement xsi:type="uma:Artifact"
					name="pm_iteration_plan" briefDescription=""
					id="_xWdL0Dn6Edu_y4hBImiwwQ" orderingGuide="" suppressed="false"
					presentationName=""
					variabilityBasedOnElement="_0aQBEslgEdmt3adZL5Dmdw"
					variabilityType="contributes">
					<Presentation xsi:type="uma:ArtifactDescription"
						name="pm_iteration_plan,_xWdL0Dn6Edu_y4hBImiwwQ"
						briefDescription="" id="-b9hejTMj8E7U4g2v80xDjA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-01T11:06:34"
						changeDescription="" version="" externalId="">
						<MainDescription></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<ImpactOfNotHaving></ImpactOfNotHaving>
						<Purpose></Purpose>
						<ReasonsForNotNeeding></ReasonsForNotNeeding>
						<BriefOutline></BriefOutline>
						<RepresentationOptions></RepresentationOptions>
					</Presentation>
					<Guideline>_0auiMMlgEdmt3adZL5Dmdw</Guideline>
					<Example>_TuNhIEE4EdulKujnGUuxbg</Example>
					<Report>_uAzgkDg3Edu4E8ZdmlYjtA</Report>
				</ContentElement>
				<ContentElement xsi:type="uma:Example"
					name="project_plan"
					briefDescription="This is an example of a project plan."
					id="_Nzv5kDoAEdusGsHODb-STA" orderingGuide="" suppressed="false"
					presentationName="Project Plan" variabilityType="na">
					<Presentation
						name="new_example,_Nzv5kDoAEdusGsHODb-STA" briefDescription=""
						id="-IdlCQXdDNYGrGJU4TBwvCA" orderingGuide="" suppressed="false"
						authors="" changeDate="2006-09-27T11:07:10" changeDescription=""
						version="1.0.0">
						<MainDescription><![CDATA[<p>
    This example is the actual project plan used for the development of OpenUP/Basic.
</p>
<p>
    <a href="openup_basic/guidances/examples/resources/project_plan.doc" target="_blank">project_plan.doc</a>
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
				<ContentElement xsi:type="uma:Example"
					name="iteration_plan"
					briefDescription="This is an example of an iteration plan for iteration 5 for a small team. In this example, the team has chosen not to list work items in the iteration plan. Instead, the team will search the work items list for work items assigned to iteration 5. This is the preferred solution when work items are managed in a tool that provides basic search capabilities."
					id="_TuNhIEE4EdulKujnGUuxbg" orderingGuide="" suppressed="false"
					presentationName="Iteration Plan" variabilityType="na">
					<Presentation name=",_TuNhIEE4EdulKujnGUuxbg"
						briefDescription="" id="-nDr0XNiUWBo6VS1YS6KAqA" orderingGuide=""
						suppressed="false" authors="" changeDate="2006-09-11T04:11:20"
						changeDescription="" version="">
						<MainDescription><![CDATA[<a href="openup_basic/guidances/examples/resources/ex_iteration_plan.doc" target="_blank">ex_iteration_plan.doc</a>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
				</ContentElement>
			</MethodPackage>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ProcessPackage"
			name="Phase Iteration Templates" briefDescription=""
			id="_bxcS4B_REdq3EKSIdbj-MA" orderingGuide="" suppressed="false"
			global="false">
			<MethodPackage xsi:type="uma:ProcessComponent"
				name="elaboration_phase_iteration" briefDescription=""
				id="_0rWYIMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				global="false" authors="" changeDescription="" version="">
				<Process xsi:type="uma:CapabilityPattern"
					name="elaboration_phase_iteration"
					briefDescription="This iteration template defines the activities (and associated roles and work  products) performed in a typical iteration in the Elaboration phase. Each activity  and related goals are described."
					id="_0sTaYMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Elaboration Phase Iteration"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="true" IsEnactable="false" variabilityType="na">
					<Presentation xsi:type="uma:ProcessDescription"
						name="" briefDescription="" id="_mtb_BPL5Edm6Nvont3uinw"
						orderingGuide="" suppressed="false" authors=""
						changeDescription="" version="" usageGuidance="" externalId="">
						<MainDescription><![CDATA[<h3> Introduction </h3>
<p> Most activities during a typical iteration in Elaboration phase happen in 
  parallel. Essentially, the main objectives for Elaboration are related to better 
  understanding the requirements, creating and establishing 
  a baseline for  the architecture for the system, and mitigating top-priority 
  risks. </p>
<p> The activities performed in a typical iteration during&nbsp;the 
  Elaboration phase are described below. </p>
<h4> Manage iteration </h4>
<p> This activity is performed throughout the project lifecycle. 
  The goal of this activity is to identify risks and issues early enough 
  that  they can be mitigated, to establish the goals for the iteration, 
  and to support the development team in reaching these goals. </p>
<p> The <a class="elementlinkwithusertext" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project 
  manager</a> and the team launche the iteration, allocating work items to team 
  members (some project teams will prefer to have members volunteer to perform 
  work). The project manager collaborates with the team to break down the work 
  items into development tasks to perform in that iteration. This provides a more 
  accurate estimate of time to spend on what can be realistically achieved. </p>
<p> As the iteration runs, the project manager performs 
  monitoring and control of&nbsp;the project  by regularly checking the 
  status of work completed, the work to do 
  next, and issues blocking the progress<strong>. 
  </strong>In some projects, this checking occurs 
  in daily meetings, which allows for a&nbsp;more precise&nbsp;understanding 
  of how the work in an iteration is progressing. As 
  needed, the&nbsp;team makes corrections to achieve what was planned. The overall 
  idea is that risks and issues are identified and managed throughout the iteration. 
  and everyone knows the project status.</p>
<p>The prioritization of work for a given iteration takes place. Project manager,&nbsp;<a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholders</a>, 
  and the remaining team members agree on what is supposed to be developed during 
  that iteration.</p>
<p>As in any other iteration assessment, demonstration of implemented functionality 
  planned for that iteration is the key success criterion. During iteration assessments 
  in Elaboration, though, keep the phase objectives in mind. As Elaboration iterations 
  are performed, an executable architecture evolves, and you establish a baseline 
  at the end of the phase. In addition, requirements are better understood and 
  detailed. Essential risks, including the architectural ones, have been mitigated. 
  These results&nbsp;help the project manager produce more accurate estimates 
  for the project schedule and cost.</p>
<h4> Manage requirements </h4>
<p> This activity is repeated throughout the project lifecycle. 
  The goal of this activity is to understand and prioritize stakeholder needs 
  and associated requirements for the system, and also to 
  capture these in a form that supports effective communication and collaboration 
  between the stakeholders and development team. </p>
<p> During the Elaboration phase, 
  requirements can still be captured and outlined as customer needs arise. The 
  prioritization of requirements determines when 
  new requirements are going to be implemented. High-risk, architecturally significant 
  requirements are detailed to the extent necessary to be 
  able to use that information  as input to architecture and development 
  activities in the current iteration, plus in planning 
  for the next iteration.</p>
<p><a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/test_case,_0ZS-0MlgEdmt3adZL5Dmdw.html" guid="_0ZS-0MlgEdmt3adZL5Dmdw">Test 
  cases</a> describe which&nbsp;requirements are being tested&nbsp;in that iteration. 
</p>
<p> <strong>Note: <br />
  <br/>
  </strong>The emphasis on finding, outlining and detailing requirements varies 
  from phase to phase. Iterations in Inception and early Elaboration tend to focus 
  more on identifying and outlining requirements in general and on 
  detailing high-priority and architecturally 
  significant requirements. During iterations in late Elaboration and early Construction, 
  the remaining requirements are usually outlined and detailed. </p>
<h4> Define the architecture </h4>
<p> This activity is repeated in each iteration in the 
  Elaboration phase. The main&nbsp;goal of this activity is&nbsp;to propose an 
  <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html" guid="_0XAf0MlgEdmt3adZL5Dmdw">architecture</a> 
  that addresses the requirements with high architectural risks, thus providing 
  a solid, yet resilient, foundation on which to build the system functionality.</p>
<p> The <a class="elementLinkWithUserText" href="./../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html" guid="_0X9iEMlgEdmt3adZL5Dmdw">architect</a> 
  analyzes the architectural constraints, identifies available assets to build 
  the system, defines how the system will be structured, and identifies the initial 
  abstractions and mechanisms that must be provided by the architecture. </p>
<p> Throughout all of the iterations, the architect: </p>
<ul>
    
  <li> Identifies commonalities between different requirements to leverage reuse 
  </li>
  <li> Defines strategies for achieving requirements related 
    to quality</li>
  <li> Captures and communicates architectural decisions </li>
</ul>
<h4> Develop solution for requirement within context</h4>
<p> This activity is instantiated multiple times, in parallel, for each development 
  task planned for that iteration. The main goal of this activity is an executable 
  system that provides the incremental quality and functionality for the specified 
  requirements within the specified context. </p>
<p> As the requirements planned for the iteration are broken down into development 
  tasks, these are assigned by the project managers to <a class="elementlinkwithusertext" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">developers</a> 
  (some project teams prefer to have team members sign up for development tasks 
  themselves). </p>
<p> The solution to be developed is for a particular requirement within a context, 
  which reflects the idea of breaking down requirements into development tasks. 
  As an example, a particular use-case scenario within the context of database 
  access could be assigned to a developer; whereas, the same scenario within the 
  user interface and business logic contexts could be assigned to a different 
  developer. In this example, more than one developer is working on a particular 
  piece of functionality to be delivered in a particular iteration. As they develop 
  the requirement within the context they were assigned to, they perform&nbsp;<a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/developer_test,_0YuXEclgEdmt3adZL5Dmdw.html" guid="_0YuXEclgEdmt3adZL5Dmdw">tests</a> 
  and integrate their work to create <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">builds</a>. 
</p>
<h4> Validate build </h4>
<p> This activity is repeated throughout the project 
  lifecycle. The main goal of this activity is to validate the current increment 
  of the system against the requirements allocated to it. </p>
<p> The intent is to validate that the high-priority requirements implemented 
  reflect a robust architecture so that remaining requirements can be implemented 
  on top of that architecture. As developer develop the solution for the requirements 
  in a given iteration, the integrated source code is unit-tested. Then, a separate 
  <a class="elementlinkwithusertext" href="./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html" guid="_0ZM4MclgEdmt3adZL5Dmdw">tester</a> 
  conducts system-level testing in parallel with development to make sure that 
  the solution, which is continuously being integrated, matches what is specified 
  in the requirements. Then, the tester defines what techniques to use, what the 
  data input is, what <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/guidelines/test_suite,_0aDz0MlgEdmt3adZL5Dmdw.html" guid="_0aDz0MlgEdmt3adZL5Dmdw">test 
  suites</a> to create. As tests are performed, defects found are reported and 
  added to the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">work 
  items list</a>, so they can be prioritized and assigned to team members. </p>
<h4> Ongoing tasks </h4>
<p> This activity includes tasks that happen throughout the iteration on an ongoing 
  basis but are not necessarily part of a plan. For example, at any time, <a class="elementlinkwithusertext" href="./../../openup_basic/roles/any_role,_0dsWoMlgEdmt3adZL5Dmdw.html" guid="_0dsWoMlgEdmt3adZL5Dmdw">any 
  role</a> in the project team can issue a <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html" guid="_6jdvECb3Edqh1LYUOGRh2A">change 
  request</a>, either because there are requests for enhancements, or defects 
  are found. These change requests are part of the work items list and are prioritized 
  and assigned to team members. Anyone can be assigned to make changes that develop 
  enhancements or fix defects. </p>
<h4>&nbsp; </h4>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Alternatives></Alternatives>
						<HowToStaff></HowToStaff>
						<Purpose></Purpose>
						<Scope></Scope>
						<UsageNotes></UsageNotes>
					</Presentation>
					<BreakdownElement xsi:type="uma:Activity"
						name="manage_iteration" briefDescription=""
						id="_0rWYIslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Manage Iteration" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="false" isOngoing="true" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb_BfL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0sTaYMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="manage_requirements" briefDescription=""
						id="_0ruyoclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Manage Requirements"
						hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false"
						variabilityBasedOnElement="_0o9ygclgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb_BvL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0sTaYMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="define_architecture" briefDescription=""
						id="_0rcewclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Define the Architecture"
						hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false"
						variabilityBasedOnElement="_0sx7islgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb_B_L5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0sTaYMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="develop_requirement_within_context" briefDescription=""
						id="_WrXvwPinEdmugcVr9AdHjQ" orderingGuide="" suppressed="false"
						presentationName="Develop Solution (for requirement) (within context)"
						hasMultipleOccurrences="true" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false"
						variabilityBasedOnElement="_h2-iAfimEdmugcVr9AdHjQ"
						variabilityType="extends">
						<SuperActivity>
							_0sTaYMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="validate_build" briefDescription=""
						id="_0rilYclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Validate Build" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="true" prefix=""
						isEventDriven="false" isOngoing="false" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0nz79clgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb_CfL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0sTaYMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="ongoing_tasks" briefDescription=""
						id="_TAVx0CliEdqjQsaFX0CJTw" orderingGuide="" suppressed="false"
						presentationName="Ongoing Tasks" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="false" isOngoing="true" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0pJ_xslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<SuperActivity>
							_0sTaYMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<DefaultContext>
						_0u-T4clgEdmt3adZL5Dmdw
					</DefaultContext>
					<ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
				</Process>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ProcessComponent"
				name="inception_phase_iteration" briefDescription=""
				id="_0oSdEclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				global="false" authors="" changeDescription="" version="">
				<Process xsi:type="uma:CapabilityPattern"
					name="inception_phase_iteration"
					briefDescription="This iteration template defines the activities (and associated roles and work  products) performed in a typical iteration in the Inception phase. Each activity  and related goals are described."
					id="_0o3r4slgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Inception Phase Iteration"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="false" IsEnactable="false" variabilityType="na">
					<Presentation xsi:type="uma:ProcessDescription"
						name="" briefDescription="" id="_mtb-6_L5Edm6Nvont3uinw"
						orderingGuide="" suppressed="false" authors=""
						changeDescription="" version="" usageGuidance="" externalId="">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The project starts with the assumption that the business case has been created, the <a class="elementlinkwithusertext" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project
    manager</a> has been identified, the team (at least for the first iteration) has been defined, the development
    environment (including tools and infrastructure) is in place, and the process to be followed is the <a class="elementlinkwithusertext" href="./../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" guid="_0uyGoMlgEdmt3adZL5Dmdw">delivery process</a> suggested by OpenUP/Basic. The number and length of each Inception
    iteration will vary, depending upon the needs of the project.
</p>
<p>
    In the next sections we describe the activities performed in a typical iteration during Inception phase.
</p>
<h4>
    Initiate project
</h4>
<p>
    This activity takes place at the beginning of the first iteration, when the project starts. The goal of this activity
    is to establish the vision for the project and the project plan at a high level of granularity.
</p>
<p>
    The people in the roles involved at this time collaborate to perform this activity:
</p>
<ul>
    <li>
        <a class="elementlinkwithusertext" href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw">Analyst</a> and <a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholder</a> roles work together to define the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">vision</a> for the project, capturing the customer needs and features for the system
        under development. Needs and features are captured to the extent required to reach agreement about the scope of the
        project.
    </li>
    <li>
        Project manager (with collaboration and agreement of team and stakeholders) proposes a high-level <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html" guid="_0a6vcMlgEdmt3adZL5Dmdw">project plan</a> that includes the <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html" guid="_HNxbwMBJEdqSgKaj2SZBmg">milestones</a> for the four phases and time-boxed iterations for each phase. This
        plan and the allocation of staff to the project evolve throughout the phases to reflect the project pace, as
        necessary.
    </li>
</ul>
<h4>
    Manage iteration
</h4>
<p>
    This activity is about the ongoing work performed by the project manager and the development team to initiate and
    conduct a given iteration. It consists of status reporting, handling of exceptions and problems, identifying risks, and
    reprioritizing work, as needed.
</p>
<p>
    At the end of the iteration, the project manager conducts a&nbsp;<a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/status_assessment,_0bA2EMlgEdmt3adZL5Dmdw.html" guid="_0bA2EMlgEdmt3adZL5Dmdw">status assessment</a> with the development team and stakeholders.
</p>
<p>
    If the iteration end coincides with the phase end, meeting the objectives for that phase should be used as success
    criteria for leaving the iteration. The iteration assessment should verify that the objectives&nbsp;for
    the&nbsp;Iteration phase&nbsp;have been achieved, including agreement on the key functionalities and at least one
    possible solution for the system under development, as well as a reasonable understanding of cost, schedule and risks
    associated with the project.
</p>
<p>
    Based on demonstration of key functionalities and architectural feasibility during the assessment, it becomes clear
    that either the project can proceed at the given pace or that a reprioritization of work needs to happen. As a
    consequence, the project manager may need to refine the project scope and duration.
</p>
<h4>
    Manage requirements
</h4>
<p>
    This activity is first performed in the first iteration, and repeated throughout the lifecycle.&nbsp; The goal of this
    activity is to understand and prioritize stakeholder needs, and associated requirements for the system, and capture
    these in a form that will support effective communications and collaboration between the stakeholders and development
    team.
</p>
<p>
    As the project is initiated, the&nbsp;<a class="elementlinkwithusertext" href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw">analyst</a>
    gathers <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html" guid="_0Wh-sMlgEdmt3adZL5Dmdw">requirements</a> from&nbsp;stakeholders and captures associated&nbsp;work items&nbsp;for
    development in the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">work items list</a>&nbsp;to facilitate prioritization and planning. As needed,
    requirements are outlined and detailed in&nbsp;<a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html" guid="_0VGbUMlgEdmt3adZL5Dmdw">use-case</a> specifications and <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html" guid="_BVh9cL-CEdqb7N6KIeDL8Q">supporting requirements</a>&nbsp;to the extent needed to provide information for the <a class="elementLinkWithUserText" href="./../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html" guid="_0X9iEMlgEdmt3adZL5Dmdw">architect</a> to create a prototype of the architecture and for the project manager to
    scope and plan the next iteration.
</p>
<h4>
    Determine architectural feasibility
</h4>
<p>
    This activity is initiated in the Inception phase and completed in the Elaboration phase. The goal of this activity is
    to establish an architecture for the system that provides the high-level design that maximizes&nbsp;stakeholder
    benefit, while respecting the constraints placed on the system and the development team.
</p>
<p>
    Based on requirements being captured and detailed in parallel with this activity, the architect analyzes the
    architectural constraints and leverages the available assets and technology to propose an <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/arch_poc,_PoDR0NbYEdmlO4WLYHrJaQ.html" guid="_PoDR0NbYEdmlO4WLYHrJaQ">architectural proof of concept</a>. This early architectural prototype is used both to
    demonstrate the feasibility of the project, by using the selected candidate architecture, and to mitigate one or more
    architecturally significant <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html" guid="_0bsLgMlgEdmt3adZL5Dmdw">risks</a>.
</p>
<br />
<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Alternatives></Alternatives>
						<HowToStaff></HowToStaff>
						<Purpose></Purpose>
						<Scope></Scope>
						<UsageNotes></UsageNotes>
					</Presentation>
					<BreakdownElement xsi:type="uma:Activity"
						name="initiate_project" briefDescription=""
						id="_0oSdE8lgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Initiate Project" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="true" prefix=""
						isEventDriven="false" isOngoing="false" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0pWNA8lgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb-7PL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0o3r4slgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="manage_iteration" briefDescription=""
						id="_jLaKwP77Edm1zMZYtD3GjA" orderingGuide="" suppressed="false"
						presentationName="Manage Iteration" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="false" isOngoing="true" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<SuperActivity>
							_0o3r4slgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="manage_requirements" briefDescription=""
						id="_0okw8clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Manage Requirements"
						hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false"
						variabilityBasedOnElement="_0o9ygclgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb-7_L5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0o3r4slgEdmt3adZL5Dmdw
						</SuperActivity>
						<Predecessor linkType="finishToFinish"
							id="_IWodoClhEdqjQsaFX0CJTw">
							_0oSdE8lgEdmt3adZL5Dmdw
						</Predecessor>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="determine_architectural_feasibility" briefDescription=""
						id="_0oreoclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Determine Architectural Feasibility"
						hasMultipleOccurrences="false" isOptional="true" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false"
						variabilityBasedOnElement="_0sluQslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb-8PL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0o3r4slgEdmt3adZL5Dmdw
						</SuperActivity>
						<Predecessor linkType="finishToFinish"
							id="_IW0q4ClhEdqjQsaFX0CJTw">
							_0oSdE8lgEdmt3adZL5Dmdw
						</Predecessor>
					</BreakdownElement>
					<DefaultContext>
						_0u-T4clgEdmt3adZL5Dmdw
					</DefaultContext>
					<ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
				</Process>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ProcessComponent"
				name="transition_phase_iteration" briefDescription=""
				id="_0qrpwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				global="false" authors="" changeDescription="" version="">
				<Process xsi:type="uma:CapabilityPattern"
					name="transition_phase_iteration"
					briefDescription="This iteration template defines the activities (and associated roles and work  products) performed in a typical iteration in the Transition phase. Each activity  and the related goals are described."
					id="_0rQRgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					presentationName="Transition Phase Iteration"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="true" IsEnactable="false" variabilityType="na">
					<OwnedRule name="" briefDescription=""
						id="_1J_ocEbrEduez5pdMGsX2w" orderingGuide="" suppressed="false"
						mainDescription="wbs://_0rQRgMlgEdmt3adZL5Dmdw/_0DMlYPinEdmugcVr9AdHjQ/_iJwqcDLvEdueZPye-FaNgA " />
					<Presentation xsi:type="uma:ProcessDescription"
						name="" briefDescription="" id="_mtb-__L5Edm6Nvont3uinw"
						orderingGuide="" suppressed="false" authors=""
						changeDescription="" version="" usageGuidance="" externalId="">
						<MainDescription><![CDATA[<h3> Introduction&nbsp; </h3>
<p> In the Transition phase, 
  most activities happen in parallel. The main objectives are to fine-tune functionality, 
  performance, and overall quality of the beta product from 
  the end of Construction phase. </p>
<p> The activities performed in a typical iteration during 
  the&nbsp;Transition phase are described below. </p>
<h4> Manage iteration </h4>
<p> This activity is performed throughout the lifecycle. The goal of this activity 
  is to identify risks and issues early enough that they can be mitigated, to 
  establish the goals for the iteration, and to support the development team in 
  reaching these goals. </p>
<p> Similar to other phases, this is an activity led by the <a class="elementlinkwithusertext" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project 
  manager</a> (in collaboration with the team) to launch the iteration, to allocate 
  work, to track status, and to handle risks and issues. It’s unlikely that risks 
  of high impact will happen during the Transition, but it is recommended that 
  the project manager and team identify any potential issues&nbsp;while delivering 
  the product to the end users. </p>
<p>If this is the last iteration of the project, the main goal is to achieve final 
  acceptance of the system. At the end of the iteration, results are assessed 
  against phase objectives<em>,</em> and <a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholders'</a> 
  concurrence on the project objectives is obtained. The team conducts a retrospective 
  review to capture lessons learned and make improvements to the process for subsequent 
  <strong> </strong>projects. The project is then closed.</p>
<h4>Ongoing tasks </h4>
<p> Submission of change requests during the Transition phase <strong></strong>works&nbsp;differently 
  than in other phases. New requirements will rarely be identified at late stages 
  of the software development lifecycle in a way they can be implemented in the 
  current release. If there are enhancement requests, though, they can be captured 
  in the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">work 
  items list</a> and allocated to a future release, when a new software development 
  lifecycle begins. In that case, requirements will be outlined and detailed accordingly. 
</p>
<p> However, defects are typically dealt with during the Transition phase,&nbsp;thus 
  a stable release can be accepted by the user community. If there is general 
  agreement from stakeholders, correction of low-priority defects can be postponed 
  to subsequent evolutionary releases. </p>
<h4> Develop solution for requirement within context</h4>
<p> This activity is repeated multiple times, in parallel, for each development 
  task planned for that iteration. The main goal of this activity is an executable 
  system that provides the incremental quality and functionality for the specified 
  requirements within the specified context. </p>
<p> During the Transition phase, most requirements will have been already implemented 
  and validated, which is the focus of the previous phase. Nevertheless, there 
  may be a few low-priority requirements that could be accommodated in the release 
  being developed. However, enhancement requests and defects found in previous 
  iterations may need to be allocated to <a class="elementlinkwithusertext" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">developers</a>. 
</p>
<h4> Validate build </h4>
<p> This activity is repeated throughout the lifecycle. The main goal of this 
  activity is to validate the current increment of the system against the requirements 
  allocated to it. </p>
<p> This activity happens in parallel with development of the 
  solutions for enhancement requests and defects 
  (and possibly remaining requirements), to make sure that 
  a stable release can be presented to the user community. Users can be involved 
  in performing <a class="elementLinkWithUserText" href="./../../openup_basic/capabilitypatterns/test,_0nz79clgEdmt3adZL5Dmdw.html" guid="_0nz79clgEdmt3adZL5Dmdw">tests</a> 
  to accept the release. </p>
<h4>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Alternatives></Alternatives>
						<HowToStaff></HowToStaff>
						<Purpose></Purpose>
						<Scope></Scope>
						<UsageNotes></UsageNotes>
					</Presentation>
					<BreakdownElement xsi:type="uma:Activity"
						name="manage_iteration" briefDescription=""
						id="_0q33AclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Manage Iteration" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="false" isOngoing="true" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb_APL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0rQRgMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="develop_requirement_within_context" briefDescription=""
						id="_0DMlYPinEdmugcVr9AdHjQ" orderingGuide="" suppressed="false"
						presentationName="Develop Solution (for requirement) (within context)"
						hasMultipleOccurrences="true" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false"
						variabilityBasedOnElement="_h2-iAfimEdmugcVr9AdHjQ"
						variabilityType="extends">
						<SuperActivity>
							_0rQRgMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="validate_build" briefDescription=""
						id="_0qrpwslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Validate Build" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="true" prefix=""
						isEventDriven="false" isOngoing="false" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0nz79clgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb_AfL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0rQRgMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="ongoing_tasks" briefDescription=""
						id="_0qxwYclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Ongoing Tasks" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="false" isOngoing="true" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0pJ_xslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="_mtb_AvL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_0rQRgMlgEdmt3adZL5Dmdw
						</SuperActivity>
					</BreakdownElement>
					<DefaultContext>
						_0u-T4clgEdmt3adZL5Dmdw
					</DefaultContext>
					<ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
				</Process>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ProcessComponent"
				name="construction_phase_iteration" briefDescription=""
				id="_y-etQOtQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false"
				global="false" authors="" changeDescription="" version="">
				<Process xsi:type="uma:CapabilityPattern"
					name="construction_phase_iteration"
					briefDescription="This iteration template defines the activities (and associated roles and work products) performed in a typical iteration in the Construction phase. Each activity and its goals is described. "
					id="_y-3IrutQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false"
					presentationName="Construction Phase Iteration"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="true" IsEnactable="false" variabilityType="na">
					<OwnedRule name="" briefDescription=""
						id="_y-3Ir-tQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false"
						mainDescription="" />
					<Presentation xsi:type="uma:ProcessDescription"
						name="" briefDescription="" id="-239OBD2wagT2qp8fuPWcHQ"
						orderingGuide="" suppressed="false" authors=""
						changeDescription="" version="" usageGuidance="" externalId="">
						<MainDescription><![CDATA[<h3>
    Introduction
</h3>
Iterations in Construction phase have a work breakdown structure (WBS) similar to iterations in the Elaboration phase, with
activities happening in parallel. There is a different&nbsp;emphasis on how activities&nbsp;address the phase objectives,
though. 
<p>
    The <a href="./../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html" guid="_0XAf0MlgEdmt3adZL5Dmdw">architecture</a> is expected to be stable when this phase starts, allowing the remaining
    requirements to be implemented on top of it. Another advantage of validating the architecture and eliminating as many
    risks as possible during Elaboration is to provide more predictability in Construction, which allows the <a class="elementlinkwithusertext" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project manager</a> to focus on team efficiency and cost reduction.
</p>
<p>
    Functionality is continuously implemented, tested, and integrated, resulting in <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">builds</a>
    that are more and more complete and stable. A beta or prerelease may be deployed to a sampling of the intended audience
    at the end of Construction. Delivery of the actual release is the main focus of the next phase.
</p>
<p>
    The activities performed in a typical iteration during&nbsp;Construction phase are described after the following
    introductions to each activity.
</p>
<h4>
    Manage iteration
</h4>
<p>
    This activity is performed throughout the project lifecycle. The goal of this activity is to identify risks and issues
    early enough to mitigate them, to establish the goals for the iteration, and to support the development team in
    reaching these goals.
</p>
<p>
    Similarly to other phases, the project manager (supported by the team) launches the iteration, allocates work, tracks
    status, and handles issues and risks. Although the high-priority and architecturally significant risks were mitigated
    during Elaboration, new risks may appear during Construction, such as not having the right amount of resources to
    obtain the desired degree of parallel&nbsp;development.
</p>
<p>
    The prioritization of work for a given iteration (existing change requests and possibly a few remaining requirements)
    takes place. project manager,&nbsp;<a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholders</a>, and the remaining team members agree on what is supposed to be
    developed during that iteration.
</p>
<p>
    At the end of the iteration, the team performs an iteration assessment. The goal is to conduct a retrospective review
    of the iteration that is ending. As part of this assessment, the objectives for the Construction phase are expected to
    be demonstrated by the beta-quality release of the software, thus supporting the possibility of transitioning the
    software to its end users.
</p>
<h4>
    Manage requirements
</h4>
<p>
    This activity is repeated throughout the lifecycle. The goal of this activity is to understand and prioritize
    stakeholder needs and associated requirements for the system, as well as to capture these in a form that will support
    effective communication and collaboration between the stakeholders and the development team.
</p>
<p>
    During Inception, most requirements are captured. The high-risk requirements are detailed, implemented, and validated
    (through a working architecture) during Elaboration.
</p>
<p>
    During the Construction phase, requirements management demands less time from the <a class="elementlinkwithusertext" href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw">analyst</a>.
    There still may be low-risk requirements to be detailed or refined, but in a way that can be assigned to <a class="elementlinkwithusertext" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">developers</a>.
</p>
<p>
    <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/test_case,_0ZS-0MlgEdmt3adZL5Dmdw.html" guid="_0ZS-0MlgEdmt3adZL5Dmdw">Test cases</a> describe which&nbsp;requirements are being tested&nbsp;in that iteration.
</p>
<h4>
    Develop solution
</h4>
<p>
    This activity is repeated multiple times, in parallel, for each development task planned for that iteration. The main
    goal of this activity is an executable system that provides the incremental quality and functionality for the specified
    requirements, within the specified context.
</p>
<p>
    The architecture &nbsp;was proposed and a baseline established at the end of Elaboration. Critical requirements were
    expected to be implemented, tested, and integrated as part of the baseline architecture. As the remaining requirements
    are implemented during Construction, the Architect identifies commonalities among solutions being developed by the
    various developers and leverages reuse where possible. Some degree of refactoring of the architecture may be needed to
    accommodate putting common pieces together.
</p>
<p>
    A pattern similar to the Elaboration phase happens during Construction when it comes to breaking down requirements into
    development tasks and assigning each requirement within a context to a developer. Requirements at this stage are mostly
    of medium-to-low level of risk, but usually they represent the largest slice from the total amount of requirements to
    be implemented in a project. Thus, it is expected that this activity is repeated, or instantiated, multiple times (once
    per requirement within context),&nbsp;thus allowing&nbsp;parallel development. <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/guidelines/continuous_integration,_i8bUEL6cEdqti4GwqTkbsQ.html" guid="_i8bUEL6cEdqti4GwqTkbsQ">Continuous integration</a> allows functionality to be added to the code base constantly,
    which helps the achievement of more and more complete <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">builds</a>
    of the software.
</p>
<h4>
    Validate build
</h4>
<p>
    This activity is repeated throughout the project lifecycle. The main goal of this activity is to validate the current
    increment of the system against the requirements allocated to it.
</p>
<p>
    Similarly to Elaboration, this activity happens in parallel with the <a class="elementLinkWithUserText" href="./../../openup_basic/capabilitypatterns/develop_solution,_h2-iAfimEdmugcVr9AdHjQ.html" guid="_h2-iAfimEdmugcVr9AdHjQ">develop solution</a> activity. The intent is to validate that a stable beta release is
    achieved and that users can perform acceptance tests.
</p>
<h4>
    Ongoing tasks
</h4>
<p>
    Similarly to any other phase, <a class="elementlinkwithusertext" href="./../../openup_basic/roles/any_role,_0dsWoMlgEdmt3adZL5Dmdw.html" guid="_0dsWoMlgEdmt3adZL5Dmdw">any role</a> on
    the team can submit <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/guidelines/change_requests,_fnZj0NVXEdqy9sbRhejO5Q.html" guid="_fnZj0NVXEdqy9sbRhejO5Q">change requests</a>. The software being developed is achieving beta quality by this
    point; therefore, defects of high priority&nbsp;are generally&nbsp;addressed during Construction iterations&nbsp;and
    Transition iterations. Enhancement requests can be planned for either subsequent Transition iterations or a next
    release of the product.
</p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
						<Alternatives></Alternatives>
						<HowToStaff></HowToStaff>
						<Purpose></Purpose>
						<Scope></Scope>
						<UsageNotes></UsageNotes>
					</Presentation>
					<BreakdownElement xsi:type="uma:Activity"
						name="manage_iteration" briefDescription=""
						id="_y-k0bOtQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false"
						presentationName="Manage Iteration" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="false" isOngoing="true" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="-OC3td1csl7lqV15vimYOaw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_y-3IrutQEdqc1LGhiSPqRg
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="manage_requirements"
						briefDescription="Detail a set of requirements (one or more use cases, scenarios, or supporting requirements)."
						id="_eE5nEUbpEduLBN1xMBngqw" orderingGuide="" suppressed="false"
						presentationName="Manage Requirements"
						hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="-Xfm5yDx3AVScrP1ZdLT-Sw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="" externalId="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes></UsageNotes>
						</Presentation>
						<SuperActivity>
							_y-3IrutQEdqc1LGhiSPqRg
						</SuperActivity>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="analyst" briefDescription="" id="_eFeO0EbpEduLBN1xMBngqw"
							orderingGuide="" suppressed="false" presentationName="Analyst"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_eG0SoEbpEduLBN1xMBngqw
							</ResponsibleFor>
							<ResponsibleFor>
								_eGoFZEbpEduLBN1xMBngqw
							</ResponsibleFor>
							<ResponsibleFor>
								_eFeO00bpEduLBN1xMBngqw
							</ResponsibleFor>
							<ResponsibleFor>
								_eFeO0kbpEduLBN1xMBngqw
							</ResponsibleFor>
							<ResponsibleFor>
								_eFeO0UbpEduLBN1xMBngqw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="use_case"
							briefDescription="" id="_eFeO0UbpEduLBN1xMBngqw" orderingGuide=""
							suppressed="false" presentationName="Use Case"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<WorkProduct>
								_0VGbUMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="vision"
							briefDescription="" id="_eFeO0kbpEduLBN1xMBngqw" orderingGuide=""
							suppressed="false" presentationName="Vision"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<WorkProduct>
								_0WVxcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="uc_model"
							briefDescription="" id="_eFeO00bpEduLBN1xMBngqw" orderingGuide=""
							suppressed="false" presentationName="Use-Case Model"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<WorkProduct>
								_W2SgEDR5EdutE_HNDTJk5Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="find_and_outline_requirements" briefDescription=""
							id="_eGoFYkbpEduLBN1xMBngqw" orderingGuide="" suppressed="false"
							presentationName="Find and Outline Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="false">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<Task>_P9cMUPV_EdmdHa9MmVPgqQ</Task>
							<PerformedPrimarilyBy>
								_eFeO0EbpEduLBN1xMBngqw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_eGuMB0bpEduLBN1xMBngqw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_eG0SoEbpEduLBN1xMBngqw
							</MandatoryInput>
							<MandatoryInput>
								_eFeO0kbpEduLBN1xMBngqw
							</MandatoryInput>
							<Output>_eGoFY0bpEduLBN1xMBngqw</Output>
							<Output>_eGoFZEbpEduLBN1xMBngqw</Output>
							<Output>_eFeO0UbpEduLBN1xMBngqw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="work_items_list"
							briefDescription="" id="_eGoFY0bpEduLBN1xMBngqw" orderingGuide=""
							suppressed="false" presentationName="Work Items List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<WorkProduct>
								_rGNWsCbSEdqh1LYUOGRh2A
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor"
							name="supporting_requirements" briefDescription=""
							id="_eGoFZEbpEduLBN1xMBngqw" orderingGuide="" suppressed="false"
							presentationName="Supporting Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<WorkProduct>
								_BVh9cL-CEdqb7N6KIeDL8Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="detail_requirements" briefDescription=""
							id="_eGuMBUbpEduLBN1xMBngqw" orderingGuide="" suppressed="false"
							presentationName="Detail Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="false">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<Task>_0e1mIMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_eFeO0EbpEduLBN1xMBngqw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_eGuMB0bpEduLBN1xMBngqw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_eGoFZEbpEduLBN1xMBngqw
							</MandatoryInput>
							<MandatoryInput>
								_eFeO0kbpEduLBN1xMBngqw
							</MandatoryInput>
							<MandatoryInput>
								_eG0SoEbpEduLBN1xMBngqw
							</MandatoryInput>
							<MandatoryInput>
								_eFeO0UbpEduLBN1xMBngqw
							</MandatoryInput>
							<MandatoryInput>
								_eFeO00bpEduLBN1xMBngqw
							</MandatoryInput>
							<Output>_eGoFZEbpEduLBN1xMBngqw</Output>
							<Output>_eFeO0UbpEduLBN1xMBngqw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="stakeholder" briefDescription=""
							id="_eGuMB0bpEduLBN1xMBngqw" orderingGuide="" suppressed="false"
							presentationName="Stakeholder" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="glossary"
							briefDescription="" id="_eG0SoEbpEduLBN1xMBngqw" orderingGuide=""
							suppressed="false" presentationName="Glossary"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<WorkProduct>
								_Wn7HcNcEEdqz_d2XWoVt6Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="create_test_case" briefDescription=""
							id="_eHAf4EbpEduLBN1xMBngqw" orderingGuide="" suppressed="false"
							presentationName="Create Test Cases"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="false">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<Task>_0iwc0clgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_eHAf4UbpEduLBN1xMBngqw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_eFeO0EbpEduLBN1xMBngqw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_eFeO0UbpEduLBN1xMBngqw
							</MandatoryInput>
							<OptionalInput>
								_eHAf4kbpEduLBN1xMBngqw
							</OptionalInput>
							<Output>_eHAf4kbpEduLBN1xMBngqw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="tester" briefDescription="" id="_eHAf4UbpEduLBN1xMBngqw"
							orderingGuide="" suppressed="false" presentationName="Tester"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_eHAf4kbpEduLBN1xMBngqw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_case"
							briefDescription="" id="_eHAf4kbpEduLBN1xMBngqw" orderingGuide=""
							suppressed="false" presentationName="Test Case"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_eE5nEUbpEduLBN1xMBngqw
							</SuperActivity>
							<WorkProduct>
								_0ZS-0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="develop_solution"
						briefDescription="Design, implement, test, and integrate the solution for a requirement within a given context."
						id="_rk8PMUbqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
						presentationName="Develop Solution (for requirement) (within context)"
						hasMultipleOccurrences="true" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false" variabilityType="na">
						<OwnedRule name="diagram" briefDescription=""
							id="_rk8PMkbqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							mainDescription="ad_image_uri=|publish_ad_image=false|add_image_uri=|publish_add_image=false|wpd_image_uri=|publish_wpd_image=false" />
						<Presentation xsi:type="uma:ProcessDescription"
							name="develop_sr_within_scope,_h2-iAfimEdmugcVr9AdHjQ"
							briefDescription="" id="-y0fMHq2z6qGyUlEC8ptYCQ" orderingGuide=""
							suppressed="false" authors="" changeDescription="" version=""
							usageGuidance="" externalId="">
							<MainDescription><![CDATA[<h3> Introduction </h3>
<p> Project managers use this Capability Pattern&nbsp;as a way to&nbsp;perform 
  a goal-based planning and management. Work is assigned to developers and work 
  progress is tracked&nbsp;based on the goals to be achieved using 
  the designed, unit-tested, and&nbsp;integrated&nbsp;source code. </p>
<h4> Context of what is being developed </h4>
<p> A context can be specified when a requirement is assigned to be developed, 
  thus specifying how broadly a requirement is to be developed in a iteration. 
  Development&nbsp;may focus&nbsp;on a layer (such as the user interface, business 
  logic, or&nbsp;database access),&nbsp;on a component, and so on. </p>
<p> Whether a context is specified or not, the developer's 
  responsibility is to create a design and implementation for that requirement, 
  then to&nbsp;write and run unit tests against the implementation to make sure 
  the&nbsp;implementation works as designed, both as a unit&nbsp;and&nbsp;integrated 
  into the code base. </p>
<h4> Overview of workflow </h4>
<p> To accommodate major changes or&nbsp;major functionality to be developed, 
  architecture may have to be refined. Small changes and functionality may reflect 
  changes on the design only, with no need to refine the architecture. For trivial 
  changes and functionality to be developed, only the source code may be affected. 
  </p>
<p> In any case, there is no strict sequence for how writing code and creating 
  or running &nbsp;developer tests should happen, because they can happen in parallel.&nbsp;You 
  may choose to create and run developer tests before the actual code is created 
  or the reverse sequence.</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose><![CDATA[<ul>
    <li>
        For developers: to create a solution for the requirement assigned to/owned by&nbsp;them
    </li>
    <li>
        For project managers: to have a goal-based way of assigning work and tracking project status
    </li>
</ul>]]></Purpose>
							<Scope></Scope>
							<UsageNotes><![CDATA[<p>
    This Capability Pattern ocurrs multiple times per iteration. Usually, there will be one instance per requirement
    planned for that iteration. When instantiated in a project plan, the pattern becomes a development task to be assigned
    to a developer and is expected to be renamed to contain the actual requirement name in it.&nbsp;Optionally, the word
    'Solution' may be suppressed, then this pattern is instantiate as:
</p>
<p>
    &nbsp;'Develop <em>requirement_name</em> (within <em>context_name</em> context)'
</p>
<p>
    If&nbsp;a context&nbsp;is specified, there will be one instance of this pattern for each requirement&nbsp;for each
    context.
</p>
<p>
    Example:
</p>
<ol>
    <li>
        Develop <em>scenario 1</em> (within <em>user interface</em> context)
    </li>
    <li>
        Develop <em>scenario 1</em> (within <em>business logic and DB access</em> context)
    </li>
    <li>
        Develop <em>scenario 2</em>
    </li>
    <li>
        Develop <em>supplemental requirement 1</em>
    </li>
</ol>
<p>
    Note that there are four instances of this pattern in the example above:
</p>
<ul>
    <li>
        the first two are related to the same requirement (<em>scenario 1</em>) but within two different contexts
    </li>
    <li>
        the last two are related to different requirements, no context specified.
    </li>
</ul>]]></UsageNotes>
						</Presentation>
						<SuperActivity>
							_y-3IrutQEdqc1LGhiSPqRg
						</SuperActivity>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="developer" briefDescription="" id="_rk8PM0bqEdu_9u69oWmeLA"
							orderingGuide="" suppressed="false" presentationName="Developer"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_rk8PN0bqEdu_9u69oWmeLA
							</ResponsibleFor>
							<ResponsibleFor>
								_rk8PNkbqEdu_9u69oWmeLA
							</ResponsibleFor>
							<ResponsibleFor>
								_rk8PNUbqEdu_9u69oWmeLA
							</ResponsibleFor>
							<ResponsibleFor>
								_rk8PNEbqEdu_9u69oWmeLA
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="design"
							briefDescription="" id="_rk8PNEbqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Design"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0WuL8slgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="implementation"
							briefDescription="" id="_rk8PNUbqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Implementation"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0YoQcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="developer_test"
							briefDescription="" id="_rk8PNkbqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Developer Test"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0YuXEclgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="build"
							briefDescription="" id="_rk8PN0bqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Build"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0YuXEMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="refine_architecture" briefDescription=""
							id="_rmXymUbqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							presentationName="Refine the Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="false">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_rmXyl0bqEdu_9u69oWmeLA
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_rmXynEbqEdu_9u69oWmeLA
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_rk8PNEbqEdu_9u69oWmeLA
							</MandatoryInput>
							<MandatoryInput>
								_rlawVUbqEdu_9u69oWmeLA
							</MandatoryInput>
							<Output>_rk8PNEbqEdu_9u69oWmeLA</Output>
							<Output>_rlawVUbqEdu_9u69oWmeLA</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="design_solution" briefDescription=""
							id="_rlawU0bqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							presentationName="Design the Solution"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Predecessor linkType="finishToFinish"
								id="_rmXym0bqEdu_9u69oWmeLA">
								_rmXymUbqEdu_9u69oWmeLA
							</Predecessor>
							<Task>_0fshwMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_rk8PM0bqEdu_9u69oWmeLA
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_rmXyl0bqEdu_9u69oWmeLA
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_rlawVEbqEdu_9u69oWmeLA
							</MandatoryInput>
							<MandatoryInput>
								_rlawVUbqEdu_9u69oWmeLA
							</MandatoryInput>
							<MandatoryInput>
								_rmXymEbqEdu_9u69oWmeLA
							</MandatoryInput>
							<OptionalInput>
								_rk8PNEbqEdu_9u69oWmeLA
							</OptionalInput>
							<Output>_rk8PNEbqEdu_9u69oWmeLA</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor"
							name="supporting_requirements" briefDescription=""
							id="_rlawVEbqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							presentationName="Supporting Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_BVh9cL-CEdqb7N6KIeDL8Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="architecture"
							briefDescription="" id="_rlawVUbqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0XAf0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="implement_solution" briefDescription=""
							id="_rl_YF0bqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							presentationName="Implement the Solution"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Task>_0hyzgMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_rk8PM0bqEdu_9u69oWmeLA
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_rk8PNEbqEdu_9u69oWmeLA
							</MandatoryInput>
							<MandatoryInput>
								_rlawVUbqEdu_9u69oWmeLA
							</MandatoryInput>
							<OptionalInput>
								_rk8PNUbqEdu_9u69oWmeLA
							</OptionalInput>
							<Output>_rk8PNUbqEdu_9u69oWmeLA</Output>
							<Output>_rk8PN0bqEdu_9u69oWmeLA</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="impl_developer_tests" briefDescription=""
							id="_rlzK2EbqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							presentationName="Implement Developer Tests"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Task>_0iL1EMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_rk8PM0bqEdu_9u69oWmeLA
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_rk8PNUbqEdu_9u69oWmeLA
							</MandatoryInput>
							<OptionalInput>
								_rk8PNEbqEdu_9u69oWmeLA
							</OptionalInput>
							<OptionalInput>
								_rmXynUbqEdu_9u69oWmeLA
							</OptionalInput>
							<Output>_rk8PNkbqEdu_9u69oWmeLA</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="run_developer_tests" briefDescription=""
							id="_rmXylUbqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							presentationName="Run Developer Tests"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Task>_0iYCUMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_rk8PM0bqEdu_9u69oWmeLA
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_rk8PNkbqEdu_9u69oWmeLA
							</MandatoryInput>
							<MandatoryInput>
								_rk8PNUbqEdu_9u69oWmeLA
							</MandatoryInput>
							<Output>_rmXylkbqEdu_9u69oWmeLA</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_log"
							briefDescription="" id="_rmXylkbqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Test Log"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0ZlSsMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="architect" briefDescription="" id="_rmXyl0bqEdu_9u69oWmeLA"
							orderingGuide="" suppressed="false" presentationName="Architect"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_rlawVUbqEdu_9u69oWmeLA
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="use_case"
							briefDescription="" id="_rmXymEbqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Use Case"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0VGbUMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="project_manager" briefDescription=""
							id="_rmXynEbqEdu_9u69oWmeLA" orderingGuide="" suppressed="false"
							presentationName="Project Manager" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_script"
							briefDescription="" id="_rmXynUbqEdu_9u69oWmeLA" orderingGuide=""
							suppressed="false" presentationName="Test Script"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_rk8PMUbqEdu_9u69oWmeLA
							</SuperActivity>
							<WorkProduct>
								_0ZfMEMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="validate_build" briefDescription=""
						id="_y-3IretQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false"
						presentationName="Validate Build" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="true" prefix=""
						isEventDriven="false" isOngoing="false" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0nz79clgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<Presentation xsi:type="uma:ActivityDescription"
							name="" briefDescription="" id="-C3RmtvThtego5U5cOk8uCA"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
						</Presentation>
						<SuperActivity>
							_y-3IrutQEdqc1LGhiSPqRg
						</SuperActivity>
					</BreakdownElement>
					<BreakdownElement xsi:type="uma:Activity"
						name="ongoing_tasks" briefDescription=""
						id="_y_PjTOtQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false"
						presentationName="Ongoing Tasks" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="false" isOngoing="true" isRepeatable="false"
						IsEnactable="false"
						variabilityBasedOnElement="_0pJ_xslgEdmt3adZL5Dmdw"
						variabilityType="extends">
						<SuperActivity>
							_y-3IrutQEdqc1LGhiSPqRg
						</SuperActivity>
					</BreakdownElement>
					<DefaultContext>
						_0u-T4clgEdmt3adZL5Dmdw
					</DefaultContext>
					<ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
				</Process>
			</MethodPackage>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ProcessPackage"
			name="Sub-processes" briefDescription="" id="_mpl9kDbmEduMn613sF6-Uw"
			orderingGuide="" suppressed="false" global="false">
			<MethodPackage xsi:type="uma:ProcessPackage"
				name="Management" briefDescription="" id="_JEyxADboEduMn613sF6-Uw"
				orderingGuide="" suppressed="false" global="false">
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="initiate_project" briefDescription=""
					id="_0pWNAslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					global="false" authors="" changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="initiate_project"
						briefDescription="This capability pattern bundles tasks required to define the vision and create a project plan."
						id="_0pWNA8lgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Initiate Project" hasMultipleOccurrences="false"
						isOptional="false" isPlanned="true" prefix=""
						isEventDriven="false" isOngoing="false" isRepeatable="false"
						IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="_mtb-9fL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="1.0.0" usageGuidance=""
							externalId="">
							<MainDescription><![CDATA[<p>
    This activity takes place at the beginning of the first iteration, when the project starts. The goal of this activity
    is to establish the vision for the project and the project plan at a high level of granularity.
</p>
<p>
    The people in the roles involved at this time collaborate to perform this activity:
</p>
<ul>
    <li>
        <a class="elementlinkwithusertext" href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw">Analyst</a> and <a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholder</a> roles
        work together to define the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">vision</a> for the project,
        capturing the customer needs and features for the system under development. Needs and features are captured to the
        extent required to reach agreement about the scope of the project.
    </li>
    <li>
        Project manager (with collaboration and agreement of team and stakeholders) proposes a high-level <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html" guid="_0a6vcMlgEdmt3adZL5Dmdw">project plan</a> that includes the <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html" guid="_HNxbwMBJEdqSgKaj2SZBmg">milestones</a> for the
        four phases and time-boxed iterations for each phase. This plan and the allocation of staff to the project evolve
        throughout the phases to reflect the project pace, as necessary.
    </li>
</ul>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="analyst" briefDescription="" id="_VNpT0FY5EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Analyst"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_PFnTkOB7EdqnKu908IEluw
							</ResponsibleFor>
							<ResponsibleFor>
								_VNvacFY5EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="vision"
							briefDescription="" id="_VNvacFY5EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Vision"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0WVxcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="define_vision" briefDescription=""
							id="_79bQ4DoCEdu0yYZ2bsCXog" orderingGuide="" suppressed="false"
							presentationName="Define Vision" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="false" prefix=""
							isEventDriven="false" isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0fOAoMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_VNpT0FY5EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_J8-00MAZEdqX-s4mWhkyqQ
							</AdditionallyPerformedBy>
							<OptionalInput>
								_VNvacFY5EdqI9sTOt2pjHw
							</OptionalInput>
							<Output>_VNvacFY5EdqI9sTOt2pjHw</Output>
							<Output>_PFnTkOB7EdqnKu908IEluw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="plan_the_project" briefDescription=""
							id="_XKDWIFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false"
							presentationName="Plan the Project"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0lC70MlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_XKVqAFY5EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_S8dNQMBFEdqSgKaj2SZBmg
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_VNpT0FY5EdqI9sTOt2pjHw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_S8dNQsBFEdqSgKaj2SZBmg
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_J8-00MAZEdqX-s4mWhkyqQ
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_VNvacFY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_4Y1wML3JEdqfrv3k16plXw
							</MandatoryInput>
							<OptionalInput>
								_XKbwoFY5EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_hhnXEDeqEduCsbgJNeFsSw
							</OptionalInput>
							<Output>_XKbwoFY5EdqI9sTOt2pjHw</Output>
							<Output>_4Y1wML3JEdqfrv3k16plXw</Output>
							<Output>_hhnXEDeqEduCsbgJNeFsSw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="project_manager" briefDescription=""
							id="_XKVqAFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false"
							presentationName="Project Manager" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_hhnXEDeqEduCsbgJNeFsSw
							</ResponsibleFor>
							<ResponsibleFor>
								_4Y1wML3JEdqfrv3k16plXw
							</ResponsibleFor>
							<ResponsibleFor>
								_XKbwoFY5EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="project_plan"
							briefDescription="" id="_XKbwoFY5EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Project Plan"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0a6vcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="work_items_list"
							briefDescription="" id="_4Y1wML3JEdqfrv3k16plXw" orderingGuide=""
							suppressed="false" presentationName="Work Items List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_rGNWsCbSEdqh1LYUOGRh2A
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="stakeholder" briefDescription=""
							id="_J8-00MAZEdqX-s4mWhkyqQ" orderingGuide="" suppressed="false"
							presentationName="Stakeholder" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="architect" briefDescription="" id="_S8dNQMBFEdqSgKaj2SZBmg"
							orderingGuide="" suppressed="false" presentationName="Architect"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="tester" briefDescription="" id="_S8dNQsBFEdqSgKaj2SZBmg"
							orderingGuide="" suppressed="false" presentationName="Tester"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="glossary"
							briefDescription="" id="_PFnTkOB7EdqnKu908IEluw" orderingGuide=""
							suppressed="false" presentationName="Glossary"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_Wn7HcNcEEdqz_d2XWoVt6Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="risk_list"
							briefDescription="" id="_hhnXEDeqEduCsbgJNeFsSw" orderingGuide=""
							suppressed="false" presentationName="Risk List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0pWNA8lgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_Ckay8Cc_EduIsqH1Q6ZuqA
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="manage_iteration" briefDescription=""
					id="_0nJNkclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					global="false" authors="" changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="manage_iteration"
						briefDescription="Initiate the iteration and assign work to team members. Monitor and communicate project status to external stakeholders. Identify and handle exceptions and problems."
						id="_0nJNkslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Plan and Manage Iteration"
						hasMultipleOccurrences="false" isOptional="false"
						isPlanned="false" prefix="" isEventDriven="false" isOngoing="true"
						isRepeatable="false" IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="_mtb-6PL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="" externalId="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="project_manager" briefDescription=""
							id="_mZDP4FY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false"
							presentationName="Project Manager" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_TPsdoUmSEduO0bs89Khm8Q
							</ResponsibleFor>
							<ResponsibleFor>
								_DUCuoDk-EduFTqg5hiiQIw
							</ResponsibleFor>
							<ResponsibleFor>
								_oNnk0FY5EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_mZt-QFY5EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_mZVjwFY5EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="iteration_plan"
							briefDescription="" id="_mZVjwFY5EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Iteration Plan"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0aQBEslgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="project_plan"
							briefDescription="" id="_mZt-QFY5EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Project Plan"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0a6vcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="plan_iteration" briefDescription=""
							id="_SZICAEmSEduO0bs89Khm8Q" orderingGuide="" suppressed="false"
							presentationName="Plan Iteration" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="false" prefix=""
							isEventDriven="false" isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0keUEMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_mZDP4FY5EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_DT8oATk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oADk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oAjk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oAzk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oBTk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_mZt-QFY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_oNnk0FY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<OptionalInput>
								_SZOIoEmSEduO0bs89Khm8Q
							</OptionalInput>
							<OptionalInput>
								_SZOIoUmSEduO0bs89Khm8Q
							</OptionalInput>
							<Output>_mZVjwFY5EdqI9sTOt2pjHw</Output>
							<Output>_oNnk0FY5EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="manage_iteration" briefDescription=""
							id="_oNJDsFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false"
							presentationName="Manage Iteration"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_8S2aICbYEdqh1LYUOGRh2A</Task>
							<PerformedPrimarilyBy>
								_mZDP4FY5EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_DT8oADk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oATk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oAjk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oAzk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oBDk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oBTk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_mZVjwFY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_mZt-QFY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_oNnk0FY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_DUCuoDk-EduFTqg5hiiQIw
							</MandatoryInput>
							<Output>_mZVjwFY5EdqI9sTOt2pjHw</Output>
							<Output>_mZt-QFY5EdqI9sTOt2pjHw</Output>
							<Output>_oNnk0FY5EdqI9sTOt2pjHw</Output>
							<Output>_DUCuoDk-EduFTqg5hiiQIw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="work_items_list"
							briefDescription="" id="_oNnk0FY5EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Work Items List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_rGNWsCbSEdqh1LYUOGRh2A
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="analyst" briefDescription="" id="_DT8oADk-EduFTqg5hiiQIw"
							orderingGuide="" suppressed="false" presentationName="Analyst"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_SZOIoUmSEduO0bs89Khm8Q
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="architect" briefDescription="" id="_DT8oATk-EduFTqg5hiiQIw"
							orderingGuide="" suppressed="false" presentationName="Architect"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_SZOIoEmSEduO0bs89Khm8Q
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="tester" briefDescription="" id="_DT8oAjk-EduFTqg5hiiQIw"
							orderingGuide="" suppressed="false" presentationName="Tester"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="developer" briefDescription="" id="_DT8oAzk-EduFTqg5hiiQIw"
							orderingGuide="" suppressed="false" presentationName="Developer"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="any_role" briefDescription="" id="_DT8oBDk-EduFTqg5hiiQIw"
							orderingGuide="" suppressed="false" presentationName="Any Role"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0dsWoMlgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="stakeholder" briefDescription=""
							id="_DT8oBTk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false"
							presentationName="Stakeholder" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="risk_list"
							briefDescription="" id="_DUCuoDk-EduFTqg5hiiQIw" orderingGuide=""
							suppressed="false" presentationName="Risk List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_Ckay8Cc_EduIsqH1Q6ZuqA
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="architecture"
							briefDescription="" id="_SZOIoEmSEduO0bs89Khm8Q" orderingGuide=""
							suppressed="false" presentationName="Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0XAf0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="vision"
							briefDescription="" id="_SZOIoUmSEduO0bs89Khm8Q" orderingGuide=""
							suppressed="false" presentationName="Vision"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0WVxcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="assess_results" briefDescription=""
							id="_TPsdoEmSEduO0bs89Khm8Q" orderingGuide="" suppressed="false"
							presentationName="Assess Results" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="false" prefix=""
							isEventDriven="false" isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0l53cMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_mZDP4FY5EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_DT8oBTk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<AdditionallyPerformedBy>
								_DT8oBDk-EduFTqg5hiiQIw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_mZVjwFY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_mZt-QFY5EdqI9sTOt2pjHw
							</MandatoryInput>
							<OptionalInput>
								_TPsdoUmSEduO0bs89Khm8Q
							</OptionalInput>
							<OptionalInput>
								_SZOIoUmSEduO0bs89Khm8Q
							</OptionalInput>
							<Output>_TPsdoUmSEduO0bs89Khm8Q</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="status_assessment"
							briefDescription="" id="_TPsdoUmSEduO0bs89Khm8Q" orderingGuide=""
							suppressed="false" presentationName="Status Assessment"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nJNkslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0bA2EMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ProcessPackage" name="Intent"
				briefDescription="" id="_TFSlkDboEduMn613sF6-Uw" orderingGuide=""
				suppressed="false" global="false">
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="ongoing_tasks" briefDescription=""
					id="_0pJ_xclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					global="false" authors="" changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="ongoing_tasks"
						briefDescription="Perform ongoing tasks that are not necessarily part of project schedule."
						id="_0pJ_xslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Ongoing Tasks" hasMultipleOccurrences="true"
						isOptional="false" isPlanned="false" prefix=""
						isEventDriven="true" isOngoing="true" isRepeatable="false"
						IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="_mtb-9PL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="1.0.0" usageGuidance=""
							externalId="">
							<MainDescription><![CDATA[<p>
    This activity&nbsp;includes a single task, <a class="elementLink" href="./../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html" guid="_0mwzEclgEdmt3adZL5Dmdw">Request Change</a>. This task&nbsp;may occur anytime during the lifecycle in response to an observed defect, a desired
    enhancement, or a change request. It is not planned,&nbsp;which means it does&nbsp;not appear as a scheduled activity
    on the project plan, iteration plan or work items list. Nevertheless, it is a critical activity that must be performed
    to ensure project success in an environment that is not static.
</p>
<p>
    <a class="elementLink" href="./../../openup_basic/roles/any_role,_0dsWoMlgEdmt3adZL5Dmdw.html" guid="_0dsWoMlgEdmt3adZL5Dmdw">Any Role</a>&nbsp;may perform this task, however the most common sources of&nbsp;<a class="elementLink" href="./../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html" guid="_6jdvECb3Edqh1LYUOGRh2A">Change Requests</a> are&nbsp;<a class="elementLink" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholder</a>s (enhancement requests and change requests) and&nbsp;<a class="elementLink" href="./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html" guid="_0ZM4MclgEdmt3adZL5Dmdw">Tester</a>s (defect reports).
</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="any_role" briefDescription="" id="_4x060FY1EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Any Role"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0pJ_xslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0dsWoMlgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="request_change" briefDescription=""
							id="_5LsMUFY1EdqI9sTOt2pjHw" orderingGuide="" suppressed="false"
							presentationName="Request Change" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="false" prefix=""
							isEventDriven="false" isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0pJ_xslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0mwzEclgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_4x060FY1EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<OptionalInput>
								_5M7icFY1EdqI9sTOt2pjHw
							</OptionalInput>
							<Output>_5M7icFY1EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="work_items_list"
							briefDescription="" id="_5M7icFY1EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Work Items List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0pJ_xslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_rGNWsCbSEdqh1LYUOGRh2A
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="manage_requirements" briefDescription=""
					id="_0o9ygMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					global="false" authors="" changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="manage_requirements"
						briefDescription="Detail a set of requirements (one or more use cases, scenarios or supporting requirements)."
						id="_0o9ygclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Manage Requirements"
						hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="_mtb-8_L5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="1.0.0" usageGuidance=""
							externalId="">
							<MainDescription><![CDATA[<p>
    This activity describes the tasks performed to&nbsp;gather, specify, analyze and&nbsp;validate&nbsp;a subset of
    system's&nbsp;requirements&nbsp;prior to&nbsp;implementation and verification. This does not imply that all
    requirements are detailed prior to commencing implementation. Rather, this activity is performed throughout the
    lifecycle with <a class="elementLink" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholder</a>s and the entire development team collaborating to ensure that a clear,
    consistent, correct, verifiable, and feasible&nbsp;set of requirements&nbsp;is available, as needed, to drive
    implementation and verification.
</p>
<p>
    During Inception, the focus is on&nbsp;gaining agreement on&nbsp;the problem to be solved, gathering stakeholder needs
    and capturing high-level system features&nbsp;(see activity <a class="elementLink" href="./../../openup_basic/capabilitypatterns/initiate_project,_0pWNA8lgEdmt3adZL5Dmdw.html" guid="_0pWNA8lgEdmt3adZL5Dmdw">Initiate Project</a>).
</p>
<p>
    During Elaboration, the focus shifts to defining the solution. This consists of&nbsp;finding those requirements that
    have most value to stakeholders, that are particularly challenging or risky, or that are architecturally significant
    (See <a class="elementLinkWithType" href="./../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html" guid="_P9cMUPV_EdmdHa9MmVPgqQ">Task: Find and Outline Requirements</a>).&nbsp;Requirements&nbsp;that
    are&nbsp;prioritized, via the <a class="elementLink" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Work Items List</a>,&nbsp;for implementation in the early iterations are then described
    in sufficient detail to validate the development teams understanding of the requirements, to ensure concurrence with
    stakeholders, and to permit software development to begin (see <a class="elementLinkWithType" href="./../../openup_basic/tasks/detail_requirements,_0e1mIMlgEdmt3adZL5Dmdw.html" guid="_0e1mIMlgEdmt3adZL5Dmdw">Task: Detail Requirements</a>). For each of these requirements, associated test cases are defined to ensure that the
    requirements are verifiable and to provide the guidance needed for verification and validation (see <a class="elementLinkWithType" href="./../../openup_basic/tasks/create_test_case,_0iwc0clgEdmt3adZL5Dmdw.html" guid="_0iwc0clgEdmt3adZL5Dmdw">Task: Create Test Cases</a>).
</p>
<p>
    During Construction, the focus shifts to refining the system definition<em>.</em> This consists of detailing the
    remaining requirements and associated test cases as needed to drive implementation and verification, and managing
    requirements change (see&nbsp;activity <a class="elementLink" href="./../../openup_basic/capabilitypatterns/ongoing_tasks,_0pJ_xslgEdmt3adZL5Dmdw.html" guid="_0pJ_xslgEdmt3adZL5Dmdw">Ongoing Tasks</a>).
</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="analyst" briefDescription="" id="_wGSUwFY6EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Analyst"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_86w-oOB4EdqnKu908IEluw
							</ResponsibleFor>
							<ResponsibleFor>
								_4dgQAL-FEdqb7N6KIeDL8Q
							</ResponsibleFor>
							<ResponsibleFor>
								_Y5DAMb-EEdqb7N6KIeDL8Q
							</ResponsibleFor>
							<ResponsibleFor>
								_wG28gFY6EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_wGw14FY6EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_wGeiAFY6EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="use_case"
							briefDescription="" id="_wGeiAFY6EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Use Case"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0VGbUMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="vision"
							briefDescription="" id="_wGw14FY6EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Vision"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0WVxcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="uc_model"
							briefDescription="" id="_wG28gFY6EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Use-Case Model"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_W2SgEDR5EdutE_HNDTJk5Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="find_and_outline_requirements" briefDescription=""
							id="_Y42y8L-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Find and Outline Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_P9cMUPV_EdmdHa9MmVPgqQ</Task>
							<PerformedPrimarilyBy>
								_wGSUwFY6EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_2tHGoMAYEdqX-s4mWhkyqQ
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_86w-oOB4EdqnKu908IEluw
							</MandatoryInput>
							<MandatoryInput>
								_wGw14FY6EdqI9sTOt2pjHw
							</MandatoryInput>
							<Output>_Y5DAML-EEdqb7N6KIeDL8Q</Output>
							<Output>_Y5DAMb-EEdqb7N6KIeDL8Q</Output>
							<Output>_86w-oOB4EdqnKu908IEluw</Output>
							<Output>_4dgQAL-FEdqb7N6KIeDL8Q</Output>
							<Output>_wGeiAFY6EdqI9sTOt2pjHw</Output>
							<Output>_wG28gFY6EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="work_items_list"
							briefDescription="" id="_Y5DAML-EEdqb7N6KIeDL8Q" orderingGuide=""
							suppressed="false" presentationName="Work Items List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_rGNWsCbSEdqh1LYUOGRh2A
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor"
							name="supporting_requirements" briefDescription=""
							id="_Y5DAMb-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Supporting Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_BVh9cL-CEdqb7N6KIeDL8Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="detail_requirements" briefDescription=""
							id="_ZRfVYL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Detail Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0e1mIMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_wGSUwFY6EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_2tHGoMAYEdqX-s4mWhkyqQ
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_Y5DAMb-EEdqb7N6KIeDL8Q
							</MandatoryInput>
							<MandatoryInput>
								_wGw14FY6EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_86w-oOB4EdqnKu908IEluw
							</MandatoryInput>
							<MandatoryInput>
								_wGeiAFY6EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_wG28gFY6EdqI9sTOt2pjHw
							</MandatoryInput>
							<Output>_Y5DAMb-EEdqb7N6KIeDL8Q</Output>
							<Output>_wGw14FY6EdqI9sTOt2pjHw</Output>
							<Output>_86w-oOB4EdqnKu908IEluw</Output>
							<Output>_wGeiAFY6EdqI9sTOt2pjHw</Output>
							<Output>_4dgQAL-FEdqb7N6KIeDL8Q</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="actor"
							briefDescription="" id="_4dgQAL-FEdqb7N6KIeDL8Q" orderingGuide=""
							suppressed="false" presentationName="Actor"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0VMh8MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="stakeholder" briefDescription=""
							id="_2tHGoMAYEdqX-s4mWhkyqQ" orderingGuide="" suppressed="false"
							presentationName="Stakeholder" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="glossary"
							briefDescription="" id="_86w-oOB4EdqnKu908IEluw" orderingGuide=""
							suppressed="false" presentationName="Glossary"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_Wn7HcNcEEdqz_d2XWoVt6Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="create_test_case" briefDescription=""
							id="_kFwgIDbsEduMn613sF6-Uw" orderingGuide="" suppressed="false"
							presentationName="Create Test Cases"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0iwc0clgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_kF8tYDbsEduMn613sF6-Uw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_wGSUwFY6EdqI9sTOt2pjHw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_wGeiAFY6EdqI9sTOt2pjHw
							</MandatoryInput>
							<OptionalInput>
								_kF8tYTbsEduMn613sF6-Uw
							</OptionalInput>
							<Output>_kF8tYTbsEduMn613sF6-Uw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="tester" briefDescription="" id="_kF8tYDbsEduMn613sF6-Uw"
							orderingGuide="" suppressed="false" presentationName="Tester"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_kF8tYTbsEduMn613sF6-Uw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_case"
							briefDescription="" id="_kF8tYTbsEduMn613sF6-Uw" orderingGuide=""
							suppressed="false" presentationName="Test Case"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0o9ygclgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0ZS-0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
			</MethodPackage>
			<MethodPackage xsi:type="uma:ProcessPackage" name="Solution"
				briefDescription="" id="_XzhPQDboEduMn613sF6-Uw" orderingGuide=""
				suppressed="false" global="false">
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="define_architecture" briefDescription=""
					id="_0sx7iclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					global="false" authors="" changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="define_architecture"
						briefDescription="This activity completes the architecture for an iteration."
						id="_0sx7islgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Define the Architecture"
						hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="_mtb_DvL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="1.0.0" usageGuidance=""
							externalId="">
							<MainDescription><![CDATA[<p>
    This activity:
</p>
<ul>
    <li>
        Provides the natural <b>transition from analysis</b> activities <b>to design</b> activities, identifying: 
        <ul>
            <li>
                appropriate design elements from analysis elements
            </li>
            <li>
                appropriate design mechanisms from related analysis mechanisms
            </li>
        </ul>
    </li>
    <li>
        <b>Describes</b> the organization of the system's <b>run-time and deployment architecture</b>
    </li>
    <li>
        <b>Organizes the implementation</b> so as to make the transition between design and implementation seamless
    </li>
    <li>
        <b>Maintains the consistency and integrity of the architecture</b>, ensuring that: 
        <ul>
            <li>
                new design elements identified for the current iteration are integrated with pre-existing design elements.
            </li>
            <li>
                maximal re-use of available components and design elements is achieved as early as possible in the design
                effort.
            </li>
        </ul>
    </li>
</ul>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff><![CDATA[<p>
    These activities are best carried out by a small team staffed by cross-functional team members. Issues that are
    typically architecturally significant include usability, performance, scaling, process and thread synchronization, and
    distribution. The team should also include members with domain experience who can identify key abstractions. The team
    should also have experience with model organization and layering. The team will need to be able to pull all these
    disparate threads into a cohesive, coherent (albeit preliminary) architecture.
</p>
<p>
    Because the focus of the architecture effort is shifting toward implementation issues, greater attention needs to be
    paid to specific technology issues. This will force the architecture team to shift members or expand to include people
    with distribution and deployment expertise (if those issues are architecturally significant). In order to understand
    the potential impact of the structure on the implementation model on the ease of integration, expertise in the software
    build management process is useful to have.
</p>
<p>
    At the same time, it is essential that the architecture team not be composed of a large extended team. A strategy for
    countering this trend is to retain a relatively small core team with a satellite group of extended team members that
    are brought in as "consultants" on key issues<b>.</b> This structure also works well for smaller projects where
    specific expertise may be borrowed or contracted from other organizations; they can be brought in as specific issues
    need to be addressed.
</p>]]></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes><![CDATA[<p>
    The work is best done in several sessions, perhaps performed over a few days (or weeks and months for very large
    systems). The initial focus will be on the identifying <a class="elementLinkWithType" href="./../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html" guid="_w2ACwA4LEduibvKwrGxWxA">Concept: Design Mechanism</a>s&nbsp;and&nbsp;specifiying the&nbsp;important&nbsp;design
    elements.&nbsp;Care should also be taken to incorporate existing design elements to ensure that new&nbsp;design do not
    duplicate existing functionality.
</p>
<p>
    As the design emerges, concurrency and distribution issues are introduced. As these issues are considered, changes to
    design elements may be required to split behavior across processes, threads or nodes.
</p>
<p>
    As the individual models are refined to incorporate the architectural decisions, the results are documented in the
    Architecture description. The resulting architecture is reviewed.
</p>]]></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="architect" briefDescription="" id="_d5-nQFY4EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Architect"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_d6dIYFY4EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_d6Q7IVY4EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="architecture"
							briefDescription="" id="_d6Q7IVY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0XAf0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="arch_poc"
							briefDescription="" id="_d6dIYFY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false"
							presentationName="Architectural Proof-of-Concept"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_PoDR0NbYEdmlO4WLYHrJaQ
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="define_architecture" briefDescription=""
							id="_ukbHgL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Define the Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0f-1oMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_d5-nQFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_VZk0YxeDEduXJrZWmtC8tg
							</MandatoryInput>
							<MandatoryInput>
								_VZk0ZBeDEduXJrZWmtC8tg
							</MandatoryInput>
							<MandatoryInput>
								_r1Xe0DeqEduCsbgJNeFsSw
							</MandatoryInput>
							<OptionalInput>
								_uknUwb-EEdqb7N6KIeDL8Q
							</OptionalInput>
							<OptionalInput>
								_d6Q7IVY4EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_d6dIYFY4EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_uknUwL-EEdqb7N6KIeDL8Q
							</OptionalInput>
							<Output>_d6Q7IVY4EdqI9sTOt2pjHw</Output>
							<Output>_uknUwb-EEdqb7N6KIeDL8Q</Output>
							<Output>_d6dIYFY4EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor"
							name="supporting_requirements" briefDescription=""
							id="_uknUwL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Supporting Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_BVh9cL-CEdqb7N6KIeDL8Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="design"
							briefDescription="" id="_uknUwb-EEdqb7N6KIeDL8Q" orderingGuide=""
							suppressed="false" presentationName="Design"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0WuL8slgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="refine_architecture" briefDescription=""
							id="_vAmGIL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Refine the Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_d5-nQFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_r1QxIDeqEduCsbgJNeFsSw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_uknUwb-EEdqb7N6KIeDL8Q
							</MandatoryInput>
							<MandatoryInput>
								_d6Q7IVY4EdqI9sTOt2pjHw
							</MandatoryInput>
							<Output>_uknUwb-EEdqb7N6KIeDL8Q</Output>
							<Output>_d6Q7IVY4EdqI9sTOt2pjHw</Output>
							<Output>_d6dIYFY4EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="glossary"
							briefDescription="" id="_VZk0YxeDEduXJrZWmtC8tg" orderingGuide=""
							suppressed="false" presentationName="Glossary"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_Wn7HcNcEEdqz_d2XWoVt6Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="vision"
							briefDescription="" id="_VZk0ZBeDEduXJrZWmtC8tg" orderingGuide=""
							suppressed="false" presentationName="Vision"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0WVxcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="project_manager" briefDescription=""
							id="_r1QxIDeqEduCsbgJNeFsSw" orderingGuide="" suppressed="false"
							presentationName="Project Manager" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="uc_model"
							briefDescription="" id="_r1Xe0DeqEduCsbgJNeFsSw" orderingGuide=""
							suppressed="false" presentationName="Use Case Model"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sx7islgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_W2SgEDR5EdutE_HNDTJk5Q
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="determine_architectural_feasibility" briefDescription=""
					id="_0sluQclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
					global="false" authors="" changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="determine_architectural_feasibility"
						briefDescription="Confirm that the project is feasible by constructing an architectural proof-of-concept."
						id="_0sluQslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Determine Architectural Feasibility"
						hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="_mtb_DfL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="1.0.0" usageGuidance=""
							externalId="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff><![CDATA[<p>
    As with <a class="elementLinkWithType" href="./../../openup_basic/capabilitypatterns/define_architecture,_0rcewclgEdmt3adZL5Dmdw.html" guid="_0rcewclgEdmt3adZL5Dmdw">Activity: Define the Architecture</a>, this activity is best carried out by a small team
    staffed by cross-functional team members. Issues that are typically architecturally significant include performance,
    scaling, process and thread synchronization, and distribution. The team should also include members with domain
    experience who can identify key abstractions. The team should also have experience with model organization and
    layering. From these inputs, the team will need to be able to synthesize a model, or even a prototype, of a solution.
</p>]]></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes><![CDATA[<p>
    The major effort occurs early in the Inception phase; thereafter, the system should be assessed at&nbsp;every iteration
    to ensure that the design is still on track with the architecture (see <a class="elementLinkWithType" href="./../../openup_basic/capabilitypatterns/manage_iteration,_0nJNkslgEdmt3adZL5Dmdw.html" guid="_0nJNkslgEdmt3adZL5Dmdw">Capability Pattern: Plan and Manage Iteration</a>).
</p>]]></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="architect" briefDescription="" id="_qQROgFY4EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Architect"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_qQ12QFY4EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_qQppAFY4EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="design"
							briefDescription="" id="_qQjiYFY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Design"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0WuL8slgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="architecture"
							briefDescription="" id="_qQppAFY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0XAf0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="arch_poc"
							briefDescription="" id="_qQ12QFY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false"
							presentationName="Architectural Proof-of-Concept"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_PoDR0NbYEdmlO4WLYHrJaQ
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="developer" briefDescription="" id="_qoEDcFY4EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Developer"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_qQjiYFY4EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="define_architecture" briefDescription=""
							id="_lqOzsL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Define the Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0f-1oMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_qQROgFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_g2XAwheDEduXJrZWmtC8tg
							</MandatoryInput>
							<MandatoryInput>
								_mKmV0L-EEdqb7N6KIeDL8Q
							</MandatoryInput>
							<MandatoryInput>
								_HTpzcDSLEdursMWmT1aZyw
							</MandatoryInput>
							<OptionalInput>
								_qQjiYFY4EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_qQppAFY4EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_qQ12QFY4EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_lqbA8L-EEdqb7N6KIeDL8Q
							</OptionalInput>
							<Output>_qQppAFY4EdqI9sTOt2pjHw</Output>
							<Output>_qQjiYFY4EdqI9sTOt2pjHw</Output>
							<Output>_qQ12QFY4EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor"
							name="supporting_requirements" briefDescription=""
							id="_lqbA8L-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Supporting Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_BVh9cL-CEdqb7N6KIeDL8Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="demonstrate_architecture" briefDescription=""
							id="_mKUB8L-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Demonstrate the Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0hmmQclgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_qQROgFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_qoEDcFY4EdqI9sTOt2pjHw
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_mKmV0L-EEdqb7N6KIeDL8Q
							</MandatoryInput>
							<MandatoryInput>
								_lqbA8L-EEdqb7N6KIeDL8Q
							</MandatoryInput>
							<MandatoryInput>
								_qQppAFY4EdqI9sTOt2pjHw
							</MandatoryInput>
							<OptionalInput>
								_HTpzcDSLEdursMWmT1aZyw
							</OptionalInput>
							<Output>_qQ12QFY4EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="vision"
							briefDescription="" id="_mKmV0L-EEdqb7N6KIeDL8Q" orderingGuide=""
							suppressed="false" presentationName="Vision"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0WVxcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="glossary"
							briefDescription="" id="_g2XAwheDEduXJrZWmtC8tg" orderingGuide=""
							suppressed="false" presentationName="Glossary"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_Wn7HcNcEEdqz_d2XWoVt6Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="uc_model"
							briefDescription="" id="_HTpzcDSLEdursMWmT1aZyw" orderingGuide=""
							suppressed="false" presentationName="Use Case Model"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0sluQslgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_W2SgEDR5EdutE_HNDTJk5Q
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="develop_solution" briefDescription=""
					id="_h2-iAPimEdmugcVr9AdHjQ" orderingGuide="" suppressed="false"
					global="false" authors="" changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="develop_solution"
						briefDescription="Design, implement, test and integrate the solution for a requirement within a given context."
						id="_h2-iAfimEdmugcVr9AdHjQ" orderingGuide="" suppressed="false"
						presentationName="Develop Solution (for requirement) (within context)"
						hasMultipleOccurrences="true" isOptional="false" isPlanned="true"
						prefix="" isEventDriven="false" isOngoing="false"
						isRepeatable="false" IsEnactable="false" variabilityType="na">
						<OwnedRule name="diagram" briefDescription=""
							id="_Prih4DR_EduGhYMJfagftQ" orderingGuide="" suppressed="false"
							mainDescription="ad_image_uri=|publish_ad_image=false|add_image_uri=|publish_add_image=false|wpd_image_uri=|publish_wpd_image=false" />
						<Presentation xsi:type="uma:ProcessDescription"
							name="develop_sr_within_scope,_h2-iAfimEdmugcVr9AdHjQ"
							briefDescription="" id="_h6zSEPimEdmugcVr9AdHjQ" orderingGuide=""
							suppressed="false" authors="" changeDescription=""
							version="1.0.0" usageGuidance="" externalId="">
							<MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Project managers use this Capability Pattern&nbsp;as a way to&nbsp;perform a goal-based planning and management. Work
    is assigned to developers and work progress is tracked&nbsp;based on the goals to be achieved using the designed,
    unit-tested, and&nbsp;integrated&nbsp;source code.
</p>
<h4>
    Context of what is being developed
</h4>
<p>
    A context can be specified when a requirement is assigned to be developed, thus specifying how broadly a requirement is
    to be developed in a iteration. Development&nbsp;may focus&nbsp;on a layer (such as the user interface, business logic,
    or&nbsp;database access),&nbsp;on a component, and so on.
</p>
<p>
    Whether a context is specified or not, the developer's responsibility is to create a design and implementation for that
    requirement, then to&nbsp;write and run unit tests against the implementation to make sure the&nbsp;implementation
    works as designed, both as a unit&nbsp;and&nbsp;integrated into the code base.
</p>
<h4>
    Overview of workflow
</h4>
<p>
    To accommodate major changes or&nbsp;major functionality to be developed, architecture may have to be refined. Small
    changes and functionality may reflect changes on the design only, with no need to refine the architecture. For trivial
    changes and functionality to be developed, only the source code may be affected.
</p>
<p>
    In any case, there is no strict sequence for how writing code and creating or running &nbsp;developer tests should
    happen, because they can happen in parallel.&nbsp;You may choose to create and run developer tests before the actual
    code is created or the reverse sequence.
</p>]]></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose><![CDATA[<ul>
    <li>
        For developers: To create a solution for the requirement assigned to them
    </li>
    <li>
        For project managers: To have a goal-based way of assigning work and tracking project status
    </li>
</ul>]]></Purpose>
							<Scope></Scope>
							<UsageNotes><![CDATA[<p>
    This Capability Pattern occurs multiple times during each iteration. Usually, there is one instance for each
    requirement planned for that iteration. When instantiated in a project plan, the pattern becomes a development task to
    be assigned to a developer, and it should be renamed to include the actual requirement name.&nbsp;Optionally, the word
    <strong>Solution</strong> may be suppressed, then you can instantiate the pattern this way:
</p>
<blockquote>
    <p align="left">
        Develop <font face="Courier New, Courier, mono">requirement_name</font> (within <font         face="Courier New, Courier, mono">context_name</font> context)
    </p>
</blockquote>
<p>
    If&nbsp;a context&nbsp;is specified, there will be one instance of this pattern for each requirement&nbsp;for each
    context.
</p>
<blockquote>
    <p>
        <strong>Example</strong>
    </p>
    <ol>
        <li>
            Develop <font face="Courier New, Courier, mono">scenario 1</font> (within <font             face="Courier New, Courier, mono">user interface</font> context)
        </li>
        <li>
            Develop <font face="Courier New, Courier, mono">scenario 1</font> (within <font             face="Courier New, Courier, mono">business logic and DB access</font> context)
        </li>
        <li>
            Develop <font face="Courier New, Courier, mono">scenario 2</font>
        </li>
        <li>
            Develop <font face="Courier New, Courier, mono">supplemental requirement 1</font>
        </li>
    </ol>
</blockquote>
<p>
    Note that there are four instances of this pattern in the preceding example:
</p>
<ul>
    <li>
        The first two are related to the same requirement (scenario 1) but within two different contexts
    </li>
    <li>
        The last two are related to different requirements, with no context specified.
    </li>
</ul>]]></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="developer" briefDescription="" id="_9kUSEFY4EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Developer"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_AdllQFY5EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_-Y3UcFY4EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_-YrHMFY4EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_9k_AcFY4EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="design"
							briefDescription="" id="_9k_AcFY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Design"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0WuL8slgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="implementation"
							briefDescription="" id="_-YrHMFY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Implementation"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0YoQcMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="developer_test"
							briefDescription="" id="_-Y3UcFY4EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Developer Test"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0YuXEclgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="build"
							briefDescription="" id="_AdllQFY5EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Build"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0YuXEMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="refine_architecture" briefDescription=""
							id="_iJwqcDLvEdueZPye-FaNgA" orderingGuide="" suppressed="false"
							presentationName="Refine the Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="false">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_rQ9xIMjkEdqIm8AJUZUQYg
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_-5MmMDL2EdueZPye-FaNgA
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_9k_AcFY4EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_cMHeAb-FEdqb7N6KIeDL8Q
							</MandatoryInput>
							<Output>_9k_AcFY4EdqI9sTOt2pjHw</Output>
							<Output>_cMHeAb-FEdqb7N6KIeDL8Q</Output>
							<Output>_iJ2xFDLvEdueZPye-FaNgA</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="design_solution" briefDescription=""
							id="_cL1KIL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Design the Solution"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Predecessor linkType="finishToFinish"
								id="_TiPK8DLwEdueZPye-FaNgA">
								_iJwqcDLvEdueZPye-FaNgA
							</Predecessor>
							<Task>_0fshwMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_9kUSEFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<AdditionallyPerformedBy>
								_rQ9xIMjkEdqIm8AJUZUQYg
							</AdditionallyPerformedBy>
							<MandatoryInput>
								_cMHeAL-FEdqb7N6KIeDL8Q
							</MandatoryInput>
							<MandatoryInput>
								_cMHeAb-FEdqb7N6KIeDL8Q
							</MandatoryInput>
							<MandatoryInput>
								_QN4E4ALlEduHjPEP_YPH-g
							</MandatoryInput>
							<OptionalInput>
								_9k_AcFY4EdqI9sTOt2pjHw
							</OptionalInput>
							<Output>_9k_AcFY4EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor"
							name="supporting_requirements" briefDescription=""
							id="_cMHeAL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Supporting Requirements"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_BVh9cL-CEdqb7N6KIeDL8Q
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="architecture"
							briefDescription="" id="_cMHeAb-FEdqb7N6KIeDL8Q" orderingGuide=""
							suppressed="false" presentationName="Architecture"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0XAf0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="implement_solution" briefDescription=""
							id="_dAoEIL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Implement the Solution"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Task>_0hyzgMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_9kUSEFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_9k_AcFY4EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_cMHeAb-FEdqb7N6KIeDL8Q
							</MandatoryInput>
							<OptionalInput>
								_-YrHMFY4EdqI9sTOt2pjHw
							</OptionalInput>
							<Output>_-YrHMFY4EdqI9sTOt2pjHw</Output>
							<Output>_AdllQFY5EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="impl_developer_tests" briefDescription=""
							id="_cnzUcL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Implement Developer Tests"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Task>_0iL1EMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_9kUSEFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_-YrHMFY4EdqI9sTOt2pjHw
							</MandatoryInput>
							<OptionalInput>
								_9k_AcFY4EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_RfwvEDOvEduqsLmIADMQ9g
							</OptionalInput>
							<Output>_-Y3UcFY4EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="run_developer_tests" briefDescription=""
							id="_d4GesL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false"
							presentationName="Run Developer Tests"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Predecessor linkType="finishToStart"
								id="_b3VBsE2LEdulj4et_mPAkg">
								_cnzUcL-FEdqb7N6KIeDL8Q
							</Predecessor>
							<Task>_0iYCUMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_9kUSEFY4EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_-Y3UcFY4EdqI9sTOt2pjHw
							</MandatoryInput>
							<MandatoryInput>
								_-YrHMFY4EdqI9sTOt2pjHw
							</MandatoryInput>
							<Output>_d4k_0L-FEdqb7N6KIeDL8Q</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_log"
							briefDescription="" id="_d4k_0L-FEdqb7N6KIeDL8Q" orderingGuide=""
							suppressed="false" presentationName="Test Log"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0ZlSsMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="architect" briefDescription="" id="_rQ9xIMjkEdqIm8AJUZUQYg"
							orderingGuide="" suppressed="false" presentationName="Architect"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_iJ2xFDLvEdueZPye-FaNgA
							</ResponsibleFor>
							<ResponsibleFor>
								_cMHeAb-FEdqb7N6KIeDL8Q
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="use_case"
							briefDescription="" id="_QN4E4ALlEduHjPEP_YPH-g" orderingGuide=""
							suppressed="false" presentationName="Use Case"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0VGbUMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="arch_poc"
							briefDescription="" id="_iJ2xFDLvEdueZPye-FaNgA" orderingGuide=""
							suppressed="false"
							presentationName="Architectural Proof-of-Concept"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_PoDR0NbYEdmlO4WLYHrJaQ
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="project_manager" briefDescription=""
							id="_-5MmMDL2EdueZPye-FaNgA" orderingGuide="" suppressed="false"
							presentationName="Project Manager" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="true" prefix=""
							isSynchronizedWithSource="true">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_script"
							briefDescription="" id="_RfwvEDOvEduqsLmIADMQ9g" orderingGuide=""
							suppressed="false" presentationName="Test Script"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_h2-iAfimEdmugcVr9AdHjQ
							</SuperActivity>
							<WorkProduct>
								_0ZfMEMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
				<MethodPackage xsi:type="uma:ProcessComponent"
					name="test" briefDescription="" id="_0nz79MlgEdmt3adZL5Dmdw"
					orderingGuide="" suppressed="false" global="false" authors=""
					changeDescription="" version="">
					<Process xsi:type="uma:CapabilityPattern"
						name="test"
						briefDescription="Test and evaluate the requirements developed, from system perspective."
						id="_0nz79clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
						presentationName="Test" hasMultipleOccurrences="true"
						isOptional="false" isPlanned="true" prefix=""
						isEventDriven="false" isOngoing="false" isRepeatable="false"
						IsEnactable="false" variabilityType="na">
						<Presentation xsi:type="uma:ProcessDescription"
							name="" briefDescription="" id="_mtb-6vL5Edm6Nvont3uinw"
							orderingGuide="" suppressed="false" authors=""
							changeDescription="" version="" usageGuidance="" externalId="">
							<MainDescription></MainDescription>
							<KeyConsiderations></KeyConsiderations>
							<Alternatives></Alternatives>
							<HowToStaff></HowToStaff>
							<Purpose></Purpose>
							<Scope></Scope>
							<UsageNotes></UsageNotes>
						</Presentation>
						<BreakdownElement xsi:type="uma:RoleDescriptor"
							name="tester" briefDescription="" id="_a6qBUFY2EdqI9sTOt2pjHw"
							orderingGuide="" suppressed="false" presentationName="Tester"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
							<ResponsibleFor>
								_oSQYEL3SEdqfrv3k16plXw
							</ResponsibleFor>
							<ResponsibleFor>
								_a_F1YFY2EdqI9sTOt2pjHw
							</ResponsibleFor>
							<ResponsibleFor>
								_a8fNUFY2EdqI9sTOt2pjHw
							</ResponsibleFor>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_case"
							briefDescription="" id="_a8fNUFY2EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Test Case"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0ZS-0MlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_script"
							briefDescription="" id="_a_F1YFY2EdqI9sTOt2pjHw" orderingGuide=""
							suppressed="false" presentationName="Test Script"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0ZfMEMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="implement_tests" briefDescription=""
							id="_nykLZL3SEdqfrv3k16plXw" orderingGuide="" suppressed="false"
							presentationName="Implement Tests" hasMultipleOccurrences="false"
							isOptional="false" isPlanned="false" prefix=""
							isEventDriven="false" isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0jO98MlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_a6qBUFY2EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_a8fNUFY2EdqI9sTOt2pjHw
							</MandatoryInput>
							<OptionalInput>
								_a_F1YFY2EdqI9sTOt2pjHw
							</OptionalInput>
							<OptionalInput>
								_ny2fQL3SEdqfrv3k16plXw
							</OptionalInput>
							<Output>_a_F1YFY2EdqI9sTOt2pjHw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="build"
							briefDescription="" id="_ny2fQL3SEdqfrv3k16plXw" orderingGuide=""
							suppressed="false" presentationName="Build"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0YuXEMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement xsi:type="uma:TaskDescriptor"
							name="run_tests" briefDescription="" id="_oR39mb3SEdqfrv3k16plXw"
							orderingGuide="" suppressed="false" presentationName="Run Tests"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="false" prefix="" isEventDriven="false"
							isOngoing="false" isRepeatable="false"
							isSynchronizedWithSource="true">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<Task>_0jVEkMlgEdmt3adZL5Dmdw</Task>
							<PerformedPrimarilyBy>
								_a6qBUFY2EdqI9sTOt2pjHw
							</PerformedPrimarilyBy>
							<MandatoryInput>
								_ny2fQL3SEdqfrv3k16plXw
							</MandatoryInput>
							<MandatoryInput>
								_a_F1YFY2EdqI9sTOt2pjHw
							</MandatoryInput>
							<Output>_oSQYEL3SEdqfrv3k16plXw</Output>
							<Output>_os33gL3SEdqfrv3k16plXw</Output>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="test_log"
							briefDescription="" id="_oSQYEL3SEdqfrv3k16plXw" orderingGuide=""
							suppressed="false" presentationName="Test Log"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_0ZlSsMlgEdmt3adZL5Dmdw
							</WorkProduct>
						</BreakdownElement>
						<BreakdownElement
							xsi:type="uma:WorkProductDescriptor" name="work_items_list"
							briefDescription="" id="_os33gL3SEdqfrv3k16plXw" orderingGuide=""
							suppressed="false" presentationName="Work Items List"
							hasMultipleOccurrences="false" isOptional="false"
							isPlanned="true" prefix="" isSynchronizedWithSource="true"
							activityEntryState="" activityExitState="">
							<SuperActivity>
								_0nz79clgEdmt3adZL5Dmdw
							</SuperActivity>
							<WorkProduct>
								_rGNWsCbSEdqh1LYUOGRh2A
							</WorkProduct>
						</BreakdownElement>
						<DefaultContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</DefaultContext>
						<ValidContext>
							_0u-T4clgEdmt3adZL5Dmdw
						</ValidContext>
					</Process>
				</MethodPackage>
			</MethodPackage>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ProcessComponent"
			name="openup_basic_process" briefDescription=""
			id="_0uHYQclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
			global="false" authors="" changeDescription="" version="">
			<Process xsi:type="uma:DeliveryProcess"
				name="openup_basic_process"
				briefDescription="This delivery process defines a software development process that supports the  core principles of OpenUP. It is designed to support small co-located teams, consisting  of 3 to 6 team members, working on a project that will last between 3 and 6 months."
				id="_0uyGoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
				presentationName="OpenUP/Basic Lifecycle"
				hasMultipleOccurrences="false" isOptional="false" isPlanned="false"
				prefix="" isEventDriven="false" isOngoing="false"
				isRepeatable="false" IsEnactable="false" variabilityType="na">
				<OwnedRule name="diagram" briefDescription=""
					id="_u_X-YOETEdqMu-vDNOTdSg" orderingGuide="" suppressed="false"
					mainDescription="ad_image_uri=_Pt_fYBjoEduxUfEVCtmW4Q|publish_ad_image=true|add_image_uri=|publish_add_image=false|wpd_image_uri=|publish_wpd_image=false" />
				<Presentation xsi:type="uma:DeliveryProcessDescription"
					name="" briefDescription="" id="_mtb-4PL5Edm6Nvont3uinw"
					orderingGuide="" suppressed="false" authors="" changeDescription=""
					version="" usageGuidance="" externalId="">
					<MainDescription><![CDATA[<p> OpenUP/Basic is an iterative process with <a class="elementlinkwithusertext" href="./../../openup_basic/guidances/concepts/core_principle_evolve,_GXiogMvoEdqukPpotm3DYg.html" guid="_GXiogMvoEdqukPpotm3DYg">iterations</a>&nbsp;distributed 
  throughout four <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/concepts/phase,__7xOEC7aEdqHMdmRzC0-2g.html" guid="__7xOEC7aEdqHMdmRzC0-2g">phases</a>: 
  <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/inception_phase,_0hmKgBOMEduCNqgZdt_OaA.html" guid="_0hmKgBOMEduCNqgZdt_OaA">Inception</a>, 
  <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/elaboration_phase,_2plxwBOMEduCNqgZdt_OaA.html" guid="_2plxwBOMEduCNqgZdt_OaA">Elaboration</a>, 
  <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/construction_phase,_48EKsBOMEduCNqgZdt_OaA.html" guid="_48EKsBOMEduCNqgZdt_OaA">Construction</a>, 
  and <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/transition_phase,__ca5UBOMEduCNqgZdt_OaA.html" guid="__ca5UBOMEduCNqgZdt_OaA">Transition</a>. 
</p>
<p> Each phase may have as many iterations as needed, depending on degree of novelty 
  of the business domain, technology being used, architectural complexity, and 
  project size, to name a few factors. </p>
<p> To offer a quick start for teams to plan their iterations,&nbsp;OpenUP/Basic 
  provides&nbsp;work breakdown structure (WBS) templates for each iteration and 
  a WBS template for an end-to-end process. </p>
<p> Iterations may have variable lengths, depending on project characteristics. 
  One-month iterations are typically recommended, because 
  this timeframe provides: </p>
<ul>
  <li> A reasonable amount of time for projects to 
    deliver meaningful increments in functionality </li>
  <li> Early and frequent customer feedback </li>
  <li> Timely management of risks and issues during the course of the project 
  </li>
</ul>
<p> OpenUP/Basic is intended<strong> </strong>to 
  offer process guidance to small projects: </p>
<ul>
    <li>
        
    <div class="O" style="mso-margin-left-alt: 216; mso-char-wrap: 1; mso-kinsoku-overflow: 1" v:shape="_x0000_s1026"> 
      3&nbsp;to&nbsp;6 people on the team </div>
    </li>
    <li>
        
    <div class="O" style="mso-margin-left-alt: 216; mso-char-wrap: 1; mso-kinsoku-overflow: 1" v:shape="_x0000_s1026"> 
      3&nbsp;to&nbsp;6 months of work</div>
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
					<Alternatives></Alternatives>
					<HowToStaff></HowToStaff>
					<Purpose><![CDATA[<p>
    The purposes of this delivery process are to:
</p>
<ul>
    <li>
        Offer process guidance for small-scale projects
    </li>
    <li>
        Allow project managers to create project plans based on the proposed work breakdown structures
    </li>
    <li>
        Allow project managers to track status based on goals
    </li>
    <li>
        Allow&nbsp;team members&nbsp;to understand how to perform their work to achieve project goals
    </li>
    <li>
        Provide a complete, end-to-end delivery process that serves as an example for defining alternative delivery
        processes
    </li>
</ul>]]></Purpose>
					<Scope></Scope>
					<UsageNotes></UsageNotes>
					<Scale></Scale>
					<ProjectCharacteristics></ProjectCharacteristics>
					<RiskLevel></RiskLevel>
					<EstimatingTechnique></EstimatingTechnique>
					<ProjectMemberExpertise></ProjectMemberExpertise>
					<TypeOfContract></TypeOfContract>
				</Presentation>
				<BreakdownElement xsi:type="uma:Activity"
					name="inception_phase_iteration" briefDescription=""
					id="_xupMvxOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Inception Iteration [1..n]"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="false" IsEnactable="false"
					variabilityBasedOnElement="_0o3r4slgEdmt3adZL5Dmdw"
					variabilityType="extends">
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Concept>_0hmKgBOMEduCNqgZdt_OaA</Concept>
				</BreakdownElement>
				<BreakdownElement xsi:type="uma:Milestone"
					name="lifecycle_objectives"
					briefDescription="The end of the Inception phase is the first major project milestone, the Lifecycle  Objectives Milestone."
					id="_y1uwgBOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Lifecycle Objectives Milestone"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="false">
					<Presentation
						xsi:type="uma:BreakdownElementDescription"
						name="lifecycle_objectives,_mRwHoMA9EdqSgKaj2SZBmg"
						briefDescription="" id="-qk_QXyoSxOb2C-boCISB5g" orderingGuide=""
						suppressed="false" authors="" changeDescription="" version=""
						usageGuidance="">
						<MainDescription><![CDATA[<p> The Lifecycle Objectives Milestone is the first major project milestone. During 
  the iteration<a
    class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html"
    guid="_0l53cMlgEdmt3adZL5Dmdw"> assessment</a>, the following evaluation criteria 
  should be met <a
    class="elementlinkwithusertext"
    href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>: </p>
<ul>
    <li>
        Stakeholder concurrence on
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            
      <li> scope definition</li>
      <li> initial cost and schedule estimates</li>
      <li>definitions and priorities for initial set of requirements</li>
            <li>
                risks identified and mitigation strategies proposed.
            </li>
        </ul>
    </li>
</ul>
<p><br />
  Note:<strong> </strong></p>
<p>The project may be aborted or reconsidered if it fails to reach this milestone.<br />]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Predecessor linkType="finishToFinish"
						id="_8Kfm0BOSEduCNqgZdt_OaA">
						_xupMvxOKEduCNqgZdt_OaA
					</Predecessor>
				</BreakdownElement>
				<BreakdownElement xsi:type="uma:Activity"
					name="elaboration_phase_iteration" briefDescription=""
					id="_0Spa4BOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Elaboration Iteration [1..n]"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="true" IsEnactable="false"
					variabilityBasedOnElement="_0sTaYMlgEdmt3adZL5Dmdw"
					variabilityType="extends">
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Predecessor linkType="finishToFinish"
						id="_8bf3QBOSEduCNqgZdt_OaA">
						_y1uwgBOKEduCNqgZdt_OaA
					</Predecessor>
					<Concept>_2plxwBOMEduCNqgZdt_OaA</Concept>
				</BreakdownElement>
				<BreakdownElement xsi:type="uma:Milestone"
					name="lifecycle_architecture"
					briefDescription="At the end of the Elaboration phase is the second important project milestone, the Lifecycle Architecture Milestone."
					id="_16nd0BOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Lifecycle Architecture Milestone"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="false">
					<Presentation
						xsi:type="uma:BreakdownElementDescription"
						name="lifecycle_architecture,_RYHw4MA-EdqSgKaj2SZBmg"
						briefDescription="" id="-3Ul1iAI1nkD0C5AsRtjHFA" orderingGuide=""
						suppressed="false" authors="" changeDescription="" version=""
						usageGuidance="">
						<MainDescription><![CDATA[<p>
    The Lifecycle Architecture Milestone is the&nbsp;second major project milestone. During iteration <a
    class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html"
    guid="_0l53cMlgEdmt3adZL5Dmdw">assessments</a>&nbsp;in Elaboration, you should keep these&nbsp;evaluation
    criteria&nbsp;in mind&nbsp;<a class="elementlinkwithusertext"
    href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ul>
    <li>
        Stability of Vision, requirements and Architecture.
    </li>
    <li>
        Major risk elements addressed and resolved by testing and evaluating executable prototypes.
    </li>
    <li>
        Construction iterations planned in sufficient detail and&nbsp;credibly estimated&nbsp;to allow the work to proceed.
    </li>
    <li>
        Agreement of stakeholders that the current vision can be met if plans are executed to develop complete system on
        top of current architecture.
    </li>
    <li>
        Resourse expenditures versus planned expenditures are acceptable.<br />
    </li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Predecessor linkType="finishToFinish"
						id="_8s37IBOSEduCNqgZdt_OaA">
						_0Spa4BOKEduCNqgZdt_OaA
					</Predecessor>
				</BreakdownElement>
				<BreakdownElement xsi:type="uma:Activity"
					name="construction_phase_iteration" briefDescription=""
					id="_3CqrAROKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Construction Iteration [1..n]"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="true" IsEnactable="false"
					variabilityBasedOnElement="_y-3IrutQEdqc1LGhiSPqRg"
					variabilityType="extends">
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Predecessor linkType="finishToFinish"
						id="_88coMBOSEduCNqgZdt_OaA">
						_16nd0BOKEduCNqgZdt_OaA
					</Predecessor>
					<Concept>_48EKsBOMEduCNqgZdt_OaA</Concept>
				</BreakdownElement>
				<BreakdownElement xsi:type="uma:Milestone"
					name="initial_operational_capability"
					briefDescription="The end of Construction phase is the third important project milestone, the Initial  Operational Capability Milestone."
					id="_31E_YBOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Initial Operational Capability Milestone"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="false">
					<Presentation
						xsi:type="uma:BreakdownElementDescription"
						name="initial_operational_capability,_TV_y0MA-EdqSgKaj2SZBmg"
						briefDescription="" id="-Q37Qy6ke_PQDK4jr1EIdcA" orderingGuide=""
						suppressed="false" authors="" changeDescription="" version=""
						usageGuidance="">
						<MainDescription><![CDATA[<p> The Initial Operational Capability&nbsp;Milestone is the&nbsp;third major 
  project milestone. During iteration <a
    class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html"
    guid="_0l53cMlgEdmt3adZL5Dmdw">assessments</a>&nbsp;in Construction, keep 
  these&nbsp;evaluation criteria&nbsp;in mind&nbsp;<a class="elementlinkwithusertext"
    href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>: </p>
<ul>
    
  <li> Product release is stable and mature enough to be deployed in the user 
    community.</li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            
      <li> The beta product is ready to be handed over to&nbsp;the users.</li>
      <li> All functionality has been developed and all alpha testing (if any) 
        has been completed.</li>
      <li> In addition to the software, a user manual has been developed, and 
        there is a description of the current release. </li>
        </ul>
    </li>
  <li style="LIST-STYLE-TYPE: none"> </li>
  <li> Actual resource expenditures compared to planned expenditures are acceptable.</li>
</ul>
<p> Note:<strong> </strong></p>
<p>In case the project fails to reach this milestone, an iteration can be added 
  to Construction, thus postponing Transition. </p>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Predecessor linkType="finishToFinish"
						id="_9L0g8BOSEduCNqgZdt_OaA">
						_3CqrAROKEduCNqgZdt_OaA
					</Predecessor>
				</BreakdownElement>
				<BreakdownElement xsi:type="uma:Activity"
					name="transition_phase_iteration" briefDescription=""
					id="_467NIhOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Transition Iteration [1..n]"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="true" IsEnactable="false"
					variabilityBasedOnElement="_0rQRgMlgEdmt3adZL5Dmdw"
					variabilityType="extends">
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Predecessor linkType="finishToFinish"
						id="_9abksBOSEduCNqgZdt_OaA">
						_31E_YBOKEduCNqgZdt_OaA
					</Predecessor>
					<Concept>__ca5UBOMEduCNqgZdt_OaA</Concept>
				</BreakdownElement>
				<BreakdownElement xsi:type="uma:Milestone"
					name="product_release"
					briefDescription="The end of the Transition phase is the fourth important project milestone, the  Product Release Milestone, which is the result of the customer reviewing and accepting  the project deliverables."
					id="_5v0NwBOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false"
					presentationName="Product Release Milestone"
					hasMultipleOccurrences="false" isOptional="false" isPlanned="true"
					prefix="" isEventDriven="false" isOngoing="false"
					isRepeatable="false">
					<Presentation
						xsi:type="uma:BreakdownElementDescription"
						name="product_release,_X3F_cMA-EdqSgKaj2SZBmg" briefDescription=""
						id="-Gt2aCyZVy4q1BvcJRM2E-A" orderingGuide="" suppressed="false"
						authors="" changeDescription="" version="" usageGuidance="">
						<MainDescription><![CDATA[<p> The Product Release Milestone is the last major project milestone. During 
  iteration <a class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html" guid="_0l53cMlgEdmt3adZL5Dmdw">assessment</a>, 
  you decide if the objectives were met, and&nbsp;then close the project.&nbsp;These 
  are the evaluation criteria to keep in mind <a class="elementlinkwithusertext" href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>: 
</p>
<ul>
    
  <li> Users satisfaction and product acceptance</li>
    
  <li> Stakeholder concurrence on acceptable resource expenditures compared to 
    planned expenditures</li>
    
  <li> Product is in production; therefore, a new development cycle for enhancements 
    or maintenance may start</li>
</ul>]]></MainDescription>
						<KeyConsiderations></KeyConsiderations>
					</Presentation>
					<SuperActivity>
						_0uyGoMlgEdmt3adZL5Dmdw
					</SuperActivity>
					<Predecessor linkType="finishToFinish"
						id="_9toNgBOSEduCNqgZdt_OaA">
						_467NIhOKEduCNqgZdt_OaA
					</Predecessor>
				</BreakdownElement>
				<SupportingMaterial>
					_Pt_fYBjoEduxUfEVCtmW4Q
				</SupportingMaterial>
				<Concept>_48EKsBOMEduCNqgZdt_OaA</Concept>
				<Concept>_2plxwBOMEduCNqgZdt_OaA</Concept>
				<Concept>_0hmKgBOMEduCNqgZdt_OaA</Concept>
				<Concept>__ca5UBOMEduCNqgZdt_OaA</Concept>
				<IncludesPattern>
					_0o3r4slgEdmt3adZL5Dmdw
				</IncludesPattern>
				<IncludesPattern>
					_0sTaYMlgEdmt3adZL5Dmdw
				</IncludesPattern>
				<IncludesPattern>
					_0rQRgMlgEdmt3adZL5Dmdw
				</IncludesPattern>
				<IncludesPattern>
					_y-3IrutQEdqc1LGhiSPqRg
				</IncludesPattern>
				<DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
				<ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
			</Process>
		</MethodPackage>
	</MethodPlugin>
	<MethodPlugin name="base_concepts"
		briefDescription="This plug-in contains basic concepts necessary to use the method composition tooling. This plug-in should be in ALL configurations."
		id="_WCUhAO8KEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
		authors="IBM Rational" changeDate="2006-01-19T08:00:35"
		changeDescription="" version="1.0.1" userChangeable="true">
		<Copyright>_uuunoPsDEdmyhNQr5STrZQ</Copyright>
		<MethodPackage xsi:type="uma:ContentCategoryPackage"
			name="ContentCategories" id="_OLCXUFqxEduN_tADfCnkEA">
			<ContentCategory xsi:type="uma:CustomCategory"
				name="cc_list"
				briefDescription="This is a package of custom categories that can be used to compose views. It should never be used as a view itself."
				id="_5_90EO8KEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
				presentationName="Component Category List" variabilityType="na">
				<Presentation name="" briefDescription=""
					id="_6B9_MO8KEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
					authors="" changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_3uTl0ASHEdq61bDkWg1SXw
				</CategorizedElement>
				<CategorizedElement>
					_xy2SAAIsEdqEutyfYo0quQ
				</CategorizedElement>
				<CategorizedElement>
					_0ErBYBUJEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_AtM0gBTQEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_R5Vk4BtpEdqSLrJ4Ij2LVA
				</CategorizedElement>
				<CategorizedElement>
					_Tp3S0BTQEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_uDU1oASEEdq61bDkWg1SXw
				</CategorizedElement>
				<CategorizedElement>
					_WfL28BTMEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_yqwU0BTMEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="guidance" briefDescription="" id="_RdIv8AIhEdqEutyfYo0quQ"
				orderingGuide="" suppressed="false" presentationName="Guidance"
				variabilityType="na">
				<Presentation name="guidance,_RdIv8AIhEdqEutyfYo0quQ"
					briefDescription="" id="_RdU9MAIhEdqEutyfYo0quQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-08-01T02:15:02"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					1.0762105093945226E-304
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="guidance"
				briefDescription="Guidance is an abstract concept that generalizes all forms of content whose primary purpose is to provide additional explanations and illustrations to elements such as Roles, Tasks, Work Products, Activities, or Processes."
				id="_xy2SAAIsEdqEutyfYo0quQ" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Guidance"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation name="" briefDescription=""
					id="_xy2SAQIsEdqEutyfYo0quQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-29T07:47:06" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    UMA&nbsp;defines a number of pre-defined concrete Guidance Types.
</p>
<p>
    Associations and multiplicities have been predefined on the level of detail as depicted to ensure that Guidance is only
    related to appropriate Content Elements. For example, UMA defines that Templates can only be associated with Work
    Products. Guidance association rules are specified with the following UML diagram:
</p>
<p align="center">
    <img height="571" alt="UML diagram showing Guidance relationships"
    src="base_concepts/guidances/concepts/resources/guidance_uml.gif" width="586" />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_2vVuUBT9EdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_8wobABUAEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_dCG-UBUBEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_IAwkEBUEEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_szl6EBUBEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_x2sAgBUBEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_20bs4BUBEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_JCQbIBnXEdqYreeU3jqaDQ
				</CategorizedElement>
				<CategorizedElement>
					_80XPABUBEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_G_UnIBUCEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_Z45fwBUDEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					1.0762105093945226E-304
				</CategorizedElement>
				<CategorizedElement>
					_id9REBUDEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="method_architecture_fundamentals"
				briefDescription="Introduces fundamental UMA principles, concepts, abstractions."
				id="_uDU1oASEEdq61bDkWg1SXw" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Method Architecture Fundamentals"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation name="" briefDescription=""
					id="_uDU1oQSEEdq61bDkWg1SXw" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-31T01:58:11" changeDescription=""
					version="1.0.0">
					<MainDescription><![CDATA[<h3>
    What is UMA?
</h3>
<p>
    The Unified Method Architecture (UMA) is a process engineering meta-model that defines schema and terminology for
    representing methods consisting of method content and processes. Also see <a class="elementLinkWithType" href="./../../base_concepts/guidances/concepts/introduction_to_uma,_94_eoO8LEdmKSqa_gSYthg.html" guid="_94_eoO8LEdmKSqa_gSYthg">Concept: Key Capabilities of the Unified Method Architecture (UMA)</a>&nbsp;for more
    details.
</p>
<h3>
    Fundamental principle within UMA
</h3>
<p>
    UMA is based&nbsp;on the following fundamental&nbsp;separations of concern:
</p>
<ul>
    <li>
        The separation of core method content versus the application of method content in processes
    </li>
    <li>
        The definition of an optional extensibility mechanism in the method for large scale management of method and
        process repositories
    </li>
    <li>
        Packaging and configuration of method content, processes, and plugins in method libraries
    </li>
    <li>
        A separation of recommended method and guidance description fields
    </li>
    <li>
        A separation of semantic elements from their notation in process diagrams
    </li>
</ul>
<h3>
    The Basic Elements of UMA
</h3>
<p>
    The most fundamental principle of the Unified Method Architecture (UMA) is the separation of&nbsp;reusable core method
    content from its application in processes and almost all of UMA's elements are categorized along this separations.
</p>
<p>
    The Unified Method Architecture separates reusable core method content from its application in processes.&nbsp; Method
    content describes what is to be produced, the necessary skills required and the step-by-step explanation describing how
    specific development goals are achieved, independently of the placement of these items within a development
    lifecycle.&nbsp; Processes take these method elements and relate them into semi-ordered sequences that are customized
    to specific types of projects. For example, a software development project that develops an application from scratch
    performs development tasks such as "Develop Vision" or "Use Case Design" similar to a project that extends an existing
    software system.&nbsp; However, the two projects will perform the Tasks at different points in time with a different
    emphasis, i.e. they will perform the steps of these tasks at different point of time and perhaps apply individual
    variations and additions.
</p>
<p>
    The figure below shows the difference between method content and process by representing them as two different
    dimensions:
</p>
<ul>
    <li>
        Method content describing how development work is being performed is categorized by disciplines.&nbsp; Each
        discipline is comprised of tasks (not visible in the figure) that provide step-by-step descriptions of how specific
        development goals are achieved.&nbsp;
    </li>
    <li>
        For a process, tasks have been referenced by the process from the method content and placed into breakdown
        structures and workflows ready for instantiation by allocating resources to perform the work and having real work
        products as the inputs and outputs of the tasks.<br />
    </li>
</ul>
<p align="center">
    <img alt="Diagram illustrating the separation of Method and Process content within the UMA Meta-Model"     src="base_concepts/guidances/concepts/resources/uma_hump.jpg" border="0" />
</p>
<p class="picturetext" align="center">
    Method Content definition versus<br />
    the application of Method Content in a Process.
</p>
<p>
    UMA's key concepts reflect this separation of method content from process as shown in the figure below.&nbsp; It show
    that a Method (also refered to as a Method Framework) comprises on method content described with concepts such Work
    Products, Roles, Task and Categories as well as Processes described with Activities, Capability Patterns, or Delivery
    Processes.
</p>
<p align="center">
    <img alt="Diagram illustrating that the intersection between Method and Process content is guidance"     src="base_concepts/guidances/concepts/resources/uma_m_vs_p.gif" />
</p>
<p align="center">
    Overview of how the key UMA concepts are positioned based on whether they represent method content or process
</p>
<p class="picturetext" align="left">
    Key <a class="elementLinkWithUserText" href="./../../base_concepts/customcategories/method_concepts,_WfL28BTMEdqrUt4zetC1gg.html" guid="_WfL28BTMEdqrUt4zetC1gg">Method Content Elements</a> &nbsp;are:
</p>
<div style="MARGIN-LEFT: 2em">
    <ul>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/work_product,4.804531471620803E-306.html" guid="4.804531471620803E-306">Work Product</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/role,1.1609745730665898E-304.html" guid="1.1609745730665898E-304">Role</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/task,7.624729048911575E-305.html" guid="7.624729048911575E-305">Task</a>
            </div>
        </li>
    </ul>
</div>
<p class="picturetext" align="left">
    Key <a class="elementLinkWithUserText" href="./../../base_concepts/customcategories/process_concepts,_AtM0gBTQEdqrUt4zetC1gg.html" guid="_AtM0gBTQEdqrUt4zetC1gg">Process Elements</a> &nbsp;are:
</p>
<div style="MARGIN-LEFT: 2em">
    <ul>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/activity,3.132140065969088E-305.html" guid="3.132140065969088E-305">Activity</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/capability_pattern,1.7072348895114264E-305.html" guid="1.7072348895114264E-305">Capability Pattern</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/delivery_process,_EhgqwO8MEdmKSqa_gSYthg.html" guid="_EhgqwO8MEdmKSqa_gSYthg">Delivery Process</a>
            </div>
        </li>
    </ul>
</div>
<p class="picturetext" align="left">
    <a class="elementLinkWithUserText" href="./../../base_concepts/customcategories/guidance,_xy2SAAIsEdqEutyfYo0quQ.html" guid="_xy2SAAIsEdqEutyfYo0quQ">Guidance</a> &nbsp;comes in many types:
</p>
<div style="MARGIN-LEFT: 2em">
    <ul>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/checklist,_2vVuUBT9EdqrUt4zetC1gg.html" guid="_2vVuUBT9EdqrUt4zetC1gg">Checklist</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/concept,_8wobABUAEdqrUt4zetC1gg.html" guid="_8wobABUAEdqrUt4zetC1gg">Concept</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/example,_dCG-UBUBEdqrUt4zetC1gg.html" guid="_dCG-UBUBEdqrUt4zetC1gg">Example</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/guideline,_IAwkEBUEEdqrUt4zetC1gg.html" guid="_IAwkEBUEEdqrUt4zetC1gg">Guideline</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/practice,_szl6EBUBEdqrUt4zetC1gg.html" guid="_szl6EBUBEdqrUt4zetC1gg">Practice</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/report,_x2sAgBUBEdqrUt4zetC1gg.html" guid="_x2sAgBUBEdqrUt4zetC1gg">Report</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/reusable_asset,_20bs4BUBEdqrUt4zetC1gg.html" guid="_20bs4BUBEdqrUt4zetC1gg">Reusable Asset</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/roadmap,_JCQbIBnXEdqYreeU3jqaDQ.html" guid="_JCQbIBnXEdqYreeU3jqaDQ">Roadmap</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/supporting_material,_80XPABUBEdqrUt4zetC1gg.html" guid="_80XPABUBEdqrUt4zetC1gg">Supporting Material</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/template,_G_UnIBUCEdqrUt4zetC1gg.html" guid="_G_UnIBUCEdqrUt4zetC1gg">Template</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/term_definition,_Z45fwBUDEdqrUt4zetC1gg.html" guid="_Z45fwBUDEdqrUt4zetC1gg">Term Definition</a>
            </div>
        </li>
        <li>
            <div class="picturetext" align="left">
                <a class="elementLink" href="./../../base_concepts/guidances/concepts/tool_mentor,1.0762105093945226E-304.html" guid="1.0762105093945226E-304">Tool Mentor</a>
            </div>
        </li>
    </ul>
</div>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_94_eoO8LEdmKSqa_gSYthg
				</CategorizedElement>
				<CategorizedElement>
					_SZDtIEdjEdqBmOmOgjH2IQ
				</CategorizedElement>
				<CategorizedElement>
					_WfL28BTMEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_xy2SAAIsEdqEutyfYo0quQ
				</CategorizedElement>
				<CategorizedElement>
					_AtM0gBTQEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_Tp3S0BTQEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="navigating_the_process"
				briefDescription="This guidance explains how to navigate a typical method Web site."
				id="_3uTl0ASHEdq61bDkWg1SXw" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/compass.gif"
				presentationName="Navigating the Method Web Site"
				shapeicon="base_concepts/customcategories/resources/compassL.gif"
				variabilityType="na">
				<Presentation name="" briefDescription=""
					id="_3uTl0QSHEdq61bDkWg1SXw" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-07T01:00:10" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					3.1789140222665413E-305
				</CategorizedElement>
				<CategorizedElement>
					2.0088322577945588E-305
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="base_concepts_view_building_blocks"
				briefDescription="This is a package of custom categories that can be used to compose views. It should never be used as a view itself."
				id="_7-x6YBTLEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Base Concepts View Building Blocks"
				variabilityType="na">
				<Presentation name="" briefDescription=""
					id="__cpIYBTLEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_3uTl0ASHEdq61bDkWg1SXw
				</CategorizedElement>
				<CategorizedElement>
					_uDU1oASEEdq61bDkWg1SXw
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="method_concepts"
				briefDescription="UMA's fundamental Method Content abstractions are Work Products, Roles, Tasks, and Guidance."
				id="_WfL28BTMEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Method Content Concepts"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="method_concepts,_WfL28BTMEdqrUt4zetC1gg" briefDescription=""
					id="_WfkRcBTMEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-11-08T12:54:23" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    Method Content is fundamentally described by defining Tasks described with Steps that have Work Products as input and
    output and which are&nbsp;performed by Roles.&nbsp; Roles also define important responsibility relationships to work
    products.
</p>
<p>
    The fundamental Method Content abstractions are:
</p>
<ul>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/work_product,4.804531471620803E-306.html"
        guid="4.804531471620803E-306">Work Product</a>, which includes <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/artifact,_fdRfkBUJEdqrUt4zetC1gg.html"
        guid="_fdRfkBUJEdqrUt4zetC1gg">Artifact</a>, <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/deliverable,_lBgkMBUJEdqrUt4zetC1gg.html"
        guid="_lBgkMBUJEdqrUt4zetC1gg">Deliverable</a>&nbsp;and <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/outcome,_pROF4BUJEdqrUt4zetC1gg.html"
        guid="_pROF4BUJEdqrUt4zetC1gg">Outcome</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/role,1.1609745730665898E-304.html"
        guid="1.1609745730665898E-304">Role</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/task,7.624729048911575E-305.html"
        guid="7.624729048911575E-305">Task</a>
    </li>
</ul>
<br align="center" />
<br />]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_0ErBYBUJEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					1.1609745730665898E-304
				</CategorizedElement>
				<CategorizedElement>
					7.624729048911575E-305
				</CategorizedElement>
				<CategorizedElement>
					_yqwU0BTMEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="categories"
				briefDescription="Categories provide different ways to logically organize Method Content elements."
				id="_yqwU0BTMEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Categories and Views"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation name="categories,_yqwU0BTMEdqrUt4zetC1gg"
					briefDescription="" id="_yrIvUBTMEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-27T08:27:36"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Categories provide different ways to logically organize Content Elements. In addition to Standard Categories that have
    been predefined for most Content Element types in UMA, <a class="elementLinkWithUserText"
    href="./../../base_concepts/guidances/concepts/custom_category,_xuO10BUGEdqrUt4zetC1gg.html"
    guid="_xuO10BUGEdqrUt4zetC1gg">Custom Categories</a> can be used to either of the following:
</p>
<div style="MARGIN-LEFT: 2em">
    <ul>
        <li>
            Categorize content based on the user's criteria.
        </li>
        <li>
            Define tree-structures of nested categories allowing the user to systematically navigate and browse Method
            Content as well as Processes based on these categories. When&nbsp;Custom Categories are used in this way they
            are also referred to&nbsp;as <a class="elementLinkWithUserText"
            href="./../../base_concepts/guidances/concepts/view,_uMKSsBUFEdqrUt4zetC1gg.html"
            guid="_uMKSsBUFEdqrUt4zetC1gg">Views</a>.
        </li>
    </ul>
</div>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					3.409251897849429E-305
				</CategorizedElement>
				<CategorizedElement>
					_xuO10BUGEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_Dh4TEBUGEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_u3t7sBUGEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_66Jy0BUGEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_uMKSsBUFEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_VRhkoBUGEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="process_concepts"
				briefDescription="UMA defines concepts for defining processes. This section lists the most important ones."
				id="_AtM0gBTQEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Process Concepts"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="process_concepts,_AtM0gBTQEdqrUt4zetC1gg" briefDescription=""
					id="_AtZBwBTQEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-27T09:17:01" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    A Development Process defines the structured work definitions that need to be performed to develop a system, e.g. by
    performing a project that follows the process.&nbsp; Such structured work definitions delineate the work to be
    performed along a timeline or lifecycle and organize it in so called breakdown structures and/or activity diagrams. A
    process takes reusable core method elements such as Tasks and Work Products and relates them into semi-ordered
    sequences that are then customized to specific types of projects.
</p>
<p>
    Fundamental concepts used in UMA to define processes include:
</p>
<ul>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/activity,3.132140065969088E-305.html"
        guid="3.132140065969088E-305">Activity</a>
    </li>
    <li>
        <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/capability_pattern,1.7072348895114264E-305.html"
        guid="1.7072348895114264E-305">Capability Pattern</a>
    </li>
    <li>
        <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/delivery_process,_EhgqwO8MEdmKSqa_gSYthg.html"
        guid="_EhgqwO8MEdmKSqa_gSYthg">Delivery Process</a>
    </li>
    <li>
        <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/process_contribution,_NYASQBtqEdqSLrJ4Ij2LVA.html"
        guid="_NYASQBtqEdqSLrJ4Ij2LVA">Process Contribution</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/descriptor,_5V9HEBUEEdqrUt4zetC1gg.html"
        guid="_5V9HEBUEEdqrUt4zetC1gg">Descriptor</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/composite_role,_P9gp0BtHEdqSLrJ4Ij2LVA.html"
        guid="_P9gp0BtHEdqSLrJ4Ij2LVA">Composite Role</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/team_profile,_dRKRMBtHEdqSLrJ4Ij2LVA.html"
        guid="_dRKRMBtHEdqSLrJ4Ij2LVA">Team Profile</a>
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					3.132140065969088E-305
				</CategorizedElement>
				<CategorizedElement>
					1.7072348895114264E-305
				</CategorizedElement>
				<CategorizedElement>
					_EhgqwO8MEdmKSqa_gSYthg
				</CategorizedElement>
				<CategorizedElement>
					_5V9HEBUEEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="organizational_concepts"
				briefDescription="This section lists several key concepts define in UMA for packaging and extending methods."
				id="_Tp3S0BTQEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Organizational Concepts"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="organizational_concepts,_Tp3S0BTQEdqrUt4zetC1gg"
					briefDescription="" id="_TqJmsBTQEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-11-09T12:04:09"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    This section describes concepts that are only used to organize method content and processes in an authoring
    environment.None of these UMA abstractions are subject to publication.&nbsp;They include:
</p>
<ul>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/method_library,_m8lGkBUFEdqrUt4zetC1gg.html"
        guid="_m8lGkBUFEdqrUt4zetC1gg">Method Library</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/method_plugin,_0KeEMBUFEdqrUt4zetC1gg.html"
        guid="_0KeEMBUFEdqrUt4zetC1gg">Method Plugin</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/configuration,_d698IBUFEdqrUt4zetC1gg.html"
        guid="_d698IBUFEdqrUt4zetC1gg">Method Configuration</a>
    </li>
    <li>
        Method Package, which includes <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/content_package,_49a10BUFEdqrUt4zetC1gg.html"
        guid="_49a10BUFEdqrUt4zetC1gg">Content Package</a>, and <a class="elementLink"
        href="./../../base_concepts/guidances/concepts/process_package,_MT6U8BneEdqYreeU3jqaDQ.html"
        guid="_MT6U8BneEdqYreeU3jqaDQ">Process Package</a>
    </li>
</ul>
<p>
    These abstractions as well as their relationships are presented with the the following UML 2.0 class diagram:
</p>
<p align="center">
    &nbsp;<img alt="UML Diagram describing the modeling or organizational abstractions"
    src="base_concepts/guidances/concepts/resources/packaging_uml.gif" />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_m8lGkBUFEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_0KeEMBUFEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_d698IBUFEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_R5Vk4BtpEdqSLrJ4Ij2LVA
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="work_product"
				briefDescription="A work product is a description of content elements that are used to define anything used, produced, or modified by a task."
				id="_0ErBYBUJEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Work Product"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="work_product,_0ErBYBUJEdqrUt4zetC1gg" briefDescription=""
					id="_0FDb4BUJEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-04-14T12:27:03" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    A Work Product is an abstract concept which provides a generalization for the concrete work product types <a
    class="elementLink" href="./../../base_concepts/guidances/concepts/artifact,_fdRfkBUJEdqrUt4zetC1gg.html"
    guid="_fdRfkBUJEdqrUt4zetC1gg">Artifact</a>, <a class="elementLink"
    href="./../../base_concepts/guidances/concepts/outcome,_pROF4BUJEdqrUt4zetC1gg.html"
    guid="_pROF4BUJEdqrUt4zetC1gg">Outcome</a>, and <a class="elementLink"
    href="./../../base_concepts/guidances/concepts/deliverable,_lBgkMBUJEdqrUt4zetC1gg.html"
    guid="_lBgkMBUJEdqrUt4zetC1gg">Deliverable</a>. Work Product descriptions actually represents work product types, i.e.
    an instance of Work Product is a description of a specific type of work product and not an individual work product
    instance.&nbsp; However, for simplicity reasons and because of low risk of misinterpretation we did not append the word
    'type' to every element in UMA.
</p>
<p>
    A Work Product is an abstraction for descriptions of content elements that are used to define anything used, produced,
    or modified by a task.&nbsp; Roles use Work Products to perform Tasks and produce Work Products in the course of
    performing Tasks.&nbsp; Work Products are the responsibility of a single Role, making responsibility easy to identify
    and understand, and promoting the idea that every piece of information produced in the method requires the appropriate
    set of skills. Even though one Role might "own" a specific type of Work Products, other Roles can still use the Work
    Products; perhaps even update them if the Role has been given permission to do so.
</p>
<p align="center">
    <img height="569"
    alt="Popular Work Products in Software Development, and the approximate dependency relationships between them"
    src="base_concepts/guidances/concepts/resources/overview.gif" width="536" border="0" />
</p>
<p class="picturetext" align="center">
    Popular Work Products in Software Development, and the approximate dependency relationships between them.
</p>
<p>
    Note that Work Product is the term used to describe what other processes denote using terms such as Artifact, work
    unit, and so on. In UMA, Deliverables are only considered to be the subsets of all Work Products that will end up being
    delivered into the hands of the customers and users, usually as part of a formal or contractually agreed hand-over.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_fdRfkBUJEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_lBgkMBUJEdqrUt4zetC1gg
				</CategorizedElement>
				<CategorizedElement>
					_pROF4BUJEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
			<ContentCategory xsi:type="uma:CustomCategory"
				name="method_package"
				briefDescription="This packaging structure defines how Method Elements can be physically organized into package hierarchies."
				id="_R5Vk4BtpEdqSLrJ4Ij2LVA" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/customcategories/resources/concept_obj.gif"
				presentationName="Method Package"
				shapeicon="base_concepts/customcategories/resources/concept_dgm32.gif"
				variabilityType="na">
				<Presentation
					name="method_package,_R5Vk4BtpEdqSLrJ4Ij2LVA" briefDescription=""
					id="-G5kN9IUns9GPxohNmAeeyw" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-27T11:50:07" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    Method Packages physically organize Method Elements&nbsp;into package hierarchies. All Method Elements are located in
    exactly one Method Package.
</p>
<p>
    There are two type of Method Package:
</p>
<ul>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/content_package,_49a10BUFEdqrUt4zetC1gg.html"
        guid="_49a10BUFEdqrUt4zetC1gg">Content Package</a>
    </li>
    <li>
        <a class="elementLink" href="./../../base_concepts/guidances/concepts/process_package,_MT6U8BneEdqYreeU3jqaDQ.html"
        guid="_MT6U8BneEdqYreeU3jqaDQ">Process Package</a>
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
				<CategorizedElement>
					_MT6U8BneEdqYreeU3jqaDQ
				</CategorizedElement>
				<CategorizedElement>
					_49a10BUFEdqrUt4zetC1gg
				</CategorizedElement>
			</ContentCategory>
		</MethodPackage>
		<MethodPackage xsi:type="uma:ContentPackage"
			name="General Guidance"
			briefDescription="This Content package concepts and other general guidance related to UMA and related tooling."
			id="_eNnSAO8LEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
			global="false">
			<ContentElement xsi:type="uma:Concept"
				name="introduction_to_uma"
				briefDescription="The Unified Method Architecture (UMA) is a process engineering meta-model that defines schema and terminology for representing methods consisting of method content and processes. "
				id="_94_eoO8LEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
				presentationName="Key Capabilities of the Unified Method Architecture (UMA)"
				variabilityType="na">
				<Presentation
					name="introduction_to_uma,_94_eoO8LEdmKSqa_gSYthg"
					briefDescription="" id="_972lYO8LEdmKSqa_gSYthg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-13T11:13:36"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    The Unified Method Architecture (UMA) meta-model has been developed as&nbsp;a unification of different method and
    process engineering languages such as the SPEM extension to the UML for software process engineering, the languages
    used for IBM Rational RUP v2003, Unified Process, IBM Global Services Method, as well as IBM Rational Summit Ascendant.
    As such it provides concepts and capabilities from all of these source models unifying them in a consistent way, but
    still allowing to express each of these source methods with their specific characteristics.&nbsp; This concept provides
    you with a general overview to UMA capabilities.
</p>
<h4>
    Separation of Method Content and Process
</h4>
<p>
    UMA provides a clear separation of Method Content definitions from its application in Processes. This is accomplished
    by separately defining
</p>
<ul>
    <li>
        reusable core Method Content, in the form of general content descriptions such as Roles, Task, Work Products and
        Guidance
    </li>
    <li>
        project-type&nbsp;specific applications of Method Content in context in the form of process descriptions that
        reference Method Content
    </li>
</ul>
<p>
    Method Content provides step-by-step explanations of how specific development goals are achieved independent of the
    placement of these steps within a development lifecycle. Processes take these Method Content elements and organize them
    into a sequence that can be customized to specific types of projects. For example, a software development project that
    develops an application from scratch performs development steps similar to a project that extends an existing software
    system. However, the two projects will perform similar steps at different points in time with a different emphasis and
    perhaps individual variations.
</p>
<h4>
    Content Reuse
</h4>
<p>
    UMA allows each Process to reference common Method Content from a common Method Content pool. Because of these
    references, changes in the Method Contents will automatically be reflected in all Processes using it. However, UMA
    still allows overwriting certain method-related content within a Process as well as defining individual
    process-specific relationships for each Process Element (such as adding an additional input Work Product to a Task,
    renaming a Role, or removing Steps that should not be performed from a Task).
</p>
<h4>
    Process Families
</h4>
<p>
    UMA's goal is to not only support the representation of one specific development process or the maintenance of several
    unrelated processes, but to provide process engineers with a tool set to consistently and effectively manage whole
    families of related Processes. UMA realizes this by defining the concepts of Capability&nbsp;Patterns and Delivery
    Processes as well as specific reuse relationships between these type of processes.&nbsp; These concepts allow a process
    engineer to maintain consistent families of Delivery Processes that are project type specific and are variations of the
    same base Method Content and Capability Patterns. The result is different variants of specific processes built up by
    dynamically reusing the same Method Content and Patterns, but applied with different levels of detail and scale; for
    example, Process variants for small versus large scale development projects.
</p>
<h4>
    Multiple Lifecycles
</h4>
<p>
    A general method architecture must support different varieties and even combinations of lifecycle models for process
    definitions. These include Waterfall, Iterative, Incremental, Evolutionary, and so on. The UMA meta-model is designed
    to accommodate multiple approaches. It provides a rich set of concepts and customization attributes for specifying
    temporal semantics for Process Elements such as phases, iterations, dependencies, ongoing or event-driven work, etc.
</p>
<h4>
    Flexible Extensibility and Plug-in Mechanisms
</h4>
<p>
    UMA's Method Plug-Ins provide a unique way of customizing Method Content and Processes without directly modifying the
    original content. Instead, they just described the differences (additions referred to as contributions
    and&nbsp;replacements) relative to the original. This Plug-in concept allows users to easily upgrade to newer versions
    of Method Content without losing their customizations.
</p>
<h4>
    Multiple Process 'Views'
</h4>
<p>
    UMA defines multiple and consistently maintained views on processes. These views allow process engineers to approach
    process authoring based on their personal preferences. A process engineer can choose to define their Processes with a
    focus on any of the following:
</p>
<ul>
    <li>
        Work Breakdown - this is a work-centric view which defines Tasks associated with a particular high-level Activity
    </li>
    <li>
        Work Product Usage - this is a results-based view which defines the state of certain Deliverables and Artifacts at
        various points in the process
    </li>
    <li>
        Team Allocation - this is a responsibility-based view which defines needed Roles and their work product
        responsibilities
    </li>
</ul>
<p>
    UMA provides consistency between all these views, because they are all based on one integrated object structure.
    Changes in one view will immediately be reflected in the other views.
</p>
<h4>
    Reusable process patterns
</h4>
<p>
    UMA's Capability Patterns are reusable building blocks for creating new development Processes. Selecting and applying a
    Capability Pattern can be done in one of two flexible ways:
</p>
<ul>
    <li>
        A pattern can be applied in a sophisticated copy and modify operation, which allows the process engineer to
        individually customize the pattern's content to his needs during the pattern application.
    </li>
    <li>
        A pattern can be applied via dynamic binding. This unique new way of reusing process knowledge allows commonly
        reoccurring Activities to be factored out into patterns which can then be applied over and over again in a Process.
        When the pattern is being revised or updated, all changes will automatically be reflected in all Processes that
        applied that pattern.
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="delivery_process"
				briefDescription="A Delivery Process is a special Process describing a complete and integrated approach for performing a specific type of project."
				id="_EhgqwO8MEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
				presentationName="Delivery Process" variabilityType="na">
				<Presentation
					name="delivery_process,_EhgqwO8MEdmKSqa_gSYthg" briefDescription=""
					id="_EijzoO8MEdmKSqa_gSYthg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-27T11:10:27" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    A Delivery Process is a special <a class="elementLink"
    href="./../../../base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
    guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a> describing a complete and integrated approach for performing a specific
    project type. <!--StartFragment-->It provides a complete lifecycle model that has been detailed by sequencing Method
    Content in breakdown structures. It describes a complete project lifecycle end-to-end and is used as a reference for
    running projects with similar characteristics.
</p>
<p>
    A&nbsp;process engineer can define alternative Delivery Processes for software development projects that differ in the
    scale of the engagement and staffing necessary, the type of the software application to be developed, the development
    methods and technologies to be used, etc. Although, the Delivery Process aims to cover a whole project it keeps certain
    decision that are too project specific open.&nbsp;&nbsp;For example, the breakdown structure defines which Breakdown
    Elements have multiple occurrences or are repeatable via its specific attributes, but does not say how many occurrences
    and how many repeats/iterations it will have.&nbsp; These decisions have to be done by a project manager when planning
    a concrete project, project phase, or project iterations.<!--EndFragment-->
</p>
<h3>
    <a id="Software Engineering Process" name="Software Engineering Process">Example</a>
</h3>
<p>
    In software engineering, the goal is to build a software product or to enhance an existing one. The Delivery Process
    for software could be an iterative process, where the product is built incrementally over time, or it could be a
    traditional waterfall Delivery Process in which all requirements are specified up front, followed by design,
    implementation, and test phases.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="copyright" briefDescription="" id="_uuunoPsDEdmyhNQr5STrZQ"
				orderingGuide="" suppressed="false"
				nodeicon="base_concepts/guidances/supportingmaterials/resources/CRsym_obj.gif"
				presentationName="Copyright" variabilityType="na">
				<Presentation name="copyright,_uuunoPsDEdmyhNQr5STrZQ"
					briefDescription="" id="_u_Zg4PsDEdmyhNQr5STrZQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-08T09:26:04"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    This program and the accompanying materials are made available under the<br />
     <a href="http://www.eclipse.org/org/documents/epl-v10.php" target="_blank">Eclipse Public License v1.0</a> which
    accompanies this distribution.
</p>
<p>
    View copyright information here:&nbsp;<a class="elementLink"
    href="./../../../openup_basic/guidances/supportingmaterials/openup_copyright,_UaGfECcTEduSX6N2jUafGA.html"
    guid="_UaGfECcTEduSX6N2jUafGA">OpenUP Copyright</a>
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="tool_mentor"
				briefDescription="This Guidance Type shows how to use a specific tool to create part of a Work Product either in the context of or independently from a Task or Activity."
				id="1.0762105093945226E-304" orderingGuide="" suppressed="false"
				presentationName="Tool Mentor" variabilityType="na">
				<Presentation name="tool_mentor,1.0762105093945226E-304"
					briefDescription="" id="_zaz1MtnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-13T11:41:01"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a id="Top" name="Top"></a><a id="XE_key_concepts__tool_mentor" name="XE_key_concepts__tool_mentor"></a><a
id="XE_TOOL_MENTOR__KEY_CONCEPTS" name="XE_tool_mentor__key_concepts"></a> 
<p>
    Tasks, Steps, and associated guidelines provide general guidance to the practitioner. To go one step further, Tool
    Mentors are an additional means of providing guidance by showing how to achieve certain goals with a specific software
    tool. Tool mentors link Tasks with tools such as visual modeling tools, requirements management tools, configuration
    management tools, change requests/tracking tools and automated testing tools. Tool Mentors almost completely
    encapsulate the dependencies of the content on the tool set, keeping the tasks free from tool details. An organization
    can extend the concept of Tool Mentor to provide guidance for other tools.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="work_product"
				briefDescription="A Work Product is something meaningful resulting from a process: Roles use Work Products to perform Tasks and produce Work Products in the course of performing Tasks."
				id="4.804531471620803E-306" orderingGuide="" suppressed="false"
				presentationName="Work Product" variabilityType="na">
				<Presentation name="work_product,4.804531471620803E-306"
					briefDescription="" id="_zaz1MNnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-14T12:39:29"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a id="XE_ARTIFACT__KEY_CONCEPTS" name="XE_artifact__key_concepts"></a> 
<h3>
    Work Product
</h3>
<p>
    A Work Product is a general abstraction that represents something resulting from the process.&nbsp; Work Products
    include:
</p>
<ul>
    <li>
        <a class="elementlink" href="./../../../base_concepts/guidances/concepts/artifact,_fdRfkBUJEdqrUt4zetC1gg.html"
        guid="_fdRfkBUJEdqrUt4zetC1gg">Artifact</a>
    </li>
    <li>
        <a class="elementlink" href="./../../../base_concepts/guidances/concepts/deliverable,_lBgkMBUJEdqrUt4zetC1gg.html"
        guid="_lBgkMBUJEdqrUt4zetC1gg">Deliverable</a>
    </li>
    <li>
        <a class="elementlink" href="./../../../base_concepts/guidances/concepts/outcome,_pROF4BUJEdqrUt4zetC1gg.html"
        guid="_pROF4BUJEdqrUt4zetC1gg">Outcome</a>
    </li>
</ul>
<p>
    Tasks have input and output Work Products. Roles use Work Products to perform Tasks, and produce other Work Products in
    the course of performing Tasks. Work Products are the responsibility of a single Role, making responsibility easy to
    identify and understand, and promoting the idea that every piece of information produced in the process requires the
    appropriate set of skills. Even though one Role may "own" the Work Product, other Roles will use the Work Product,
    perhaps even updating it if the Role has been given permission to do so.
</p>
<p align="center">
    <map id="FPMap1" name="FPMap1">
    </map><img height="569"
    alt="Popular Work Products in Software Development, and the approximate dependency relationships between them."
    src="base_concepts/guidances/concepts/resources/overview.gif" width="536" usemap="#FPMap1" border="0" />
</p>
<p class="picturetext" align="center">
    Popular Work Products in Software Development, and the approximate dependency relationships between them.
</p>
<p>
    Note that "<b>Work Product</b> " is the term used to describe what other processes denote using terms such as
    <b>Artifact</b>, <b>work unit</b>, and so on. In UMA, <b>Deliverables</b> are only considered to be the subset of all
    Work Products that will end up being delivered into the hands of the customers and users, usually as part of a formal
    or contractually agreed hand-over.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="task"
				briefDescription="A Task describes a unit of work assigned to a Role that provides a meaningful result."
				id="7.624729048911575E-305" orderingGuide="" suppressed="false"
				presentationName="Task" variabilityType="na">
				<Presentation name="task,7.624729048911575E-305"
					briefDescription="" id="_zaqENNnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-28T12:39:25"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a id="XE_ACTIVITY__KEY_CONCEPTS" name="XE_activity__key_concepts"></a> 
<h3>
    Definition
</h3>
<p>
    A Task describes a unit of work. Every Task is performed by specific Roles. The granularity of a Task is generally a
    few hours to a few days. It usually affects one or only a small number of Work Products. Tasks are not necessarily used
    as&nbsp;a basis for planning and tracking progress - they are often too fine-grained for that purpose; Activity
    groupings of Tasks are often the better units for planning and tracking.
</p>
<p>
    A Task has a clear purpose, usually expressed in terms of creating or updating some Work Products, such as models,
    classes, or&nbsp;plans. Within a Task, each performing Role achieves a well defined goal. A Task provides complete
    step-by-step explanations of doing all the work required to achieve this goal. This description is complete,
    independent of when in a process lifecycle the work would actually be done. Therefore, it does not describe when you do
    what work at what point of time, but describes all the work that gets done throughout the development lifecycle that
    contributes to the achievement of the Tasks' goal.
</p>
<p>
    When a Task is being applied in a Process, a reference object defined as Task Descriptor provides information, which
    includes what elements of the Task will actually be performed at that point in time. This assumes that a Task will
    usually be performed in the Process over and over again, but each time with a slightly different emphasis on different
    steps or aspects of the Task description&nbsp;as well as perhaps different or additional performing roles or different
    input/output (also refer to <a class="elementLink"
    href="./../../../base_concepts/guidances/concepts/introduction_to_uma,_94_eoO8LEdmKSqa_gSYthg.html"
    guid="_94_eoO8LEdmKSqa_gSYthg">Key Capabilities of the Unified Method Architecture (UMA)</a> for the difference between
    Method Content and Process).
</p>
<h3>
    Steps
</h3>
<p>
    Tasks can be broken down into sections of Steps. A Step describes a meaningful and consistent part of the overall work
    described for a Task. Steps fall into three main categories:
</p>
<ul>
    <li>
        <b>Thinking</b> Steps: where the individual performing the Role understands the nature of the Task, gathers and
        examines the input Work Products, and formulates the result.
    </li>
    <li>
        <b>Performing</b> Steps: where the individual performing the Role creates or updates some Work Products.
    </li>
    <li>
        <b>Reviewing</b> Steps: where the individual performing the Role inspects the results against some criteria.
    </li>
</ul>
<p>
    Not all Steps are necessarily performed each time a Task is invoked, so they can be expressed in the form of alternate
    flows (similar to Use Cases).
</p>
<h3>
    Examples
</h3>
<h4>
    A Typical Task
</h4>
<p>
    A typical Task&nbsp;to "Develop Use-Case Model" would describe all the work that needs to be done to develop a complete
    use-case model. This would consist of the following:
</p>
<ul>
    <li>
        The identification and naming of use cases and actors
    </li>
    <li>
        The writing of a brief description
    </li>
    <li>
        The modeling of use cases and their relationships in diagrams
    </li>
    <li>
        The detailed description of a basic flow
    </li>
    <li>
        The detailed description of alternative flows
    </li>
    <li>
        Performing of walkthroughs, workshops and reviews, etc.
    </li>
</ul>
<p>
    All of these parts contribute to the development goal of developing the use case model, but the parts will be performed
    at different points in time in a Process. Identification, naming, and brief descriptions would be performed
    <strong>early</strong> in a typical development process versus the writing of detailed alternative flows which would be
    performed much <strong>later</strong>. All these parts or Steps within the same Task define the "method" of developing
    a use-case model. Applying such a method in a lifecycle is defining which Steps are done when going from one iteration
    to the next.
</p>
<h4>
    A Task and its Steps
</h4>
<p class="example">
    A&nbsp;typical Task to "Find Use Cases and Actors"&nbsp;would be decomposed into the following Steps:
</p>
<blockquote>
    <blockquote>
        <ol>
            <li>
                Find actors
            </li>
            <li>
                Find use cases
            </li>
            <li>
                Describe how actors interact with use cases
            </li>
            <li>
                Package use cases and actors
            </li>
            <li>
                Present the use-case model in use-case diagrams
            </li>
            <li>
                Develop a survey of the use-case model
            </li>
            <li>
                Evaluate your results
            </li>
        </ol>
    </blockquote>
</blockquote>
<p class="example">
    The finding part [Steps 1 to 3] requires some thinking; the performing part [Steps 4 to 6] involves capturing the
    result in the use-case model; the reviewing part [Step 7] is where the individual performing the Role evaluates the
    result to assess completeness, robustness, intelligibility, or other qualities.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="role"
				briefDescription="A Role defines a set of related skills, competencies, and responsibilities."
				id="1.1609745730665898E-304" orderingGuide="" suppressed="false"
				presentationName="Role" variabilityType="na">
				<Presentation name="role,1.1609745730665898E-304"
					briefDescription="" id="_zaqEMtnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-13T11:30:25"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a id="Top" name="Top"></a><a id="XE_key_concepts__role" name="XE_key_concepts__role"></a><a id="XE_role__key_concepts"
name="XE_role__key_concepts"></a> 
<p>
    A Role is a Method Content element that defines a set of related skills, competencies, and responsibilities. Roles are
    used by Tasks to specify who performs them as well as define a set of Work Products they are responsible for.
</p>
<p class="node" align="left">
    Roles are typically realized by an individual, or a set of individuals, working together as a team. A project team
    member typically fulfills many different roles. Note that <b>Roles are not individuals nor are they necessarily
    equivalent to job titles;</b> instead, they describe how individuals should behave in the project and the
    responsibilities of an individual. Individual members of the organization will wear different hats, or perform
    different Roles. The mapping from individual to Role is performed by the project manager when planning and staffing the
    project.
</p>
<p class="node" align="left">
    While most roles are realized by people within the organization, people outside of the development organization play an
    important role: for example, that of the stakeholder of the project or product being developed.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="activity"
				briefDescription="An Activity supports the nesting and logical grouping of related process elements also referred to as Breakdown Elements (e.g. other Activities or Task Descriptors). The concepts Phase, Iteration, Delivery Process, and Capability Pattern are defined as special Activities."
				id="3.132140065969088E-305" orderingGuide="" suppressed="false"
				presentationName="Activity" variabilityType="na">
				<Presentation name="activity,3.132140065969088E-305"
					briefDescription="" id="_zaqEMNnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-27T10:00:09"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Activities are the fundamental concept for defining processes.&nbsp; Activities define the breakdown as well as flow of
    work.&nbsp; In other words, Activities can be nested into each other defining a breakdown structure of work or they can
    define predecessor relationships to other Activities defining a flow presented in Activity diagrams.&nbsp; Activities
    can also contain references to Task, Roles, and Work Products called <a class="elementLink"
    href="./../../../base_concepts/guidances/concepts/descriptor,_5V9HEBUEEdqrUt4zetC1gg.html"
    guid="_5V9HEBUEEdqrUt4zetC1gg">Descriptor</a>.&nbsp; Activities as well as Descriptors relate to timelines by allowing
    their instances to define start and/or end dates.&nbsp; Further, they specify information relevant to the instantiation
    of work in project such as if an Activity shall be performed several times and if so if they can be performed in
    parallel (hasMultipleOccurrences attribute) or one after other (isRepeatable attribute).&nbsp; Activities and Task
    Descriptors can also be event driven or describing ongoing work that does not have a fixed start and end time.
</p>
<p>
    UMA defines several&nbsp;special Activities that allow expressing processes with terms many users are familiar
    with.&nbsp; For example, Phase or Iteration are just special Activities for which specific attribute values have been
    set with predefined values. A process such as a <a class="elementLink"
    href="./../../../base_concepts/guidances/concepts/capability_pattern,1.7072348895114264E-305.html"
    guid="1.7072348895114264E-305">Capability Pattern</a>&nbsp;or <a class="elementLink"
    href="./../../../base_concepts/guidances/concepts/delivery_process,_EhgqwO8MEdmKSqa_gSYthg.html"
    guid="_EhgqwO8MEdmKSqa_gSYthg">Delivery Process</a>&nbsp;is also nothing else than just a special Activity that
    contains additional documentation on why and how to use the process. Hence, because Activities could be nested into
    each other, so can processes.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="capability_pattern"
				briefDescription="A Capability Pattern is a special Process that describes a reusable cluster of Activities in common process areas that produces a result of observable value."
				id="1.7072348895114264E-305" orderingGuide="" suppressed="false"
				presentationName="Capability Pattern" variabilityType="na">
				<Presentation
					name="capability_pattern,1.7072348895114264E-305"
					briefDescription="" id="_zag6RdnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-13T11:10:52"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a id="XE_WORKFLOW__KEY_CONCEPTS" name="XE_workflow__key_concepts"></a> 
<p>
    Capabilities Patterns express and communicate process knowledge for a key area of interest such as a Discipline
    or&nbsp;a practice and can be directly used by process practitioners to guide their work.&nbsp; They are also used as
    building blocks to assemble <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/concepts/delivery_process,_EhgqwO8MEdmKSqa_gSYthg.html"
    guid="_EhgqwO8MEdmKSqa_gSYthg">Delivery Processes</a>&nbsp;or larger Capability Patterns ensuring optimal reuse and
    application of the key practices they express.
</p>
<p>
    Examples for Capability Pattern could be 'use case-based requirements management', 'use case analysis', or 'unit
    testing'. Typically but not necessarily, Capability Patterns have the scope of one Discipline providing a breakdown of
    reusable complex Activities, relationships to the Roles which perform Tasks within these Activities, as well as to the
    Work Products that are used and produced.&nbsp; Generally, a Capability Pattern does not relate to any specific phase
    or iteration of a development lifecycle, and should not imply any.&nbsp; In other words, a pattern should be designed
    in a way that it is applicable anywhere in a Delivery Process.&nbsp; This enables its Activities to be flexibly
    assigned to whatever phases there are in the Delivery Process to which it is being applied.&nbsp; An exception to this
    would be capability patterns that are intended to provide a template for quickly creating an iteration or portion of an
    iteration for a particular phase in a Delivery Process.<br />
    <br />
     Key applications&nbsp;or areas of reuse for Capability Patterns are:
</p>
<ul>
    <li>
        To serve as building blocks for assembling Delivery Processes or larger Capability Patterns.&nbsp; Normally
        developing a Delivery Process is not done from scratch but by systematically applying and binding patterns.
    </li>
    <li>
        To support direct execution in a development project that does not work following a well-defined process, but works
        based on loosely connected process fragments of practices in a flexible manner (for example, Agile Development).
    </li>
    <li>
        To support process education by describing knowledge for a key area such as practices on how to perform the work
        for a Discipline (for example, Requirements Management), for a specific development technique (aspect-oriented
        development), or a specific technical area (for example, relational database design), which is used for education
        and teaching.<br />
    </li>
</ul>
<p>
    The workflow of a Capability Pattern is usually represented using the UML Activity Diagram notation.&nbsp;
</p>
<p align="center">
    <img alt="Sample activity diagram representing the workflow of a Capability Pattern" src="base_concepts/guidances/concepts/resources/wf_req.gif" />
</p>
<p>
    <font size="1">Sample activity diagram representing the workflow of a Capability Pattern</font>.<br />
</p>
<br />
<br />]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="search_engine"
				briefDescription="The search engine allows you to search for pages in the published Web Site."
				id="3.1789140222665413E-305" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/guidances/supportingmaterials/resources/bookc.gif"
				presentationName="Search Engine"
				shapeicon="base_concepts/guidances/supportingmaterials/resources/bookcL.gif"
				variabilityType="na">
				<Presentation
					name="search_engine,3.1789140222665413E-305" briefDescription=""
					id="_zZxTYtnmEdmO6L4XMImrsA" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-11-09T09:02:32" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    <a id="using" name="using"><strong>Note</strong>: The&nbsp;Search Engine, implemented as applets, requires JRE 1.4.2 or
    higher (you can download a JRE from</a> <a href="http://java.sun.com/j2se"
    target="_blank">http://java.sun.com/j2se</a><a id="using" name="using">).</a>
</p>
<h3>
    Tips on Using the Search Engine
</h3>
<p>
    The search engine allows you to search for pages in the&nbsp;published&nbsp;Web site in a number of ways. For example,
    you can:
</p>
<ul>
    <li>
        Search for pages that contain <b>all</b> of the words that you have typed.
    </li>
    <li>
        Search for pages that contain <b>any</b> of the words that you have typed.
    </li>
    <li>
        Search for pages that contain the <b>exact phrase</b> that you have typed.
    </li>
    <li>
        Search for pages that contain <b>none of the words</b> that you have typed.
    </li>
</ul>
<p>
    To enter a search query, type the words to be searched for in your choice of the <b>All the words</b>, <b>Any word</b>,
    <b>Exact phrase</b>, and <b>Without the words</b> fields, and then press <tt>ENTER</tt> or click the <b>Search Now</b>
    button. When the search is complete, each matching page will be listed in the <b>Results</b> field, showing the page
    title and a short summary of the content. Click a title to open the page in your published siteWeb browser window.
</p>
<p>
    For example, to search for pages that contain all of the words "Rational", "Unified", and "Process", and either or both
    of the words "adopt" and "vision", type the words <tt>Rational Unified Process</tt> in the <b>All the words</b> field,
    and <tt>adopt vision</tt> in the <b>Any word</b> field.
</p>
<p>
    You can select how many results per page that you want by using the <b>Show</b> list. If the results are more than what
    you selected to see per page, click the <b>next</b> and <b>previous</b> buttons to page through the results.
</p>
<p>
    You can also indicate whether you want the query to be applied against the published web-site or developerWorks. To
    choose between the published web-site and developerWorks, click the <b>In section</b> list, and then select the desired
    section.
</p>
<h3>
    <a id="finding" name="finding">Finding a Word on a Page</a>
</h3>
<p>
    Once a page is displayed by the search engine, use the Web browser's search tool to find a specific word on that page.
    Press <tt>CTRL+F</tt> to start the Web browser's search tool.
</p>
<h3>
    <a id="entering" name="entering">Entering a Search Query</a>
</h3>
<p>
    A search query consists of one or more specified words. Boolean operators cannot be used. Instead of Boolean operators,
    use the <b>All the words</b>, <b>Any word</b>, <b>Exact phrase</b>, or <b>Without the word</b> fields that are
    provided. The search process is not case-sensitive, which means that <font size="3"><tt>Hello, HELLO, and
    hElLo</tt></font> are all considered the same. The wildcard symbol is not supported: <font size="3"><tt>*</tt></font>.
</p>
<p>
    When more than one field is used, the query is evaluated with precedence from top to bottom. For example, the query:
</p>
<div align="center">
    <table
    style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"
     cellspacing="4" bordercolordark="#808080" cellpadding="4" width="350" bordercolorlight="#808080" border="0">
        <tbody>
            <tr>
                <th align="left" width="40%">
                    All the words:
                </th>
                <td width="60%">
                    project management
                </td>
            </tr>
            <tr>
                <th align="left" width="40%">
                    <b>Any word</b>:
                </th>
                <td width="60%">
                    adopt vision
                </td>
            </tr>
            <tr>
                <th align="left" width="40%">
                    <b>Exact phrase</b>:
                </th>
                <td width="60%">
                    Rational Unified Process
                </td>
            </tr>
            <tr>
                <th align="left" width="40%">
                    <b>Without the words</b>:
                </th>
                <td width="60%">
                    implementation
                </td>
            </tr>
        </tbody>
    </table>
    <br />
    <br />
</div>
<p>
    This can be expressed as the following: (project AND management) AND (adopt OR vision) AND (Rational Unified Process)
    NOT (implementation). In other words, the matching pages must contain both of the words "project" and "management", the
    word "adopt" or "vision", along with the phrase "Rational Unified Process". Matching pages must not contain the word
    "implementation".
</p>
<h3>
    <a id="special_considerations" name="special_considerations">Special Considerations</a>
</h3>
<ul>
    <li>
        The search engine automatically excludes common words such as "where", "when", and "the" from search queries,
        because these words are excluded during the creation of the index files on which the search operates. Excluding
        these words improves performance of the search without impacting the precision of the results.
    </li>
    <li>
        In order for a query using the <b>Without the words</b> field to make sense, there must be text in at least one of
        the other search fields. In other words, unless you first specify that you want the search to find pages that
        <b>do</b> contain certain words or a specific phrase, the search engine cannot find pages that <b>do not</b>
        contain certain words.
    </li>
    <li>
        Wildcard searches using the wildcard character are not supported.
    </li>
    <li>
        Boolean operators are not supported. See the section titled <a href="#entering">Entering a Search Query</a> for
        instructions on how to perform searches that are equivalent to using Boolean operators.
    </li>
    <li>
        You may obtain unsatisfactory search results for queries that attempt to search for single digit numbers in their
        numeric format, especially the numbers 0 though 9. Instead of searching for the numeric value, either omit the
        number from the search or use the full textual spelling of the number, for example "zero", "six", "nine", "ten" and
        so forth.
    </li>
</ul>
<br />
<br />]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="keyword_index"
				briefDescription="The keyword index provides the ability to look-up topics based on keywords or topics."
				id="2.0088322577945588E-305" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/guidances/supportingmaterials/resources/bookc.gif"
				presentationName="Keyword Index" variabilityType="na">
				<Presentation
					name="keyword_index,2.0088322577945588E-305" briefDescription=""
					id="_zZxTYNnmEdmO6L4XMImrsA" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-06-14T05:32:05" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p class="banner" align="left">
    The keyword index provides the ability to look-up topics in the method website based on keywords or topics. At the time
    the pages are created, keywords are identified which allows the keyword index to be built. The top frame of the keyword
    index window allows topics beginning with a letter or number to be displayed. The lower frame displays a list of topics
    and their related links. Clicking on a link causes the related page to be displayed in the main frame of the published
    site browser window.
</p>
<p class="banner" align="left">
    <br />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="discipline"
				briefDescription="A Discipline is a categorization of Tasks based upon similarity of concerns and cooperation of work effort."
				id="3.409251897849429E-305" orderingGuide="" suppressed="false"
				presentationName="Discipline" variabilityType="na">
				<Presentation name="discipline,3.409251897849429E-305"
					briefDescription="" id="_zag6Q9nmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-29T08:12:26"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a id="XE_DISCIPLINE__KEY_CONCEPTS" name="XE_discipline__key_concepts"></a> 
<p>
    A Discipline is a collection of Tasks that are related to a major "area of concern" within the overall project. The
    grouping of Tasks into Disciplines is mainly an aid to understanding the project from a traditional waterfall
    perspective. Although it is more common to perform Tasks concurrently across several Disciplines (for example, certain
    requirements Tasks are performed in close coordination with analysis and design Tasks), separating these Tasks into
    distinct Disciplines is simply an effective way to organize content, which makes comprehension easier.
</p>
<p>
    Another reason that several Tasks are all categorized by the same Discipline is that they all represent a part in
    achieving a higher goal or performing work that is all related to each other.&nbsp; Every Discipline defines standard
    ways of doing the work it categorizes.&nbsp; Such standard ways are expressed by so-called reference workflows
    described with <a class="elementLink"
    href="./../../../base_concepts/guidances/concepts/capability_pattern,1.7072348895114264E-305.html"
    guid="1.7072348895114264E-305">Capability Pattern</a>s defining how the Tasks categorized by the Discipline 'work
    together' in the most generic way.&nbsp; These reference workflows are often used for educating and teaching
    practitioners.
</p>
<p>
    Like other workflows, a Discipline's reference workflow is a semi-ordered sequence of activities presented as either a
    breakdown structure or an activity diagram performed to achieve a particular result. The "semi-ordered" nature of
    Discipline workflows emphasizes that the Discipline workflows cannot present the real nuances of scheduling "real
    work", for they cannot depict the optionality of activities or iterative nature of real projects. Yet they still have
    value as a way for us to understand the process by breaking it into smaller areas of concern.
</p>
<h4>
    Example: The role of Disciplines in Software Engineering
</h4>
<p>
    In Software Development, each Discipline has associated with it one or more 'models', which are in turn composed of
    associated Work Products. Some fundamental disciplines identified in Software are:
</p>
<ul>
    <li>
        Business Modeling
    </li>
    <li>
        Requirements
    </li>
    <li>
        Analysis and Design
    </li>
    <li>
        Implementation
    </li>
    <li>
        Test
    </li>
    <li>
        Deployment
    </li>
    <li>
        Configuration and Change Management
    </li>
    <li>
        Project Management
    </li>
    <li>
        Environment
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="task"
				briefDescription="" id="_x459ktnmEdmO6L4XMImrsA" orderingGuide=""
				suppressed="false" presentationName="task" variabilityType="na">
				<Presentation name="task,_x459ktnmEdmO6L4XMImrsA"
					briefDescription="" id="_x459k9nmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-08-12T06:05:04"
					changeDescription="" version="">
					<MainDescription><![CDATA[A unit of work a <i><a class="elementLink"
href="./../../../rup/guidances/termdefinitions/role,_yUefQNnmEdmO6L4XMImrsA.html"
guid="_yUefQNnmEdmO6L4XMImrsA">role</a></i> may be asked to perform.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="artifact" briefDescription="" id="_x7cUM9nmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="artifact"
				variabilityType="na">
				<Presentation name="artifact,_x7cUM9nmEdmO6L4XMImrsA"
					briefDescription="" id="_x7cUNNnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-31T10:52:50"
					changeDescription="" version="">
					<MainDescription><![CDATA[A formal <a class="elementLink" href="./../../../base_concepts/guidances/termdefinitions/work_product,_H4JXwB_SEdq6CKKKq4D7YA.html" guid="_H4JXwB_SEdq6CKKKq4D7YA">work product</a>&nbsp;that: 
<div style="MARGIN-LEFT: 2em">
    1) is produced, modified, or used by a <a class="elementLink" href="./../../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html" guid="_x459ktnmEdmO6L4XMImrsA">task</a>,<br />
    2) defines an area of responsibility<br />
    3) is subject to version control.
</div>
<p>
    An artifact can have multiple forms including a <i><a class="elementLink" href="./../../../base_concepts/guidances/termdefinitions/model,_yNefY9nmEdmO6L4XMImrsA.html" guid="_yNefY9nmEdmO6L4XMImrsA">model</a></i>, a <i><a class="elementLink" href="./../../../base_concepts/guidances/termdefinitions/model_element,_yNnpVdnmEdmO6L4XMImrsA.html" guid="_yNnpVdnmEdmO6L4XMImrsA">model element</a></i>, or a <i><a class="elementLink" href="./../../../base_concepts/guidances/termdefinitions/document,_yG6kY9nmEdmO6L4XMImrsA.html" guid="_yG6kY9nmEdmO6L4XMImrsA">document</a></i>.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="deliverable" briefDescription="" id="_yFbWoNnmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="deliverable"
				variabilityType="na">
				<Presentation name="deliverable,_yFbWoNnmEdmO6L4XMImrsA"
					briefDescription="" id="_yFbWodnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[An output from a <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a> that has a value, material or otherwise, to a <i><a class="elementLink"
href="base_concepts/guidances/termdefinitions/customer,_yE05s9nmEdmO6L4XMImrsA.html"
guid="_yE05s9nmEdmO6L4XMImrsA">customer</a></i> or other <i><a class="elementLink"
href="base_concepts/guidances/termdefinitions/stakeholder,_yWHeDNnmEdmO6L4XMImrsA.html"
guid="_yWHeDNnmEdmO6L4XMImrsA">stakeholder</a></i> .]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="discipline" briefDescription="" id="_yGUuidnmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="discipline"
				variabilityType="na">
				<Presentation name="discipline,_yGUuidnmEdmO6L4XMImrsA"
					briefDescription="" id="_yGUuitnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[A&nbsp;collection of related <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html"
guid="_x459ktnmEdmO6L4XMImrsA">task</a>s&nbsp;that define&nbsp;a major 'area of concern'. In software engineering,
Disciplines include: <i>Business Modeling, Requirements, Analysis &amp; Design, Implementation,Test, Deployment,
Configuration &amp; Change Management, Project Management, Environment</i>.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="domain"
				briefDescription="" id="_yHEVYdnmEdmO6L4XMImrsA" orderingGuide=""
				suppressed="false" presentationName="domain" variabilityType="na">
				<Presentation name="domain,_yHEVYdnmEdmO6L4XMImrsA"
					briefDescription="" id="_yHEVYtnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    (1)An area of knowledge or activity characterized by a family of related values.
</p>
<p>
    (2)Refineable hierarchy grouping related <a class="elementLink"
    href="file://./../../../base_concepts/guidances/termdefinitions/work_product,_H4JXwB_SEdq6CKKKq4D7YA.html"
    guid="_H4JXwB_SEdq6CKKKq4D7YA">Work Product</a>s.&nbsp;
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="input"
				briefDescription="" id="_yK8IyNnmEdmO6L4XMImrsA" orderingGuide=""
				suppressed="false" presentationName="input" variabilityType="na">
				<Presentation name="input,_yK8IyNnmEdmO6L4XMImrsA"
					briefDescription="" id="_yK8IydnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[A <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/work_product,_H4JXwB_SEdq6CKKKq4D7YA.html"
guid="_H4JXwB_SEdq6CKKKq4D7YA">Work Product</a>&nbsp;used by a <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html"
guid="_x459ktnmEdmO6L4XMImrsA">task</a> See: <a class="elementLink"
href="base_concepts/guidances/termdefinitions/static_work_product,_yWaY9tnmEdmO6L4XMImrsA.html"
guid="_yWaY9tnmEdmO6L4XMImrsA">static Work Product</a>.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="output"
				briefDescription="" id="_yPaZGdnmEdmO6L4XMImrsA" orderingGuide=""
				suppressed="false" presentationName="output" variabilityType="na">
				<Presentation name="output,_yPaZGdnmEdmO6L4XMImrsA"
					briefDescription="" id="_yPaZGtnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[(1) Any <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/work_product,_H4JXwB_SEdq6CKKKq4D7YA.html"
guid="_H4JXwB_SEdq6CKKKq4D7YA">Work Product</a>&nbsp;that is the result of a <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html"
guid="_x459ktnmEdmO6L4XMImrsA">task</a>. See: <i><a class="elementLink"
href="base_concepts/guidances/termdefinitions/deliverable,_yFbWoNnmEdmO6L4XMImrsA.html"
guid="_yFbWoNnmEdmO6L4XMImrsA">deliverable</a></i>.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="activity_detail_diagram" briefDescription=""
				id="_ycE8HNnmEdmO6L4XMImrsA" orderingGuide="" suppressed="false"
				presentationName="activity detail diagram" variabilityType="na">
				<Presentation
					name="activity_detail_diagram,_ycE8HNnmEdmO6L4XMImrsA"
					briefDescription="" id="_ycE8HdnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T07:37:28"
					changeDescription="" version="">
					<MainDescription><![CDATA[Diagram depicting all the <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/process_element,_cvdpEB_LEdq6CKKKq4D7YA.html"
guid="_cvdpEB_LEdq6CKKKq4D7YA">process element</a>s within the scope of an <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/activity,_yoVhMB_IEdq6CKKKq4D7YA.html"
guid="_yoVhMB_IEdq6CKKKq4D7YA">activity</a>&nbsp;Activity (Role <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/descriptor,_7rS6AB_JEdq6CKKKq4D7YA.html"
guid="_7rS6AB_JEdq6CKKKq4D7YA">descriptor</a>s, Work Product Descriptors, TaskDescriptors, sub-Activities). This diagram
also depicts input/output relationships between Task Descriptors (or Activities)and Work Product Descriptors,&nbsp;as well
as responsibility relationships between Role Descriptors and Task Descriptors. Activity Detail Diagrams are used to provide
a complete summary of an activity&nbsp;and thus&nbsp;improve their comprehensibility.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="role"
				briefDescription="" id="_yUefQNnmEdmO6L4XMImrsA" orderingGuide=""
				suppressed="false" presentationName="role" variabilityType="na">
				<Presentation name="role,_yUefQNnmEdmO6L4XMImrsA"
					briefDescription="" id="_yUefQdnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-08-31T10:52:11"
					changeDescription="" version="">
					<MainDescription><![CDATA[A definition of the behavior and responsibilities of an individual, or a set of individuals working together as a team,
within the context of a business organization.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="tool_mentor" briefDescription="" id="_yYy-mdnmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="tool mentor"
				variabilityType="na">
				<Presentation name="tool_mentor,_yYy-mdnmEdmO6L4XMImrsA"
					briefDescription="" id="_yYy-mtnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[<a class="elementLink" href="base_concepts/guidances/termdefinitions/guidance,_83ttAB_NEdq6CKKKq4D7YA.html"
guid="_83ttAB_NEdq6CKKKq4D7YA">guidance</a>&nbsp;that explains how to perform specific <a class="elementLink"
href="base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html"
guid="_x459ktnmEdmO6L4XMImrsA">task</a>&nbsp;or <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/step,_BqZloB_eEdqAHrsQ7-jSbw.html"
guid="_BqZloB_eEdqAHrsQ7-jSbw">step</a>s using a specificsoftware tool.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="process"
				briefDescription="" id="_yQ5m2NnmEdmO6L4XMImrsA" orderingGuide=""
				suppressed="false" presentationName="process"
				variabilityType="na">
				<Presentation name="process,_yQ5m2NnmEdmO6L4XMImrsA"
					briefDescription="" id="_yQ5m2dnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    (1) A general structure for particular types of development projects.&nbsp;Processes take <a class="elementLink"
    href="file://./../../../base_concepts/guidances/termdefinitions/content_element,_N8x34B_LEdq6CKKKq4D7YA.html"
    guid="_N8x34B_LEdq6CKKKq4D7YA">content element</a>s and relate them into semi-ordered sequences that are customized to
    specific types of projects.&nbsp;Thus, a Process is a set of partially ordered work descriptions intended to reach a
    higher development goal, such as the release of a specific software&nbsp; <!--StartFragment-->These work descriptions
    are organized into a hierarchical&nbsp;breakdown-structure A Process focuses on the lifecycle and the sequencing of
    work in breakdown structures.<br />
</p>
<p>
    (2) The part of&nbsp; <a class="elementLink"
    href="file:///C:/CC2/Migration1/tng_content/libraries/rup_20050708/base_concepts/guidances/termdefinitions/base_concepts/guidances/termdefinitions/uma,_cj6jkB_PEdq6CKKKq4D7YA.html"
     guid="_cj6jkB_PEdq6CKKKq4D7YA">UMA</a>&nbsp;that models processes.
</p>
<!--EndFragment-->]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="checklist"
				briefDescription="A Checklist identifies a series of items that need to be completed or verified. Checklists are often used in reviews such as walkthroughs or inspections."
				id="_2vVuUBT9EdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Checklist" variabilityType="na">
				<Presentation name="checklist,_2vVuUBT9EdqrUt4zetC1gg"
					briefDescription="" id="_2wY3MBT9EdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-22T04:21:29"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    In UMA, a Content Element has at most one Checklist. Checklists, are useful in a number of contexts: they help you
    decide what to do, they help doing it, they help&nbsp;assess the quality of the work, and they help understand how a
    particular Work Product relates to the rest of the process.<!--EndFragment-->
</p>
<p>
    Work products typically have an associated Checklist which present information on how to develop, evaluate and
    use&nbsp;them .
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="concept"
				briefDescription="A Concept outlines key ideas or basic principles underlying a topic central to the method. Concepts normally address more general topics than Guidelines and span across several Work Products, Tasks, or activities."
				id="_8wobABUAEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Concept" variabilityType="na">
				<Presentation name="" briefDescription=""
					id="_8w0oQBUAEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="example"
				briefDescription="This Guidance Type represents a typical, partially completed, sample instance of one or more Content Elements. Examples are most commonly provided for Work Products."
				id="_dCG-UBUBEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Example" variabilityType="na">
				<Presentation name="example,_dCG-UBUBEdqrUt4zetC1gg"
					briefDescription="" id="_dCTLkBUBEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T12:57:41"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    An Example represents a typical, partially completed, sample instance of one or more Content Elements. Examples are
    most commonly provided for Work Products. A Work Product Example is a good supplement to its prescriptive and
    descriptive process Guidance.
</p>
<p>
    Examples should be associated with specific Work Products to give their producer a view of how it should look like when
    it is done.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="practice"
				briefDescription="This Guidance Type presents a proven way or strategy of doing work to achieve a goal that has a positive impact on Work Product or process quality."
				id="_szl6EBUBEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Practice" variabilityType="na">
				<Presentation name="practice,_szl6EBUBEdqrUt4zetC1gg"
					briefDescription="" id="_s0dcwBUBEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-31T02:24:23"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Practices are orthogonal to methods and processes. They often summarize aspects that impact many different parts of a
    method or specific processes.
</p>
In Software Engineering, examples for practices include: 
<ul>
    <li>
        Manage Risks,
    </li>
    <li>
        Continuously verify quality,
    </li>
    <li>
        Architecture-centric and component-based development, etc.
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="report"
				briefDescription="This Guidance Type is a predefined template of a result that is generated on the basis of other Work Products as an output from some form of tool automation."
				id="_x2sAgBUBEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Report" variabilityType="na">
				<Presentation name="report,_x2sAgBUBEdqrUt4zetC1gg"
					briefDescription="" id="_x2-UYBUBEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-31T02:28:20"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    An example for a report would be a use case model survey, which is generated by extracting diagram information from a
    graphical model and textual information from documents and combines these two types of information into a report.
</p>
<p>
    Unlike regular Work Products, reports are not subject to version control. However they may be baselined to provide a
    historic audit trail of the report over time. In some cases, the development tools enable the report to be reproduced
    at any time by rerunning the report against the Work product's History.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="reusable_asset"
				briefDescription="This Guidance Type describes an asset that can be reused in a different context. "
				id="_20bs4BUBEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Reusable Asset" variabilityType="na">
				<Presentation
					name="reusable_asset,_20bs4BUBEdqrUt4zetC1gg" briefDescription=""
					id="_21rDABUBEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-08T03:47:08" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    &nbsp;A Reusable Asset typically includes source code, templates, patterns, but may also include architectural
    frameworks, domain models, and so on.&nbsp; A Reusable Asset has usage rules which are the instructions describing how
    the asset should be used.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="supporting_material"
				briefDescription="This Guidance Type is a catch-all for other types of Guidance not specifically defined elsewhere."
				id="_80XPABUBEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Supporting Material" variabilityType="na">
				<Presentation
					name="supporting_material,_80XPABUBEdqrUt4zetC1gg"
					briefDescription="" id="_80pi4BUBEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-31T02:28:33"
					changeDescription="" version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="template"
				briefDescription="This Guidance Type specifies the structure of a Work Product by providing a pre-defined table of contents, sections, packages, and/or headings, a standardized format, as well as descriptions how the sections and packages are supposed to be used and completed."
				id="_G_UnIBUCEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Template" variabilityType="na">
				<Presentation name="template,_G_UnIBUCEdqrUt4zetC1gg"
					briefDescription="" id="_G_m7ABUCEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-13T11:38:58"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Templates are "models," or prototypes, of Work Products. Within a Work Product description, there usually are one or
    more templates that can be used to create the corresponding Work Product. Templates are linked to the tool that is to
    be used to create the Work Product. Prior to project start, organizations may want to customize the templates by adding
    the company logo, some project identification, or information specific to the type of project.
</p>
<h3>
    Example:
</h3>
<ul>
    <li>
        Word processor tools&nbsp;templates can be used for Work Products that are documents, and for some reports.
    </li>
    <li>
        Automated report generation tools templates extract information from tools such as visual modeling tools,
        requirements management tools or testing tools.
    </li>
    <li>
        HTML tool templates for the various elements of the process.
    </li>
    <li>
        Project planning tool&nbsp;template for the project plan.
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="term_definition"
				briefDescription="This Guidance Type defines concepts that are used to build up the Glossary."
				id="_Z45fwBUDEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Term Definition" variabilityType="na">
				<Presentation
					name="term_definition,_Z45fwBUDEdqrUt4zetC1gg" briefDescription=""
					id="_Z7wmgBUDEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-07T11:52:32" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="white_paper"
				briefDescription="This Guidance Type is an externally published paper that is incorporated as an attachment."
				id="_id9REBUDEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="White Paper" variabilityType="na">
				<Presentation name="white_paper,_id9REBUDEdqrUt4zetC1gg"
					briefDescription="" id="_iePk8BUDEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T12:45:10"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A whitepaper is a&nbsp;Guidance Type for externally&nbsp;published papers&nbsp;that can be read and understood in
    isolation of other Content Elements and Guidance.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="guideline"
				briefDescription="This Guidance type provides additional detail on how to handle a particular Content Element. Guidelines most commonly apply to Tasks and Work Products."
				id="_IAwkEBUEEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Guideline" variabilityType="na">
				<Presentation name="guideline,_IAwkEBUEEdqrUt4zetC1gg"
					briefDescription="" id="_IBPFMBUEEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-31T02:23:28"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A Guideline usually focuses on how to perform a particular Task or grouping of Tasks (for example, grouped together as
    activities) or provides additional detail, rules, and recommendations on Work Products and their properties. Guidelines
    can include details about a variety of topics including:
</p>
<ul>
    <li>
        Practices and different approaches for doing work,
    </li>
    <li>
        How to handle particular kinds of Content Elements,
    </li>
    <li>
        Information on different subtypes and variants of Content Elements and how they evolve throughout a lifecycle,
    </li>
    <li>
        Discussions on skills the performing Roles should acquire,
    </li>
    <li>
        Measurements of progress and maturity, etc.
    </li>
</ul>
<p>
    Work products typically have associated guidelines which present information on how to develop, evaluate and use the
    Work Products . Guidelines contain much of the substance of a method and provide assistance in a number of contexts:
    they help you decide what to do, they help doing it, they help assess the quality of the work, and they help understand
    how a particular Work Product relates to the rest of the process.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="descriptor"
				briefDescription="A Descriptor is a Process Element that represents the use or application of a Method Content element in the Process. The Descriptor provides the ability to override or add to what is defined in the original Method Content Element. Descriptors include Role, Task, and Work Product Descriptors."
				id="_5V9HEBUEEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Descriptor" variabilityType="na">
				<Presentation name="descriptor,_5V9HEBUEEdqrUt4zetC1gg"
					briefDescription="" id="_5WJUUBUEEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-11-15T07:35:38"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A Descriptor represent an occurrence of one concrete Content Element (such as Task, Role, Work Product) in an Activity.
    Descriptors provides a proxy-like representation for these Content Elements within breakdown structures. In addition to
    just referencing Content Elements it allows overriding the Content Elements' structural relationships by defining its
    own sets of associations.
</p>
<p>
    Descriptors are a key concept for realizing the separation of Processes from Method Content. A Descriptor can be
    characterized as a reference object for one particular Content Element, which has its own relationships and properties.
    When a Descriptor is created, it has the same relationships as the referenced Content Element. However, users can
    modify these relationships for the particular process situation for which the Descriptor has been created. The
    Descriptor concept allows defining new relationships and specific process related properties. Descriptors are not
    Content Elements and do not contain their own full descriptions. They refer or trace back to the Content Elements they
    are based on instead.
</p>
<h3>
    Example&nbsp;
</h3>
<p align="center">
    <img alt="Example of Method Content referenced by Descriptor" src="base_concepts/guidances/concepts/resources/descriptors_uml.gif" />
</p>
<p align="center">
    Example of Method Content referenced by Descriptors
</p>
<p>
    <br />
     The above illustration depicts an example using the UML 2.0 profile representation for UMA&nbsp;in which Descriptors
    have been created for a Task, its performing Roles, as well as its input/output Work Products. The situation implied by
    this example is that the Task "Prioritize Use Cases" is to be performed differently in a project's Inception phase than
    in its Elaboration phase. (that is, with different emphasis on different Steps, utilizing different inputs, etc.). In
    particular, we can observe the following:
</p>
<ul>
    <li>
        The Task in Inception has an additional assisting Role (Customer.Project Manager) and does not provide a
        relationship to the Risk List Work Product that had been defined as an optional input in the Method Content (that
        is, Steps of the Task that work with the Risk List will be omitted in this phase).
    </li>
    <li>
        Two different types of Use Case Model Work Products are distinguished here: a Use Case Model as it is normally
        being used during Inception, which describes use cases only briefly, versus use cases that have been detailed as it
        is the case during the Elaboration phase.
    </li>
</ul>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="configuration"
				briefDescription="A Method Configuration specifies the selection of a logical subset of a Method Library."
				id="_d698IBUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Method Configuration" variabilityType="na">
				<Presentation
					name="configuration,_d698IBUFEdqrUt4zetC1gg" briefDescription=""
					id="_d7QQABUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-11-05T03:15:35" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    A Method Configuration is a collection of selected <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/concepts/method_plugin,_0KeEMBUFEdqrUt4zetC1gg.html"
    guid="_0KeEMBUFEdqrUt4zetC1gg">Method Plugins</a>, <a class="elementLinkWithUserText"
    href="./../../../base_concepts/customcategories/method_package,_R5Vk4BtpEdqSLrJ4Ij2LVA.html"
    guid="_R5Vk4BtpEdqSLrJ4Ij2LVA">Method Packages</a> and Processes (see <a class="elementLinkWithType"
    href="./../../../base_concepts/guidances/concepts/capability_pattern,1.7072348895114264E-305.html"
    guid="1.7072348895114264E-305">Concept: Capability Pattern</a>, <a class="elementLinkWithType"
    href="./../../../base_concepts/guidances/concepts/delivery_process,_EhgqwO8MEdmKSqa_gSYthg.html"
    guid="_EhgqwO8MEdmKSqa_gSYthg">Concept: Delivery Process</a>). A Configuration can be exported into its own stand-alone
    library when it includes the full transitive closure of all elements it depends on. A Method Configuration defines a
    logical subset of a <a class="elementLink"
    href="./../../../base_concepts/guidances/concepts/method_library,_m8lGkBUFEdqrUt4zetC1gg.html"
    guid="_m8lGkBUFEdqrUt4zetC1gg">Method Library</a>.
</p>
<h3>
    Applications
</h3>
<p>
    A Configuration is often built around one or more Delivery Processes. A Delivery Process can be valid for different
    Method Configurations, but each Configuration may include or exclude particular content for specific situations. For
    example, a Delivery Process can be defined to include content for developing schemas for different types of database
    management systems, such as content for RDBMS and OODBMS. When using such a Delivery Process, users may want to select
    just the type of DBMS used within their project, and hence exclude all content pertaining to other types of DBMS. They
    achieve this by selecting a Configuration which excludes the respective content or by creating a new one if none such
    already exists.<br />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="method_library"
				briefDescription="A Method Library is a physical container for Method Plug-ins and Method Configuration definitions. All Method Elements are stored in a Method Library."
				id="_m8lGkBUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Method Library" variabilityType="na">
				<Presentation name="" briefDescription=""
					id="_m83acBUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-28T04:34:36" changeDescription=""
					version="">
					<MainDescription><![CDATA[Method Libraries represent physical storage of&nbsp;all Content and Process Elements as well as <a class="elementLink"
href="./../../../base_concepts/guidances/concepts/configuration,_d698IBUFEdqrUt4zetC1gg.html"
guid="_d698IBUFEdqrUt4zetC1gg">Method Configuration</a>s. A Method Library defines a closed universe for all elements in
it,&nbsp;since &nbsp;library elements cannot refer to other libraries.&nbsp; All user-defined extensions to method content
and processes have to be done with <a class="elementLinkWithUserText"
href="./../../../base_concepts/guidances/concepts/method_plugin,_0KeEMBUFEdqrUt4zetC1gg.html"
guid="_0KeEMBUFEdqrUt4zetC1gg">Method Plugins</a>&nbsp;within the same physical library.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="view"
				briefDescription="Views are structured content collections designed to drive publication and facilitate browsing. They are specified using Custom Categories."
				id="_uMKSsBUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="View" variabilityType="na">
				<Presentation name="view,_uMKSsBUFEdqrUt4zetC1gg"
					briefDescription="" id="_uMcmkBUFEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-27T08:55:52"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Views are tabs that appear at the top of the tree browser within a published site. They identify pre-arranged
    structured collections of content designed to facilitate its browsing by process users and practitioners.
</p>
<p>
    A View is specified by defining a nested structure of <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/concepts/custom_category,_xuO10BUGEdqrUt4zetC1gg.html"
    guid="_xuO10BUGEdqrUt4zetC1gg">Custom Categories</a> containing references to the&nbsp;Content Elements one desires to
    publish within the view. Structurally, Views represent a selection of Custom Categories for one specific&nbsp;<a
    class="elementLink" href="./../../../base_concepts/guidances/concepts/configuration,_d698IBUFEdqrUt4zetC1gg.html"
    guid="_d698IBUFEdqrUt4zetC1gg">Method Configuration</a>. In other words, every configuration defines its views by
    referring to a set of Custom Categories.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="method_plugin"
				briefDescription="A Method Plugin represents a physical container for Method Packages. It defines a largest granularity level for the modularization and organization of method content and processes."
				id="_0KeEMBUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Method Plugin" variabilityType="na">
				<Presentation name="" briefDescription=""
					id="_0LCr8BUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-04-13T11:26:20" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    Method Plugin conceptually represents a unit for configuration, modularization, extension, packaging, and deployment of
    method content and processes.&nbsp; A Process Engineer shall design&nbsp;Plugins and allocate content to these Plugins
    with requirements for extensibility, modularity, reuse, and maintainability in mind.
</p>
<p>
    Plug-ins can directly contribute new content, replace existing content, or to cross-reference to any Content Element or
    Process within another Plug-in that it extends.&nbsp; Similar to UML 2.0's 'package merge' mechanism transformation
    interpretations, interpreting these Method Plug-in mechanisms results into new extended Method Content and
    Processes.&nbsp; For example, a might contain additional steps for Tasks, new Work Products extensions to existing
    Roles to be responsible for the new Work Products, additional relationships of existing Content Elements to new
    specific Guidance elements (such as Guidelines, White Papers, Checklists), additional Activities for a Delivery
    Process, new Capability Patterns, etc.&nbsp; A Method Plug-in defines these extension using Variability Element
    relationships and interpretation of these leads to new Method Content and Processes.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="content_package"
				briefDescription="A Content Package is a special Method Package that contains Content Elements exclusively. Examples for Content Element are Artifacts, Tasks, Roles, and so on."
				id="_49a10BUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Content Package" variabilityType="na">
				<Presentation
					name="content_package,_49a10BUFEdqrUt4zetC1gg" briefDescription=""
					id="_49tJsBUFEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-22T11:32:00" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="domain"
				briefDescription="Domain is a Standard Category that is a logical grouping of work products which have an affinity to each other based on resources, timing, or relationship."
				id="_Dh4TEBUGEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Domain" variabilityType="na">
				<Presentation name="domain,_Dh4TEBUGEdqrUt4zetC1gg"
					briefDescription="" id="_DiKm8BUGEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-22T11:32:59"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A Domain is a refineable hierarchy designed to classify related Work Products. In other words, Domains are organized
    into trees where individual Work Products appear as the leaves. Conceptually, each Domain is a grouping of related Work
    Products that tend to be used for a similar purpose.
</p>
<p>
    A&nbsp;single Work Product can be categorized in only one Domain.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="work_product_kind"
				briefDescription="This Standard Category represents a grouping of related Work Products which, in contrast to Domain, is more presentation oriented."
				id="_VRhkoBUGEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Work Product Kind" variabilityType="na">
				<Presentation
					name="work_product_kind,_VRhkoBUGEdqrUt4zetC1gg"
					briefDescription="" id="_VRz4gBUGEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-14T10:31:27"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Work Products may take various shapes or forms, such as:
</p>
<ul>
    <li>
        A <b>model</b>, such as the Use-Case Model or the Design Model, which contains other Artifacts.
    </li>
    <li>
        A <b>model element</b>; that is, an element within a model, such as a Design Class, a Use-Case or a Design
        Subsystem.
    </li>
    <li>
        <strong>Project data</strong> that might be kept in databases or other types of tabular information repositories
        such as spreadsheets.
    </li>
    <li>
        Source code and executable programs&nbsp;that contribute to the product or <strong>Solution.</strong>
    </li>
    <li>
        Various types of documents, for example a <strong>specification</strong> document<strong>,</strong> such as
        Requirements Specification, or a <strong>plan</strong> document, such as the Software Requirements Plan.
    </li>
</ul>
<p>
    They can therefore be categorized accordingly. An example is "<strong>Specification</strong>", which categorizes
    requirements specifications that define a system with a well-defined system boundary, such as use case or functional
    requirements specification. Unlike in Domains, a single Work Product can be categorized in multiple Work Product Kinds.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="role_set"
				briefDescription="This Standard Category organizes Roles into categories."
				id="_u3t7sBUGEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Role Set" variabilityType="na">
				<Presentation name="role_set,_u3t7sBUGEdqrUt4zetC1gg"
					briefDescription="" id="_u4APkBUGEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-29T08:15:33"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Role Sets are used to group Roles together that have certain commonalities.
</p>
<p>
    For example, in Software Engineering, the "Analysts" Role Set could group the
</p>
<ul>
    <li>
        Business Process Analyst
    </li>
    <li>
        System Analyst
    </li>
    <li>
        Requirements Specifier
    </li>
</ul>
<p>
    All of these Roles&nbsp;work with similar techniques and have overlapping skills, but are required to be
    distinct&nbsp;by the&nbsp;software engineering method.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="custom_category"
				briefDescription="Custom categories are used to categorize content based on the user's criteria. One important use is for constructing Views."
				id="_xuO10BUGEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Custom Category" variabilityType="na">
				<Presentation
					name="custom_category,_xuO10BUGEdqrUt4zetC1gg" briefDescription=""
					id="_xuhJsBUGEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-10-27T08:47:50" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    A Custom Category is a category introduced by a method author to structure any number of Method Content Elements of any
    type based on user-defined criteria. Custom categories can be used to categorize content based on the user's criteria
    as well as to define whole tree-structures of nested categories allowing the user to systematically navigate and browse
    Method Content and Processes based on these categories. This application of Custom Categories is also called <a
    class="elementLink" href="./../../../base_concepts/guidances/concepts/view,_uMKSsBUFEdqrUt4zetC1gg.html"
    guid="_uMKSsBUFEdqrUt4zetC1gg">View</a>.
</p>
<h3>
    Examples
</h3>
<p>
    One could create a Custom Category to logically organize content relevant for the user development organization's
    departments: A "Testing" category would group together all Roles, Work Products, Tasks, Capability Patterns and
    Guidance relevant to testing.
</p>
<p>
    Another example would be categories that express licensing levels of the content: These categories would separate
    freely distributable Method Content from Method Content that represents intellectual property and requires a purchased
    license for use.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="tool"
				briefDescription="This Standard Category is a container for Tool Mentors. It can also provide general descriptions of the tool and its general capabilities."
				id="_66Jy0BUGEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Tool" variabilityType="na">
				<Presentation name="tool,_66Jy0BUGEdqrUt4zetC1gg"
					briefDescription="" id="_66cGsBUGEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-27T09:38:43"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/concepts/tool_mentor,1.0762105093945226E-304.html"
    guid="1.0762105093945226E-304">Tool Mentors</a>&nbsp;are a guidance type that define how work described with <a
    class="elementLinkWithUserText" href="./../../../base_concepts/guidances/concepts/task,7.624729048911575E-305.html"
    guid="7.624729048911575E-305">Tasks</a>&nbsp;or <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/concepts/activity,3.132140065969088E-305.html"
    guid="3.132140065969088E-305">Activities</a>&nbsp;is to be performed using a specific tool.&nbsp; Every Tool Mentor
    shall therefore be categorized by exactly one Tool category.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="artifact"
				briefDescription="Artifact is a Work Product that provides a description and definition for tangible, non-trivial work products."
				id="_fdRfkBUJEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Artifact" variabilityType="na">
				<Presentation name="artifact,_fdRfkBUJEdqrUt4zetC1gg"
					briefDescription="" id="_fdds0BUJEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-04-13T11:05:00"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    Artifacts are tangible well-defined Work Products consumed, produced, or modified by Tasks.&nbsp; Artifacts may be
    composed of other Artifacts. For example, a model Artifact can be composed of model elements, which are also Artifacts.
    They may serve as a basis for defining Reusable Assets.&nbsp; Roles use Artifacts to perform Tasks and produce
    Artifacts in the course of performing Tasks.
</p>
<p>
    Artifacts are the responsibility of a single Role, making responsibility easy to identify and understand, and promoting
    the idea that every piece of information produced in the method requires the appropriate set of skills. Even though one
    Role might "own" a specific type of Artifact, other Roles can still use the Artifacts, and perhaps even update them if
    the Role has been given permission to do so.
</p>
<p>
    <b>Artifacts&nbsp;are generally <i>not</i> documents</b>. Many methods have an excessive focus on documents, and in
    particular on <i>paper documentation</i>. The most efficient and pragmatic approach to managing project Artifacts is to
    maintain&nbsp;them <i>within</i> the appropriate tool used to create and manage them. When necessary, one may generate
    documents (snapshots) from these tools, on a just-in-time basis.
</p>
<p>
    Examples Artifacts:
</p>
<ul>
    <li>
        A use case specification stored in&nbsp;a word processor tool&nbsp;
    </li>
    <li>
        A design model stored in&nbsp;a visual modeling tool.&nbsp;
    </li>
    <li>
        A project plan stored in&nbsp;a project planning tool.&nbsp;
    </li>
    <li>
        A defect stored in&nbsp;a change requests tools&nbsp;
    </li>
    <li>
        A project requirements database in a requirements management tool.
    </li>
</ul>
<p>
    Note also that formats such as on <b>whiteboards</b> or <b>flip charts</b> can be used to capture pictorial information
    such as UML diagrams, tabular information such as short lists of status information or even textual information such as
    short vision statements. These formats work well for smaller, collocated teams where all team members have ready access
    to these resources.
</p>
<p>
    However, there are still Artifacts which either have to be or are best suited to being plain text documents, as in the
    case of external input to the project, or in some cases where it is simply the best means of presenting descriptive
    information. Where possible, teams should consider using collaborative <b>Work Group</b> tools, such as WikiWiki webs
    or Groove to capture textual documentation electronically, thus simplifying ongoing content and version management.
    This is especially of importance where historic records must be maintained for purposes such as fulfilling audit
    requirements. For any nontrivial development effort, especially where large development teams are involved, Work
    Products <strong>are</strong> <strong>most likely to be subject to version control and configuration
    management.</strong> This is sometimes only achieved by versioning the container Work Product, when it is not possible
    to do it for the elementary, contained Work Products. For example, in software development, you may control the
    versions of a whole design model, or design package, and not the individual classes they contain.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="deliverable"
				briefDescription="A Deliverable is a Work Product that provides a description and definition for packaging other Work Products, and may be delivered to an internal or external party."
				id="_lBgkMBUJEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Deliverable" variabilityType="na">
				<Presentation name="deliverable,_lBgkMBUJEdqrUt4zetC1gg"
					briefDescription="" id="_lBy4EBUJEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-27T03:16:48"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A deliverable is a Work Product that provides a description and definition for packaging other Work Products, and may
    be delivered to an internal or external party.&nbsp; Therefore, a Deliverable aggregates other Work Products.&nbsp;
</p>
<p>
    A Deliverable is used to pre-define typical or recommended content in the form or work products that would be packaged
    for delivery.&nbsp; The actual content and packaging of the Deliverable may need to be modified for individual projects
    based on these recommendations.&nbsp; Deliverables are used to represent an output from a process that has value,
    material or otherwise, to a client, customer or other stakeholder.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="outcome"
				briefDescription="An Outcome describes intangible Work Products that are a result or state."
				id="_pROF4BUJEdqrUt4zetC1gg" orderingGuide="" suppressed="false"
				presentationName="Outcome" variabilityType="na">
				<Presentation name="outcome,_pROF4BUJEdqrUt4zetC1gg"
					briefDescription="" id="_pRmgYBUJEdqrUt4zetC1gg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-27T03:17:53"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    An Outcome describes intangible Work Products that are a result or state, such as an installed server or optimized
    network.&nbsp;As the occurrence of an Outcome is often informally documented (for example, through minutes or memos),
    Outcomes may also be used to describe Work Products that are not formally defined.&nbsp;A key differentiator for
    Outcomes against Artifacts is that Outcomes are not candidates for harvesting as reusable assets.&nbsp; Outcomes can
    not have associated templates or examples and are not possible to reuse as assets on other projects.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="roadmap"
				briefDescription="This Guidance Type summarizes a Process, often from a particular perspective."
				id="_JCQbIBnXEdqYreeU3jqaDQ" orderingGuide="" suppressed="false"
				presentationName="Roadmap" variabilityType="na">
				<Presentation name="roadmap,_JCQbIBnXEdqYreeU3jqaDQ"
					briefDescription="" id="_JCivABnXEdqYreeU3jqaDQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-10-08T03:47:16"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    An instance of a Roadmap represents important documentation for the Activity or Process it is related to. Often a
    complex Activity such as a Process can be much easier understood by providing a walkthrough with a linear thread of a
    typical instantiation of this Activity.
</p>
<p>
    In addition to making the process practitioner understand how work in the process is being performed, a Roadmap
    provides additional information about how Activities and Tasks relate to each other over time. Roadmaps are also used
    to show how specific aspects are distributed over a whole process providing a kind of filter on the Process for this
    information.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="process_package"
				briefDescription="A Process Package is a special Method Package that contains Processes such as Capability Patterns or Delivery Processes only."
				id="_MT6U8BneEdqYreeU3jqaDQ" orderingGuide="" suppressed="false"
				presentationName="Process Package" variabilityType="na">
				<Presentation
					name="process_package,_MT6U8BneEdqYreeU3jqaDQ" briefDescription=""
					id="_MUGiMBneEdqYreeU3jqaDQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-22T11:34:16" changeDescription=""
					version="">
					<MainDescription></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="composite_role"
				briefDescription="A Composite Role is a special Role Descriptor that relates to more than one Role. It represents a grouping of Roles with the main purpose of reducing the number of Roles defined in Method Content for a Process."
				id="_P9gp0BtHEdqSLrJ4Ij2LVA" orderingGuide="" suppressed="false"
				presentationName="Composite Role" variabilityType="na">
				<Presentation
					name="composite_role,_P9gp0BtHEdqSLrJ4Ij2LVA" briefDescription=""
					id="-FD4UbInbyzlaGxB9oPHdcg" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-02T02:19:52" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    A Composite Role is a grouping of Roles that can be used in an Activity or Process to reduce the number of Roles. A
    Composite Role is thus for the Tasks and Work Products defined for the Roles it refers to. A typical use of this
    construct occurs within a Process designed for a small team in which multiple standard Roles from the Method Content
    are assigned to a single resource. By using a Composite Role the Process suggests a typical clustering of Roles to
    Resources.<br />
</p>
<p>
    A simple example is a Composite Role named <em><strong>Developer</strong></em> that groups together the
    <em><strong>Implementer</strong></em> and <em><strong>Tester</strong></em> Roles. Now, every time one of the Roles
    Implementer or Tester would normally be used within the breakdown structure, Developer is used instead. Hence, if a
    Task Descriptor is added to the Process, that has Implementer or Tester as the primary performer, this Role would be
    automatically be substituted by&nbsp;the Composite Role instance Developer that links back to either Tester or
    Implementer (or both if both were listed as the Task performers).
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="team_profile"
				briefDescription="A Team Profile is a Breakdown Element that groups Role Descriptors or Composite Roles, thus defining a nested hierarchy of teams and team members."
				id="_dRKRMBtHEdqSLrJ4Ij2LVA" orderingGuide="" suppressed="false"
				presentationName="Team Profile" variabilityType="na">
				<Presentation
					name="team_profile,_dRKRMBtHEdqSLrJ4Ij2LVA" briefDescription=""
					id="-J7jcN9p3FRyhuwV5Hq42Kw" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-11-07T11:47:07" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    Work assignments and Work Product responsibilities can be different from Activity to Activity in a development project.
    Different phases require different staffing profiles, that is, different skills and resources doing different types of
    work. Therefore, a Process needs to define these profiles in a flexible manner. Whereas Core Method Content defines
    standard responsibilities and assignments, a Process expressed in breakdown structures needs to be able to refine and
    redefine these throughout its definition.
</p>
<p>
    Role Descriptors, Composite Roles, as well as Team Profiles provide the data structure necessary to achieve this
    flexibility and to provide&nbsp;Process users with the capability to define different teams and Role relationships for
    every Activity (including Activities on any nesting level as well as Iterations or Phases). Hence, in addition to the
    work breakdown and Work Product breakdown structures, Team Profiles are used to define a third type of breakdown
    structure: The Team Breakdown Structure. It is created as an Activity specific hierarchy of Team Profiles comprising of
    Role Descriptors and Composite Roles. These structures can be presented as Org-Charts.<br />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept"
				name="process_contribution"
				briefDescription="A Process Contribution is a special Process that externally defines additions and changes to an existing Process without directly modifying it."
				id="_NYASQBtqEdqSLrJ4Ij2LVA" orderingGuide="" suppressed="false"
				presentationName="Process Contribution" variabilityType="na">
				<Presentation
					name="process_contribution,_NYASQBtqEdqSLrJ4Ij2LVA"
					briefDescription="" id="-x11qt8TVnuIKeMC69UP1TQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-11-15T08:34:50"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A Process Contribution is a special Process that externally defines additions and changes to an existing Process
    without directly modifying the existing Process. It achieves this by describing these additions and changes in a
    separate Process structure. This structures' elements relate to the other Process's elements using "Contributes" and
    "Replace" specializations. Process Contributions are normally packaged with Method Plug-ins that extend existing Method
    Plug-in with new capabilities.
</p>
<p>
    A Process Contribution is a kind of "process plug-in" that plugs additional breakdown structures into an existing
    Process and therefore updates it afterwards with new or changed capabilities. For example, the J2EE Plug-in plugs into
    the technology independent main Plug-in. It may update the generic Delivery Processes defined in that Plug-in with J2EE
    specific Activities. A respective ".NET Plug-in" could define similar updates relevant for that technology platform. A
    process practitioner could then apply the chosen Plug-in, thereby generating a technology specific Process, but keeping
    maintenance of his/her Processes minimal, because technology specific parts are kept separate and will be applied on
    demand only.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="model"
				briefDescription="" id="_yNefY9nmEdmO6L4XMImrsA" orderingGuide=""
				suppressed="false" presentationName="model" variabilityType="na">
				<Presentation name="model,_yNefY9nmEdmO6L4XMImrsA"
					briefDescription="" id="_yNefZNnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-11-15T08:52:04"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A semantically closed abstraction of a system; a <em>complete</em> description of a system from a particular
    perspective (<em>complete</em> means that no additional information is needed to understand the system from that
    perspective); a set of model elements. Two models cannot overlap.
</p>
<br />
<br />
<br />]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="view_element" briefDescription="" id="_ybefKdnmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="view element"
				variabilityType="na">
				<Presentation
					name="view_element,_ybefKdnmEdmO6L4XMImrsA" briefDescription=""
					id="_ybefKtnmEdmO6L4XMImrsA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-04-14T12:22:45" changeDescription=""
					version="">
					<MainDescription><![CDATA[A view element is a textual and/or graphical projection of a collection of <i><a class="elementLinkWithUserText"
href="./../../../base_concepts/guidances/termdefinitions/model_element,_yNnpVdnmEdmO6L4XMImrsA.html"
guid="_yNnpVdnmEdmO6L4XMImrsA">model elements</a></i>.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="model_element" briefDescription=""
				id="_yNnpVdnmEdmO6L4XMImrsA" orderingGuide="" suppressed="false"
				presentationName="model element" variabilityType="na">
				<Presentation
					name="model_element,_yNnpVdnmEdmO6L4XMImrsA" briefDescription=""
					id="_yNnpVtnmEdmO6L4XMImrsA" orderingGuide="" suppressed="false"
					authors="" changeDate="2006-04-14T12:20:00" changeDescription=""
					version="">
					<MainDescription><![CDATA[An element that is an abstraction drawn from the system being modeled. Contrast: <i><a class="elementLink"
href="./../../../base_concepts/guidances/termdefinitions/view_element,_ybefKdnmEdmO6L4XMImrsA.html"
guid="_ybefKdnmEdmO6L4XMImrsA">view element</a></i>.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="document" briefDescription="" id="_yG6kY9nmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="document"
				variabilityType="na">
				<Presentation name="document,_yG6kY9nmEdmO6L4XMImrsA"
					briefDescription="" id="_yG6kZNnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[A document is a collection of information intended to be represented on paper, or in a medium using a paper metaphor. The
paper metaphor includes the concept of pages, and it has either an implicit or explicit sequence of contents. The
information is in text or two-dimensional pictures. Examples of paper metaphors are word processor documents, spreadsheets,
schedules, Gantt charts, web-pages,&nbsp;and overhead slide presentations.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="stakeholder" briefDescription="" id="_yWHeDNnmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="stakeholder"
				variabilityType="na">
				<Presentation name="stakeholder,_yWHeDNnmEdmO6L4XMImrsA"
					briefDescription="" id="_yWHeDdnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[An individual who is who is materially affected by the&nbsp;outcome of the <a class="elementLink"
href="base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a>&nbsp;(i.e. the <a class="elementLink"
href="base_concepts/guidances/termdefinitions/deliverable,_yFbWoNnmEdmO6L4XMImrsA.html"
guid="_yFbWoNnmEdmO6L4XMImrsA">deliverable</a>s&nbsp;the process produces).]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="customer" briefDescription="" id="_yE05s9nmEdmO6L4XMImrsA"
				orderingGuide="" suppressed="false" presentationName="customer"
				variabilityType="na">
				<Presentation name="customer,_yE05s9nmEdmO6L4XMImrsA"
					briefDescription="" id="_yE05tNnmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDescription="" version="">
					<MainDescription><![CDATA[A person or organization, internal or external to the producing organization, who takes financial responsibility for the
system. In a large system this may or may not be the user. The customer is the ultimate recipient of the developed product.
See also: <i><a class="elementLink" href="rup/guidances/termdefinitions/stakeholder,_yWHeDNnmEdmO6L4XMImrsA.html"
guid="_yWHeDNnmEdmO6L4XMImrsA">stakeholder</a>.</i>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="static_work_product" briefDescription=""
				id="_yWaY9tnmEdmO6L4XMImrsA" orderingGuide="" suppressed="false"
				presentationName="static work product" variabilityType="na">
				<Presentation
					name="static_work_product,_yWaY9tnmEdmO6L4XMImrsA"
					briefDescription="" id="_yWaY99nmEdmO6L4XMImrsA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T09:07:47"
					changeDescription="" version="">
					<MainDescription><![CDATA[A <a class="elementLink" href="base_concepts/guidances/termdefinitions/work_product,_H4JXwB_SEdq6CKKKq4D7YA.html"
guid="_H4JXwB_SEdq6CKKKq4D7YA">work product</a>&nbsp;that is used, but not changed, by a <a class="elementLink"
href="base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a>.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="activity" briefDescription="" id="_yoVhMB_IEdq6CKKKq4D7YA"
				orderingGuide="" suppressed="false" presentationName="activity"
				variabilityType="na">
				<Presentation name="activity,_yoVhMB_IEdq6CKKKq4D7YA"
					briefDescription="" id="-67u6-WRUmTOB9IdLgQg6aw" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T07:57:11"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a class="elementLink" href="base_concepts/guidances/termdefinitions/process_element,_cvdpEB_LEdq6CKKKq4D7YA.html"
guid="_cvdpEB_LEdq6CKKKq4D7YA">process element</a>&nbsp;which supports the nesting and logical grouping of related process
elements such as <a class="elementLink"
href="base_concepts/guidances/termdefinitions/descriptor,_7rS6AB_JEdq6CKKKq4D7YA.html"
guid="_7rS6AB_JEdq6CKKKq4D7YA">descriptor</a>&nbsp;and sub-Activities, thus forming <a class="elementLink"
href="base_concepts/guidances/termdefinitions/breakdown_structure,_95LCoB_QEdq6CKKKq4D7YA.html"
guid="_95LCoB_QEdq6CKKKq4D7YA">breakdown structure</a>s.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="descriptor" briefDescription="" id="_7rS6AB_JEdq6CKKKq4D7YA"
				orderingGuide="" suppressed="false" presentationName="descriptor"
				variabilityType="na">
				<Presentation name="descriptor,_7rS6AB_JEdq6CKKKq4D7YA"
					briefDescription="" id="-TI6lqoTE1op3-SnmGa2S9Q" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-11-15T08:49:42"
					changeDescription="" version="">
					<MainDescription><![CDATA[Abstract generalization for special <a class="elementLink"
href="./../../../base_concepts/guidances/termdefinitions/breakdown_element,_cvdpEB_LEdq6CKKKq4D7YA.html"
guid="_cvdpEB_LEdq6CKKKq4D7YA">breakdown element</a>s&nbsp;that reference one concrete <a class="elementLink"
href="./../../../base_concepts/guidances/termdefinitions/content_element,_N8x34B_LEdq6CKKKq4D7YA.html"
guid="_N8x34B_LEdq6CKKKq4D7YA">content element</a>. Descriptors are the key concept for realizing the separation of <a
class="elementLink" href="./../../../base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a>&nbsp;from Method Content. A Descriptor can be characterized as a reference
object for one particular Content Element. In addition, a Descriptor&nbsp;has its own relationships and properties whose
purpose is to modify the semantics of the Content Element it refers to.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="content_element" briefDescription=""
				id="_N8x34B_LEdq6CKKKq4D7YA" orderingGuide="" suppressed="false"
				presentationName="content element" variabilityType="na">
				<Presentation
					name="content_element,_N8x34B_LEdq6CKKKq4D7YA" briefDescription=""
					id="-We7G-7OM2QspR_i1ErwtLA" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-07T08:14:36" changeDescription=""
					version="">
					<MainDescription><![CDATA[Any element modeled in <a class="elementLink"
href="base_concepts/guidances/termdefinitions/uma,_cj6jkB_PEdq6CKKKq4D7YA.html"
guid="_cj6jkB_PEdq6CKKKq4D7YA">UMA</a>&nbsp;that is part of <a class="elementLink"
href="base_concepts/guidances/termdefinitions/method_content,_Ts2joB_MEdq6CKKKq4D7YA.html"
guid="_Ts2joB_MEdq6CKKKq4D7YA">method content</a>.Content Elements providestep-by-stepexplanations,describing how very
specific development goals are achieved independent of the placement of these steps within a development lifecycle. They
are instantiated and adapted to the specific situation within <a class="ELEMENTLINK" guid="_yQ5m2NnmEdmO6L4XMImrsA"
href="file://./../../../base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"><font
color="#0000ff">process</font></a>&nbsp;structures.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="breakdown_element" briefDescription=""
				id="_cvdpEB_LEdq6CKKKq4D7YA" orderingGuide="" suppressed="false"
				presentationName="breakdown element" variabilityType="na">
				<Presentation
					name="breakdown_element,_cvdpEB_LEdq6CKKKq4D7YA"
					briefDescription="" id="-7pbyO29v0VnsosWHabeZDQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-23T04:07:46"
					changeDescription="" version="">
					<MainDescription><![CDATA[Any element modeled in <a class="elementLink"
href="base_concepts/guidances/termdefinitions/uma,_cj6jkB_PEdq6CKKKq4D7YA.html"
guid="_cj6jkB_PEdq6CKKKq4D7YA">UMA</a>&nbsp;that is part of <a class="elementLink"
href="base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a>&nbsp;structure.<!--EndFragment-->]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="method_content" briefDescription=""
				id="_Ts2joB_MEdq6CKKKq4D7YA" orderingGuide="" suppressed="false"
				presentationName="Method Content" variabilityType="na">
				<Presentation
					name="method_content,_Ts2joB_MEdq6CKKKq4D7YA" briefDescription=""
					id="-akU0PqDaad4Ns5MQhVBJ7Q" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-07T08:22:21" changeDescription=""
					version="">
					<MainDescription><![CDATA[<p>
    <!--StartFragment-->Describes generic <a class="elementLink"
    href="file://./../../../base_concepts/guidances/termdefinitions/uma,_cj6jkB_PEdq6CKKKq4D7YA.html"
    guid="_cj6jkB_PEdq6CKKKq4D7YA">UMA</a> methodological concepts and <a class="elementLink"
    href="base_concepts/guidances/termdefinitions/guidance,_83ttAB_NEdq6CKKKq4D7YA.html"
    guid="_83ttAB_NEdq6CKKKq4D7YA">guidance</a>&nbsp;which provide step-by-step explanations, describing how specific goals
    are achieved <em>independently of the placement of these steps within a process lifecycle</em>. <!--EndFragment-->UMA
    separates Method Content from its application in <a class="elementLink"
    href="base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
    guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a>.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="guidance" briefDescription="" id="_83ttAB_NEdq6CKKKq4D7YA"
				orderingGuide="" suppressed="false" presentationName="guidance"
				variabilityType="na">
				<Presentation name="guidance,_83ttAB_NEdq6CKKKq4D7YA"
					briefDescription="" id="-CTatxBir28UK-VwWwDij-g" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-11-15T08:49:56"
					changeDescription="" version="">
					<MainDescription><![CDATA[Generalizes all forms of content whose primary purpose is to provide explanations about other <a class="elementLink"
href="./../../../base_concepts/guidances/termdefinitions/uma,_cj6jkB_PEdq6CKKKq4D7YA.html"
guid="_cj6jkB_PEdq6CKKKq4D7YA">UMA</a> elements. Guidance being itself a <a class="elementLink"
href="./../../../base_concepts/guidances/termdefinitions/content_element,_N8x34B_LEdq6CKKKq4D7YA.html"
guid="_N8x34B_LEdq6CKKKq4D7YA">content element</a>, it is possible to associate Guidance to other Guidance.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="uma"
				briefDescription="" id="_cj6jkB_PEdq6CKKKq4D7YA" orderingGuide=""
				suppressed="false" presentationName="UMA" variabilityType="na">
				<Presentation name="uma,_cj6jkB_PEdq6CKKKq4D7YA"
					briefDescription="" id="-QBSZ9hFRr8q6kvRyq1cESQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T08:44:46"
					changeDescription="" version="">
					<MainDescription><![CDATA[Stands for&nbsp;Unified Method&nbsp;Architecture. UMA is a state-of-the-art architecture for the conceiving, specifying,
and storing of method and process metadata.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="breakdown_structure" briefDescription=""
				id="_95LCoB_QEdq6CKKKq4D7YA" orderingGuide="" suppressed="false"
				presentationName="breakdown structure" variabilityType="na">
				<Presentation
					name="breakdown_structure,_95LCoB_QEdq6CKKKq4D7YA"
					briefDescription="" id="-dpUlq7kJXlJBUjvh7lHW7Q" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T08:55:46"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    <a class="elementLink" href="base_concepts/guidances/termdefinitions/uma,_cj6jkB_PEdq6CKKKq4D7YA.html"
    guid="_cj6jkB_PEdq6CKKKq4D7YA">UMA</a>&nbsp;construct that specifies a <a class="elementLink"
    href="base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
    guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a>&nbsp;as the hierarchical composition of <a class="elementLink"
    href="base_concepts/guidances/termdefinitions/process_element,_cvdpEB_LEdq6CKKKq4D7YA.html"
    guid="_cvdpEB_LEdq6CKKKq4D7YA">breakdown element</a>s.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="work_product" briefDescription="" id="_H4JXwB_SEdq6CKKKq4D7YA"
				orderingGuide="" suppressed="false" presentationName="work product"
				variabilityType="na">
				<Presentation
					name="work_product,_H4JXwB_SEdq6CKKKq4D7YA" briefDescription=""
					id="-dcYwPivhczonAxeyXweyIQ" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-07T09:05:14" changeDescription=""
					version="">
					<MainDescription><![CDATA[<a class="elementLink" href="base_concepts/guidances/termdefinitions/content_element,_N8x34B_LEdq6CKKKq4D7YA.html"
guid="_N8x34B_LEdq6CKKKq4D7YA">content element</a>&nbsp;that represents&nbsp;anything used, produced, or modified by a <a
class="elementLink" href="base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html"
guid="_x459ktnmEdmO6L4XMImrsA">task</a>.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="step"
				briefDescription="" id="_BqZloB_eEdqAHrsQ7-jSbw" orderingGuide=""
				suppressed="false" presentationName="step" variabilityType="na">
				<Presentation name="step,_BqZloB_eEdqAHrsQ7-jSbw"
					briefDescription="" id="-KfXoeGTRnQImE1byTBtryQ" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T10:29:12"
					changeDescription="" version="">
					<MainDescription><![CDATA[<a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/content_element,_N8x34B_LEdq6CKKKq4D7YA.html"
guid="_N8x34B_LEdq6CKKKq4D7YA">content element</a>&nbsp;used to organize <a class="elementLink"
href="file://./../../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html"
guid="_x459ktnmEdmO6L4XMImrsA">task</a>s into parts or subunits of work.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition" name="outcome"
				briefDescription="" id="_LNAAcB_iEdqAHrsQ7-jSbw" orderingGuide=""
				suppressed="false" presentationName="outcome"
				variabilityType="na">
				<Presentation name="outcome,_LNAAcB_iEdqAHrsQ7-jSbw"
					briefDescription="" id="-SQyJsrOEI73uLZzjRVmSBA" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-07T10:58:52"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    <!--StartFragment-->Primarily describes intangible <a class="elementLink"
    href="file://./../../../base_concepts/guidances/termdefinitions/work_product,_H4JXwB_SEdq6CKKKq4D7YA.html"
    guid="_H4JXwB_SEdq6CKKKq4D7YA">Work Product</a>s that are a result or state. An Outcome can also be used to represent
    an informal Work Product.<!--EndFragment-->
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="delivery_process" briefDescription=""
				id="_ZufeMCO3EdqaNq6Ptg8uyA" orderingGuide="" suppressed="false"
				presentationName="delivery process" variabilityType="na">
				<Presentation
					name="delivery_process,_ZufeMCO3EdqaNq6Ptg8uyA" briefDescription=""
					id="-IsV3QdyMdwFlqznd4UAYhw" orderingGuide="" suppressed="false"
					authors="" changeDate="2005-09-12T08:10:45" changeDescription=""
					version="">
					<MainDescription><![CDATA[A Delivery Process is a special <a class="elementLink"
href="base_concepts/guidances/termdefinitions/process,_yQ5m2NnmEdmO6L4XMImrsA.html"
guid="_yQ5m2NnmEdmO6L4XMImrsA">process</a> describing a complete and integrated approach for performing a specific project
type. <!--StartFragment-->It provides a complete lifecycle model that has been detailed by sequencing Method Content in
breakdown structures.]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:TermDefinition"
				name="capability_pattern" briefDescription=""
				id="_2RUJACO4EdqaNq6Ptg8uyA" orderingGuide="" suppressed="false"
				presentationName="capability pattern" variabilityType="na">
				<Presentation
					name="capability_pattern,_2RUJACO4EdqaNq6Ptg8uyA"
					briefDescription="" id="-AY7-wWpxUmZp4c-odX8e7g" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-12T08:13:52"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    <!--StartFragment-->A Capability Pattern is a special Process that describes a reusable cluster of <a
    class="elementLink"
    href="file://./../../../base_concepts/guidances/termdefinitions/activity,_yoVhMB_IEdq6CKKKq4D7YA.html"
    guid="_yoVhMB_IEdq6CKKKq4D7YA">Activities</a>. Capabilities Patterns express and communicate process knowledge for a
    key area of interest such as a Discipline and can be directly used by process practitioner to guide his work.
    <!--EndFragment-->
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="phase"
				briefDescription="This guidance introduces the concept of a Phase and its purpose within a project."
				id="__7xOEC7aEdqHMdmRzC0-2g" orderingGuide="" suppressed="false"
				presentationName="Phase" variabilityType="na">
				<Presentation name="phase,__7xOEC7aEdqHMdmRzC0-2g"
					briefDescription="" id="-bhzuf6RMHP3d-AHkoKDg7g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-22T08:09:07"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<h3>
    What is a Phase?
</h3>
<p>
    While the entire purpose of a project is to produce a product, the specific goals of the team will vary substantially
    throughout the project. In the beginning, there usually is considerable latitude in the requirements for the product.
    It may not be clear whether the project is feasible or even if it is likely to be profitable. At that time, it is
    critical to bring an answer to these questions, and of little to no value to start developing the product in
    earnest.&nbsp; Towards the end of the project, the product itself is usually complete, and issues of quality, delivery,
    and completeness then take center stage. At different points in time, tasks are undertaken in new ways and work
    products will have new content.
</p>
<p>
    To coordinate the team’s efforts in a manner that take these fundamental observations into account it is recommended to
    divide a project lifecycle into a sequence of phases. Each phase has a defined set of goals, its own iteration style
    and customized <a class="elementLinkWithUserText" href="./../../../base_concepts/guidances/concepts/task,7.624729048911575E-305.html" guid="7.624729048911575E-305">tasks</a> and <a class="elementLinkWithUserText" href="./../../../base_concepts/guidances/concepts/work_product,4.804531471620803E-306.html" guid="4.804531471620803E-306">work products</a> to address the unique needs of the project at that point in time.
</p>
<p>
    We recommend&nbsp;to divide the project lifecycle in&nbsp;four phases: Inception, Elaboration, Construction and
    Transition.
</p>
<h3>
    Iteration and Phases
</h3>
<p>
    Each phase can be further broken down into iterations. An iteration is a complete development loop resulting in a build
    (internal or external) of an executable system, usually a subset of the final product under development, which grows
    incrementally from iteration to iteration to become the product- or project-release.<br />
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="release"
				briefDescription="A Release is the delivery of a functional system meeting predefined objectives."
				id="_L5BIkC7uEdqHMdmRzC0-2g" orderingGuide="" suppressed="false"
				presentationName="Release" variabilityType="na">
				<Presentation name="release,_L5BIkC7uEdqHMdmRzC0-2g"
					briefDescription="" id="-dsgUC_uXte9wj6nt8DLHtw" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-09-27T02:32:36"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    A release can be internal or external. An internal release is used only by the development organization, as part of a
    milestone, or for a demonstration to users or customers. An external release (or delivery) is delivered to users. A
    release is not necessarily a complete product, but can just be one step along the way, with its usefulness measured
    only from an engineering perspective. Releases act as a forcing function that drives the development team to get
    closure at regular intervals, avoiding the "90% done, 90% remaining" syndrome.
</p>
<p>
    <a class="elementLinkWithType" href="./../../../base_concepts/guidances/concepts/iteration,3.379871268737602E-305.html"
    guid="3.379871268737602E-305">Concept: Iteration</a>s and releases allow a better usage over time of the various
    specialties in the team: designers, testers, writers, and so forth. Regular releases let you break down the integration
    and test issues and spread them across the development cycle. These issues have often been the downfall of large
    projects because all problems were discovered at once during the single massive integration step, which occurred very
    late in the cycle, and where a single problem halts the whole team.
</p>
<p>
    With each Release,&nbsp;many <a class="elementLinkWithType"
    href="./../../../base_concepts/guidances/concepts/work_product,4.804531471620803E-306.html"
    guid="4.804531471620803E-306">Concept: Work Product</a>s&nbsp;are updated. It is said that this is a bit like "growing"
    software. Instead of developing Work Products one after another, in a pipeline fashion, they are evolving across the
    cycle, although at different rates.
</p>
<!--EndFragment--><!--EndFragment--><!--EndFragment--><!--EndFragment-->]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="about_base_concepts" briefDescription=""
				id="_uvje4D_fEdqDFvujd6NHiA" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/guidances/supportingmaterials/resources/about.gif"
				presentationName="About Base Concepts" variabilityType="na">
				<Presentation
					name="new_supporting_material,_uvje4D_fEdqDFvujd6NHiA"
					briefDescription="" id="-V2B7_NtU_O7-45ldkX0Rrw" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-09-28T01:24:54"
					changeDescription="" version="1.0.0">
					<MainDescription><![CDATA[<h3>
    <a id="version" name="version">Version Information</a>
</h3>
<p>
    Version 0.9
</p>
<h3>
    Content
</h3>
<p>
    This plug-in is a formal introduction to the UMA Method Architecture.
</p>
<p>
    It&nbsp;positions UMA in terms of its goals and its novel aspects and defines all fundamental abstractions central to
    UMA.
</p>
<p>
    It is not dependent upon any other plug-ins.
</p>
<h3>
    Legal Statement
</h3>
<p class="node">
    See <a href="base_concepts/guidances/supportingmaterials/resources/copyrite.htm">Intellectual Property Notices</a>.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:SupportingMaterial"
				name="whats_new_base_concepts" briefDescription=""
				id="_qxY8MEALEdqTMtYjAib0og" orderingGuide="" suppressed="false"
				nodeicon="base_concepts/guidances/supportingmaterials/resources/whats_new.gif"
				presentationName="What's New in Base Concepts"
				variabilityType="na">
				<Presentation
					name="new_supporting_material,_qxY8MEALEdqTMtYjAib0og"
					briefDescription="" id="-eyFTMGu83WSs-yJedYCY3g" orderingGuide=""
					suppressed="false" authors="" changeDate="2006-01-19T08:07:01"
					changeDescription="" version="">
					<MainDescription><![CDATA[<p>
    For a description of this plug-in's contents, refer to <a class="elementLink"
    href="./../../../base_concepts/guidances/supportingmaterials/about_base_concepts,_uvje4D_fEdqDFvujd6NHiA.html"
    guid="_uvje4D_fEdqDFvujd6NHiA">About Base Concepts</a>.
</p>
<p>
    The new features and changes from version to version are described below.
</p>
<ul>
    <li>
        <a href="#2.0">From&nbsp;2.0 to 2.0.1</a>
    </li>
    <li>
        <a href="#1.0">1.0</a>
    </li>
</ul>
<h2>
    <a id="1.0" name="1.0">1.0</a>
</h2>
<p>
    This is the initial release of this plug-in.
</p>]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
			<ContentElement xsi:type="uma:Concept" name="uma_vs_rup"
				briefDescription="This concept describes the key differences between the Unified Method Architecture and the Rational Unified Process / Rational Process Workbench 2003 meta-model."
				id="_SZDtIEdjEdqBmOmOgjH2IQ" orderingGuide="" suppressed="false"
				presentationName="UMA versus RUP 2003 meta-model"
				variabilityType="na">
				<Presentation name="new_concept,_SZDtIEdjEdqBmOmOgjH2IQ"
					briefDescription="" id="-adf9s_DFIL1YgIHbAFvKWg" orderingGuide=""
					suppressed="false" authors="" changeDate="2005-11-15T08:38:20"
					changeDescription="" version="">
					<MainDescription><![CDATA[<h3>
    Background
</h3>
<p>
    The Unified Method Architecture (UMA) has been developed with the aim to unify the representation schemata and
    terminology of all method and process engineering approaches within IBM as well as to support the most important
    standards in industry.&nbsp; Hence, as shown in the figure below, UMA has been developed in a collaborative effort by
    the architects of the IBM Rational Unified Process (RUP), IBM Global Services Method (GS Method), and IBM Rational
    Summit Ascendant.&nbsp; In addition to this core group of architects, stakeholders of many other development process
    initiatives within and outside of IBM reviewed and contributed to the specification.&nbsp; The specification itself has
    been submitted to the <a href="http://www.omg.org/" target="_blank">OMG</a>&nbsp;as a proposal for the <a
    href="http://www.omg.org/cgi-bin/doc?ad/2004-11-4" target="_blank">SPEM 2.0 standard</a>.&nbsp; Because, the RUP 2003
    meta-model had been developed based on the current <a href="http://www.omg.org/technology/documents/formal/spem.htm"
    target="_blank">SPEM 1.1 standard</a>, this SPEM 2.0 draft proposal can be seen as a significant but continuous
    evolution of that standard.
</p>
<center>
    <img alt="Picture showing the evolution of the Unified Method Architecture" src="base_concepts/guidances/concepts/resources/uma-evo.gif" />
</center>
<p>
    The main goal of this unification was to come up with one set of terms and data structures that allows all of these
    methods and processes to be expressed without&nbsp;losing key characteristics.&nbsp; For example, UMA had to be
    designed to support many different lifecycle models: the RUP iterative development lifecycle, incremental GS Method
    lifecycles, and Summit Ascendant waterfall and iterative lifecycles.&nbsp; In addition, terminology differences needed
    to be resolved: What RUP would call an Activity was called Task in GS Method, RUP would speak of Artifacts where Summit
    Ascendant would define Deliverables, and so on.
</p>
<h3>
    Changes in UMA for RUP 2003 Users
</h3>
<p>
    As a result of defining just one data structure and more importantly one terminology for all of these approaches,
    compromises and changes had to be accepted by all stakeholders. Although these changes might be disturbing to the
    current RUP user, on the long run they will benefit from one broadly used unified terminology and standardized way of
    expressing method content and processes improving communication about processes and facilitating reuse.&nbsp; The
    following list summarizes the most important changes to the RUP 2003 meta-model.&nbsp; The table at the end of this
    page provides you with a complete terminology comparison of all the key sources for UMA.
</p>
<ul>
    <li>
        <strong>Activities have been renamed to task</strong>: To provide a tighter link to process enactment and project
        management we renamed the lowest assignable units of work to Task, because this is the term most commonly used.
    </li>
    <li>
        <strong>Workflow details renamed to activity</strong>: Workflows are commonly expressed in hierarchies of activity
        diagrams (e.g. activity diagrams defined in the UML 2.0).&nbsp; Although RUP only provided one level of workflow
        breakdown, UMA is designed to provide multiple levels of such a breakdown. Because the word Activity was more
        commonly used to express the elements of activity diagrams as well as the activity diagram itself, we decided to
        replace the name Workflow Detail used in RUP with the name Activity.&nbsp; We realize that the shift in the usage
        of the word Activity might cause confusion with existing RUP users.&nbsp; However, one important goal of the UMA
        work was to use terms in the way they are most commonly used in standards and industry.&nbsp;
    </li>
    <li>
        <strong>Tasks (former RUP Activities) can be performed by many roles</strong>:&nbsp; In RUP 2003 an activity was
        modeled as an operation of a role.&nbsp; Customer feedback, a look at other process modeling approaches, as well as
        changes introduced in UML 2.0 indicated that this was a too restrictive way of modeling human behavior.&nbsp; This
        approach did not allow expressing that some work was performed as a collaboration of different roles.&nbsp; UMA
        addresses this issue&nbsp;by making&nbsp;Task an independent model element to which performing roles can be
        assigned as resources.&nbsp; UMA therefore now allows several roles to be assigned to a task.&nbsp; For backward
        compatibility, it still allows a primary performing role to be identified&nbsp;(being responsible for the task) as
        well as several additional performers.
    </li>
    <li>
        <strong>Refinement of the artifact concept</strong>: RUP only used the concept of artifact to define things that
        are used and produced in a development project.&nbsp; UMA defines an extended taxonomy for these concepts.&nbsp; It
        defines the general concept of work product, which has three different specializations (specific work product
        types): Artifacts (managed work products), Deliverables (packaged work products that will be delivered to a
        stakeholder for review), and Outcome (unmanaged, intangible work products).
    </li>
    <li>
        <strong>Different categorizations for work products and roles</strong>: In RUP, artifacts and roles were all
        categorized by discipline.&nbsp; However, sometimes artifacts were used across disciplines and a categorization to
        only one discipline caused confusion.&nbsp; In UMA different categories have been defined for work definitions
        (discipline for tasks and activities), work products (domain and work product kind), and roles (role sets).&nbsp;
    </li>
    <li>
        <strong>Process Components renamed to Method Package</strong>: The concept of component is commonly used in many
        standards and technologies. Most applications of component link it to the abstraction of encapsulation defining a
        component as a black box which can be used via well-defined interfaces. RUP components did not fulfill this black
        box criterion. Also the SPEM standard defined packages as well as components. To be compliant to SPEM and the
        industry usage of the word component, we renamed Process Component to Method Package. (It is technically a 'method'
        because it can contain method elements or process elements.)
    </li>
    <li>
        <strong>Separation of method content elements from process elements</strong>: In RUP 2003&nbsp;you created a new
        process by defining a new configuration and documenting manually in a development case artifact changes to standard
        RUP.&nbsp; UMA provides extended concepts in addition to the configuration concept for tailoring processes.&nbsp;
        It allows you to model concretely for a process what work defined in the method content you want to actually do in
        each phase, because you can easily add, remove, and reorder elements in the process structure, reusing or not
        reusing whatever you want from the method content. It achieves these features by a more clear separation of method
        content (e.g. tasks defined for disciplines) and the application of method content in process (expressed with
        activity diagrams and/or work breakdown structures) as well as the modeling of processes (i.e. creating new or
        adapted activity diagrams or new or adapted work breakdown structures).&nbsp; It introduces a few new concepts such
        as descriptor that support this separation and achieve new capabilities for maintaining and reusing many different
        families of alternative processes and process parts all within the same configuration.
    </li>
</ul>
<h3>
    Terminology Comparison
</h3>
The following table shows how the UMA terminology maps to terms used in other process engineering approaches.<br />
<br />
<table cellspacing="0" cellpadding="0" width="938" border="1">
    <colgroup>
        <col style="WIDTH: 48pt" width="64" />
        <col style="WIDTH: 176pt" width="235" />
        <col style="WIDTH: 117pt" width="156" />
        <col style="WIDTH: 108pt" width="144" />
        <col style="WIDTH: 139pt" width="185" />
        <col style="WIDTH: 116pt" width="154" />
    </colgroup>
    <tbody>
        <tr bgcolor="#cccccc" height="17">
            <td width="64" height="17">
                &nbsp;
            </td>
            <td width="235">
                <b>UMA/RMC</b> 
            </td>
            <td width="156">
                <b>RUP 2003</b> 
            </td>
            <td width="144">
                <b>SUMMIT</b> 
            </td>
            <td width="185">
                <b>IGSM</b> 
            </td>
            <td width="154">
                <b>SPEM 1.1</b> 
            </td>
        </tr>
        <tr>
            <td colspan="2" height="17">
                Basic Method Elements
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td height="136" rowspan="8">
                &nbsp;
            </td>
            <td>
                Role
            </td>
            <td>
                Role
            </td>
            <td>
                Role
            </td>
            <td>
                Role
            </td>
            <td>
                Process Role
            </td>
        </tr>
        <tr>
            <td>
                Work Product
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Deliverable
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Work Product/Artifact
            </td>
            <td>
                Artifact
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Work Product Description
            </td>
            <td>
                Work Product
            </td>
        </tr>
        <tr>
            <td>
                Work Product/Outcome
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Task Outcome
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Work Product/Deliverable
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Deliverable Content Descripription
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Task
            </td>
            <td>
                Activity
            </td>
            <td>
                Activity
            </td>
            <td>
                Task
            </td>
            <td>
                Activity
            </td>
        </tr>
        <tr>
            <td>
                Step
            </td>
            <td>
                Step
            </td>
            <td>
                Step
            </td>
            <td>
                Subtask
            </td>
            <td>
                Step
            </td>
        </tr>
        <tr>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td colspan="2" height="17">
                Process Related
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td height="102" rowspan="6">
                &nbsp;
            </td>
            <td>
                Activity
            </td>
            <td>
                Workflow Detail
            </td>
            <td>
                Task
            </td>
            <td>
                Activity
            </td>
            <td>
                Work Definition
            </td>
        </tr>
        <tr>
            <td>
                Iteration
            </td>
            <td>
                Iteration
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Iteration
            </td>
        </tr>
        <tr>
            <td>
                Phase
            </td>
            <td>
                Phase
            </td>
            <td>
                Phase
            </td>
            <td>
                Phase
            </td>
            <td>
                Phase
            </td>
        </tr>
        <tr>
            <td>
                Capability Pattern
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Capability Pattern
            </td>
            <td>
                (Process Component)
            </td>
        </tr>
        <tr>
            <td>
                Delivery Process
            </td>
            <td>
                Lifecycle/Configuration
            </td>
            <td>
                Route Map
            </td>
            <td>
                Engagement Model
            </td>
            <td>
                (Process)
            </td>
        </tr>
        <tr>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td colspan="2" height="17">
                Categorization
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td height="85" rowspan="5">
                &nbsp;
            </td>
            <td>
                Discipline
            </td>
            <td>
                Discipline
            </td>
            <td>
                Module
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Discipline
            </td>
        </tr>
        <tr>
            <td>
                Domain
            </td>
            <td>
                (Artifact Set)
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Domain
            </td>
            <td>
                Work Product Kind
            </td>
        </tr>
        <tr>
            <td>
                Role Set
            </td>
            <td>
                (Role Set)
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Tool
            </td>
            <td>
                Tool
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td colspan="2" height="17">
                Method Packaging
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td height="102" rowspan="6">
                &nbsp;
            </td>
            <td>
                Method Plug-in
            </td>
            <td>
                Process Model Plug-in
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Process
            </td>
        </tr>
        <tr>
            <td>
                Method Package
            </td>
            <td>
                Process Component
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Package
            </td>
        </tr>
        <tr>
            <td>
                Method Package/Content Package&nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Package
            </td>
        </tr>
        <tr>
            <td>
                Method Package/Process Package
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Package
            </td>
        </tr>
        <tr>
            <td>
                Process Package/Process Component
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Process Component
            </td>
        </tr>
        <tr>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td colspan="2" height="17">
                Guidance Types
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td height="204" rowspan="12">
                &nbsp;
            </td>
            <td>
                Guideline
            </td>
            <td>
                Guideline
            </td>
            <td>
                Reference Paper
            </td>
            <td>
                Technique Paper
            </td>
            <td>
                Guideline
            </td>
        </tr>
        <tr>
            <td>
                Concept
            </td>
            <td>
                Concept
            </td>
            <td>
                Reference Paper
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Whitepaper
            </td>
            <td>
                Whitepaper
            </td>
            <td>
                Reference Paper
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Checklist
            </td>
            <td>
                Checklist
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Technique Paper (V&amp;V)
            </td>
            <td>
                Checklist
            </td>
        </tr>
        <tr>
            <td>
                Tool Mentor
            </td>
            <td>
                Tool Mentor
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Tool Guide
            </td>
            <td>
                Tool Mentor
            </td>
        </tr>
        <tr>
            <td>
                Template
            </td>
            <td>
                Templates
            </td>
            <td>
                Template
            </td>
            <td>
                Template
            </td>
            <td>
                Template
            </td>
        </tr>
        <tr>
            <td>
                Report
            </td>
            <td>
                Report
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Estimate
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Estimate
            </td>
            <td>
                Estimating Considerations
            </td>
            <td>
                Estimate
            </td>
        </tr>
        <tr>
            <td>
                Example
            </td>
            <td>
                Example
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                Reference Item/Example
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Roadmap&nbsp;
            </td>
            <td>
                Roadmap
            </td>
            <td>
                Route Map Description
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Term Definition
            </td>
            <td>
                (Glossary)
            </td>
            <td>
                (Glossary)
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                Practice
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>
        </tr>
    </tbody>
</table>
<br />
<br />]]></MainDescription>
					<KeyConsiderations></KeyConsiderations>
				</Presentation>
			</ContentElement>
		</MethodPackage>
	</MethodPlugin>
	<MethodConfiguration name="OpenUPBasic"
		briefDescription="This configuration includes plug-ins a packages needed for the OpenUP/Basic process."
		id="_0u-T4clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false"
		authors="" changeDescription="" version="1.0.0">
		<MethodPluginSelection>
			_0TLvwMlgEdmt3adZL5Dmdw
		</MethodPluginSelection>
		<MethodPluginSelection>
			_WCUhAO8KEdmKSqa_gSYthg
		</MethodPluginSelection>
		<MethodPackageSelection>
			_0UCrYMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0TR2YMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_NVGN0FqxEduN_tADfCnkEA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0TR2YclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0nJNkMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0uHYQMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0u-T4MlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0T8kwMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0T8kwslgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0UCrYclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_OGGKkMpyEdqC_NfSivunjA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_L79ggDR5EdutE_HNDTJk5Q
		</MethodPackageSelection>
		<MethodPackageSelection>
			_3E1NwDPBEduyTOpiJx8z_g
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0b4YwMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0UCrYslgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_FtSMYAFjEduDPKiaP0pu-Q
		</MethodPackageSelection>
		<MethodPackageSelection>
			_IIPZQDRjEduU7vV49F9N0A
		</MethodPackageSelection>
		<MethodPackageSelection>
			_5la48DR2EdutE_HNDTJk5Q
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0aQBEMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_kB42IDRiEduU7vV49F9N0A
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0WuL8MlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0WuL8clgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0YcDMMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_PGDx8PisEdmjyaJMRcPDWA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0ZM4MMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0cQzQMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_bxcS4B_REdq3EKSIdbj-MA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_y-etQOtQEdqc1LGhiSPqRg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_y-k0a-tQEdqc1LGhiSPqRg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_eE5nEEbpEduLBN1xMBngqw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_rk8PMEbqEdu_9u69oWmeLA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_y-q7QOtQEdqc1LGhiSPqRg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_y_PjEOtQEdqc1LGhiSPqRg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0rWYIMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0rWYIclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0ruyoMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0rcewMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_Wq_VQPinEdmugcVr9AdHjQ
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0rilYMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_S_IQ4CliEdqjQsaFX0CJTw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0oSdEclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0oSdEslgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_jK8QsP77Edm1zMZYtD3GjA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0okw8MlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0oreoMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0qrpwMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0q33AMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0CtdMPinEdmugcVr9AdHjQ
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0qrpwclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0qxwYMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_mpl9kDbmEduMn613sF6-Uw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_TFSlkDboEduMn613sF6-Uw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0o9ygMlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0pJ_xclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_JEyxADboEduMn613sF6-Uw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0pWNAslgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0nJNkclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_XzhPQDboEduMn613sF6-Uw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0sx7iclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0sluQclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_h2-iAPimEdmugcVr9AdHjQ
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0nz79MlgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0uHYQclgEdmt3adZL5Dmdw
		</MethodPackageSelection>
		<MethodPackageSelection>
			_xujGABOKEduCNqgZdt_OaA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_0SpacBOKEduCNqgZdt_OaA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_3CqrABOKEduCNqgZdt_OaA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_467NIROKEduCNqgZdt_OaA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCguSu8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCanoO8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_OLCXUFqxEduN_tADfCnkEA
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCguQO8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCguS-8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCguTO8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCguTe8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCguRu8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_WCguSO8KEdmKSqa_gSYthg
		</MethodPackageSelection>
		<MethodPackageSelection>
			_eNnSAO8LEdmKSqa_gSYthg
		</MethodPackageSelection>
		<ProcessView>_SEztkBOJEduCNqgZdt_OaA</ProcessView>
	</MethodConfiguration>
</uma:MethodLibrary>
